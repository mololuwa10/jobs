-- MariaDB dump 10.17  Distrib 10.4.15-MariaDB, for Linux (x86_64)
--
-- Host: mysql    Database: 
-- ------------------------------------------------------
-- Server version	10.9.3-MariaDB-1:10.9.3+maria~ubu2204

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `as1`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `as1` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `as1`;

--
-- Table structure for table `auction`
--

DROP TABLE IF EXISTS `auction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auction` (
  `auctionId` int(4) NOT NULL AUTO_INCREMENT,
  `title` varchar(60) NOT NULL,
  `description` varchar(850) NOT NULL,
  `categoryId` int(11) DEFAULT NULL,
  `endDate` date NOT NULL,
  `id` varchar(45) DEFAULT NULL,
  `auctionImage` varchar(100) NOT NULL,
  PRIMARY KEY (`auctionId`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auction`
--

LOCK TABLES `auction` WRITE;
/*!40000 ALTER TABLE `auction` DISABLE KEYS */;
INSERT INTO `auction` VALUES (2,'Jordan Air Jordan 1 Mid Trainers','Product Description\r\nProduct Code: 4081372\r\n\r\nJordan Air Jordan 1 Mid Trainers in Black Fire, Red, White and Malachite. A festive rework of the legendary AJ1 the original ground-breaking 1985 silhouette remains visually unchanged. Featuring lashing of premium leather in complimentary seasonal hues, a solid rubber gum cupsole complete with circular pattern for added traction and durability. The shoe is nicerr',2,'2022-11-21','4','images/auctions/download (7).jpg'),(3,'Air Jordan 1 mid trainer','Product Description\r\nProduct Code: 4081373\r\nJordan Air Jordan 1 Mid Trainers in Dark Concord and White. Taking its inspiration from the original ground-breaking Jordan 1 from 1985, this mid cut cushioned full-grain leather delight sits upon a solid rubber cupsole complete with circular pattern for traction.',2,'2022-11-30','4',''),(4,'Jordan Junior Jordan 1 Low SE Trainer','Product Description\r\nProduct Code: 4089124\r\n\r\nJordan 1 Low Trainers in White, Black and Altitude Green. Taking its inspiration from the original ground-breaking Jordan 1 from 1985, this low-profile cushioned sensation sits upon a solid rubber cupsole complete with leather upper and circular pattern for traction',2,'2022-11-24','4',''),(5,'air Jordans one','\r\n Hello these are the air Jordans one',2,'2022-11-19','4',''),(6,'air jordan',' This is the air jordan one',2,'2022-11-19','4',''),(18,'vj vkz','kenvofnv ',2,'2022-11-21','4','images/auctions/download (6).jpg'),(19,'Dress','This is a dress',3,'2022-12-31','8','images/auctions/download (2).jpg');
/*!40000 ALTER TABLE `auction` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `bid`
--

DROP TABLE IF EXISTS `bid`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `bid` (
  `bidId` int(5) NOT NULL AUTO_INCREMENT,
  `amount` decimal(9,2) NOT NULL,
  `auctionId` int(11) NOT NULL,
  `userId` int(5) NOT NULL,
  PRIMARY KEY (`bidId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `bid`
--

LOCK TABLES `bid` WRITE;
/*!40000 ALTER TABLE `bid` DISABLE KEYS */;
INSERT INTO `bid` VALUES (1,10.00,3,4),(2,20.00,3,4),(3,30.00,3,4),(4,50.00,3,4),(5,10.00,5,4),(6,200.00,3,4);
/*!40000 ALTER TABLE `bid` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `name` varchar(50) NOT NULL,
  `categoryId` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`categoryId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES ('Shoes',2),('Fashion',3),('Electronics',5),('Phones and PC',6);
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `images`
--

DROP TABLE IF EXISTS `images`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `images` (
  `image_id` int(5) NOT NULL,
  `auctionImages` longblob DEFAULT NULL,
  `user_id` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`image_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `images`
--

LOCK TABLES `images` WRITE;
/*!40000 ALTER TABLE `images` DISABLE KEYS */;
/*!40000 ALTER TABLE `images` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `new_table`
--

DROP TABLE IF EXISTS `new_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `new_table` (
  `firstname` varchar(50) NOT NULL,
  `surname` varchar(45) NOT NULL,
  `user_id` varchar(4) NOT NULL,
  `email` varchar(50) NOT NULL,
  `birthday` date NOT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `new_table`
--

LOCK TABLES `new_table` WRITE;
/*!40000 ALTER TABLE `new_table` DISABLE KEYS */;
INSERT INTO `new_table` VALUES ('John','Mark','1','johnmark@segimail.com','1992-04-05'),('Michael','Johnson','2','michaeljohnson@segimail.com','1992-05-06'),('Silvia','Osawe','3','silviaosawe@segimail.com','1993-05-06'),('Deborah','Ibijola','4','deborahibijola@segimail.com','1996-06-08'),('John','Mark','6','johnmark@segimail.com','1992-04-05');
/*!40000 ALTER TABLE `new_table` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `review`
--

DROP TABLE IF EXISTS `review`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `review` (
  `review_id` int(5) NOT NULL AUTO_INCREMENT,
  `review` varchar(300) NOT NULL,
  `user_id` int(5) NOT NULL,
  `auction_id` int(4) NOT NULL,
  `review_date` date NOT NULL,
  PRIMARY KEY (`review_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `review`
--

LOCK TABLES `review` WRITE;
/*!40000 ALTER TABLE `review` DISABLE KEYS */;
INSERT INTO `review` VALUES (1,'great',4,4,'2022-11-20'),(2,'shoe',4,4,'2022-11-20'),(3,'',4,16,'2022-11-20'),(4,'Great item',8,2,'2022-11-20'),(5,'Bad item',8,2,'2023-01-03');
/*!40000 ALTER TABLE `review` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `testJob`
--

DROP TABLE IF EXISTS `testJob`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `testJob` (
  `id` int(11) NOT NULL DEFAULT 0,
  `title` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `description` longblob DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `testJob`
--

LOCK TABLES `testJob` WRITE;
/*!40000 ALTER TABLE `testJob` DISABLE KEYS */;
INSERT INTO `testJob` VALUES (3,'First level tech support','Job overview:\r\n\r\nTo work alongside the IT field based team in one of our acute Hospital sites. This team provides high quality equipment installation, technical support and advisory services for EKHUFT staff. They proactively manage incidents and requests, accepting ownership, evaluating, resolving and enabling the rapid resolution of a broad range of issues. This will include the testing and implementing of new and replacement hardware and appropriate software and the resolving of malfunctions. They look to achieve high standards of customer service and delivery of maximum business benefits.\r\n\r\nMain responsibilities:\r\n\r\n\r\n    To analyse incidents and deliver technical resolutions as part of the IT support\r\n\r\n    Service, to contribute to an efficient and effective IT service desk.\r\n\r\n    Review tickets within Service Management systems using established priorities.\r\n\r\n    Man the helpdesk telephone on a daily basis to resolve issues for end users.\r\n\r\n    Learn what notes and updates should be done on tickets.\r\n\r\n    The initial investigation and resolution of incidents relating to business and\r\n\r\n    desktop applications, and subsequent referral to either senior support analysts, to\r\n\r\n    2nd/ 3rd line support, the application management team or a 3rd party.\r\n\r\n    Learn to deliver end user introductory training on IT systems.\r\n\r\n    Undertakes daily operational checks as defined and trained by the wider team.\r\n\r\n    Participate in projects as required.\r\n\r\n    Support tracking of IT assets (software and hardware) using software tools.\r\n\r\n    Setup workstations and laptops for new starters\r\n\r\n    Support with physical desk moves between locations\r\n\r\n    Deploy and install software to computers\r\n\r\n    Perform password resets and help end users with profile and connectivity issues.\r\n\r\n    Allow and remove access to folders and email distribution lists\r\n\r\n    Perform basic proactive tasks for backups and learn how to restore backups.\r\n\r\n    Carry out any other duties as required by the IT Management Team.'),(4,'IT Infrastructure Manager','About the role\r\n\r\nAs an experienced IT Infrastructure Manager, you will work closely with the Head of IT to design and deliver a robust, secure, and flexible IT solution.\r\n\r\nTaking day-to-day responsibility for the smooth running of the IT systems, you will ensure that full business continuity plans are in place for our IT systems and services.\r\n\r\nYou will work closely with the Park Services and Events teams to ensure that appropriate access to IT services, including CCTV, is available throughout the Parks.'),(5,'Sales Assistant','Our client is an award winning sales and marketing organisation; who are looking to enhance their sales team with independent individuals who are capable of seeking and developing new opportunities within the sales and marketing industry.\r\n\r\nWithin this opportunity you will be working alongside the best sales and marketing specialists, promoting an exciting client portfolio. You will represent iconic brands and play a very important role in ongoing business success while developing your skills in residential environments. This opportunity will provide high rewards both career wise, and financially.\r\n\r\nThe successful candidate will be a well-presented, self-starter capable of demonstrating a desire to succeed in a sales environment.\r\n\r\nSuccessful candidates will:\r\n\r\n    Have strong communication skills\r\n    Be self-motivated\r\n    Possess an impeccable work ethic\r\n    Have a tenacious approach to personal development\r\n    Possess a competitive sales mentality\r\n    Have an entrepreneurial mind-set\r\n    Team work\r\n\r\nIf you can demonstrate the qualities as set out above and believe that you have the ability to develop new business, they would like to hear from you!\r\n\r\nNo experience is necessary although our client welcomes candidates with any previous experience in the following areas: customer service, sales representative, marketing supervisor, sales executive, direct sales, field sales, marketing executive, retail, service supervisor, call centre, call centre inbound, marketing representative, manager, bar manager, hospitality, receptionist, warehouse, marketing assistant, front of house, direct marketing, sales assistant, and any other customer service or sales role. This is a self employed commission only opportunity with the ability to create your own future.'),(6,'HR Manager','HR Manager: An ambitious HR Manager is required to help deliver an effective and comprehensive Human Resource service to a growing organisation with fully-funded plans to double in size over the next 18 months.\r\n\r\nWorking in a consultative manner, the successful HR Manager will work on a standalone basis to ensure quality advice and support is provided as part of the journey to make the organisation an industry leading \"Employer of Choice\".\r\n\r\nThis exciting new role would ideally suit an ambitious generalist HR professional eager to take on a dynamic position offering genuine career progression opportunities.\r\n\r\nKey Responsibilities\r\n\r\n    Provide HR support and advice to management on company HR policies and procedures, including employment law advice e.g. disciplinary, grievance, performance.\r\n    Provide high-quality recruitment and selection service to all departments including the use of social media.\r\n    Develop and implement HR policy and practice, contract templates, HR documentation and HR database developments, ensuring that all are up to date with UK legislation.\r\n    Provide ongoing employee relations support and advice to whole firm relating to contractual and general HR matters.\r\n    Review compensation and benefit plans e.g. salary review, bonus plan and other non-specified benefit plans.\r\n    Propose and advise on internal and external training for employees.\r\n    Create career path models to include job descriptions, person specs and competency models for all roles to support individuals\' career progression.\r\n    Manage the HR calendar: performance reviews, salary reviews, development planning, ensuring these processes support the ongoing strategic growth plan.\r\n    Develop the organisation culture to ensure \"Employer of Choice\" status is attained through determining the current culture, proposing organisation initiatives and then implementing after approval to achieve \"EOC\" tag.'),(7,'Software Engineer Java','You will be working on a big MVC model and architecture'),(9,'Teaching Assistant','You will be assisting a teacher'),(10,'Sales Manager','No description'),(11,'Hybrid Engineer','You are a hybrid Engineer');
/*!40000 ALTER TABLE `testJob` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(50) NOT NULL,
  `password` varchar(250) NOT NULL,
  `firstName` varchar(50) NOT NULL,
  `isAdmin` int(1) DEFAULT 0,
  `surname` varchar(45) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (4,'mololuwasegi@yahoo.com','$2y$10$R52Zcc.Bp4Xzc2QQ2XHfCOpYerZTZhMAEv805GXefmicmqznJ6uya','Michael',1,'Segilola'),(5,'mololuwasegi@gmail.com','$2y$10$.Cg8GNm/53.mV3/PvzBnierZPB6BhjhfWdx/npoB2D5d2Hl.JymZG','Michael',0,'Jordan'),(7,'silviaosawe@yahoo.com','$2y$10$1.cD4u7oSdNCzSXUEuurwemsNE/2TYUugp8iWqGKEfyawI9rAM6tW','Silvia',1,'Osawe'),(8,'estheradegoke@yahoo.com','$2y$10$6SDgQLF8fGiZfGYvuRaWq.MFoU8FZHQ07u4RajFt.IkZ2.FrnCpoq','Esther',0,'Adegoke'),(9,'zelcue-eze@yahoo.com','$2y$10$0V30Sq5CSNuQ4jwb6Yo9yu.Ro4QFH2JBAT7r/I1YRliXrQUsBGZ/a','Zel',0,'Cue-eze'),(10,'kehindeolawuwo@yahoo.com','$2y$10$qv0jbHsM0JOHFvIkRfo0zubm9IHTcA3oo4pRFM199QkMGqCY8BYxq','kehinde',0,'olawuwo');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Current Database: `ijdb`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ijdb` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `ijdb`;

--
-- Table structure for table `joke`
--

DROP TABLE IF EXISTS `joke`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `joke` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `joketext` text DEFAULT NULL,
  `jokedate` date DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `joke`
--

LOCK TABLES `joke` WRITE;
/*!40000 ALTER TABLE `joke` DISABLE KEYS */;
INSERT INTO `joke` VALUES (1,'A programmer was found dead in the shower. The instructions read: lather, rinse, repeaterrr.','2017-01-05',NULL),(3,'What do you call a boy with no brains? IZUMAKI','2022-11-24',NULL),(5,'WHO DO YOU CALL A GIRL WITH A SMALL BRAIN?? SILVIA','2022-11-24',NULL),(8,'If you cant find a job, where do you go? WAREHOUSE','2022-12-08',NULL),(13,'I AM SERIOUS',NULL,'Molo'),(14,'JOKESSSS',NULL,'Molo'),(16,'what do you call a bald head? MICHAEL',NULL,'Michael Opoku'),(17,'SMALL GIRLll',NULL,'Akua'),(18,'kvbkfj',NULL,'Molo');
/*!40000 ALTER TABLE `joke` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Current Database: `job`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `job` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci */;

USE `job`;

--
-- Table structure for table `applicants`
--

DROP TABLE IF EXISTS `applicants`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `applicants` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `details` longblob DEFAULT NULL,
  `jobId` int(11) DEFAULT NULL,
  `cv` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `applicants`
--

LOCK TABLES `applicants` WRITE;
/*!40000 ALTER TABLE `applicants` DISABLE KEYS */;
INSERT INTO `applicants` VALUES (9,'Segilola Mololuwa','mololuwasegi@yahoo.com','icgivbisgvdigisb c s',6,'63af3980f0552.pdf'),(10,'MOLOLUWA','mololuwasegi@yahoo.com','kvsbivbsibc',4,'63af57c93fff3.pdf'),(11,'Segilola Mololuwa','segilolamololuwa@gmail.com','I dont have one',7,'63b5a0fa15a45.pdf'),(12,'Mololuwa ','segilolamololuwa@gmail.com','I dont have one',7,'63b5a12a076ce.pdf'),(13,'Kehinde Olawuwo','kehindeolawuwo@yahoo.com','This is my cover letter ',3,'63d2b0b77289f.pdf');
/*!40000 ALTER TABLE `applicants` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (1,'IT'),(2,'Human Resources'),(4,'Sales'),(5,'Education'),(6,'Fashion');
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contact`
--

DROP TABLE IF EXISTS `contact`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `fullname` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `enquiry` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `phoneNumber` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `userId` int(5) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contact`
--

LOCK TABLES `contact` WRITE;
/*!40000 ALTER TABLE `contact` DISABLE KEYS */;
INSERT INTO `contact` VALUES (1,'Mololuwa Michael Segilola','mololuwasegi@yahoo.com','I have a problem\r\n','+447473143014',2),(2,'Laurena Yeboah','laurena@gmail.com','How can I apply for a Job','07894567312',NULL);
/*!40000 ALTER TABLE `contact` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `job`
--

DROP TABLE IF EXISTS `job`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `job` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `description` longblob DEFAULT NULL,
  `salary` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `closingDate` date DEFAULT NULL,
  `categoryId` int(11) DEFAULT NULL,
  `location` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `archive` tinyint(4) DEFAULT NULL,
  `userId` int(5) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `job`
--

LOCK TABLES `job` WRITE;
/*!40000 ALTER TABLE `job` DISABLE KEYS */;
INSERT INTO `job` VALUES (3,'First level tech support','Job overview:\r\n\r\nTo work alongside the IT field based team in one of our acute Hospital sites. This team provides high quality equipment installation, technical support and advisory services for EKHUFT staff. They proactively manage incidents and requests, accepting ownership, evaluating, resolving and enabling the rapid resolution of a broad range of issues. This will include the testing and implementing of new and replacement hardware and appropriate software and the resolving of malfunctions. They look to achieve high standards of customer service and delivery of maximum business benefits.\r\n\r\nMain responsibilities:\r\n\r\n\r\n    To analyse incidents and deliver technical resolutions as part of the IT support\r\n\r\n    Service, to contribute to an efficient and effective IT service desk.\r\n\r\n    Review tickets within Service Management systems using established priorities.\r\n\r\n    Man the helpdesk telephone on a daily basis to resolve issues for end users.\r\n\r\n    Learn what notes and updates should be done on tickets.\r\n\r\n    The initial investigation and resolution of incidents relating to business and\r\n\r\n    desktop applications, and subsequent referral to either senior support analysts, to\r\n\r\n    2nd/ 3rd line support, the application management team or a 3rd party.\r\n\r\n    Learn to deliver end user introductory training on IT systems.\r\n\r\n    Undertakes daily operational checks as defined and trained by the wider team.\r\n\r\n    Participate in projects as required.\r\n\r\n    Support tracking of IT assets (software and hardware) using software tools.\r\n\r\n    Setup workstations and laptops for new starters\r\n\r\n    Support with physical desk moves between locations\r\n\r\n    Deploy and install software to computers\r\n\r\n    Perform password resets and help end users with profile and connectivity issues.\r\n\r\n    Allow and remove access to folders and email distribution lists\r\n\r\n    Perform basic proactive tasks for backups and learn how to restore backups.\r\n\r\n    Carry out any other duties as required by the IT Management Team.','£15,000 - £19,000','2023-04-09',1,'Birmingham',NULL,NULL),(4,'IT Infrastructure Manager','About the role\r\n\r\nAs an experienced IT Infrastructure Manager, you will work closely with the Head of IT to design and deliver a robust, secure, and flexible IT solution.\r\n\r\nTaking day-to-day responsibility for the smooth running of the IT systems, you will ensure that full business continuity plans are in place for our IT systems and services.\r\n\r\nYou will work closely with the Park Services and Events teams to ensure that appropriate access to IT services, including CCTV, is available throughout the Parks.','£45,000 - £58,500','2023-05-15',1,'Northampton',NULL,NULL),(5,'Sales Assistant','Our client is an award winning sales and marketing organisation; who are looking to enhance their sales team with independent individuals who are capable of seeking and developing new opportunities within the sales and marketing industry.\r\n\r\nWithin this opportunity you will be working alongside the best sales and marketing specialists, promoting an exciting client portfolio. You will represent iconic brands and play a very important role in ongoing business success while developing your skills in residential environments. This opportunity will provide high rewards both career wise, and financially.\r\n\r\nThe successful candidate will be a well-presented, self-starter capable of demonstrating a desire to succeed in a sales environment.\r\n\r\nSuccessful candidates will:\r\n\r\n    Have strong communication skills\r\n    Be self-motivated\r\n    Possess an impeccable work ethic\r\n    Have a tenacious approach to personal development\r\n    Possess a competitive sales mentality\r\n    Have an entrepreneurial mind-set\r\n    Team work\r\n\r\nIf you can demonstrate the qualities as set out above and believe that you have the ability to develop new business, they would like to hear from you!\r\n\r\nNo experience is necessary although our client welcomes candidates with any previous experience in the following areas: customer service, sales representative, marketing supervisor, sales executive, direct sales, field sales, marketing executive, retail, service supervisor, call centre, call centre inbound, marketing representative, manager, bar manager, hospitality, receptionist, warehouse, marketing assistant, front of house, direct marketing, sales assistant, and any other customer service or sales role. This is a self employed commission only opportunity with the ability to create your own future.','£12,000 - £15,000','2023-05-29',4,'Northampton',NULL,NULL),(6,'HR Manager','HR Manager: An ambitious HR Manager is required to help deliver an effective and comprehensive Human Resource service to a growing organisation with fully-funded plans to double in size over the next 18 months.\r\n\r\nWorking in a consultative manner, the successful HR Manager will work on a standalone basis to ensure quality advice and support is provided as part of the journey to make the organisation an industry leading \"Employer of Choice\".\r\n\r\nThis exciting new role would ideally suit an ambitious generalist HR professional eager to take on a dynamic position offering genuine career progression opportunities.\r\n\r\nKey Responsibilities\r\n\r\n    Provide HR support and advice to management on company HR policies and procedures, including employment law advice e.g. disciplinary, grievance, performance.\r\n    Provide high-quality recruitment and selection service to all departments including the use of social media.\r\n    Develop and implement HR policy and practice, contract templates, HR documentation and HR database developments, ensuring that all are up to date with UK legislation.\r\n    Provide ongoing employee relations support and advice to whole firm relating to contractual and general HR matters.\r\n    Review compensation and benefit plans e.g. salary review, bonus plan and other non-specified benefit plans.\r\n    Propose and advise on internal and external training for employees.\r\n    Create career path models to include job descriptions, person specs and competency models for all roles to support individuals\' career progression.\r\n    Manage the HR calendar: performance reviews, salary reviews, development planning, ensuring these processes support the ongoing strategic growth plan.\r\n    Develop the organisation culture to ensure \"Employer of Choice\" status is attained through determining the current culture, proposing organisation initiatives and then implementing after approval to achieve \"EOC\" tag.','£35,000 - £40,000','2023-05-29',2,'Northampton',NULL,NULL),(7,'Software Engineer Java','You will be working on a big MVC model and architecture','£90,000-£100,000','2023-01-12',1,'London',NULL,NULL),(9,'Teaching Assistant','You will be assisting a teacher','£30,000 - £40,000','2023-01-08',5,'Birmingham',0,4),(10,'Sales Manager','No description','£15,000 - £20,000','2023-02-01',4,'Birmingham',0,5),(11,'Hybrid Engineer','You are a hybrid Engineer','£60,000 - £70,000','2023-01-11',1,'Birmingham',NULL,5),(12,'Fashion Designer','This is a fashion designer','£45,000 - £58,500','2023-01-31',6,'Birmingham',NULL,5),(13,'Fashion Stylist','This is a fashion stylist','$30,000 - £40,000','2023-01-31',6,'Luton',NULL,5),(14,'Front-End Engineer','This is a Job','$30,000 - £40,000','2023-02-01',1,'Birmingham',NULL,5);
/*!40000 ALTER TABLE `job` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `userId` int(5) NOT NULL AUTO_INCREMENT,
  `userName` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `fullName` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `userType` varchar(45) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`userId`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (2,'molo','$2y$10$dcNqUDJW5jHtiBGnmcgsIOCiRZzYFZm4Uen3SinIfkNT..1hwguZC','Segilola Mololuwa','admin'),(4,'zel','$2y$10$G/cKahfteY1o9C07kW4YZeQRrszeYvfxwDTZnATOOlRCO37Pk1Usq','Zeluilo Cue-Eze','client'),(5,'laurena','$2y$10$oiax4PzMAbYmkZNLKl9qQ.cAE/VI28ao9aDwgBZ57UihNUEGKcXeK','Laurena Yeboah','client');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Current Database: `mysql`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mysql` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `mysql`;

--
-- Table structure for table `column_stats`
--

DROP TABLE IF EXISTS `column_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `column_stats` (
  `db_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `table_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `column_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `min_value` varbinary(255) DEFAULT NULL,
  `max_value` varbinary(255) DEFAULT NULL,
  `nulls_ratio` decimal(12,4) DEFAULT NULL,
  `avg_length` decimal(12,4) DEFAULT NULL,
  `avg_frequency` decimal(12,4) DEFAULT NULL,
  `hist_size` tinyint(3) unsigned DEFAULT NULL,
  `hist_type` enum('SINGLE_PREC_HB','DOUBLE_PREC_HB','JSON_HB') COLLATE utf8mb3_bin DEFAULT NULL,
  `histogram` longblob DEFAULT NULL,
  PRIMARY KEY (`db_name`,`table_name`,`column_name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='Statistics on Columns';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `column_stats`
--

LOCK TABLES `column_stats` WRITE;
/*!40000 ALTER TABLE `column_stats` DISABLE KEYS */;
/*!40000 ALTER TABLE `column_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `columns_priv`
--

DROP TABLE IF EXISTS `columns_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `columns_priv` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Column_name` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8mb3 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Column privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `columns_priv`
--

LOCK TABLES `columns_priv` WRITE;
/*!40000 ALTER TABLE `columns_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `columns_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `db`
--

DROP TABLE IF EXISTS `db`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `db` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  `Delete_history_priv` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Database privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `db`
--

LOCK TABLES `db` WRITE;
/*!40000 ALTER TABLE `db` DISABLE KEYS */;
/*!40000 ALTER TABLE `db` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `db` char(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `body` longblob NOT NULL,
  `definer` varchar(384) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `execute_at` datetime DEFAULT NULL,
  `interval_value` int(11) DEFAULT NULL,
  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_executed` datetime DEFAULT NULL,
  `starts` datetime DEFAULT NULL,
  `ends` datetime DEFAULT NULL,
  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',
  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH','EMPTY_STRING_IS_NULL','SIMULTANEOUS_ASSIGNMENT','TIME_ROUND_FRACTIONAL') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `originator` int(10) unsigned NOT NULL,
  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',
  `character_set_client` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `body_utf8` longblob DEFAULT NULL,
  PRIMARY KEY (`db`,`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Events';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `func`
--

DROP TABLE IF EXISTS `func`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `func` (
  `name` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `ret` tinyint(1) NOT NULL DEFAULT 0,
  `dl` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8mb3 NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='User defined functions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `func`
--

LOCK TABLES `func` WRITE;
/*!40000 ALTER TABLE `func` DISABLE KEYS */;
/*!40000 ALTER TABLE `func` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `global_priv`
--

DROP TABLE IF EXISTS `global_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `global_priv` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Priv` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '{}' CHECK (json_valid(`Priv`)),
  PRIMARY KEY (`Host`,`User`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Users and global privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `global_priv`
--

LOCK TABLES `global_priv` WRITE;
/*!40000 ALTER TABLE `global_priv` DISABLE KEYS */;
INSERT INTO `global_priv` VALUES ('localhost','mariadb.sys','{\"access\":0,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"\",\"account_locked\":true,\"password_last_changed\":0}'),('localhost','root','{\"access\":18446744073709551615,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"*6A73561D1E49479B0E89BC6072145D20FA359357\",\"password_last_changed\":1665044594}'),('%','root','{\"access\":549755813887,\"version_id\":100903,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"*6A73561D1E49479B0E89BC6072145D20FA359357\",\"password_last_changed\":1665044594}'),('%','v.je','{\"access\":549755813887,\"version_id\":100903,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"*6A73561D1E49479B0E89BC6072145D20FA359357\",\"password_last_changed\":1675003422}'),('%','s.je','{\"access\":549755813887,\"version_id\":100903,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"*2721779FE2256C5EDD7F7989590D8E598CB5B068\",\"password_last_changed\":1675003422}'),('%','student','{\"access\":549755813887,\"version_id\":100903,\"plugin\":\"mysql_native_password\",\"authentication_string\":\"*1308E0FCD43112F8D948AB093F54892CB7B220AA\",\"password_last_changed\":1675003422}');
/*!40000 ALTER TABLE `global_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gtid_slave_pos`
--

DROP TABLE IF EXISTS `gtid_slave_pos`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gtid_slave_pos` (
  `domain_id` int(10) unsigned NOT NULL,
  `sub_id` bigint(20) unsigned NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `seq_no` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`domain_id`,`sub_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='Replication slave GTID position';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `gtid_slave_pos`
--

LOCK TABLES `gtid_slave_pos` WRITE;
/*!40000 ALTER TABLE `gtid_slave_pos` DISABLE KEYS */;
/*!40000 ALTER TABLE `gtid_slave_pos` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_category`
--

DROP TABLE IF EXISTS `help_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_category` (
  `help_category_id` smallint(5) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `parent_category_id` smallint(5) unsigned DEFAULT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='help categories';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_category`
--

LOCK TABLES `help_category` WRITE;
/*!40000 ALTER TABLE `help_category` DISABLE KEYS */;
INSERT INTO `help_category` VALUES (1,'Geographic',0,''),(2,'Polygon Properties',34,''),(3,'WKT',34,''),(4,'Numeric Functions',38,''),(5,'Plugins',35,''),(6,'MBR',34,''),(7,'Control Flow Functions',38,''),(8,'Transactions',35,''),(9,'Help Metadata',35,''),(10,'Account Management',35,''),(11,'Point Properties',34,''),(12,'Encryption Functions',38,''),(13,'LineString Properties',34,''),(14,'Miscellaneous Functions',38,''),(15,'Logical Operators',38,''),(16,'Functions and Modifiers for Use with GROUP BY',35,''),(17,'Information Functions',38,''),(18,'Comparison Operators',38,''),(19,'Bit Functions',38,''),(20,'Table Maintenance',35,''),(21,'User-Defined Functions',35,''),(22,'Data Types',35,''),(23,'Compound Statements',35,''),(24,'Geometry Constructors',34,''),(25,'GeometryCollection Properties',1,''),(26,'Administration',35,''),(27,'Data Manipulation',35,''),(28,'Utility',35,''),(29,'Language Structure',35,''),(30,'Geometry Relations',34,''),(31,'Date and Time Functions',38,''),(32,'WKB',34,''),(33,'Procedures',35,''),(34,'Geographic Features',35,''),(35,'Contents',0,''),(36,'Geometry Properties',34,''),(37,'String Functions',38,''),(38,'Functions',35,''),(39,'Data Definition',35,''),(40,'Sequences',35,''),(41,'JSON Functions',38,''),(42,'Window Functions',38,''),(43,'Spider Functions',38,''),(44,'Dynamic Column Functions',38,'');
/*!40000 ALTER TABLE `help_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_keyword`
--

DROP TABLE IF EXISTS `help_keyword`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_keyword` (
  `help_keyword_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='help keywords';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_keyword`
--

LOCK TABLES `help_keyword` WRITE;
/*!40000 ALTER TABLE `help_keyword` DISABLE KEYS */;
INSERT INTO `help_keyword` VALUES (1,'master_ssl_verify_cert'),(2,'drop prepare'),(3,'work'),(4,'drop'),(5,'returns'),(6,'value'),(7,'nchar'),(8,'repeat'),(9,'columns'),(10,'sql_big_result'),(11,'escape'),(12,'mode'),(13,'schedule'),(14,'starts'),(15,'host'),(16,'row_format');
/*!40000 ALTER TABLE `help_keyword` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_relation`
--

DROP TABLE IF EXISTS `help_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_relation` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `help_keyword_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`),
  KEY `help_topic_id` (`help_topic_id`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='keyword-topic relation';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_relation`
--

LOCK TABLES `help_relation` WRITE;
/*!40000 ALTER TABLE `help_relation` DISABLE KEYS */;
INSERT INTO `help_relation` VALUES (95,1),(97,2),(110,3),(120,4),(128,4),(259,4),(647,4),(664,4),(665,4),(666,4),(667,4),(668,4),(669,4),(670,4),(671,4),(672,4),(673,4),(675,4),(676,4),(258,5),(264,6),(317,6),(320,6),(417,6),(433,6),(271,7),(316,8),(621,8),(355,9),(434,10),(603,11),(610,12),(642,13),(652,14),(659,15),(660,16);
/*!40000 ALTER TABLE `help_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_topic`
--

DROP TABLE IF EXISTS `help_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_topic` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `help_category_id` smallint(5) unsigned NOT NULL,
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='help topics';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_topic`
--

LOCK TABLES `help_topic` WRITE;
/*!40000 ALTER TABLE `help_topic` DISABLE KEYS */;
/*!40000 ALTER TABLE `help_topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `index_stats`
--

DROP TABLE IF EXISTS `index_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `index_stats` (
  `db_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `table_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `index_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `prefix_arity` int(11) unsigned NOT NULL,
  `avg_frequency` decimal(12,4) DEFAULT NULL,
  PRIMARY KEY (`db_name`,`table_name`,`index_name`,`prefix_arity`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='Statistics on Indexes';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `index_stats`
--

LOCK TABLES `index_stats` WRITE;
/*!40000 ALTER TABLE `index_stats` DISABLE KEYS */;
/*!40000 ALTER TABLE `index_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_index_stats`
--

DROP TABLE IF EXISTS `innodb_index_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_index_stats` (
  `database_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `table_name` varchar(199) COLLATE utf8mb3_bin NOT NULL,
  `index_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `stat_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `stat_value` bigint(20) unsigned NOT NULL,
  `sample_size` bigint(20) unsigned DEFAULT NULL,
  `stat_description` varchar(1024) COLLATE utf8mb3_bin NOT NULL,
  PRIMARY KEY (`database_name`,`table_name`,`index_name`,`stat_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_index_stats`
--

LOCK TABLES `innodb_index_stats` WRITE;
/*!40000 ALTER TABLE `innodb_index_stats` DISABLE KEYS */;
INSERT INTO `innodb_index_stats` VALUES ('as1','auction','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'auctionId'),('as1','auction','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','auction','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','bid','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'bidId'),('as1','bid','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','bid','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','category','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'categoryId'),('as1','category','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','category','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','images','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'image_id'),('as1','images','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','images','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','new_table','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'user_id'),('as1','new_table','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','new_table','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','review','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'review_id'),('as1','review','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','review','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','testJob','GEN_CLUST_INDEX','2023-01-31 23:52:44','n_diff_pfx01',0,1,'DB_ROW_ID'),('as1','testJob','GEN_CLUST_INDEX','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','testJob','GEN_CLUST_INDEX','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('as1','users','PRIMARY','2023-01-31 23:52:44','n_diff_pfx01',0,1,'id'),('as1','users','PRIMARY','2023-01-31 23:52:44','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('as1','users','PRIMARY','2023-01-31 23:52:44','size',1,NULL,'Number of pages in the index'),('ijdb','joke','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'id'),('ijdb','joke','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('ijdb','joke','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('job','applicants','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'id'),('job','applicants','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('job','applicants','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('job','category','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'id'),('job','category','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('job','category','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('job','contact','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'id'),('job','contact','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('job','contact','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('job','job','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'id'),('job','job','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('job','job','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('job','user','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'userId'),('job','user','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('job','user','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('mysql','gtid_slave_pos','PRIMARY','2023-01-31 23:52:45','n_diff_pfx01',0,1,'domain_id'),('mysql','gtid_slave_pos','PRIMARY','2023-01-31 23:52:45','n_diff_pfx02',0,1,'domain_id,sub_id'),('mysql','gtid_slave_pos','PRIMARY','2023-01-31 23:52:45','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('mysql','gtid_slave_pos','PRIMARY','2023-01-31 23:52:45','size',1,NULL,'Number of pages in the index'),('testJob','applicants','PRIMARY','2023-02-03 23:23:12','n_diff_pfx01',0,1,'id'),('testJob','applicants','PRIMARY','2023-02-03 23:23:12','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('testJob','applicants','PRIMARY','2023-02-03 23:23:12','size',1,NULL,'Number of pages in the index'),('testJob','category','PRIMARY','2023-02-03 23:23:12','n_diff_pfx01',3,1,'id'),('testJob','category','PRIMARY','2023-02-03 23:23:12','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('testJob','category','PRIMARY','2023-02-03 23:23:12','size',1,NULL,'Number of pages in the index'),('testJob','contact','PRIMARY','2023-02-03 23:23:12','n_diff_pfx01',1,1,'id'),('testJob','contact','PRIMARY','2023-02-03 23:23:12','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('testJob','contact','PRIMARY','2023-02-03 23:23:12','size',1,NULL,'Number of pages in the index'),('testJob','job','PRIMARY','2023-02-03 23:23:12','n_diff_pfx01',7,1,'id'),('testJob','job','PRIMARY','2023-02-03 23:23:12','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('testJob','job','PRIMARY','2023-02-03 23:23:12','size',1,NULL,'Number of pages in the index'),('testJob','user','PRIMARY','2023-02-03 23:23:12','n_diff_pfx01',1,1,'userId'),('testJob','user','PRIMARY','2023-02-03 23:23:12','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('testJob','user','PRIMARY','2023-02-03 23:23:12','size',1,NULL,'Number of pages in the index');
/*!40000 ALTER TABLE `innodb_index_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_table_stats`
--

DROP TABLE IF EXISTS `innodb_table_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_table_stats` (
  `database_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `table_name` varchar(199) COLLATE utf8mb3_bin NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `n_rows` bigint(20) unsigned NOT NULL,
  `clustered_index_size` bigint(20) unsigned NOT NULL,
  `sum_of_other_index_sizes` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`database_name`,`table_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_table_stats`
--

LOCK TABLES `innodb_table_stats` WRITE;
/*!40000 ALTER TABLE `innodb_table_stats` DISABLE KEYS */;
INSERT INTO `innodb_table_stats` VALUES ('as1','auction','2023-01-31 23:52:44',0,1,0),('as1','bid','2023-01-31 23:52:44',0,1,0),('as1','category','2023-01-31 23:52:44',0,1,0),('as1','images','2023-01-31 23:52:44',0,1,0),('as1','new_table','2023-01-31 23:52:44',0,1,0),('as1','review','2023-01-31 23:52:44',0,1,0),('as1','testJob','2023-01-31 23:52:44',0,1,0),('as1','users','2023-01-31 23:52:44',0,1,0),('ijdb','joke','2023-01-31 23:52:45',0,1,0),('job','applicants','2023-01-31 23:52:45',0,1,0),('job','category','2023-01-31 23:52:45',0,1,0),('job','contact','2023-01-31 23:52:45',0,1,0),('job','job','2023-01-31 23:52:45',0,1,0),('job','user','2023-01-31 23:52:45',0,1,0),('mysql','gtid_slave_pos','2023-01-31 23:52:45',0,1,0),('testJob','applicants','2023-02-03 23:23:12',0,1,0),('testJob','category','2023-02-03 23:23:12',3,1,0),('testJob','contact','2023-02-03 23:23:12',1,1,0),('testJob','job','2023-02-03 23:23:12',7,1,0),('testJob','user','2023-02-03 23:23:12',1,1,0);
/*!40000 ALTER TABLE `innodb_table_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plugin`
--

DROP TABLE IF EXISTS `plugin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `plugin` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `dl` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='MySQL plugins';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plugin`
--

LOCK TABLES `plugin` WRITE;
/*!40000 ALTER TABLE `plugin` DISABLE KEYS */;
/*!40000 ALTER TABLE `plugin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proc`
--

DROP TABLE IF EXISTS `proc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proc` (
  `db` char(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` varchar(384) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH','EMPTY_STRING_IS_NULL','SIMULTANEOUS_ASSIGNMENT','TIME_ROUND_FRACTIONAL') NOT NULL DEFAULT '',
  `comment` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `character_set_client` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `body_utf8` longblob DEFAULT NULL,
  `aggregate` enum('NONE','GROUP') NOT NULL DEFAULT 'NONE',
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Stored Procedures';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proc`
--

LOCK TABLES `proc` WRITE;
/*!40000 ALTER TABLE `proc` DISABLE KEYS */;
INSERT INTO `proc` VALUES ('mysql','AddGeometryColumn','PROCEDURE','AddGeometryColumn','SQL','CONTAINS_SQL','NO','INVOKER','catalog varchar(64), t_schema varchar(64),\n   t_name varchar(64), geometry_column varchar(64), t_srid int','','begin\n  set @qwe= concat(\'ALTER TABLE \', t_schema, \'.\', t_name, \' ADD \', geometry_column,\' GEOMETRY REF_SYSTEM_ID=\', t_srid); PREPARE ls from @qwe; execute ls; deallocate prepare ls; end','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','','utf8mb3','utf8mb3_general_ci','utf8mb4_general_ci','begin\n  set @qwe= concat(\'ALTER TABLE \', t_schema, \'.\', t_name, \' ADD \', geometry_column,\' GEOMETRY REF_SYSTEM_ID=\', t_srid); PREPARE ls from @qwe; execute ls; deallocate prepare ls; end','NONE'),('mysql','DropGeometryColumn','PROCEDURE','DropGeometryColumn','SQL','CONTAINS_SQL','NO','INVOKER','catalog varchar(64), t_schema varchar(64),\n   t_name varchar(64), geometry_column varchar(64)','','begin\n  set @qwe= concat(\'ALTER TABLE \', t_schema, \'.\', t_name, \' DROP \', geometry_column); PREPARE ls from @qwe; execute ls; deallocate prepare ls; end','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','','utf8mb3','utf8mb3_general_ci','utf8mb4_general_ci','begin\n  set @qwe= concat(\'ALTER TABLE \', t_schema, \'.\', t_name, \' DROP \', geometry_column); PREPARE ls from @qwe; execute ls; deallocate prepare ls; end','NONE'),('sys','extract_schema_from_file_name','FUNCTION','extract_schema_from_file_name','SQL','NO_SQL','YES','INVOKER','path VARCHAR(512)\n    ','varchar(64) CHARSET utf8mb3','BEGIN\n    RETURN LEFT(SUBSTRING_INDEX(SUBSTRING_INDEX(REPLACE(path, \'\\\\\', \'/\'), \'/\', -2), \'/\', 1), 64);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a raw file path, and attempts to extract the schema name from it.\n             Useful for when interacting with Performance Schema data\n             concerning IO statistics, for example.\n             Currently relies on the fact that a table data file will be within a\n             specified database directory (will not work with partitions or tables\n             that specify an individual DATA_DIRECTORY).\n             Parameters\n             path (VARCHAR(512)):\n               The full file path to a data file to extract the schema name from.\n             Returns\n             VARCHAR(64)\n             Example\n             mysql> SELECT sys.extract_schema_from_file_name(\'/var/lib/mysql/employees/employee.ibd\');\n             +----------------------------------------------------------------------------+\n             | sys.extract_schema_from_file_name(\'/var/lib/mysql/employees/employee.ibd\') |\n             +----------------------------------------------------------------------------+\n             | employees                                                                  |\n             +----------------------------------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN LEFT(SUBSTRING_INDEX(SUBSTRING_INDEX(REPLACE(path, \'\\\', \'/\'), \'/\', -2), \'/\', 1), 64);\nEND','NONE'),('sys','extract_table_from_file_name','FUNCTION','extract_table_from_file_name','SQL','NO_SQL','YES','INVOKER','path VARCHAR(512)\n    ','varchar(64) CHARSET utf8mb3','BEGIN\n    RETURN LEFT(SUBSTRING_INDEX(REPLACE(SUBSTRING_INDEX(REPLACE(path, \'\\\\\', \'/\'), \'/\', -1), \'@0024\', \'$\'), \'.\', 1), 64);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a raw file path, and extracts the table name from it.\n             Useful for when interacting with Performance Schema data\n             concerning IO statistics, for example.\n             Parameters\n             path (VARCHAR(512)):\n               The full file path to a data file to extract the table name from.\n             Returns\n             VARCHAR(64)\n             Example\n             mysql> SELECT sys.extract_table_from_file_name(\'/var/lib/mysql/employees/employee.ibd\');\n             +---------------------------------------------------------------------------+\n             | sys.extract_table_from_file_name(\'/var/lib/mysql/employees/employee.ibd\') |\n             +---------------------------------------------------------------------------+\n             | employee                                                                  |\n             +---------------------------------------------------------------------------+\n             1 row in set (0.02 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN LEFT(SUBSTRING_INDEX(REPLACE(SUBSTRING_INDEX(REPLACE(path, \'\\\', \'/\'), \'/\', -1), \'@0024\', \'$\'), \'.\', 1), 64);\nEND','NONE'),('sys','format_bytes','FUNCTION','format_bytes','SQL','NO_SQL','YES','INVOKER','bytes TEXT\n    ','text CHARSET utf8mb3','BEGIN\n  IF bytes IS NULL THEN RETURN NULL;\n  ELSEIF bytes >= 1125899906842624 THEN RETURN CONCAT(ROUND(bytes / 1125899906842624, 2), \' PiB\');\n  ELSEIF bytes >= 1099511627776 THEN RETURN CONCAT(ROUND(bytes / 1099511627776, 2), \' TiB\');\n  ELSEIF bytes >= 1073741824 THEN RETURN CONCAT(ROUND(bytes / 1073741824, 2), \' GiB\');\n  ELSEIF bytes >= 1048576 THEN RETURN CONCAT(ROUND(bytes / 1048576, 2), \' MiB\');\n  ELSEIF bytes >= 1024 THEN RETURN CONCAT(ROUND(bytes / 1024, 2), \' KiB\');\n  ELSE RETURN CONCAT(ROUND(bytes, 0), \' bytes\');\n  END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a raw bytes value, and converts it to a human readable format.\n             Parameters\n             bytes (TEXT):\n               A raw bytes value.\n             Returns\n             TEXT\n             Example\n             mysql> SELECT sys.format_bytes(2348723492723746) AS size;\n             +----------+\n             | size     |\n             +----------+\n             | 2.09 PiB |\n             +----------+\n             1 row in set (0.00 sec)\n             mysql> SELECT sys.format_bytes(2348723492723) AS size;\n             +----------+\n             | size     |\n             +----------+\n             | 2.14 TiB |\n             +----------+\n             1 row in set (0.00 sec)\n             mysql> SELECT sys.format_bytes(23487234) AS size;\n             +-----------+\n             | size      |\n             +-----------+\n             | 22.40 MiB |\n             +-----------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n  IF bytes IS NULL THEN RETURN NULL;\n  ELSEIF bytes >= 1125899906842624 THEN RETURN CONCAT(ROUND(bytes / 1125899906842624, 2), \' PiB\');\n  ELSEIF bytes >= 1099511627776 THEN RETURN CONCAT(ROUND(bytes / 1099511627776, 2), \' TiB\');\n  ELSEIF bytes >= 1073741824 THEN RETURN CONCAT(ROUND(bytes / 1073741824, 2), \' GiB\');\n  ELSEIF bytes >= 1048576 THEN RETURN CONCAT(ROUND(bytes / 1048576, 2), \' MiB\');\n  ELSEIF bytes >= 1024 THEN RETURN CONCAT(ROUND(bytes / 1024, 2), \' KiB\');\n  ELSE RETURN CONCAT(ROUND(bytes, 0), \' bytes\');\n  END IF;\nEND','NONE'),('sys','ps_thread_stack','FUNCTION','ps_thread_stack','SQL','READS_SQL_DATA','NO','INVOKER','thd_id BIGINT UNSIGNED,\n        debug BOOLEAN\n    ','longtext CHARSET latin1','BEGIN\n    DECLARE json_objects LONGTEXT;\n    \n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE processlist_id = CONNECTION_ID();\n    \n    SET SESSION group_concat_max_len=@@global.max_allowed_packet;\n    SELECT GROUP_CONCAT(CONCAT( \'{\'\n              , CONCAT_WS( \', \'\n              , CONCAT(\'\"nesting_event_id\": \"\', IF(nesting_event_id IS NULL, \'0\', nesting_event_id), \'\"\')\n              , CONCAT(\'\"event_id\": \"\', event_id, \'\"\')\n              , CONCAT( \'\"timer_wait\": \', ROUND(timer_wait/1000000, 2))\n              , CONCAT( \'\"event_info\": \"\'\n                  , CASE\n                        WHEN event_name NOT LIKE \'wait/io%\' THEN REPLACE(SUBSTRING_INDEX(event_name, \'/\', -2), \'\\\\\', \'\\\\\\\\\')\n                        WHEN event_name NOT LIKE \'wait/io/file%\' OR event_name NOT LIKE \'wait/io/socket%\' THEN REPLACE(SUBSTRING_INDEX(event_name, \'/\', -4), \'\\\\\', \'\\\\\\\\\')\n                        ELSE event_name\n                    END\n                  , \'\"\'\n              )\n              , CONCAT( \'\"wait_info\": \"\', IFNULL(wait_info, \'\'), \'\"\')\n              , CONCAT( \'\"source\": \"\', IF(true AND event_name LIKE \'wait%\', IFNULL(wait_info, \'\'), \'\'), \'\"\')\n              , CASE\n                     WHEN event_name LIKE \'wait/io/file%\'      THEN \'\"event_type\": \"io/file\"\'\n                     WHEN event_name LIKE \'wait/io/table%\'     THEN \'\"event_type\": \"io/table\"\'\n                     WHEN event_name LIKE \'wait/io/socket%\'    THEN \'\"event_type\": \"io/socket\"\'\n                     WHEN event_name LIKE \'wait/synch/mutex%\'  THEN \'\"event_type\": \"synch/mutex\"\'\n                     WHEN event_name LIKE \'wait/synch/cond%\'   THEN \'\"event_type\": \"synch/cond\"\'\n                     WHEN event_name LIKE \'wait/synch/rwlock%\' THEN \'\"event_type\": \"synch/rwlock\"\'\n                     WHEN event_name LIKE \'wait/lock%\'         THEN \'\"event_type\": \"lock\"\'\n                     WHEN event_name LIKE \'statement/%\'        THEN \'\"event_type\": \"stmt\"\'\n                     WHEN event_name LIKE \'stage/%\'            THEN \'\"event_type\": \"stage\"\'\n                     WHEN event_name LIKE \'%idle%\'             THEN \'\"event_type\": \"idle\"\'\n                     ELSE \'\'\n                END\n            )\n            , \'}\'\n          )\n          ORDER BY event_id ASC SEPARATOR \',\') event\n    INTO json_objects\n    FROM (\n          \n          (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,\n                  CONCAT(sql_text, \'\\\\n\',\n                         \'errors: \', errors, \'\\\\n\',\n                         \'warnings: \', warnings, \'\\\\n\',\n                         \'lock time: \', ROUND(lock_time/1000000, 2),\'us\\\\n\',\n                         \'rows affected: \', rows_affected, \'\\\\n\',\n                         \'rows sent: \', rows_sent, \'\\\\n\',\n                         \'rows examined: \', rows_examined, \'\\\\n\',\n                         \'tmp tables: \', created_tmp_tables, \'\\\\n\',\n                         \'tmp disk tables: \', created_tmp_disk_tables, \'\\\\n\',\n                         \'select scan: \', select_scan, \'\\\\n\',\n                         \'select full join: \', select_full_join, \'\\\\n\',\n                         \'select full range join: \', select_full_range_join, \'\\\\n\',\n                         \'select range: \', select_range, \'\\\\n\',\n                         \'select range check: \', select_range_check, \'\\\\n\',\n                         \'sort merge passes: \', sort_merge_passes, \'\\\\n\',\n                         \'sort rows: \', sort_rows, \'\\\\n\',\n                         \'sort range: \', sort_range, \'\\\\n\',\n                         \'sort scan: \', sort_scan, \'\\\\n\',\n                         \'no index used: \', IF(no_index_used, \'TRUE\', \'FALSE\'), \'\\\\n\',\n                         \'no good index used: \', IF(no_good_index_used, \'TRUE\', \'FALSE\'), \'\\\\n\'\n                         ) AS wait_info\n             FROM performance_schema.events_statements_history_long WHERE thread_id = thd_id)\n          UNION\n          (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info\n             FROM performance_schema.events_stages_history_long WHERE thread_id = thd_id)\n          UNION \n          (SELECT thread_id, event_id,\n                  CONCAT(event_name ,\n                         IF(event_name NOT LIKE \'wait/synch/mutex%\', IFNULL(CONCAT(\' - \', operation), \'\'), \'\'),\n                         IF(number_of_bytes IS NOT NULL, CONCAT(\' \', number_of_bytes, \' bytes\'), \'\'),\n                         IF(event_name LIKE \'wait/io/file%\', \'\\\\n\', \'\'),\n                         IF(object_schema IS NOT NULL, CONCAT(\'\\\\nObject: \', object_schema, \'.\'), \'\'),\n                         IF(object_name IS NOT NULL,\n                            IF (event_name LIKE \'wait/io/socket%\',\n                                CONCAT(IF (object_name LIKE \':0%\', @@socket, object_name)),\n                                object_name),\n                            \'\'),\n                          IF(index_name IS NOT NULL, CONCAT(\' Index: \', index_name), \'\'),\'\\\\n\'\n                         ) AS event_name,\n                  timer_wait, timer_start, nesting_event_id, source AS wait_info\n             FROM performance_schema.events_waits_history_long WHERE thread_id = thd_id)) events\n    ORDER BY event_id;\n    RETURN CONCAT(\'{\',\n                  CONCAT_WS(\',\',\n                            \'\"rankdir\": \"LR\"\',\n                            \'\"nodesep\": \"0.10\"\',\n                            CONCAT(\'\"stack_created\": \"\', NOW(), \'\"\'),\n                            CONCAT(\'\"mysql_version\": \"\', VERSION(), \'\"\'),\n                            CONCAT(\'\"mysql_user\": \"\', CURRENT_USER(), \'\"\'),\n                            CONCAT(\'\"events\": [\', IFNULL(json_objects,\'\'), \']\')\n                           ),\n                  \'}\');\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Outputs a JSON formatted stack of all statements, stages and events\n             within Performance Schema for the specified thread.\n             Parameters\n             thd_id (BIGINT UNSIGNED):\n               The id of the thread to trace. This should match the thread_id\n               column from the performance_schema.threads table.\n             in_verbose (BOOLEAN):\n               Include file:lineno information in the events.\n             Example\n             (line separation added for output)\n             mysql> SELECT sys.ps_thread_stack(37, FALSE) AS thread_stack\\G\n             *************************** 1. row ***************************\n             thread_stack: {\"rankdir\": \"LR\",\"nodesep\": \"0.10\",\"stack_created\": \"2014-02-19 13:39:03\",\n             \"mysql_version\": \"5.7.3-m13\",\"mysql_user\": \"root@localhost\",\"events\":\n             [{\"nesting_event_id\": \"0\", \"event_id\": \"10\", \"timer_wait\": 256.35, \"event_info\":\n             \"sql/select\", \"wait_info\": \"select @@version_comment limit 1\\nerrors: 0\\nwarnings: 0\\nlock time:\n             ...\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE json_objects LONGTEXT;\n    \n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE processlist_id = CONNECTION_ID();\n    \n    SET SESSION group_concat_max_len=@@global.max_allowed_packet;\n    SELECT GROUP_CONCAT(CONCAT( \'{\'\n              , CONCAT_WS( \', \'\n              , CONCAT(\'\"nesting_event_id\": \"\', IF(nesting_event_id IS NULL, \'0\', nesting_event_id), \'\"\')\n              , CONCAT(\'\"event_id\": \"\', event_id, \'\"\')\n              , CONCAT( \'\"timer_wait\": \', ROUND(timer_wait/1000000, 2))\n              , CONCAT( \'\"event_info\": \"\'\n                  , CASE\n                        WHEN event_name NOT LIKE \'wait/io%\' THEN REPLACE(SUBSTRING_INDEX(event_name, \'/\', -2), \'\\\', \'\\\\\')\n                        WHEN event_name NOT LIKE \'wait/io/file%\' OR event_name NOT LIKE \'wait/io/socket%\' THEN REPLACE(SUBSTRING_INDEX(event_name, \'/\', -4), \'\\\', \'\\\\\')\n                        ELSE event_name\n                    END\n                  , \'\"\'\n              )\n              , CONCAT( \'\"wait_info\": \"\', IFNULL(wait_info, \'\'), \'\"\')\n              , CONCAT( \'\"source\": \"\', IF(true AND event_name LIKE \'wait%\', IFNULL(wait_info, \'\'), \'\'), \'\"\')\n              , CASE\n                     WHEN event_name LIKE \'wait/io/file%\'      THEN \'\"event_type\": \"io/file\"\'\n                     WHEN event_name LIKE \'wait/io/table%\'     THEN \'\"event_type\": \"io/table\"\'\n                     WHEN event_name LIKE \'wait/io/socket%\'    THEN \'\"event_type\": \"io/socket\"\'\n                     WHEN event_name LIKE \'wait/synch/mutex%\'  THEN \'\"event_type\": \"synch/mutex\"\'\n                     WHEN event_name LIKE \'wait/synch/cond%\'   THEN \'\"event_type\": \"synch/cond\"\'\n                     WHEN event_name LIKE \'wait/synch/rwlock%\' THEN \'\"event_type\": \"synch/rwlock\"\'\n                     WHEN event_name LIKE \'wait/lock%\'         THEN \'\"event_type\": \"lock\"\'\n                     WHEN event_name LIKE \'statement/%\'        THEN \'\"event_type\": \"stmt\"\'\n                     WHEN event_name LIKE \'stage/%\'            THEN \'\"event_type\": \"stage\"\'\n                     WHEN event_name LIKE \'%idle%\'             THEN \'\"event_type\": \"idle\"\'\n                     ELSE \'\'\n                END\n            )\n            , \'}\'\n          )\n          ORDER BY event_id ASC SEPARATOR \',\') event\n    INTO json_objects\n    FROM (\n          \n          (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,\n                  CONCAT(sql_text, \'\\n\',\n                         \'errors: \', errors, \'\\n\',\n                         \'warnings: \', warnings, \'\\n\',\n                         \'lock time: \', ROUND(lock_time/1000000, 2),\'us\\n\',\n                         \'rows affected: \', rows_affected, \'\\n\',\n                         \'rows sent: \', rows_sent, \'\\n\',\n                         \'rows examined: \', rows_examined, \'\\n\',\n                         \'tmp tables: \', created_tmp_tables, \'\\n\',\n                         \'tmp disk tables: \', created_tmp_disk_tables, \'\\n\',\n                         \'select scan: \', select_scan, \'\\n\',\n                         \'select full join: \', select_full_join, \'\\n\',\n                         \'select full range join: \', select_full_range_join, \'\\n\',\n                         \'select range: \', select_range, \'\\n\',\n                         \'select range check: \', select_range_check, \'\\n\',\n                         \'sort merge passes: \', sort_merge_passes, \'\\n\',\n                         \'sort rows: \', sort_rows, \'\\n\',\n                         \'sort range: \', sort_range, \'\\n\',\n                         \'sort scan: \', sort_scan, \'\\n\',\n                         \'no index used: \', IF(no_index_used, \'TRUE\', \'FALSE\'), \'\\n\',\n                         \'no good index used: \', IF(no_good_index_used, \'TRUE\', \'FALSE\'), \'\\n\'\n                         ) AS wait_info\n             FROM performance_schema.events_statements_history_long WHERE thread_id = thd_id)\n          UNION\n          (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info\n             FROM performance_schema.events_stages_history_long WHERE thread_id = thd_id)\n          UNION \n          (SELECT thread_id, event_id,\n                  CONCAT(event_name ,\n                         IF(event_name NOT LIKE \'wait/synch/mutex%\', IFNULL(CONCAT(\' - \', operation), \'\'), \'\'),\n                         IF(number_of_bytes IS NOT NULL, CONCAT(\' \', number_of_bytes, \' bytes\'), \'\'),\n                         IF(event_name LIKE \'wait/io/file%\', \'\\n\', \'\'),\n                         IF(object_schema IS NOT NULL, CONCAT(\'\\nObject: \', object_schema, \'.\'), \'\'),\n                         IF(object_name IS NOT NULL,\n                            IF (event_name LIKE \'wait/io/socket%\',\n                                CONCAT(IF (object_name LIKE \':0%\', @@socket, object_name)),\n                                object_name),\n                            \'\'),\n                          IF(index_name IS NOT NULL, CONCAT(\' Index: \', index_name), \'\'),\'\\n\'\n                         ) AS event_name,\n                  timer_wait, timer_start, nesting_event_id, source AS wait_info\n             FROM performance_schema.events_waits_history_long WHERE thread_id = thd_id)) events\n    ORDER BY event_id;\n    RETURN CONCAT(\'{\',\n                  CONCAT_WS(\',\',\n                            \'\"rankdir\": \"LR\"\',\n                            \'\"nodesep\": \"0.10\"\',\n                            CONCAT(\'\"stack_created\": \"\', NOW(), \'\"\'),\n                            CONCAT(\'\"mysql_version\": \"\', VERSION(), \'\"\'),\n                            CONCAT(\'\"mysql_user\": \"\', CURRENT_USER(), \'\"\'),\n                            CONCAT(\'\"events\": [\', IFNULL(json_objects,\'\'), \']\')\n                           ),\n                  \'}\');\nEND','NONE'),('sys','ps_thread_trx_info','FUNCTION','ps_thread_trx_info','SQL','READS_SQL_DATA','NO','INVOKER','in_thread_id BIGINT UNSIGNED\n    ','longtext CHARSET utf8mb3','BEGIN\n    DECLARE v_output LONGTEXT DEFAULT \'{}\';\n    DECLARE v_msg_text TEXT DEFAULT \'\';\n    DECLARE v_signal_msg TEXT DEFAULT \'\';\n    DECLARE v_mysql_errno INT;\n    DECLARE v_max_output_len BIGINT;\n    DECLARE EXIT HANDLER FOR SQLWARNING, SQLEXCEPTION\n    BEGIN\n        GET DIAGNOSTICS CONDITION 1\n            v_msg_text = MESSAGE_TEXT,\n            v_mysql_errno = MYSQL_ERRNO;\n        IF v_mysql_errno = 1260 THEN\n            SET v_signal_msg = CONCAT(\'{ \"error\": \"Trx info truncated: \', v_msg_text, \'\" }\');\n        ELSE\n            SET v_signal_msg = CONCAT(\'{ \"error\": \"\', v_msg_text, \'\" }\');\n        END IF;\n        RETURN v_signal_msg;\n    END;\n    IF (@sys.ps_thread_trx_info.max_length IS NULL) THEN\n        SET @sys.ps_thread_trx_info.max_length = sys.sys_get_config(\'ps_thread_trx_info.max_length\', 65535);\n    END IF;\n    IF (@sys.ps_thread_trx_info.max_length != @@session.group_concat_max_len) THEN\n        SET @old_group_concat_max_len = @@session.group_concat_max_len;\n        SET v_max_output_len = (@sys.ps_thread_trx_info.max_length - 5);\n        SET SESSION group_concat_max_len = v_max_output_len;\n    END IF;\n    SET v_output = (\n        SELECT CONCAT(\'[\', IFNULL(GROUP_CONCAT(trx_info ORDER BY event_id), \'\'), \'\\n]\') AS trx_info\n          FROM (SELECT trxi.thread_id,\n                       trxi.event_id,\n                       GROUP_CONCAT(\n                         IFNULL(\n                           CONCAT(\'\\n  {\\n\',\n                                  \'    \"time\": \"\', IFNULL(sys.format_time(trxi.timer_wait), \'\'), \'\",\\n\',\n                                  \'    \"state\": \"\', IFNULL(trxi.state, \'\'), \'\",\\n\',\n                                  \'    \"mode\": \"\', IFNULL(trxi.access_mode, \'\'), \'\",\\n\',\n                                  \'    \"autocommitted\": \"\', IFNULL(trxi.autocommit, \'\'), \'\",\\n\',\n                                  \'    \"gtid\": \"\', IFNULL(trxi.gtid, \'\'), \'\",\\n\',\n                                  \'    \"isolation\": \"\', IFNULL(trxi.isolation_level, \'\'), \'\",\\n\',\n                                  \'    \"statements_executed\": [\', IFNULL(s.stmts, \'\'), IF(s.stmts IS NULL, \' ]\\n\', \'\\n    ]\\n\'),\n                                  \'  }\'\n                           ),\n                           \'\')\n                         ORDER BY event_id) AS trx_info\n                  FROM (\n                        (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level\n                           FROM performance_schema.events_transactions_current\n                          WHERE thread_id = in_thread_id\n                            AND end_event_id IS NULL)\n                        UNION\n                        (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level\n                           FROM performance_schema.events_transactions_history\n                          WHERE thread_id = in_thread_id)\n                       ) AS trxi\n                  LEFT JOIN (SELECT thread_id,\n                                    nesting_event_id,\n                                    GROUP_CONCAT(\n                                      IFNULL(\n                                        CONCAT(\'\\n      {\\n\',\n                                               \'        \"sql_text\": \"\', IFNULL(sys.format_statement(REPLACE(sql_text, \'\\\\\', \'\\\\\\\\\')), \'\'), \'\",\\n\',\n                                               \'        \"time\": \"\', IFNULL(sys.format_time(timer_wait), \'\'), \'\",\\n\',\n                                               \'        \"schema\": \"\', IFNULL(current_schema, \'\'), \'\",\\n\',\n                                               \'        \"rows_examined\": \', IFNULL(rows_examined, \'\'), \',\\n\',\n                                               \'        \"rows_affected\": \', IFNULL(rows_affected, \'\'), \',\\n\',\n                                               \'        \"rows_sent\": \', IFNULL(rows_sent, \'\'), \',\\n\',\n                                               \'        \"tmp_tables\": \', IFNULL(created_tmp_tables, \'\'), \',\\n\',\n                                               \'        \"tmp_disk_tables\": \', IFNULL(created_tmp_disk_tables, \'\'), \',\\n\',\n                                               \'        \"sort_rows\": \', IFNULL(sort_rows, \'\'), \',\\n\',\n                                               \'        \"sort_merge_passes\": \', IFNULL(sort_merge_passes, \'\'), \'\\n\',\n                                               \'      }\'), \'\') ORDER BY event_id) AS stmts\n                               FROM performance_schema.events_statements_history\n                              WHERE sql_text IS NOT NULL\n                                AND thread_id = in_thread_id\n                              GROUP BY thread_id, nesting_event_id\n                            ) AS s\n                    ON trxi.thread_id = s.thread_id\n                   AND trxi.event_id = s.nesting_event_id\n                 WHERE trxi.thread_id = in_thread_id\n                 GROUP BY trxi.thread_id, trxi.event_id\n                ) trxs\n          GROUP BY thread_id\n    );\n    IF (@old_group_concat_max_len IS NOT NULL) THEN\n        SET SESSION group_concat_max_len = @old_group_concat_max_len;\n    END IF;\n    RETURN v_output;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns a JSON object with info on the given threads current transaction,\n             and the statements it has already executed, derived from the\n             performance_schema.events_transactions_current and\n             performance_schema.events_statements_history tables (so the consumers\n             for these also have to be enabled within Performance Schema to get full\n             data in the object).\n             When the output exceeds the default truncation length (65535), a JSON error\n             object is returned, such as:\n             { \"error\": \"Trx info truncated: Row 6 was cut by GROUP_CONCAT()\" }\n             Similar error objects are returned for other warnings/and exceptions raised\n             when calling the function.\n             The max length of the output of this function can be controlled with the\n             ps_thread_trx_info.max_length variable set via sys_config, or the\n             @sys.ps_thread_trx_info.max_length user variable, as appropriate.\n             Parameters\n             in_thread_id (BIGINT UNSIGNED):\n               The id of the thread to return the transaction info for.\n             Example\n             SELECT sys.ps_thread_trx_info(48)\\G\n             *************************** 1. row ***************************\n             sys.ps_thread_trx_info(48): [\n               {\n                 \"time\": \"790.70 us\",\n                 \"state\": \"COMMITTED\",\n                 \"mode\": \"READ WRITE\",\n                 \"autocommitted\": \"NO\",\n                 \"gtid\": \"AUTOMATIC\",\n                 \"isolation\": \"REPEATABLE READ\",\n                 \"statements_executed\": [\n                   {\n                     \"sql_text\": \"INSERT INTO info VALUES (1, \'foo\')\",\n                     \"time\": \"471.02 us\",\n                     \"schema\": \"trx\",\n                     \"rows_examined\": 0,\n                     \"rows_affected\": 1,\n                     \"rows_sent\": 0,\n                     \"tmp_tables\": 0,\n                     \"tmp_disk_tables\": 0,\n                     \"sort_rows\": 0,\n                     \"sort_merge_passes\": 0\n                   },\n                   {\n                     \"sql_text\": \"COMMIT\",\n                     \"time\": \"254.42 us\",\n                     \"schema\": \"trx\",\n                     \"rows_examined\": 0,\n                     \"rows_affected\": 0,\n                     \"rows_sent\": 0,\n                     \"tmp_tables\": 0,\n                     \"tmp_disk_tables\": 0,\n                     \"sort_rows\": 0,\n                     \"sort_merge_passes\": 0\n                   }\n                 ]\n               },\n               {\n                 \"time\": \"426.20 us\",\n                 \"state\": \"COMMITTED\",\n                 \"mode\": \"READ WRITE\",\n                 \"autocommitted\": \"NO\",\n                 \"gtid\": \"AUTOMATIC\",\n                 \"isolation\": \"REPEATABLE READ\",\n                 \"statements_executed\": [\n                   {\n                     \"sql_text\": \"INSERT INTO info VALUES (2, \'bar\')\",\n                     \"time\": \"107.33 us\",\n                     \"schema\": \"trx\",\n                     \"rows_examined\": 0,\n                     \"rows_affected\": 1,\n                     \"rows_sent\": 0,\n                     \"tmp_tables\": 0,\n                     \"tmp_disk_tables\": 0,\n                     \"sort_rows\": 0,\n                     \"sort_merge_passes\": 0\n                   },\n                   {\n                     \"sql_text\": \"COMMIT\",\n                     \"time\": \"213.23 us\",\n                     \"schema\": \"trx\",\n                     \"rows_examined\": 0,\n                     \"rows_affected\": 0,\n                     \"rows_sent\": 0,\n                     \"tmp_tables\": 0,\n                     \"tmp_disk_tables\": 0,\n                     \"sort_rows\": 0,\n                     \"sort_merge_passes\": 0\n                   }\n                 ]\n               }\n             ]\n             1 row in set (0.03 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_output LONGTEXT DEFAULT \'{}\';\n    DECLARE v_msg_text TEXT DEFAULT \'\';\n    DECLARE v_signal_msg TEXT DEFAULT \'\';\n    DECLARE v_mysql_errno INT;\n    DECLARE v_max_output_len BIGINT;\n    DECLARE EXIT HANDLER FOR SQLWARNING, SQLEXCEPTION\n    BEGIN\n        GET DIAGNOSTICS CONDITION 1\n            v_msg_text = MESSAGE_TEXT,\n            v_mysql_errno = MYSQL_ERRNO;\n        IF v_mysql_errno = 1260 THEN\n            SET v_signal_msg = CONCAT(\'{ \"error\": \"Trx info truncated: \', v_msg_text, \'\" }\');\n        ELSE\n            SET v_signal_msg = CONCAT(\'{ \"error\": \"\', v_msg_text, \'\" }\');\n        END IF;\n        RETURN v_signal_msg;\n    END;\n    IF (@sys.ps_thread_trx_info.max_length IS NULL) THEN\n        SET @sys.ps_thread_trx_info.max_length = sys.sys_get_config(\'ps_thread_trx_info.max_length\', 65535);\n    END IF;\n    IF (@sys.ps_thread_trx_info.max_length != @@session.group_concat_max_len) THEN\n        SET @old_group_concat_max_len = @@session.group_concat_max_len;\n        SET v_max_output_len = (@sys.ps_thread_trx_info.max_length - 5);\n        SET SESSION group_concat_max_len = v_max_output_len;\n    END IF;\n    SET v_output = (\n        SELECT CONCAT(\'[\', IFNULL(GROUP_CONCAT(trx_info ORDER BY event_id), \'\'), \'\\n]\') AS trx_info\n          FROM (SELECT trxi.thread_id,\n                       trxi.event_id,\n                       GROUP_CONCAT(\n                         IFNULL(\n                           CONCAT(\'\\n  {\\n\',\n                                  \'    \"time\": \"\', IFNULL(sys.format_time(trxi.timer_wait), \'\'), \'\",\\n\',\n                                  \'    \"state\": \"\', IFNULL(trxi.state, \'\'), \'\",\\n\',\n                                  \'    \"mode\": \"\', IFNULL(trxi.access_mode, \'\'), \'\",\\n\',\n                                  \'    \"autocommitted\": \"\', IFNULL(trxi.autocommit, \'\'), \'\",\\n\',\n                                  \'    \"gtid\": \"\', IFNULL(trxi.gtid, \'\'), \'\",\\n\',\n                                  \'    \"isolation\": \"\', IFNULL(trxi.isolation_level, \'\'), \'\",\\n\',\n                                  \'    \"statements_executed\": [\', IFNULL(s.stmts, \'\'), IF(s.stmts IS NULL, \' ]\\n\', \'\\n    ]\\n\'),\n                                  \'  }\'\n                           ),\n                           \'\')\n                         ORDER BY event_id) AS trx_info\n                  FROM (\n                        (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level\n                           FROM performance_schema.events_transactions_current\n                          WHERE thread_id = in_thread_id\n                            AND end_event_id IS NULL)\n                        UNION\n                        (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level\n                           FROM performance_schema.events_transactions_history\n                          WHERE thread_id = in_thread_id)\n                       ) AS trxi\n                  LEFT JOIN (SELECT thread_id,\n                                    nesting_event_id,\n                                    GROUP_CONCAT(\n                                      IFNULL(\n                                        CONCAT(\'\\n      {\\n\',\n                                               \'        \"sql_text\": \"\', IFNULL(sys.format_statement(REPLACE(sql_text, \'\\\', \'\\\\\')), \'\'), \'\",\\n\',\n                                               \'        \"time\": \"\', IFNULL(sys.format_time(timer_wait), \'\'), \'\",\\n\',\n                                               \'        \"schema\": \"\', IFNULL(current_schema, \'\'), \'\",\\n\',\n                                               \'        \"rows_examined\": \', IFNULL(rows_examined, \'\'), \',\\n\',\n                                               \'        \"rows_affected\": \', IFNULL(rows_affected, \'\'), \',\\n\',\n                                               \'        \"rows_sent\": \', IFNULL(rows_sent, \'\'), \',\\n\',\n                                               \'        \"tmp_tables\": \', IFNULL(created_tmp_tables, \'\'), \',\\n\',\n                                               \'        \"tmp_disk_tables\": \', IFNULL(created_tmp_disk_tables, \'\'), \',\\n\',\n                                               \'        \"sort_rows\": \', IFNULL(sort_rows, \'\'), \',\\n\',\n                                               \'        \"sort_merge_passes\": \', IFNULL(sort_merge_passes, \'\'), \'\\n\',\n                                               \'      }\'), \'\') ORDER BY event_id) AS stmts\n                               FROM performance_schema.events_statements_history\n                              WHERE sql_text IS NOT NULL\n                                AND thread_id = in_thread_id\n                              GROUP BY thread_id, nesting_event_id\n                            ) AS s\n                    ON trxi.thread_id = s.thread_id\n                   AND trxi.event_id = s.nesting_event_id\n                 WHERE trxi.thread_id = in_thread_id\n                 GROUP BY trxi.thread_id, trxi.event_id\n                ) trxs\n          GROUP BY thread_id\n    );\n    IF (@old_group_concat_max_len IS NOT NULL) THEN\n        SET SESSION group_concat_max_len = @old_group_concat_max_len;\n    END IF;\n    RETURN v_output;\nEND','NONE'),('sys','create_synonym_db','PROCEDURE','create_synonym_db','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_db_name VARCHAR(64),\n        IN in_synonym VARCHAR(64)\n    ','','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_db_name_check VARCHAR(64);\n    DECLARE v_db_err_msg TEXT;\n    DECLARE v_table VARCHAR(64);\n    DECLARE v_views_created INT DEFAULT 0;\n    DECLARE v_table_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\') DEFAULT \'\';\n    DECLARE v_temp_table TEXT;\n    DECLARE c_table_names CURSOR FOR\n        SELECT TABLE_NAME\n          FROM INFORMATION_SCHEMA.TABLES\n         WHERE TABLE_SCHEMA = in_db_name;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SELECT SCHEMA_NAME INTO v_db_name_check\n      FROM INFORMATION_SCHEMA.SCHEMATA\n     WHERE SCHEMA_NAME = in_db_name;\n    IF v_db_name_check IS NULL THEN\n        SET v_db_err_msg = CONCAT(\'Unknown database \', in_db_name);\n        SIGNAL SQLSTATE \'HY000\'\n            SET MESSAGE_TEXT = v_db_err_msg;\n    END IF;\n    SELECT SCHEMA_NAME INTO v_db_name_check\n      FROM INFORMATION_SCHEMA.SCHEMATA\n     WHERE SCHEMA_NAME = in_synonym;\n    IF v_db_name_check = in_synonym THEN\n        SET v_db_err_msg = CONCAT(\'Can\\\'t create database \', in_synonym, \'; database exists\');\n        SIGNAL SQLSTATE \'HY000\'\n            SET MESSAGE_TEXT = v_db_err_msg;\n    END IF;\n    SET @create_db_stmt := CONCAT(\'CREATE DATABASE \', sys.quote_identifier(in_synonym));\n    PREPARE create_db_stmt FROM @create_db_stmt;\n    EXECUTE create_db_stmt;\n    DEALLOCATE PREPARE create_db_stmt;\n    SET v_done = FALSE;\n    OPEN c_table_names;\n    c_table_names: LOOP\n        FETCH c_table_names INTO v_table;\n        IF v_done THEN\n            LEAVE c_table_names;\n        END IF;\n        CALL sys.table_exists(in_db_name, v_table, v_table_exists);\n        IF (v_table_exists = \'TEMPORARY\') THEN\n            SET v_temp_table =\n            CONCAT(\n                \'Table\',\n                 sys.quote_identifier(in_db_name),\n                 \'.\',\n                 sys.quote_identifier(v_table),\n                 \'shadows base table. View cannot be created! Terminating!\');\n             SIGNAL SQLSTATE \'HY000\'\n                 SET MESSAGE_TEXT = v_temp_table;\n             LEAVE c_table_names;\n        END IF;\n        SET @create_view_stmt = CONCAT(\n            \'CREATE SQL SECURITY INVOKER VIEW \',\n            sys.quote_identifier(in_synonym),\n            \'.\',\n            sys.quote_identifier(v_table),\n            \' AS SELECT * FROM \',\n            sys.quote_identifier(in_db_name),\n            \'.\',\n            sys.quote_identifier(v_table)\n        );\n        PREPARE create_view_stmt FROM @create_view_stmt;\n        EXECUTE create_view_stmt;\n        DEALLOCATE PREPARE create_view_stmt;\n        SET v_views_created = v_views_created + 1;\n    END LOOP;\n    CLOSE c_table_names;\n    SELECT CONCAT(\n        \'Created \', v_views_created, \' view\',\n        IF(v_views_created != 1, \'s\', \'\'), \' in the \',\n        sys.quote_identifier(in_synonym), \' database\'\n    ) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Takes a source database name and synonym name, and then creates the\n             synonym database with views that point to all of the tables within\n             the source database.\n             Useful for creating a \"ps\" synonym for \"performance_schema\",\n             or \"is\" instead of \"information_schema\", for example.\n             Parameters\n             in_db_name (VARCHAR(64)):\n               The database name that you would like to create a synonym for.\n             in_synonym (VARCHAR(64)):\n               The database synonym name.\n             Example\n             mysql> SHOW DATABASES;\n             +--------------------+\n             | Database           |\n             +--------------------+\n             | information_schema |\n             | mysql              |\n             | performance_schema |\n             | sys                |\n             | test               |\n             +--------------------+\n             5 rows in set (0.00 sec)\n             mysql> CALL sys.create_synonym_db(\'performance_schema\', \'ps\');\n             +---------------------------------------+\n             | summary                               |\n             +---------------------------------------+\n             | Created 74 views in the `ps` database |\n             +---------------------------------------+\n             1 row in set (8.57 sec)\n             Query OK, 0 rows affected (8.57 sec)\n             mysql> SHOW DATABASES;\n             +--------------------+\n             | Database           |\n             +--------------------+\n             | information_schema |\n             | mysql              |\n             | performance_schema |\n             | ps                 |\n             | sys                |\n             | test               |\n             +--------------------+\n             6 rows in set (0.00 sec)\n             mysql> SHOW FULL TABLES FROM ps;\n             +------------------------------------------------------+------------+\n             | Tables_in_ps                                         | Table_type |\n             +------------------------------------------------------+------------+\n             | accounts                                             | VIEW       |\n             | cond_instances                                       | VIEW       |\n             | events_stages_current                                | VIEW       |\n             | events_stages_history                                | VIEW       |\n             ...\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_db_name_check VARCHAR(64);\n    DECLARE v_db_err_msg TEXT;\n    DECLARE v_table VARCHAR(64);\n    DECLARE v_views_created INT DEFAULT 0;\n    DECLARE v_table_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\') DEFAULT \'\';\n    DECLARE v_temp_table TEXT;\n    DECLARE c_table_names CURSOR FOR\n        SELECT TABLE_NAME\n          FROM INFORMATION_SCHEMA.TABLES\n         WHERE TABLE_SCHEMA = in_db_name;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SELECT SCHEMA_NAME INTO v_db_name_check\n      FROM INFORMATION_SCHEMA.SCHEMATA\n     WHERE SCHEMA_NAME = in_db_name;\n    IF v_db_name_check IS NULL THEN\n        SET v_db_err_msg = CONCAT(\'Unknown database \', in_db_name);\n        SIGNAL SQLSTATE \'HY000\'\n            SET MESSAGE_TEXT = v_db_err_msg;\n    END IF;\n    SELECT SCHEMA_NAME INTO v_db_name_check\n      FROM INFORMATION_SCHEMA.SCHEMATA\n     WHERE SCHEMA_NAME = in_synonym;\n    IF v_db_name_check = in_synonym THEN\n        SET v_db_err_msg = CONCAT(\'Can\'\'t create database \', in_synonym, \'; database exists\');\n        SIGNAL SQLSTATE \'HY000\'\n            SET MESSAGE_TEXT = v_db_err_msg;\n    END IF;\n    SET @create_db_stmt := CONCAT(\'CREATE DATABASE \', sys.quote_identifier(in_synonym));\n    PREPARE create_db_stmt FROM @create_db_stmt;\n    EXECUTE create_db_stmt;\n    DEALLOCATE PREPARE create_db_stmt;\n    SET v_done = FALSE;\n    OPEN c_table_names;\n    c_table_names: LOOP\n        FETCH c_table_names INTO v_table;\n        IF v_done THEN\n            LEAVE c_table_names;\n        END IF;\n        CALL sys.table_exists(in_db_name, v_table, v_table_exists);\n        IF (v_table_exists = \'TEMPORARY\') THEN\n            SET v_temp_table =\n            CONCAT(\n                \'Table\',\n                 sys.quote_identifier(in_db_name),\n                 \'.\',\n                 sys.quote_identifier(v_table),\n                 \'shadows base table. View cannot be created! Terminating!\');\n             SIGNAL SQLSTATE \'HY000\'\n                 SET MESSAGE_TEXT = v_temp_table;\n             LEAVE c_table_names;\n        END IF;\n        SET @create_view_stmt = CONCAT(\n            \'CREATE SQL SECURITY INVOKER VIEW \',\n            sys.quote_identifier(in_synonym),\n            \'.\',\n            sys.quote_identifier(v_table),\n            \' AS SELECT * FROM \',\n            sys.quote_identifier(in_db_name),\n            \'.\',\n            sys.quote_identifier(v_table)\n        );\n        PREPARE create_view_stmt FROM @create_view_stmt;\n        EXECUTE create_view_stmt;\n        DEALLOCATE PREPARE create_view_stmt;\n        SET v_views_created = v_views_created + 1;\n    END LOOP;\n    CLOSE c_table_names;\n    SELECT CONCAT(\n        \'Created \', v_views_created, \' view\',\n        IF(v_views_created != 1, \'s\', \'\'), \' in the \',\n        sys.quote_identifier(in_synonym), \' database\'\n    ) AS summary;\nEND','NONE'),('sys','diagnostics','PROCEDURE','diagnostics','SQL','READS_SQL_DATA','NO','INVOKER','\n        IN in_max_runtime int unsigned, IN in_interval int unsigned,\n        IN in_auto_config enum (\'current\', \'medium\', \'full\')\n    ','','BEGIN\n    DECLARE v_start, v_runtime, v_iter_start, v_sleep DECIMAL(20,2) DEFAULT 0.0;\n    DECLARE v_has_innodb, v_has_ndb, v_has_ps, v_has_replication, v_has_ps_replication VARCHAR(8) CHARSET utf8 DEFAULT \'NO\';\n    DECLARE v_this_thread_enabled, v_has_ps_vars, v_has_metrics ENUM(\'YES\', \'NO\');\n    DECLARE v_table_name, v_banner VARCHAR(64) CHARSET utf8;\n    DECLARE v_sql_status_summary_select, v_sql_status_summary_delta, v_sql_status_summary_from, v_no_delta_names TEXT;\n    DECLARE v_output_time, v_output_time_prev DECIMAL(20,3) UNSIGNED;\n    DECLARE v_output_count, v_count, v_old_group_concat_max_len INT UNSIGNED DEFAULT 0;\n    DECLARE v_status_summary_width TINYINT UNSIGNED DEFAULT 50;\n    DECLARE v_done BOOLEAN DEFAULT FALSE;\n    DECLARE c_ndbinfo CURSOR FOR\n        SELECT TABLE_NAME\n          FROM information_schema.TABLES\n         WHERE TABLE_SCHEMA = \'ndbinfo\'\n               AND TABLE_NAME NOT IN (\n                  \'blocks\',\n                  \'config_params\',\n                  \'dict_obj_types\',\n                  \'disk_write_speed_base\',\n                  \'memory_per_fragment\',\n                  \'memoryusage\',\n                  \'operations_per_fragment\',\n                  \'threadblocks\'\n               );\n    DECLARE c_sysviews_w_delta CURSOR FOR\n        SELECT table_name\n          FROM tmp_sys_views_delta\n         ORDER BY table_name;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    END IF;\n    IF (in_max_runtime < in_interval) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_max_runtime must be greater than or equal to in_interval\';\n    END IF;\n    IF (in_max_runtime = 0) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_max_runtime must be greater than 0\';\n    END IF;\n    IF (in_interval = 0) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_interval must be greater than 0\';\n    END IF;\n    IF (@sys.diagnostics.allow_i_s_tables IS NULL) THEN\n        SET @sys.diagnostics.allow_i_s_tables = sys.sys_get_config(\'diagnostics.allow_i_s_tables\', \'OFF\');\n    END IF;\n    IF (@sys.diagnostics.include_raw IS NULL) THEN\n        SET @sys.diagnostics.include_raw      = sys.sys_get_config(\'diagnostics.include_raw\'     , \'OFF\');\n    END IF;\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug                        = sys.sys_get_config(\'debug\'                       , \'OFF\');\n    END IF;\n    IF (@sys.statement_truncate_len IS NULL) THEN\n        SET @sys.statement_truncate_len       = sys.sys_get_config(\'statement_truncate_len\'      , \'64\' );\n    END IF;\n    SET @log_bin := @@sql_log_bin;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = 0;\n    END IF;\n    SET v_no_delta_names = CONCAT(\'s%{COUNT}.Variable_name NOT IN (\',\n        \'\'\'innodb_buffer_pool_pages_total\'\', \',\n        \'\'\'innodb_page_size\'\', \',\n        \'\'\'last_query_cost\'\', \',\n        \'\'\'last_query_partial_plans\'\', \',\n        \'\'\'qcache_total_blocks\'\', \',\n        \'\'\'slave_last_heartbeat\'\', \',\n        \'\'\'ssl_ctx_verify_depth\'\', \',\n        \'\'\'ssl_ctx_verify_mode\'\', \',\n        \'\'\'ssl_session_cache_size\'\', \',\n        \'\'\'ssl_verify_depth\'\', \',\n        \'\'\'ssl_verify_mode\'\', \',\n        \'\'\'ssl_version\'\', \',\n        \'\'\'buffer_flush_lsn_avg_rate\'\', \',\n        \'\'\'buffer_flush_pct_for_dirty\'\', \',\n        \'\'\'buffer_flush_pct_for_lsn\'\', \',\n        \'\'\'buffer_pool_pages_total\'\', \',\n        \'\'\'lock_row_lock_time_avg\'\', \',\n        \'\'\'lock_row_lock_time_max\'\', \',\n        \'\'\'innodb_page_size\'\'\',\n    \')\');\n    IF (in_auto_config <> \'current\') THEN\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'Updating Performance Schema configuration to \', in_auto_config) AS \'Debug\';\n        END IF;\n        CALL sys.ps_setup_save(0);\n        IF (in_auto_config = \'medium\') THEN\n            UPDATE performance_schema.setup_consumers\n                SET ENABLED = \'YES\'\n            WHERE NAME NOT LIKE \'%\\_history%\';\n            UPDATE performance_schema.setup_instruments\n                SET ENABLED = \'YES\',\n                    TIMED   = \'YES\'\n            WHERE NAME NOT LIKE \'wait/synch/%\';\n        ELSEIF (in_auto_config = \'full\') THEN\n            UPDATE performance_schema.setup_consumers\n                SET ENABLED = \'YES\';\n            UPDATE performance_schema.setup_instruments\n                SET ENABLED = \'YES\',\n                    TIMED   = \'YES\';\n        END IF;\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = \'YES\'\n         WHERE PROCESSLIST_ID <> CONNECTION_ID();\n    END IF;\n    SET v_start        = UNIX_TIMESTAMP(NOW(2)),\n        in_interval    = IFNULL(in_interval, 30),\n        in_max_runtime = IFNULL(in_max_runtime, 60);\n    SET v_banner = REPEAT(\n                      \'-\',\n                      LEAST(\n                         GREATEST(\n                            36,\n                            CHAR_LENGTH(VERSION()),\n                            CHAR_LENGTH(@@global.version_comment),\n                            CHAR_LENGTH(@@global.version_compile_os),\n                            CHAR_LENGTH(@@global.version_compile_machine),\n                            CHAR_LENGTH(@@global.socket),\n                            CHAR_LENGTH(@@global.datadir)\n                         ),\n                         64\n                      )\n                   );\n    SELECT \'Hostname\' AS \'Name\', @@global.hostname AS \'Value\'\n    UNION ALL\n    SELECT \'Port\' AS \'Name\', @@global.port AS \'Value\'\n    UNION ALL\n    SELECT \'Socket\' AS \'Name\', @@global.socket AS \'Value\'\n    UNION ALL\n    SELECT \'Datadir\' AS \'Name\', @@global.datadir AS \'Value\'\n    UNION ALL\n    SELECT REPEAT(\'-\', 23) AS \'Name\', v_banner AS \'Value\'\n    UNION ALL\n    SELECT \'MySQL Version\' AS \'Name\', VERSION() AS \'Value\'\n    UNION ALL\n    SELECT \'Sys Schema Version\' AS \'Name\', (SELECT sys_version FROM sys.version) AS \'Value\'\n    UNION ALL\n    SELECT \'Version Comment\' AS \'Name\', @@global.version_comment AS \'Value\'\n    UNION ALL\n    SELECT \'Version Compile OS\' AS \'Name\', @@global.version_compile_os AS \'Value\'\n    UNION ALL\n    SELECT \'Version Compile Machine\' AS \'Name\', @@global.version_compile_machine AS \'Value\'\n    UNION ALL\n    SELECT REPEAT(\'-\', 23) AS \'Name\', v_banner AS \'Value\'\n    UNION ALL\n    SELECT \'UTC Time\' AS \'Name\', UTC_TIMESTAMP() AS \'Value\'\n    UNION ALL\n    SELECT \'Local Time\' AS \'Name\', NOW() AS \'Value\'\n    UNION ALL\n    SELECT \'Time Zone\' AS \'Name\', @@global.time_zone AS \'Value\'\n    UNION ALL\n    SELECT \'System Time Zone\' AS \'Name\', @@global.system_time_zone AS \'Value\'\n    UNION ALL\n    SELECT \'Time Zone Offset\' AS \'Name\', TIMEDIFF(NOW(), UTC_TIMESTAMP()) AS \'Value\';\n    SET v_has_innodb         = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'InnoDB\'), \'NO\'),\n        v_has_ndb            = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'NDBCluster\'), \'NO\'),\n        v_has_ps             = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'PERFORMANCE_SCHEMA\'), \'NO\'),\n        v_has_ps_replication = IF(v_has_ps = \'YES\'\n                                   AND EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = \'performance_schema\' AND TABLE_NAME = \'replication_applier_status\'),\n                                   \'YES\',\n                                   \'NO\'\n                               ),\n        v_has_replication    = \'MAYBE\',\n        v_has_metrics        = IF(v_has_ps = \'YES\' OR (sys.version_major() = 5 AND sys.version_minor() = 6), \'YES\', \'NO\'),\n        v_has_ps_vars        = \'NO\';\n    \n    \n    IF (@sys.debug = \'ON\') THEN\n       SELECT v_has_innodb AS \'Has_InnoDB\', v_has_ndb AS \'Has_NDBCluster\',\n              v_has_ps AS \'Has_Performance_Schema\', v_has_ps_vars AS \'Has_P_S_SHOW_Variables\',\n              v_has_metrics AS \'Has_metrics\',\n              v_has_ps_replication \'AS Has_P_S_Replication\', v_has_replication AS \'Has_Replication\';\n    END IF;\n    IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE InnoDB STATUS\';\n        PREPARE stmt_innodb_status FROM @sys.diagnostics.sql;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE PERFORMANCE_SCHEMA STATUS\';\n        PREPARE stmt_ps_status FROM @sys.diagnostics.sql;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE NDBCLUSTER STATUS\';\n        PREPARE stmt_ndbcluster_status FROM @sys.diagnostics.sql;\n    END IF;\n    SET @sys.diagnostics.sql_gen_query_template = \'SELECT CONCAT(\n           \'\'SELECT \'\',\n           GROUP_CONCAT(\n               CASE WHEN (SUBSTRING(TABLE_NAME, 3), COLUMN_NAME) IN (\n                                (\'\'io_global_by_file_by_bytes\'\', \'\'total\'\'),\n                                (\'\'io_global_by_wait_by_bytes\'\', \'\'total_requested\'\')\n                         )\n                         THEN CONCAT(\'\'sys.format_bytes(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\n                         THEN CONCAT(\'\'sys.format_time(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, -7) = \'\'_memory\'\' OR SUBSTRING(COLUMN_NAME, -17) = \'\'_memory_allocated\'\'\n                         OR ((SUBSTRING(COLUMN_NAME, -5) = \'\'_read\'\' OR SUBSTRING(COLUMN_NAME, -8) = \'\'_written\'\' OR SUBSTRING(COLUMN_NAME, -6) = \'\'_write\'\') AND SUBSTRING(COLUMN_NAME, 1, 6) <> \'\'COUNT_\'\')\n                         THEN CONCAT(\'\'sys.format_bytes(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\n                    ELSE COLUMN_NAME\n               END\n               ORDER BY ORDINAL_POSITION\n               SEPARATOR \'\',\\n       \'\'\n           ),\n           \'\'\\n  FROM tmp_\'\', SUBSTRING(TABLE_NAME FROM 3), \'\'_%{OUTPUT}\'\'\n       ) AS Query INTO @sys.diagnostics.sql_select\n  FROM information_schema.COLUMNS\n WHERE TABLE_SCHEMA = \'\'sys\'\' AND TABLE_NAME = ?\n GROUP BY TABLE_NAME\';\n    SET @sys.diagnostics.sql_gen_query_delta = \'SELECT CONCAT(\n           \'\'SELECT \'\',\n           GROUP_CONCAT(\n               CASE WHEN FIND_IN_SET(COLUMN_NAME, diag.pk)\n                         THEN COLUMN_NAME\n                    WHEN diag.TABLE_NAME = \'\'io_global_by_file_by_bytes\'\' AND COLUMN_NAME = \'\'write_pct\'\'\n                         THEN CONCAT(\'\'IFNULL(ROUND(100-(((e.total_read-IFNULL(s.total_read, 0))\'\',\n                                     \'\'/NULLIF(((e.total_read-IFNULL(s.total_read, 0))+(e.total_written-IFNULL(s.total_written, 0))), 0))*100), 2), 0.00) AS \'\',\n                                     COLUMN_NAME)\n                    WHEN (diag.TABLE_NAME, COLUMN_NAME) IN (\n                                (\'\'io_global_by_file_by_bytes\'\', \'\'total\'\'),\n                                (\'\'io_global_by_wait_by_bytes\'\', \'\'total_requested\'\')\n                         )\n                         THEN CONCAT(\'\'sys.format_bytes(e.\'\', COLUMN_NAME, \'\'-IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, 1, 4) IN (\'\'max_\'\', \'\'min_\'\') AND SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\n                         THEN CONCAT(\'\'sys.format_time(e.\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\n                    WHEN COLUMN_NAME = \'\'avg_latency\'\'\n                         THEN CONCAT(\'\'sys.format_time((e.total_latency - IFNULL(s.total_latency, 0))\'\',\n                                     \'\'/NULLIF(e.total - IFNULL(s.total, 0), 0)) AS \'\', COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, -12) = \'\'_avg_latency\'\'\n                         THEN CONCAT(\'\'sys.format_time((e.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'_latency - IFNULL(s.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'_latency, 0))\'\',\n                                     \'\'/NULLIF(e.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'s - IFNULL(s.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'s, 0), 0)) AS \'\', COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\n                         THEN CONCAT(\'\'sys.format_time(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\n                    WHEN COLUMN_NAME IN (\'\'avg_read\'\', \'\'avg_write\'\', \'\'avg_written\'\')\n                         THEN CONCAT(\'\'sys.format_bytes(IFNULL((e.total_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'written\'\'), \'\'-IFNULL(s.total_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'written\'\'), \'\', 0))\'\',\n                                     \'\'/NULLIF(e.count_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'write\'\'), \'\'-IFNULL(s.count_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'write\'\'), \'\', 0), 0), 0)) AS \'\',\n                                     COLUMN_NAME)\n                    WHEN SUBSTRING(COLUMN_NAME, -7) = \'\'_memory\'\' OR SUBSTRING(COLUMN_NAME, -17) = \'\'_memory_allocated\'\'\n                         OR ((SUBSTRING(COLUMN_NAME, -5) = \'\'_read\'\' OR SUBSTRING(COLUMN_NAME, -8) = \'\'_written\'\' OR SUBSTRING(COLUMN_NAME, -6) = \'\'_write\'\') AND SUBSTRING(COLUMN_NAME, 1, 6) <> \'\'COUNT_\'\')\n                         THEN CONCAT(\'\'sys.format_bytes(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\n                    ELSE CONCAT(\'\'(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\n               END\n               ORDER BY ORDINAL_POSITION\n               SEPARATOR \'\',\\n       \'\'\n           ),\n           \'\'\\n  FROM tmp_\'\', diag.TABLE_NAME, \'\'_end e\n       LEFT OUTER JOIN tmp_\'\', diag.TABLE_NAME, \'\'_start s USING (\'\', diag.pk, \'\')\'\'\n       ) AS Query INTO @sys.diagnostics.sql_select\n  FROM tmp_sys_views_delta diag\n       INNER JOIN information_schema.COLUMNS c ON c.TABLE_NAME = CONCAT(\'\'x$\'\', diag.TABLE_NAME)\n WHERE c.TABLE_SCHEMA = \'\'sys\'\' AND diag.TABLE_NAME = ?\n GROUP BY diag.TABLE_NAME\';\n    IF (v_has_ps = \'YES\') THEN\n        DROP TEMPORARY TABLE IF EXISTS tmp_sys_views_delta;\n        CREATE TEMPORARY TABLE tmp_sys_views_delta (\n            TABLE_NAME varchar(64) NOT NULL,\n            order_by text COMMENT \'ORDER BY clause for the initial and overall views\',\n            order_by_delta text COMMENT \'ORDER BY clause for the delta views\',\n            where_delta text COMMENT \'WHERE clause to use for delta views to only include rows with a \"count\" > 0\',\n            limit_rows int unsigned COMMENT \'The maximum number of rows to include for the view\',\n            pk varchar(128) COMMENT \'Used with the FIND_IN_SET() function so use comma separated list without whitespace\',\n            PRIMARY KEY (TABLE_NAME)\n        );\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'Populating tmp_sys_views_delta\' AS \'Debug\';\n        END IF;\n        INSERT INTO tmp_sys_views_delta\n        VALUES (\'host_summary\'                       , \'%{TABLE}.statement_latency DESC\',\n                                                       \'(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC\',\n                                                       \'(e.statements - IFNULL(s.statements, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_file_io\'            , \'%{TABLE}.io_latency DESC\',\n                                                       \'(e.io_latency-IFNULL(s.io_latency, 0)) DESC\',\n                                                       \'(e.ios - IFNULL(s.ios, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_file_io_type\'       , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event_name\'),\n               (\'host_summary_by_stages\'             , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event_name\'),\n               (\'host_summary_by_statement_latency\'  , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_statement_type\'     , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,statement\'),\n               (\'io_by_thread_by_latency\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,thread_id,processlist_id\'),\n               (\'io_global_by_file_by_bytes\'         , \'%{TABLE}.total DESC\',\n                                                       \'(e.total-IFNULL(s.total, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', 100, \'file\'),\n               (\'io_global_by_file_by_latency\'       , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', 100, \'file\'),\n               (\'io_global_by_wait_by_bytes\'         , \'%{TABLE}.total_requested DESC\',\n                                                       \'(e.total_requested-IFNULL(s.total_requested, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_name\'),\n               (\'io_global_by_wait_by_latency\'       , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_name\'),\n               (\'schema_index_statistics\'            , \'(%{TABLE}.select_latency+%{TABLE}.insert_latency+%{TABLE}.update_latency+%{TABLE}.delete_latency) DESC\',\n                                                       \'((e.select_latency+e.insert_latency+e.update_latency+e.delete_latency)-IFNULL(s.select_latency+s.insert_latency+s.update_latency+s.delete_latency, 0)) DESC\',\n                                                       \'((e.rows_selected+e.insert_latency+e.rows_updated+e.rows_deleted)-IFNULL(s.rows_selected+s.rows_inserted+s.rows_updated+s.rows_deleted, 0)) > 0\',\n                                                       100, \'table_schema,table_name,index_name\'),\n               (\'schema_table_statistics\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) > 0\', 100, \'table_schema,table_name\'),\n               (\'schema_tables_with_full_table_scans\', \'%{TABLE}.rows_full_scanned DESC\',\n                                                       \'(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) DESC\',\n                                                       \'(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) > 0\', 100, \'object_schema,object_name\'),\n               (\'user_summary\'                       , \'%{TABLE}.statement_latency DESC\',\n                                                       \'(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC\',\n                                                       \'(e.statements - IFNULL(s.statements, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_file_io\'            , \'%{TABLE}.io_latency DESC\',\n                                                       \'(e.io_latency-IFNULL(s.io_latency, 0)) DESC\',\n                                                       \'(e.ios - IFNULL(s.ios, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_file_io_type\'       , \'%{TABLE}.user, %{TABLE}.latency DESC\',\n                                                       \'e.user, (e.latency-IFNULL(s.latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event_name\'),\n               (\'user_summary_by_stages\'             , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event_name\'),\n               (\'user_summary_by_statement_latency\'  , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_statement_type\'     , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,statement\'),\n               (\'wait_classes_global_by_avg_latency\' , \'IFNULL(%{TABLE}.total_latency / NULLIF(%{TABLE}.total, 0), 0) DESC\',\n                                                       \'IFNULL((e.total_latency-IFNULL(s.total_latency, 0)) / NULLIF((e.total - IFNULL(s.total, 0)), 0), 0) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_class\'),\n               (\'wait_classes_global_by_latency\'     , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_class\'),\n               (\'waits_by_host_by_latency\'           , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event\'),\n               (\'waits_by_user_by_latency\'           , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event\'),\n               (\'waits_global_by_latency\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'events\')\n        ;\n    END IF;\n    SELECT \'\n=======================\n     Configuration\n=======================\n\' AS \'\';\n    SELECT \'GLOBAL VARIABLES\' AS \'The following output is:\';\n    IF (v_has_ps_vars = \'YES\') THEN\n        SELECT LOWER(VARIABLE_NAME) AS Variable_name, VARIABLE_VALUE AS Variable_value FROM performance_schema.global_variables ORDER BY VARIABLE_NAME;\n    ELSE\n        SELECT LOWER(VARIABLE_NAME) AS Variable_name, VARIABLE_VALUE AS Variable_value FROM information_schema.GLOBAL_VARIABLES ORDER BY VARIABLE_NAME;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'Performance Schema Setup - Actors\' AS \'The following output is:\';\n        SELECT * FROM performance_schema.setup_actors;\n        SELECT \'Performance Schema Setup - Consumers\' AS \'The following output is:\';\n        SELECT NAME AS Consumer, ENABLED, sys.ps_is_consumer_enabled(NAME) AS COLLECTS\n          FROM performance_schema.setup_consumers;\n        SELECT \'Performance Schema Setup - Instruments\' AS \'The following output is:\';\n        SELECT SUBSTRING_INDEX(NAME, \'/\', 2) AS \'InstrumentClass\',\n               ROUND(100*SUM(IF(ENABLED = \'YES\', 1, 0))/COUNT(*), 2) AS \'EnabledPct\',\n               ROUND(100*SUM(IF(TIMED = \'YES\', 1, 0))/COUNT(*), 2) AS \'TimedPct\'\n          FROM performance_schema.setup_instruments\n         GROUP BY SUBSTRING_INDEX(NAME, \'/\', 2)\n         ORDER BY SUBSTRING_INDEX(NAME, \'/\', 2);\n        SELECT \'Performance Schema Setup - Objects\' AS \'The following output is:\';\n        SELECT * FROM performance_schema.setup_objects;\n        SELECT \'Performance Schema Setup - Threads\' AS \'The following output is:\';\n        SELECT `TYPE` AS ThreadType, COUNT(*) AS \'Total\', ROUND(100*SUM(IF(INSTRUMENTED = \'YES\', 1, 0))/COUNT(*), 2) AS \'InstrumentedPct\'\n          FROM performance_schema.threads\n        GROUP BY TYPE;\n    END IF;\n    IF (v_has_replication = \'NO\') THEN\n        SELECT \'No Replication Configured\' AS \'Replication Status\';\n    ELSE\n        SELECT CONCAT(\'Replication Configured: \', v_has_replication, \' - Performance Schema Replication Tables: \', v_has_ps_replication) AS \'Replication Status\';\n        IF (v_has_ps_replication = \'YES\') THEN\n            SELECT \'Replication - Connection Configuration\' AS \'The following output is:\';\n            SELECT * FROM performance_schema.replication_connection_configuration;\n        END IF;\n        IF (v_has_ps_replication = \'YES\') THEN\n            SELECT \'Replication - Applier Configuration\' AS \'The following output is:\';\n            SELECT * FROM performance_schema.replication_applier_configuration ORDER BY CHANNEL_NAME;\n        END IF;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n       SELECT \'Cluster Thread Blocks\' AS \'The following output is:\';\n       SELECT * FROM ndbinfo.threadblocks;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            SELECT \'\n========================\n     Initial Status\n========================\n\' AS \'\';\n        END IF;\n        DROP TEMPORARY TABLE IF EXISTS tmp_digests_start;\n        CALL sys.statement_performance_analyzer(\'create_tmp\', \'tmp_digests_start\', NULL);\n        CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n        CALL sys.statement_performance_analyzer(\'save\', \'tmp_digests_start\', NULL);\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, \'%{OUTPUT}\', \'start\');\n            IF (@sys.debug = \'ON\') THEN\n                SELECT \'The following query will be used to generate the query for each sys view\' AS \'Debug\';\n                SELECT @sys.diagnostics.sql AS \'Debug\';\n            END IF;\n            PREPARE stmt_gen_query FROM @sys.diagnostics.sql;\n        END IF;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            IF (@sys.debug = \'ON\') THEN\n                SELECT CONCAT(\'The following queries are for storing the initial content of \', v_table_name) AS \'Debug\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS `tmp_\', v_table_name, \'_start`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE `tmp_\', v_table_name, \'_start` SELECT * FROM `sys`.`x$\', v_table_name, \'`\'));\n            IF (@sys.diagnostics.include_raw = \'ON\') THEN\n                SET @sys.diagnostics.table_name = CONCAT(\'x$\', v_table_name);\n                EXECUTE stmt_gen_query USING @sys.diagnostics.table_name;\n                SELECT CONCAT(@sys.diagnostics.sql_select,\n                              IF(order_by IS NOT NULL, CONCAT(\'\\n ORDER BY \', REPLACE(order_by, \'%{TABLE}\', CONCAT(\'tmp_\', v_table_name, \'_start\'))), \'\'),\n                              IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                       )\n                  INTO @sys.diagnostics.sql_select\n                  FROM tmp_sys_views_delta\n                 WHERE TABLE_NAME = v_table_name;\n                SELECT CONCAT(\'Initial \', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            END IF;\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            DEALLOCATE PREPARE stmt_gen_query;\n        END IF;\n    END IF;\n    SET v_sql_status_summary_select = \'SELECT Variable_name\',\n        v_sql_status_summary_delta  = \'\',\n        v_sql_status_summary_from   = \'\';\n    REPEAT\n        SET v_output_count = v_output_count + 1;\n        IF (v_output_count > 1) THEN\n            SET v_sleep = in_interval-(UNIX_TIMESTAMP(NOW(2))-v_iter_start);\n            SELECT NOW() AS \'Time\', CONCAT(\'Going to sleep for \', v_sleep, \' seconds. Please do not interrupt\') AS \'The following output is:\';\n            DO SLEEP(in_interval);\n        END IF;\n        SET v_iter_start = UNIX_TIMESTAMP(NOW(2));\n        SELECT NOW(), CONCAT(\'Iteration Number \', IFNULL(v_output_count, \'NULL\')) AS \'The following output is:\';\n        IF (@@log_bin = 1) THEN\n            SELECT \'SHOW MASTER STATUS\' AS \'The following output is:\';\n            SHOW MASTER STATUS;\n        END IF;\n        IF (v_has_replication <> \'NO\') THEN\n            SELECT \'SHOW SLAVE STATUS\' AS \'The following output is:\';\n            SHOW SLAVE STATUS;\n        END IF;\n        SET v_table_name = CONCAT(\'tmp_metrics_\', v_output_count);\n        CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS \', v_table_name));\n        CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE \', v_table_name, \' (\n  Variable_name VARCHAR(193) NOT NULL,\n  Variable_value VARCHAR(1024),\n  Type VARCHAR(100) NOT NULL,\n  Enabled ENUM(\'\'YES\'\', \'\'NO\'\', \'\'PARTIAL\'\') NOT NULL,\n  PRIMARY KEY (Type, Variable_name)\n) ENGINE = InnoDB DEFAULT CHARSET=utf8\'));\n        IF (v_has_metrics) THEN\n            SET @sys.diagnostics.sql = CONCAT(\n                \'INSERT INTO \', v_table_name,\n                \' SELECT Variable_name, REPLACE(Variable_value, \'\'\\n\'\', \'\'\\\\\\\\n\'\') AS Variable_value, Type, Enabled FROM sys.metrics\'\n            );\n        ELSE\n            SET @sys.diagnostics.sql = CONCAT(\n                \'INSERT INTO \', v_table_name,\n                \'(SELECT LOWER(VARIABLE_NAME) AS Variable_name, REPLACE(VARIABLE_VALUE, \'\'\\n\'\', \'\'\\\\\\\\n\'\') AS Variable_value,\n                         \'\'Global Status\'\' AS Type, \'\'YES\'\' AS Enabled\n  FROM performance_schema.global_status\n) UNION ALL (\nSELECT NAME AS Variable_name, COUNT AS Variable_value,\n       CONCAT(\'\'InnoDB Metrics - \'\', SUBSYSTEM) AS Type,\n       IF(STATUS = \'\'enabled\'\', \'\'YES\'\', \'\'NO\'\') AS Enabled\n  FROM information_schema.INNODB_METRICS\n WHERE NAME NOT IN (\n     \'\'lock_row_lock_time\'\', \'\'lock_row_lock_time_avg\'\', \'\'lock_row_lock_time_max\'\', \'\'lock_row_lock_waits\'\',\n     \'\'buffer_pool_reads\'\', \'\'buffer_pool_read_requests\'\', \'\'buffer_pool_write_requests\'\', \'\'buffer_pool_wait_free\'\',\n     \'\'buffer_pool_read_ahead\'\', \'\'buffer_pool_read_ahead_evicted\'\', \'\'buffer_pool_pages_total\'\', \'\'buffer_pool_pages_misc\'\',\n     \'\'buffer_pool_pages_data\'\', \'\'buffer_pool_bytes_data\'\', \'\'buffer_pool_pages_dirty\'\', \'\'buffer_pool_bytes_dirty\'\',\n     \'\'buffer_pool_pages_free\'\', \'\'buffer_pages_created\'\', \'\'buffer_pages_written\'\', \'\'buffer_pages_read\'\',\n     \'\'buffer_data_reads\'\', \'\'buffer_data_written\'\', \'\'file_num_open_files\'\',\n     \'\'os_log_bytes_written\'\', \'\'os_log_fsyncs\'\', \'\'os_log_pending_fsyncs\'\', \'\'os_log_pending_writes\'\',\n     \'\'log_waits\'\', \'\'log_write_requests\'\', \'\'log_writes\'\', \'\'innodb_dblwr_writes\'\', \'\'innodb_dblwr_pages_written\'\', \'\'innodb_page_size\'\')\n) UNION ALL (\nSELECT \'\'NOW()\'\' AS Variable_name, NOW(3) AS Variable_value, \'\'System Time\'\' AS Type, \'\'YES\'\' AS Enabled\n) UNION ALL (\nSELECT \'\'UNIX_TIMESTAMP()\'\' AS Variable_name, ROUND(UNIX_TIMESTAMP(NOW(3)), 3) AS Variable_value, \'\'System Time\'\' AS Type, \'\'YES\'\' AS Enabled\n)\n ORDER BY Type, Variable_name;\'\n            );\n        END IF;\n        CALL sys.execute_prepared_stmt(@sys.diagnostics.sql);\n        CALL sys.execute_prepared_stmt(\n            CONCAT(\'SELECT Variable_value INTO @sys.diagnostics.output_time FROM \', v_table_name, \' WHERE Type = \'\'System Time\'\' AND Variable_name = \'\'UNIX_TIMESTAMP()\'\'\')\n        );\n        SET v_output_time = @sys.diagnostics.output_time;\n        SET v_sql_status_summary_select = CONCAT(v_sql_status_summary_select, \',\n       CONCAT(\n           LEFT(s\', v_output_count, \'.Variable_value, \', v_status_summary_width, \'),\n           IF(\', REPLACE(v_no_delta_names, \'%{COUNT}\', v_output_count), \' AND s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+(\\\\\\\\.[0-9]+)?$\'\', CONCAT(\'\' (\'\', ROUND(s\', v_output_count, \'.Variable_value/\', v_output_time, \', 2), \'\'/sec)\'\'), \'\'\'\')\n       ) AS \'\'Output \', v_output_count, \'\'\'\'),\n            v_sql_status_summary_from   = CONCAT(v_sql_status_summary_from, \'\n\',\n                                                    IF(v_output_count = 1, \'  FROM \', \'       INNER JOIN \'),\n                                                    v_table_name, \' s\', v_output_count,\n                                                    IF (v_output_count = 1, \'\', \' USING (Type, Variable_name)\'));\n        IF (v_output_count > 1) THEN\n            SET v_sql_status_summary_delta  = CONCAT(v_sql_status_summary_delta, \',\n       IF(\', REPLACE(v_no_delta_names, \'%{COUNT}\', v_output_count), \' AND s\', (v_output_count-1), \'.Variable_value REGEXP \'\'^[0-9]+(\\\\\\\\.[0-9]+)?$\'\' AND s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+(\\\\\\\\.[0-9]+)?$\'\',\n          CONCAT(IF(s\', (v_output_count-1), \'.Variable_value REGEXP \'\'^[0-9]+\\\\\\\\.[0-9]+$\'\' OR s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+\\\\\\\\.[0-9]+$\'\',\n                    ROUND((s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value), 2),\n                    (s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value)\n                   ),\n                 \'\' (\'\', ROUND((s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value)/(\', v_output_time, \'-\', v_output_time_prev, \'), 2), \'\'/sec)\'\'\n          ),\n          \'\'\'\'\n       ) AS \'\'Delta (\', (v_output_count-1), \' -> \', v_output_count, \')\'\'\');\n        END IF;\n        SET v_output_time_prev = v_output_time;\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            IF (v_has_metrics) THEN\n                SELECT \'SELECT * FROM sys.metrics\' AS \'The following output is:\';\n            ELSE\n                SELECT \'sys.metrics equivalent\' AS \'The following output is:\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'SELECT Type, Variable_name, Enabled, Variable_value FROM \', v_table_name, \' ORDER BY Type, Variable_name\'));\n        END IF;\n        IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n            SELECT \'SHOW ENGINE INNODB STATUS\' AS \'The following output is:\';\n            EXECUTE stmt_innodb_status;\n            SELECT \'InnoDB - Transactions\' AS \'The following output is:\';\n            SELECT * FROM information_schema.INNODB_TRX;\n        END IF;\n        IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n            SELECT \'SHOW ENGINE NDBCLUSTER STATUS\' AS \'The following output is:\';\n            EXECUTE stmt_ndbcluster_status;\n            SELECT \'ndbinfo.memoryusage\' AS \'The following output is:\';\n            SELECT node_id, memory_type, sys.format_bytes(used) AS used, used_pages, sys.format_bytes(total) AS total, total_pages,\n                   ROUND(100*(used/total), 2) AS \'Used %\'\n            FROM ndbinfo.memoryusage;\n            SET v_done = FALSE;\n            OPEN c_ndbinfo;\n            c_ndbinfo_loop: LOOP\n                FETCH c_ndbinfo INTO v_table_name;\n                IF v_done THEN\n                LEAVE c_ndbinfo_loop;\n                END IF;\n                SELECT CONCAT(\'SELECT * FROM ndbinfo.\', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(CONCAT(\'SELECT * FROM `ndbinfo`.`\', v_table_name, \'`\'));\n            END LOOP;\n            CLOSE c_ndbinfo;\n            SELECT * FROM information_schema.FILES;\n        END IF;\n        SELECT \'SELECT * FROM sys.processlist\' AS \'The following output is:\';\n        SELECT processlist.* FROM sys.processlist;\n        IF (v_has_ps = \'YES\') THEN\n            IF (sys.ps_is_consumer_enabled(\'events_waits_history_long\') = \'YES\') THEN\n                SELECT \'SELECT * FROM sys.latest_file_io\' AS \'The following output is:\';\n                SELECT * FROM sys.latest_file_io;\n            END IF;\n            IF (EXISTS(SELECT 1 FROM performance_schema.setup_instruments WHERE NAME LIKE \'memory/%\' AND ENABLED = \'YES\')) THEN\n                SELECT \'SELECT * FROM sys.memory_by_host_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_host_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_by_thread_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_thread_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_by_user_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_user_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_global_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_global_by_current_bytes;\n            END IF;\n        END IF;\n        SET v_runtime = (UNIX_TIMESTAMP(NOW(2)) - v_start);\n    UNTIL (v_runtime + in_interval >= in_max_runtime) END REPEAT;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'SHOW ENGINE PERFORMANCE_SCHEMA STATUS\' AS \'The following output is:\';\n        EXECUTE stmt_ps_status;\n    END IF;\n    IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n        DEALLOCATE PREPARE stmt_innodb_status;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        DEALLOCATE PREPARE stmt_ps_status;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n        DEALLOCATE PREPARE stmt_ndbcluster_status;\n    END IF;\n    SELECT \'\n============================\n     Schema Information\n============================\n\' AS \'\';\n    SELECT COUNT(*) AS \'Total Number of Tables\' FROM information_schema.TABLES;\n    IF (@sys.diagnostics.allow_i_s_tables = \'ON\') THEN\n        SELECT \'Storage Engine Usage\' AS \'The following output is:\';\n        SELECT ENGINE, COUNT(*) AS NUM_TABLES,\n                sys.format_bytes(SUM(DATA_LENGTH)) AS DATA_LENGTH,\n                sys.format_bytes(SUM(INDEX_LENGTH)) AS INDEX_LENGTH,\n                sys.format_bytes(SUM(DATA_LENGTH+INDEX_LENGTH)) AS TOTAL\n            FROM information_schema.TABLES\n            GROUP BY ENGINE;\n        SELECT \'Schema Object Overview\' AS \'The following output is:\';\n        SELECT * FROM sys.schema_object_overview;\n        SELECT \'Tables without a PRIMARY KEY\' AS \'The following output is:\';\n        SELECT TABLES.TABLE_SCHEMA, ENGINE, COUNT(*) AS NumTables\n          FROM information_schema.TABLES\n               LEFT OUTER JOIN information_schema.STATISTICS ON STATISTICS.TABLE_SCHEMA = TABLES.TABLE_SCHEMA\n                                                                AND STATISTICS.TABLE_NAME = TABLES.TABLE_NAME\n                                                                AND STATISTICS.INDEX_NAME = \'PRIMARY\'\n         WHERE STATISTICS.TABLE_NAME IS NULL\n               AND TABLES.TABLE_SCHEMA NOT IN (\'mysql\', \'information_schema\', \'performance_schema\', \'sys\')\n               AND TABLES.TABLE_TYPE = \'BASE TABLE\'\n         GROUP BY TABLES.TABLE_SCHEMA, ENGINE;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'Unused Indexes\' AS \'The following output is:\';\n        SELECT object_schema, COUNT(*) AS NumUnusedIndexes\n          FROM performance_schema.table_io_waits_summary_by_index_usage\n         WHERE index_name IS NOT NULL\n               AND count_star = 0\n               AND object_schema NOT IN (\'mysql\', \'sys\')\n               AND index_name != \'PRIMARY\'\n         GROUP BY object_schema;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'\n=========================\n     Overall Status\n=========================\n\' AS \'\';\n        SELECT \'CALL sys.ps_statement_avg_latency_histogram()\' AS \'The following output is:\';\n        CALL sys.ps_statement_avg_latency_histogram();\n        CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n        CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile\');\n        SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, \'%{OUTPUT}\', \'end\');\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'The following query will be used to generate the query for each sys view\' AS \'Debug\';\n            SELECT @sys.diagnostics.sql AS \'Debug\';\n        END IF;\n        PREPARE stmt_gen_query FROM @sys.diagnostics.sql;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            IF (@sys.debug = \'ON\') THEN\n                SELECT CONCAT(\'The following queries are for storing the final content of \', v_table_name) AS \'Debug\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS `tmp_\', v_table_name, \'_end`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE `tmp_\', v_table_name, \'_end` SELECT * FROM `sys`.`x$\', v_table_name, \'`\'));\n            IF (@sys.diagnostics.include_raw = \'ON\') THEN\n                SET @sys.diagnostics.table_name = CONCAT(\'x$\', v_table_name);\n                EXECUTE stmt_gen_query USING @sys.diagnostics.table_name;\n                SELECT CONCAT(@sys.diagnostics.sql_select,\n                                IF(order_by IS NOT NULL, CONCAT(\'\\n ORDER BY \', REPLACE(order_by, \'%{TABLE}\', CONCAT(\'tmp_\', v_table_name, \'_end\'))), \'\'),\n                                IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                        )\n                    INTO @sys.diagnostics.sql_select\n                    FROM tmp_sys_views_delta\n                    WHERE TABLE_NAME = v_table_name;\n                SELECT CONCAT(\'Overall \', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            END IF;\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        DEALLOCATE PREPARE stmt_gen_query;\n        SELECT \'\n======================\n     Delta Status\n======================\n\' AS \'\';\n        CALL sys.statement_performance_analyzer(\'delta\', \'tmp_digests_start\', \'with_runtimes_in_95th_percentile\');\n        CALL sys.statement_performance_analyzer(\'cleanup\', NULL, NULL);\n        DROP TEMPORARY TABLE tmp_digests_start;\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'The following query will be used to generate the query for each sys view delta\' AS \'Debug\';\n            SELECT @sys.diagnostics.sql_gen_query_delta AS \'Debug\';\n        END IF;\n        PREPARE stmt_gen_query_delta FROM @sys.diagnostics.sql_gen_query_delta;\n        SET v_old_group_concat_max_len = @@session.group_concat_max_len;\n        SET @@session.group_concat_max_len = 2048;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            SET @sys.diagnostics.table_name = v_table_name;\n            EXECUTE stmt_gen_query_delta USING @sys.diagnostics.table_name;\n            SELECT CONCAT(@sys.diagnostics.sql_select,\n                            IF(where_delta IS NOT NULL, CONCAT(\'\\n WHERE \', where_delta), \'\'),\n                            IF(order_by_delta IS NOT NULL, CONCAT(\'\\n ORDER BY \', order_by_delta), \'\'),\n                            IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                    )\n                INTO @sys.diagnostics.sql_select\n                FROM tmp_sys_views_delta\n                WHERE TABLE_NAME = v_table_name;\n            SELECT CONCAT(\'Delta \', v_table_name) AS \'The following output is:\';\n            CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE `tmp_\', v_table_name, \'_end`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE `tmp_\', v_table_name, \'_start`\'));\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        SET @@session.group_concat_max_len = v_old_group_concat_max_len;\n        DEALLOCATE PREPARE stmt_gen_query_delta;\n        DROP TEMPORARY TABLE tmp_sys_views_delta;\n    END IF;\n    IF (v_has_metrics) THEN\n        SELECT \'SELECT * FROM sys.metrics\' AS \'The following output is:\';\n    ELSE\n        SELECT \'sys.metrics equivalent\' AS \'The following output is:\';\n    END IF;\n    CALL sys.execute_prepared_stmt(\n        CONCAT(v_sql_status_summary_select, v_sql_status_summary_delta, \', Type, s1.Enabled\', v_sql_status_summary_from,\n               \'\n ORDER BY Type, Variable_name\'\n        )\n    );\n    SET v_count = 0;\n    WHILE (v_count < v_output_count) DO\n        SET v_count = v_count + 1;\n        SET v_table_name = CONCAT(\'tmp_metrics_\', v_count);\n        CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS \', v_table_name));\n    END WHILE;\n    IF (in_auto_config <> \'current\') THEN\n        CALL sys.ps_setup_reload_saved();\n        SET sql_log_bin = @log_bin;\n    END IF;\n    SET @sys.diagnostics.output_time            = NULL,\n        @sys.diagnostics.sql                    = NULL,\n        @sys.diagnostics.sql_gen_query_delta    = NULL,\n        @sys.diagnostics.sql_gen_query_template = NULL,\n        @sys.diagnostics.sql_select             = NULL,\n        @sys.diagnostics.table_name             = NULL;\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = @log_bin;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Create a report of the current status of the server for diagnostics purposes. Data collected includes (some items depends on versions and settings):\n                * The GLOBAL VARIABLES\n                * Several sys schema views including metrics or equivalent (depending on version and settings)\n                * Queries in the 95th percentile\n                * Several ndbinfo views for MySQL Cluster\n                * Replication (both master and slave) information.\n             Some of the sys schema views are calculated as initial (optional), overall, delta:\n                * The initial view is the content of the view at the start of this procedure.\n                  This output will be the same as the the start values used for the delta view.\n                  The initial view is included if @sys.diagnostics.include_raw = \'ON\'.\n                * The overall view is the content of the view at the end of this procedure.\n                  This output is the same as the end values used for the delta view.\n                  The overall view is always included.\n                * The delta view is the difference from the beginning to the end. Note that for min and max values\n                  they are simply the min or max value from the end view respectively, so does not necessarily reflect\n                  the minimum/maximum value in the monitored period.\n                  Note: except for the metrics views the delta is only calculation between the first and last outputs.\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Versions supported:\n                * MySQL 5.6: 5.6.10 and later\n                * MySQL 5.7: 5.7.9 and later\n             Parameters\n             in_max_runtime (INT UNSIGNED):\n               The maximum time to keep collecting data.\n               Use NULL to get the default which is 60 seconds, otherwise enter a value greater than 0.\n             in_interval (INT UNSIGNED):\n               How long to sleep between data collections.\n               Use NULL to get the default which is 30 seconds, otherwise enter a value greater than 0.\n             in_auto_config (ENUM(\'current\', \'medium\', \'full\'))\n               Automatically enable Performance Schema instruments and consumers.\n               NOTE: The more that are enabled, the more impact on the performance.\n               Supported values are:\n                  * current - use the current settings.\n                  * medium - enable some settings.\n                  * full - enables all settings. This will have a big impact on the\n                           performance - be careful using this option.\n               If another setting the \'current\' is chosen, the current settings\n               are restored at the end of the procedure.\n             Configuration Options\n             sys.diagnostics.allow_i_s_tables\n               Specifies whether it is allowed to do table scan queries on information_schema.TABLES. This can be expensive if there\n               are many tables. Set to \'ON\' to allow, \'OFF\' to not allow.\n               Default is \'OFF\'.\n             sys.diagnostics.include_raw\n               Set to \'ON\' to include the raw data (e.g. the original output of \"SELECT * FROM sys.metrics\").\n               Use this to get the initial values of the various views.\n               Default is \'OFF\'.\n             sys.statement_truncate_len\n               How much of queries in the process list output to include.\n               Default is 64.\n             sys.debug\n               Whether to provide debugging output.\n               Default is \'OFF\'. Set to \'ON\' to include.\n             Example\n             To create a report and append it to the file diag.out:\n             mysql> TEE diag.out;\n             mysql> CALL sys.diagnostics(120, 30, \'current\');\n             ...\n             mysql> NOTEE;\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_start, v_runtime, v_iter_start, v_sleep DECIMAL(20,2) DEFAULT 0.0;\n    DECLARE v_has_innodb, v_has_ndb, v_has_ps, v_has_replication, v_has_ps_replication VARCHAR(8) CHARSET utf8 DEFAULT \'NO\';\n    DECLARE v_this_thread_enabled, v_has_ps_vars, v_has_metrics ENUM(\'YES\', \'NO\');\n    DECLARE v_table_name, v_banner VARCHAR(64) CHARSET utf8;\n    DECLARE v_sql_status_summary_select, v_sql_status_summary_delta, v_sql_status_summary_from, v_no_delta_names TEXT;\n    DECLARE v_output_time, v_output_time_prev DECIMAL(20,3) UNSIGNED;\n    DECLARE v_output_count, v_count, v_old_group_concat_max_len INT UNSIGNED DEFAULT 0;\n    DECLARE v_status_summary_width TINYINT UNSIGNED DEFAULT 50;\n    DECLARE v_done BOOLEAN DEFAULT FALSE;\n    DECLARE c_ndbinfo CURSOR FOR\n        SELECT TABLE_NAME\n          FROM information_schema.TABLES\n         WHERE TABLE_SCHEMA = \'ndbinfo\'\n               AND TABLE_NAME NOT IN (\n                  \'blocks\',\n                  \'config_params\',\n                  \'dict_obj_types\',\n                  \'disk_write_speed_base\',\n                  \'memory_per_fragment\',\n                  \'memoryusage\',\n                  \'operations_per_fragment\',\n                  \'threadblocks\'\n               );\n    DECLARE c_sysviews_w_delta CURSOR FOR\n        SELECT table_name\n          FROM tmp_sys_views_delta\n         ORDER BY table_name;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    END IF;\n    IF (in_max_runtime < in_interval) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_max_runtime must be greater than or equal to in_interval\';\n    END IF;\n    IF (in_max_runtime = 0) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_max_runtime must be greater than 0\';\n    END IF;\n    IF (in_interval = 0) THEN\n        SIGNAL SQLSTATE \'45000\'\n           SET MESSAGE_TEXT = \'in_interval must be greater than 0\';\n    END IF;\n    IF (@sys.diagnostics.allow_i_s_tables IS NULL) THEN\n        SET @sys.diagnostics.allow_i_s_tables = sys.sys_get_config(\'diagnostics.allow_i_s_tables\', \'OFF\');\n    END IF;\n    IF (@sys.diagnostics.include_raw IS NULL) THEN\n        SET @sys.diagnostics.include_raw      = sys.sys_get_config(\'diagnostics.include_raw\'     , \'OFF\');\n    END IF;\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug                        = sys.sys_get_config(\'debug\'                       , \'OFF\');\n    END IF;\n    IF (@sys.statement_truncate_len IS NULL) THEN\n        SET @sys.statement_truncate_len       = sys.sys_get_config(\'statement_truncate_len\'      , \'64\' );\n    END IF;\n    SET @log_bin := @@sql_log_bin;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = 0;\n    END IF;\n    SET v_no_delta_names = CONCAT(\'s%{COUNT}.Variable_name NOT IN (\',\n        \'\'\'innodb_buffer_pool_pages_total\'\', \',\n        \'\'\'innodb_page_size\'\', \',\n        \'\'\'last_query_cost\'\', \',\n        \'\'\'last_query_partial_plans\'\', \',\n        \'\'\'qcache_total_blocks\'\', \',\n        \'\'\'slave_last_heartbeat\'\', \',\n        \'\'\'ssl_ctx_verify_depth\'\', \',\n        \'\'\'ssl_ctx_verify_mode\'\', \',\n        \'\'\'ssl_session_cache_size\'\', \',\n        \'\'\'ssl_verify_depth\'\', \',\n        \'\'\'ssl_verify_mode\'\', \',\n        \'\'\'ssl_version\'\', \',\n        \'\'\'buffer_flush_lsn_avg_rate\'\', \',\n        \'\'\'buffer_flush_pct_for_dirty\'\', \',\n        \'\'\'buffer_flush_pct_for_lsn\'\', \',\n        \'\'\'buffer_pool_pages_total\'\', \',\n        \'\'\'lock_row_lock_time_avg\'\', \',\n        \'\'\'lock_row_lock_time_max\'\', \',\n        \'\'\'innodb_page_size\'\'\',\n    \')\');\n    IF (in_auto_config <> \'current\') THEN\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'Updating Performance Schema configuration to \', in_auto_config) AS \'Debug\';\n        END IF;\n        CALL sys.ps_setup_save(0);\n        IF (in_auto_config = \'medium\') THEN\n            UPDATE performance_schema.setup_consumers\n                SET ENABLED = \'YES\'\n            WHERE NAME NOT LIKE \'%\\_history%\';\n            UPDATE performance_schema.setup_instruments\n                SET ENABLED = \'YES\',\n                    TIMED   = \'YES\'\n            WHERE NAME NOT LIKE \'wait/synch/%\';\n        ELSEIF (in_auto_config = \'full\') THEN\n            UPDATE performance_schema.setup_consumers\n                SET ENABLED = \'YES\';\n            UPDATE performance_schema.setup_instruments\n                SET ENABLED = \'YES\',\n                    TIMED   = \'YES\';\n        END IF;\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = \'YES\'\n         WHERE PROCESSLIST_ID <> CONNECTION_ID();\n    END IF;\n    SET v_start        = UNIX_TIMESTAMP(NOW(2)),\n        in_interval    = IFNULL(in_interval, 30),\n        in_max_runtime = IFNULL(in_max_runtime, 60);\n    SET v_banner = REPEAT(\n                      \'-\',\n                      LEAST(\n                         GREATEST(\n                            36,\n                            CHAR_LENGTH(VERSION()),\n                            CHAR_LENGTH(@@global.version_comment),\n                            CHAR_LENGTH(@@global.version_compile_os),\n                            CHAR_LENGTH(@@global.version_compile_machine),\n                            CHAR_LENGTH(@@global.socket),\n                            CHAR_LENGTH(@@global.datadir)\n                         ),\n                         64\n                      )\n                   );\n    SELECT \'Hostname\' AS \'Name\', @@global.hostname AS \'Value\'\n    UNION ALL\n    SELECT \'Port\' AS \'Name\', @@global.port AS \'Value\'\n    UNION ALL\n    SELECT \'Socket\' AS \'Name\', @@global.socket AS \'Value\'\n    UNION ALL\n    SELECT \'Datadir\' AS \'Name\', @@global.datadir AS \'Value\'\n    UNION ALL\n    SELECT REPEAT(\'-\', 23) AS \'Name\', v_banner AS \'Value\'\n    UNION ALL\n    SELECT \'MySQL Version\' AS \'Name\', VERSION() AS \'Value\'\n    UNION ALL\n    SELECT \'Sys Schema Version\' AS \'Name\', (SELECT sys_version FROM sys.version) AS \'Value\'\n    UNION ALL\n    SELECT \'Version Comment\' AS \'Name\', @@global.version_comment AS \'Value\'\n    UNION ALL\n    SELECT \'Version Compile OS\' AS \'Name\', @@global.version_compile_os AS \'Value\'\n    UNION ALL\n    SELECT \'Version Compile Machine\' AS \'Name\', @@global.version_compile_machine AS \'Value\'\n    UNION ALL\n    SELECT REPEAT(\'-\', 23) AS \'Name\', v_banner AS \'Value\'\n    UNION ALL\n    SELECT \'UTC Time\' AS \'Name\', UTC_TIMESTAMP() AS \'Value\'\n    UNION ALL\n    SELECT \'Local Time\' AS \'Name\', NOW() AS \'Value\'\n    UNION ALL\n    SELECT \'Time Zone\' AS \'Name\', @@global.time_zone AS \'Value\'\n    UNION ALL\n    SELECT \'System Time Zone\' AS \'Name\', @@global.system_time_zone AS \'Value\'\n    UNION ALL\n    SELECT \'Time Zone Offset\' AS \'Name\', TIMEDIFF(NOW(), UTC_TIMESTAMP()) AS \'Value\';\n    SET v_has_innodb         = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'InnoDB\'), \'NO\'),\n        v_has_ndb            = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'NDBCluster\'), \'NO\'),\n        v_has_ps             = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = \'PERFORMANCE_SCHEMA\'), \'NO\'),\n        v_has_ps_replication = IF(v_has_ps = \'YES\'\n                                   AND EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = \'performance_schema\' AND TABLE_NAME = \'replication_applier_status\'),\n                                   \'YES\',\n                                   \'NO\'\n                               ),\n        v_has_replication    = \'MAYBE\',\n        v_has_metrics        = IF(v_has_ps = \'YES\' OR (sys.version_major() = 5 AND sys.version_minor() = 6), \'YES\', \'NO\'),\n        v_has_ps_vars        = \'NO\';\n    \n    \n    IF (@sys.debug = \'ON\') THEN\n       SELECT v_has_innodb AS \'Has_InnoDB\', v_has_ndb AS \'Has_NDBCluster\',\n              v_has_ps AS \'Has_Performance_Schema\', v_has_ps_vars AS \'Has_P_S_SHOW_Variables\',\n              v_has_metrics AS \'Has_metrics\',\n              v_has_ps_replication \'AS Has_P_S_Replication\', v_has_replication AS \'Has_Replication\';\n    END IF;\n    IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE InnoDB STATUS\';\n        PREPARE stmt_innodb_status FROM @sys.diagnostics.sql;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE PERFORMANCE_SCHEMA STATUS\';\n        PREPARE stmt_ps_status FROM @sys.diagnostics.sql;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n        SET @sys.diagnostics.sql = \'SHOW ENGINE NDBCLUSTER STATUS\';\n        PREPARE stmt_ndbcluster_status FROM @sys.diagnostics.sql;\n    END IF;\n    SET @sys.diagnostics.sql_gen_query_template = \'SELECT CONCAT(\\n           \'\'SELECT \'\',\\n           GROUP_CONCAT(\\n               CASE WHEN (SUBSTRING(TABLE_NAME, 3), COLUMN_NAME) IN (\\n                                (\'\'io_global_by_file_by_bytes\'\', \'\'total\'\'),\\n                                (\'\'io_global_by_wait_by_bytes\'\', \'\'total_requested\'\')\\n                         )\\n                         THEN CONCAT(\'\'sys.format_bytes(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\\n                         THEN CONCAT(\'\'sys.format_time(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, -7) = \'\'_memory\'\' OR SUBSTRING(COLUMN_NAME, -17) = \'\'_memory_allocated\'\'\\n                         OR ((SUBSTRING(COLUMN_NAME, -5) = \'\'_read\'\' OR SUBSTRING(COLUMN_NAME, -8) = \'\'_written\'\' OR SUBSTRING(COLUMN_NAME, -6) = \'\'_write\'\') AND SUBSTRING(COLUMN_NAME, 1, 6) <> \'\'COUNT_\'\')\\n                         THEN CONCAT(\'\'sys.format_bytes(\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\\n                    ELSE COLUMN_NAME\\n               END\\n               ORDER BY ORDINAL_POSITION\\n               SEPARATOR \'\',\\n       \'\'\\n           ),\\n           \'\'\\n  FROM tmp_\'\', SUBSTRING(TABLE_NAME FROM 3), \'\'_%{OUTPUT}\'\'\\n       ) AS Query INTO @sys.diagnostics.sql_select\\n  FROM information_schema.COLUMNS\\n WHERE TABLE_SCHEMA = \'\'sys\'\' AND TABLE_NAME = ?\\n GROUP BY TABLE_NAME\';\n    SET @sys.diagnostics.sql_gen_query_delta = \'SELECT CONCAT(\\n           \'\'SELECT \'\',\\n           GROUP_CONCAT(\\n               CASE WHEN FIND_IN_SET(COLUMN_NAME, diag.pk)\\n                         THEN COLUMN_NAME\\n                    WHEN diag.TABLE_NAME = \'\'io_global_by_file_by_bytes\'\' AND COLUMN_NAME = \'\'write_pct\'\'\\n                         THEN CONCAT(\'\'IFNULL(ROUND(100-(((e.total_read-IFNULL(s.total_read, 0))\'\',\\n                                     \'\'/NULLIF(((e.total_read-IFNULL(s.total_read, 0))+(e.total_written-IFNULL(s.total_written, 0))), 0))*100), 2), 0.00) AS \'\',\\n                                     COLUMN_NAME)\\n                    WHEN (diag.TABLE_NAME, COLUMN_NAME) IN (\\n                                (\'\'io_global_by_file_by_bytes\'\', \'\'total\'\'),\\n                                (\'\'io_global_by_wait_by_bytes\'\', \'\'total_requested\'\')\\n                         )\\n                         THEN CONCAT(\'\'sys.format_bytes(e.\'\', COLUMN_NAME, \'\'-IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, 1, 4) IN (\'\'max_\'\', \'\'min_\'\') AND SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\\n                         THEN CONCAT(\'\'sys.format_time(e.\'\', COLUMN_NAME, \'\') AS \'\', COLUMN_NAME)\\n                    WHEN COLUMN_NAME = \'\'avg_latency\'\'\\n                         THEN CONCAT(\'\'sys.format_time((e.total_latency - IFNULL(s.total_latency, 0))\'\',\\n                                     \'\'/NULLIF(e.total - IFNULL(s.total, 0), 0)) AS \'\', COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, -12) = \'\'_avg_latency\'\'\\n                         THEN CONCAT(\'\'sys.format_time((e.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'_latency - IFNULL(s.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'_latency, 0))\'\',\\n                                     \'\'/NULLIF(e.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'s - IFNULL(s.\'\', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), \'\'s, 0), 0)) AS \'\', COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, -8) = \'\'_latency\'\'\\n                         THEN CONCAT(\'\'sys.format_time(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\\n                    WHEN COLUMN_NAME IN (\'\'avg_read\'\', \'\'avg_write\'\', \'\'avg_written\'\')\\n                         THEN CONCAT(\'\'sys.format_bytes(IFNULL((e.total_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'written\'\'), \'\'-IFNULL(s.total_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'written\'\'), \'\', 0))\'\',\\n                                     \'\'/NULLIF(e.count_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'write\'\'), \'\'-IFNULL(s.count_\'\', IF(COLUMN_NAME = \'\'avg_read\'\', \'\'read\'\', \'\'write\'\'), \'\', 0), 0), 0)) AS \'\',\\n                                     COLUMN_NAME)\\n                    WHEN SUBSTRING(COLUMN_NAME, -7) = \'\'_memory\'\' OR SUBSTRING(COLUMN_NAME, -17) = \'\'_memory_allocated\'\'\\n                         OR ((SUBSTRING(COLUMN_NAME, -5) = \'\'_read\'\' OR SUBSTRING(COLUMN_NAME, -8) = \'\'_written\'\' OR SUBSTRING(COLUMN_NAME, -6) = \'\'_write\'\') AND SUBSTRING(COLUMN_NAME, 1, 6) <> \'\'COUNT_\'\')\\n                         THEN CONCAT(\'\'sys.format_bytes(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\\n                    ELSE CONCAT(\'\'(e.\'\', COLUMN_NAME, \'\' - IFNULL(s.\'\', COLUMN_NAME, \'\', 0)) AS \'\', COLUMN_NAME)\\n               END\\n               ORDER BY ORDINAL_POSITION\\n               SEPARATOR \'\',\\n       \'\'\\n           ),\\n           \'\'\\n  FROM tmp_\'\', diag.TABLE_NAME, \'\'_end e\\n       LEFT OUTER JOIN tmp_\'\', diag.TABLE_NAME, \'\'_start s USING (\'\', diag.pk, \'\')\'\'\\n       ) AS Query INTO @sys.diagnostics.sql_select\\n  FROM tmp_sys_views_delta diag\\n       INNER JOIN information_schema.COLUMNS c ON c.TABLE_NAME = CONCAT(\'\'x$\'\', diag.TABLE_NAME)\\n WHERE c.TABLE_SCHEMA = \'\'sys\'\' AND diag.TABLE_NAME = ?\\n GROUP BY diag.TABLE_NAME\';\n    IF (v_has_ps = \'YES\') THEN\n        DROP TEMPORARY TABLE IF EXISTS tmp_sys_views_delta;\n        CREATE TEMPORARY TABLE tmp_sys_views_delta (\n            TABLE_NAME varchar(64) NOT NULL,\n            order_by text COMMENT \'ORDER BY clause for the initial and overall views\',\n            order_by_delta text COMMENT \'ORDER BY clause for the delta views\',\n            where_delta text COMMENT \'WHERE clause to use for delta views to only include rows with a \"count\" > 0\',\n            limit_rows int unsigned COMMENT \'The maximum number of rows to include for the view\',\n            pk varchar(128) COMMENT \'Used with the FIND_IN_SET() function so use comma separated list without whitespace\',\n            PRIMARY KEY (TABLE_NAME)\n        );\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'Populating tmp_sys_views_delta\' AS \'Debug\';\n        END IF;\n        INSERT INTO tmp_sys_views_delta\n        VALUES (\'host_summary\'                       , \'%{TABLE}.statement_latency DESC\',\n                                                       \'(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC\',\n                                                       \'(e.statements - IFNULL(s.statements, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_file_io\'            , \'%{TABLE}.io_latency DESC\',\n                                                       \'(e.io_latency-IFNULL(s.io_latency, 0)) DESC\',\n                                                       \'(e.ios - IFNULL(s.ios, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_file_io_type\'       , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event_name\'),\n               (\'host_summary_by_stages\'             , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event_name\'),\n               (\'host_summary_by_statement_latency\'  , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host\'),\n               (\'host_summary_by_statement_type\'     , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,statement\'),\n               (\'io_by_thread_by_latency\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,thread_id,processlist_id\'),\n               (\'io_global_by_file_by_bytes\'         , \'%{TABLE}.total DESC\',\n                                                       \'(e.total-IFNULL(s.total, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', 100, \'file\'),\n               (\'io_global_by_file_by_latency\'       , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', 100, \'file\'),\n               (\'io_global_by_wait_by_bytes\'         , \'%{TABLE}.total_requested DESC\',\n                                                       \'(e.total_requested-IFNULL(s.total_requested, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_name\'),\n               (\'io_global_by_wait_by_latency\'       , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_name\'),\n               (\'schema_index_statistics\'            , \'(%{TABLE}.select_latency+%{TABLE}.insert_latency+%{TABLE}.update_latency+%{TABLE}.delete_latency) DESC\',\n                                                       \'((e.select_latency+e.insert_latency+e.update_latency+e.delete_latency)-IFNULL(s.select_latency+s.insert_latency+s.update_latency+s.delete_latency, 0)) DESC\',\n                                                       \'((e.rows_selected+e.insert_latency+e.rows_updated+e.rows_deleted)-IFNULL(s.rows_selected+s.rows_inserted+s.rows_updated+s.rows_deleted, 0)) > 0\',\n                                                       100, \'table_schema,table_name,index_name\'),\n               (\'schema_table_statistics\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) > 0\', 100, \'table_schema,table_name\'),\n               (\'schema_tables_with_full_table_scans\', \'%{TABLE}.rows_full_scanned DESC\',\n                                                       \'(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) DESC\',\n                                                       \'(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) > 0\', 100, \'object_schema,object_name\'),\n               (\'user_summary\'                       , \'%{TABLE}.statement_latency DESC\',\n                                                       \'(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC\',\n                                                       \'(e.statements - IFNULL(s.statements, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_file_io\'            , \'%{TABLE}.io_latency DESC\',\n                                                       \'(e.io_latency-IFNULL(s.io_latency, 0)) DESC\',\n                                                       \'(e.ios - IFNULL(s.ios, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_file_io_type\'       , \'%{TABLE}.user, %{TABLE}.latency DESC\',\n                                                       \'e.user, (e.latency-IFNULL(s.latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event_name\'),\n               (\'user_summary_by_stages\'             , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event_name\'),\n               (\'user_summary_by_statement_latency\'  , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user\'),\n               (\'user_summary_by_statement_type\'     , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,statement\'),\n               (\'wait_classes_global_by_avg_latency\' , \'IFNULL(%{TABLE}.total_latency / NULLIF(%{TABLE}.total, 0), 0) DESC\',\n                                                       \'IFNULL((e.total_latency-IFNULL(s.total_latency, 0)) / NULLIF((e.total - IFNULL(s.total, 0)), 0), 0) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_class\'),\n               (\'wait_classes_global_by_latency\'     , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'event_class\'),\n               (\'waits_by_host_by_latency\'           , \'%{TABLE}.host, %{TABLE}.total_latency DESC\',\n                                                       \'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'host,event\'),\n               (\'waits_by_user_by_latency\'           , \'%{TABLE}.user, %{TABLE}.total_latency DESC\',\n                                                       \'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'user,event\'),\n               (\'waits_global_by_latency\'            , \'%{TABLE}.total_latency DESC\',\n                                                       \'(e.total_latency-IFNULL(s.total_latency, 0)) DESC\',\n                                                       \'(e.total - IFNULL(s.total, 0)) > 0\', NULL, \'events\')\n        ;\n    END IF;\n    SELECT \'\\n=======================\\n     Configuration\\n=======================\\n\' AS \'\';\n    SELECT \'GLOBAL VARIABLES\' AS \'The following output is:\';\n    IF (v_has_ps_vars = \'YES\') THEN\n        SELECT LOWER(VARIABLE_NAME) AS Variable_name, VARIABLE_VALUE AS Variable_value FROM performance_schema.global_variables ORDER BY VARIABLE_NAME;\n    ELSE\n        SELECT LOWER(VARIABLE_NAME) AS Variable_name, VARIABLE_VALUE AS Variable_value FROM information_schema.GLOBAL_VARIABLES ORDER BY VARIABLE_NAME;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'Performance Schema Setup - Actors\' AS \'The following output is:\';\n        SELECT * FROM performance_schema.setup_actors;\n        SELECT \'Performance Schema Setup - Consumers\' AS \'The following output is:\';\n        SELECT NAME AS Consumer, ENABLED, sys.ps_is_consumer_enabled(NAME) AS COLLECTS\n          FROM performance_schema.setup_consumers;\n        SELECT \'Performance Schema Setup - Instruments\' AS \'The following output is:\';\n        SELECT SUBSTRING_INDEX(NAME, \'/\', 2) AS \'InstrumentClass\',\n               ROUND(100*SUM(IF(ENABLED = \'YES\', 1, 0))/COUNT(*), 2) AS \'EnabledPct\',\n               ROUND(100*SUM(IF(TIMED = \'YES\', 1, 0))/COUNT(*), 2) AS \'TimedPct\'\n          FROM performance_schema.setup_instruments\n         GROUP BY SUBSTRING_INDEX(NAME, \'/\', 2)\n         ORDER BY SUBSTRING_INDEX(NAME, \'/\', 2);\n        SELECT \'Performance Schema Setup - Objects\' AS \'The following output is:\';\n        SELECT * FROM performance_schema.setup_objects;\n        SELECT \'Performance Schema Setup - Threads\' AS \'The following output is:\';\n        SELECT `TYPE` AS ThreadType, COUNT(*) AS \'Total\', ROUND(100*SUM(IF(INSTRUMENTED = \'YES\', 1, 0))/COUNT(*), 2) AS \'InstrumentedPct\'\n          FROM performance_schema.threads\n        GROUP BY TYPE;\n    END IF;\n    IF (v_has_replication = \'NO\') THEN\n        SELECT \'No Replication Configured\' AS \'Replication Status\';\n    ELSE\n        SELECT CONCAT(\'Replication Configured: \', v_has_replication, \' - Performance Schema Replication Tables: \', v_has_ps_replication) AS \'Replication Status\';\n        IF (v_has_ps_replication = \'YES\') THEN\n            SELECT \'Replication - Connection Configuration\' AS \'The following output is:\';\n            SELECT * FROM performance_schema.replication_connection_configuration;\n        END IF;\n        IF (v_has_ps_replication = \'YES\') THEN\n            SELECT \'Replication - Applier Configuration\' AS \'The following output is:\';\n            SELECT * FROM performance_schema.replication_applier_configuration ORDER BY CHANNEL_NAME;\n        END IF;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n       SELECT \'Cluster Thread Blocks\' AS \'The following output is:\';\n       SELECT * FROM ndbinfo.threadblocks;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            SELECT \'\\n========================\\n     Initial Status\\n========================\\n\' AS \'\';\n        END IF;\n        DROP TEMPORARY TABLE IF EXISTS tmp_digests_start;\n        CALL sys.statement_performance_analyzer(\'create_tmp\', \'tmp_digests_start\', NULL);\n        CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n        CALL sys.statement_performance_analyzer(\'save\', \'tmp_digests_start\', NULL);\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, \'%{OUTPUT}\', \'start\');\n            IF (@sys.debug = \'ON\') THEN\n                SELECT \'The following query will be used to generate the query for each sys view\' AS \'Debug\';\n                SELECT @sys.diagnostics.sql AS \'Debug\';\n            END IF;\n            PREPARE stmt_gen_query FROM @sys.diagnostics.sql;\n        END IF;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            IF (@sys.debug = \'ON\') THEN\n                SELECT CONCAT(\'The following queries are for storing the initial content of \', v_table_name) AS \'Debug\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS `tmp_\', v_table_name, \'_start`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE `tmp_\', v_table_name, \'_start` SELECT * FROM `sys`.`x$\', v_table_name, \'`\'));\n            IF (@sys.diagnostics.include_raw = \'ON\') THEN\n                SET @sys.diagnostics.table_name = CONCAT(\'x$\', v_table_name);\n                EXECUTE stmt_gen_query USING @sys.diagnostics.table_name;\n                SELECT CONCAT(@sys.diagnostics.sql_select,\n                              IF(order_by IS NOT NULL, CONCAT(\'\\n ORDER BY \', REPLACE(order_by, \'%{TABLE}\', CONCAT(\'tmp_\', v_table_name, \'_start\'))), \'\'),\n                              IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                       )\n                  INTO @sys.diagnostics.sql_select\n                  FROM tmp_sys_views_delta\n                 WHERE TABLE_NAME = v_table_name;\n                SELECT CONCAT(\'Initial \', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            END IF;\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            DEALLOCATE PREPARE stmt_gen_query;\n        END IF;\n    END IF;\n    SET v_sql_status_summary_select = \'SELECT Variable_name\',\n        v_sql_status_summary_delta  = \'\',\n        v_sql_status_summary_from   = \'\';\n    REPEAT\n        SET v_output_count = v_output_count + 1;\n        IF (v_output_count > 1) THEN\n            SET v_sleep = in_interval-(UNIX_TIMESTAMP(NOW(2))-v_iter_start);\n            SELECT NOW() AS \'Time\', CONCAT(\'Going to sleep for \', v_sleep, \' seconds. Please do not interrupt\') AS \'The following output is:\';\n            DO SLEEP(in_interval);\n        END IF;\n        SET v_iter_start = UNIX_TIMESTAMP(NOW(2));\n        SELECT NOW(), CONCAT(\'Iteration Number \', IFNULL(v_output_count, \'NULL\')) AS \'The following output is:\';\n        IF (@@log_bin = 1) THEN\n            SELECT \'SHOW MASTER STATUS\' AS \'The following output is:\';\n            SHOW MASTER STATUS;\n        END IF;\n        IF (v_has_replication <> \'NO\') THEN\n            SELECT \'SHOW SLAVE STATUS\' AS \'The following output is:\';\n            SHOW SLAVE STATUS;\n        END IF;\n        SET v_table_name = CONCAT(\'tmp_metrics_\', v_output_count);\n        CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS \', v_table_name));\n        CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE \', v_table_name, \' (\\n  Variable_name VARCHAR(193) NOT NULL,\\n  Variable_value VARCHAR(1024),\\n  Type VARCHAR(100) NOT NULL,\\n  Enabled ENUM(\'\'YES\'\', \'\'NO\'\', \'\'PARTIAL\'\') NOT NULL,\\n  PRIMARY KEY (Type, Variable_name)\\n) ENGINE = InnoDB DEFAULT CHARSET=utf8\'));\n        IF (v_has_metrics) THEN\n            SET @sys.diagnostics.sql = CONCAT(\n                \'INSERT INTO \', v_table_name,\n                \' SELECT Variable_name, REPLACE(Variable_value, \'\'\\n\'\', \'\'\\\\n\'\') AS Variable_value, Type, Enabled FROM sys.metrics\'\n            );\n        ELSE\n            SET @sys.diagnostics.sql = CONCAT(\n                \'INSERT INTO \', v_table_name,\n                \'(SELECT LOWER(VARIABLE_NAME) AS Variable_name, REPLACE(VARIABLE_VALUE, \'\'\\n\'\', \'\'\\\\n\'\') AS Variable_value,\\n                         \'\'Global Status\'\' AS Type, \'\'YES\'\' AS Enabled\\n  FROM performance_schema.global_status\\n) UNION ALL (\\nSELECT NAME AS Variable_name, COUNT AS Variable_value,\\n       CONCAT(\'\'InnoDB Metrics - \'\', SUBSYSTEM) AS Type,\\n       IF(STATUS = \'\'enabled\'\', \'\'YES\'\', \'\'NO\'\') AS Enabled\\n  FROM information_schema.INNODB_METRICS\\n WHERE NAME NOT IN (\\n     \'\'lock_row_lock_time\'\', \'\'lock_row_lock_time_avg\'\', \'\'lock_row_lock_time_max\'\', \'\'lock_row_lock_waits\'\',\\n     \'\'buffer_pool_reads\'\', \'\'buffer_pool_read_requests\'\', \'\'buffer_pool_write_requests\'\', \'\'buffer_pool_wait_free\'\',\\n     \'\'buffer_pool_read_ahead\'\', \'\'buffer_pool_read_ahead_evicted\'\', \'\'buffer_pool_pages_total\'\', \'\'buffer_pool_pages_misc\'\',\\n     \'\'buffer_pool_pages_data\'\', \'\'buffer_pool_bytes_data\'\', \'\'buffer_pool_pages_dirty\'\', \'\'buffer_pool_bytes_dirty\'\',\\n     \'\'buffer_pool_pages_free\'\', \'\'buffer_pages_created\'\', \'\'buffer_pages_written\'\', \'\'buffer_pages_read\'\',\\n     \'\'buffer_data_reads\'\', \'\'buffer_data_written\'\', \'\'file_num_open_files\'\',\\n     \'\'os_log_bytes_written\'\', \'\'os_log_fsyncs\'\', \'\'os_log_pending_fsyncs\'\', \'\'os_log_pending_writes\'\',\\n     \'\'log_waits\'\', \'\'log_write_requests\'\', \'\'log_writes\'\', \'\'innodb_dblwr_writes\'\', \'\'innodb_dblwr_pages_written\'\', \'\'innodb_page_size\'\')\\n) UNION ALL (\\nSELECT \'\'NOW()\'\' AS Variable_name, NOW(3) AS Variable_value, \'\'System Time\'\' AS Type, \'\'YES\'\' AS Enabled\\n) UNION ALL (\\nSELECT \'\'UNIX_TIMESTAMP()\'\' AS Variable_name, ROUND(UNIX_TIMESTAMP(NOW(3)), 3) AS Variable_value, \'\'System Time\'\' AS Type, \'\'YES\'\' AS Enabled\\n)\\n ORDER BY Type, Variable_name;\'\n            );\n        END IF;\n        CALL sys.execute_prepared_stmt(@sys.diagnostics.sql);\n        CALL sys.execute_prepared_stmt(\n            CONCAT(\'SELECT Variable_value INTO @sys.diagnostics.output_time FROM \', v_table_name, \' WHERE Type = \'\'System Time\'\' AND Variable_name = \'\'UNIX_TIMESTAMP()\'\'\')\n        );\n        SET v_output_time = @sys.diagnostics.output_time;\n        SET v_sql_status_summary_select = CONCAT(v_sql_status_summary_select, \',\\n       CONCAT(\\n           LEFT(s\', v_output_count, \'.Variable_value, \', v_status_summary_width, \'),\\n           IF(\', REPLACE(v_no_delta_names, \'%{COUNT}\', v_output_count), \' AND s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+(\\\\.[0-9]+)?$\'\', CONCAT(\'\' (\'\', ROUND(s\', v_output_count, \'.Variable_value/\', v_output_time, \', 2), \'\'/sec)\'\'), \'\'\'\')\\n       ) AS \'\'Output \', v_output_count, \'\'\'\'),\n            v_sql_status_summary_from   = CONCAT(v_sql_status_summary_from, \'\\n\',\n                                                    IF(v_output_count = 1, \'  FROM \', \'       INNER JOIN \'),\n                                                    v_table_name, \' s\', v_output_count,\n                                                    IF (v_output_count = 1, \'\', \' USING (Type, Variable_name)\'));\n        IF (v_output_count > 1) THEN\n            SET v_sql_status_summary_delta  = CONCAT(v_sql_status_summary_delta, \',\\n       IF(\', REPLACE(v_no_delta_names, \'%{COUNT}\', v_output_count), \' AND s\', (v_output_count-1), \'.Variable_value REGEXP \'\'^[0-9]+(\\\\.[0-9]+)?$\'\' AND s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+(\\\\.[0-9]+)?$\'\',\\n          CONCAT(IF(s\', (v_output_count-1), \'.Variable_value REGEXP \'\'^[0-9]+\\\\.[0-9]+$\'\' OR s\', v_output_count, \'.Variable_value REGEXP \'\'^[0-9]+\\\\.[0-9]+$\'\',\\n                    ROUND((s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value), 2),\\n                    (s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value)\\n                   ),\\n                 \'\' (\'\', ROUND((s\', v_output_count, \'.Variable_value-s\', (v_output_count-1), \'.Variable_value)/(\', v_output_time, \'-\', v_output_time_prev, \'), 2), \'\'/sec)\'\'\\n          ),\\n          \'\'\'\'\\n       ) AS \'\'Delta (\', (v_output_count-1), \' -> \', v_output_count, \')\'\'\');\n        END IF;\n        SET v_output_time_prev = v_output_time;\n        IF (@sys.diagnostics.include_raw = \'ON\') THEN\n            IF (v_has_metrics) THEN\n                SELECT \'SELECT * FROM sys.metrics\' AS \'The following output is:\';\n            ELSE\n                SELECT \'sys.metrics equivalent\' AS \'The following output is:\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'SELECT Type, Variable_name, Enabled, Variable_value FROM \', v_table_name, \' ORDER BY Type, Variable_name\'));\n        END IF;\n        IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n            SELECT \'SHOW ENGINE INNODB STATUS\' AS \'The following output is:\';\n            EXECUTE stmt_innodb_status;\n            SELECT \'InnoDB - Transactions\' AS \'The following output is:\';\n            SELECT * FROM information_schema.INNODB_TRX;\n        END IF;\n        IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n            SELECT \'SHOW ENGINE NDBCLUSTER STATUS\' AS \'The following output is:\';\n            EXECUTE stmt_ndbcluster_status;\n            SELECT \'ndbinfo.memoryusage\' AS \'The following output is:\';\n            SELECT node_id, memory_type, sys.format_bytes(used) AS used, used_pages, sys.format_bytes(total) AS total, total_pages,\n                   ROUND(100*(used/total), 2) AS \'Used %\'\n            FROM ndbinfo.memoryusage;\n            SET v_done = FALSE;\n            OPEN c_ndbinfo;\n            c_ndbinfo_loop: LOOP\n                FETCH c_ndbinfo INTO v_table_name;\n                IF v_done THEN\n                LEAVE c_ndbinfo_loop;\n                END IF;\n                SELECT CONCAT(\'SELECT * FROM ndbinfo.\', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(CONCAT(\'SELECT * FROM `ndbinfo`.`\', v_table_name, \'`\'));\n            END LOOP;\n            CLOSE c_ndbinfo;\n            SELECT * FROM information_schema.FILES;\n        END IF;\n        SELECT \'SELECT * FROM sys.processlist\' AS \'The following output is:\';\n        SELECT processlist.* FROM sys.processlist;\n        IF (v_has_ps = \'YES\') THEN\n            IF (sys.ps_is_consumer_enabled(\'events_waits_history_long\') = \'YES\') THEN\n                SELECT \'SELECT * FROM sys.latest_file_io\' AS \'The following output is:\';\n                SELECT * FROM sys.latest_file_io;\n            END IF;\n            IF (EXISTS(SELECT 1 FROM performance_schema.setup_instruments WHERE NAME LIKE \'memory/%\' AND ENABLED = \'YES\')) THEN\n                SELECT \'SELECT * FROM sys.memory_by_host_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_host_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_by_thread_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_thread_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_by_user_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_by_user_by_current_bytes;\n                SELECT \'SELECT * FROM sys.memory_global_by_current_bytes\' AS \'The following output is:\';\n                SELECT * FROM sys.memory_global_by_current_bytes;\n            END IF;\n        END IF;\n        SET v_runtime = (UNIX_TIMESTAMP(NOW(2)) - v_start);\n    UNTIL (v_runtime + in_interval >= in_max_runtime) END REPEAT;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'SHOW ENGINE PERFORMANCE_SCHEMA STATUS\' AS \'The following output is:\';\n        EXECUTE stmt_ps_status;\n    END IF;\n    IF (v_has_innodb IN (\'DEFAULT\', \'YES\')) THEN\n        DEALLOCATE PREPARE stmt_innodb_status;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        DEALLOCATE PREPARE stmt_ps_status;\n    END IF;\n    IF (v_has_ndb IN (\'DEFAULT\', \'YES\')) THEN\n        DEALLOCATE PREPARE stmt_ndbcluster_status;\n    END IF;\n    SELECT \'\\n============================\\n     Schema Information\\n============================\\n\' AS \'\';\n    SELECT COUNT(*) AS \'Total Number of Tables\' FROM information_schema.TABLES;\n    IF (@sys.diagnostics.allow_i_s_tables = \'ON\') THEN\n        SELECT \'Storage Engine Usage\' AS \'The following output is:\';\n        SELECT ENGINE, COUNT(*) AS NUM_TABLES,\n                sys.format_bytes(SUM(DATA_LENGTH)) AS DATA_LENGTH,\n                sys.format_bytes(SUM(INDEX_LENGTH)) AS INDEX_LENGTH,\n                sys.format_bytes(SUM(DATA_LENGTH+INDEX_LENGTH)) AS TOTAL\n            FROM information_schema.TABLES\n            GROUP BY ENGINE;\n        SELECT \'Schema Object Overview\' AS \'The following output is:\';\n        SELECT * FROM sys.schema_object_overview;\n        SELECT \'Tables without a PRIMARY KEY\' AS \'The following output is:\';\n        SELECT TABLES.TABLE_SCHEMA, ENGINE, COUNT(*) AS NumTables\n          FROM information_schema.TABLES\n               LEFT OUTER JOIN information_schema.STATISTICS ON STATISTICS.TABLE_SCHEMA = TABLES.TABLE_SCHEMA\n                                                                AND STATISTICS.TABLE_NAME = TABLES.TABLE_NAME\n                                                                AND STATISTICS.INDEX_NAME = \'PRIMARY\'\n         WHERE STATISTICS.TABLE_NAME IS NULL\n               AND TABLES.TABLE_SCHEMA NOT IN (\'mysql\', \'information_schema\', \'performance_schema\', \'sys\')\n               AND TABLES.TABLE_TYPE = \'BASE TABLE\'\n         GROUP BY TABLES.TABLE_SCHEMA, ENGINE;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'Unused Indexes\' AS \'The following output is:\';\n        SELECT object_schema, COUNT(*) AS NumUnusedIndexes\n          FROM performance_schema.table_io_waits_summary_by_index_usage\n         WHERE index_name IS NOT NULL\n               AND count_star = 0\n               AND object_schema NOT IN (\'mysql\', \'sys\')\n               AND index_name != \'PRIMARY\'\n         GROUP BY object_schema;\n    END IF;\n    IF (v_has_ps = \'YES\') THEN\n        SELECT \'\\n=========================\\n     Overall Status\\n=========================\\n\' AS \'\';\n        SELECT \'CALL sys.ps_statement_avg_latency_histogram()\' AS \'The following output is:\';\n        CALL sys.ps_statement_avg_latency_histogram();\n        CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n        CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile\');\n        SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, \'%{OUTPUT}\', \'end\');\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'The following query will be used to generate the query for each sys view\' AS \'Debug\';\n            SELECT @sys.diagnostics.sql AS \'Debug\';\n        END IF;\n        PREPARE stmt_gen_query FROM @sys.diagnostics.sql;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            IF (@sys.debug = \'ON\') THEN\n                SELECT CONCAT(\'The following queries are for storing the final content of \', v_table_name) AS \'Debug\';\n            END IF;\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS `tmp_\', v_table_name, \'_end`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'CREATE TEMPORARY TABLE `tmp_\', v_table_name, \'_end` SELECT * FROM `sys`.`x$\', v_table_name, \'`\'));\n            IF (@sys.diagnostics.include_raw = \'ON\') THEN\n                SET @sys.diagnostics.table_name = CONCAT(\'x$\', v_table_name);\n                EXECUTE stmt_gen_query USING @sys.diagnostics.table_name;\n                SELECT CONCAT(@sys.diagnostics.sql_select,\n                                IF(order_by IS NOT NULL, CONCAT(\'\\n ORDER BY \', REPLACE(order_by, \'%{TABLE}\', CONCAT(\'tmp_\', v_table_name, \'_end\'))), \'\'),\n                                IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                        )\n                    INTO @sys.diagnostics.sql_select\n                    FROM tmp_sys_views_delta\n                    WHERE TABLE_NAME = v_table_name;\n                SELECT CONCAT(\'Overall \', v_table_name) AS \'The following output is:\';\n                CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            END IF;\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        DEALLOCATE PREPARE stmt_gen_query;\n        SELECT \'\\n======================\\n     Delta Status\\n======================\\n\' AS \'\';\n        CALL sys.statement_performance_analyzer(\'delta\', \'tmp_digests_start\', \'with_runtimes_in_95th_percentile\');\n        CALL sys.statement_performance_analyzer(\'cleanup\', NULL, NULL);\n        DROP TEMPORARY TABLE tmp_digests_start;\n        IF (@sys.debug = \'ON\') THEN\n            SELECT \'The following query will be used to generate the query for each sys view delta\' AS \'Debug\';\n            SELECT @sys.diagnostics.sql_gen_query_delta AS \'Debug\';\n        END IF;\n        PREPARE stmt_gen_query_delta FROM @sys.diagnostics.sql_gen_query_delta;\n        SET v_old_group_concat_max_len = @@session.group_concat_max_len;\n        SET @@session.group_concat_max_len = 2048;\n        SET v_done = FALSE;\n        OPEN c_sysviews_w_delta;\n        c_sysviews_w_delta_loop: LOOP\n            FETCH c_sysviews_w_delta INTO v_table_name;\n            IF v_done THEN\n                LEAVE c_sysviews_w_delta_loop;\n            END IF;\n            SET @sys.diagnostics.table_name = v_table_name;\n            EXECUTE stmt_gen_query_delta USING @sys.diagnostics.table_name;\n            SELECT CONCAT(@sys.diagnostics.sql_select,\n                            IF(where_delta IS NOT NULL, CONCAT(\'\\n WHERE \', where_delta), \'\'),\n                            IF(order_by_delta IS NOT NULL, CONCAT(\'\\n ORDER BY \', order_by_delta), \'\'),\n                            IF(limit_rows IS NOT NULL, CONCAT(\'\\n LIMIT \', limit_rows), \'\')\n                    )\n                INTO @sys.diagnostics.sql_select\n                FROM tmp_sys_views_delta\n                WHERE TABLE_NAME = v_table_name;\n            SELECT CONCAT(\'Delta \', v_table_name) AS \'The following output is:\';\n            CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE `tmp_\', v_table_name, \'_end`\'));\n            CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE `tmp_\', v_table_name, \'_start`\'));\n        END LOOP;\n        CLOSE c_sysviews_w_delta;\n        SET @@session.group_concat_max_len = v_old_group_concat_max_len;\n        DEALLOCATE PREPARE stmt_gen_query_delta;\n        DROP TEMPORARY TABLE tmp_sys_views_delta;\n    END IF;\n    IF (v_has_metrics) THEN\n        SELECT \'SELECT * FROM sys.metrics\' AS \'The following output is:\';\n    ELSE\n        SELECT \'sys.metrics equivalent\' AS \'The following output is:\';\n    END IF;\n    CALL sys.execute_prepared_stmt(\n        CONCAT(v_sql_status_summary_select, v_sql_status_summary_delta, \', Type, s1.Enabled\', v_sql_status_summary_from,\n               \'\\n ORDER BY Type, Variable_name\'\n        )\n    );\n    SET v_count = 0;\n    WHILE (v_count < v_output_count) DO\n        SET v_count = v_count + 1;\n        SET v_table_name = CONCAT(\'tmp_metrics_\', v_count);\n        CALL sys.execute_prepared_stmt(CONCAT(\'DROP TEMPORARY TABLE IF EXISTS \', v_table_name));\n    END WHILE;\n    IF (in_auto_config <> \'current\') THEN\n        CALL sys.ps_setup_reload_saved();\n        SET sql_log_bin = @log_bin;\n    END IF;\n    SET @sys.diagnostics.output_time            = NULL,\n        @sys.diagnostics.sql                    = NULL,\n        @sys.diagnostics.sql_gen_query_delta    = NULL,\n        @sys.diagnostics.sql_gen_query_template = NULL,\n        @sys.diagnostics.sql_select             = NULL,\n        @sys.diagnostics.table_name             = NULL;\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = @log_bin;\n    END IF;\nEND','NONE'),('sys','format_path','FUNCTION','format_path','SQL','NO_SQL','YES','INVOKER','in_path VARCHAR(512)\n    ','varchar(512) CHARSET utf8mb3','BEGIN\n  DECLARE v_dir VARCHAR(1024);\n  DECLARE v_path VARCHAR(512);\n  DECLARE path_separator CHAR(1) DEFAULT \'/\';\n  IF @@global.version_compile_os LIKE \'win%\' THEN\n    SET path_separator = \'\\\\\';\n  END IF;\n  IF in_path LIKE \'/private/%\' THEN\n    SET v_path = REPLACE(in_path, \'/private\', \'\');\n  ELSE\n    SET v_path = in_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_data_home_dir\'), \'\');\n  IF v_path IS NULL THEN\n    RETURN NULL;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.datadir, IF(SUBSTRING(@@global.datadir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.datadir, CONCAT(\'@@datadir\', IF(SUBSTRING(@@global.datadir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.tmpdir, IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.tmpdir, CONCAT(\'@@tmpdir\', IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_data_home_dir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_data_home_dir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_log_group_home_dir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_log_group_home_dir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'slave_load_tmpdir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@slave_load_tmpdir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir = IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_undo_directory\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_undo_directory\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.basedir, IF(SUBSTRING(@@global.basedir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.basedir, CONCAT(\'@@basedir\', IF(SUBSTRING(@@global.basedir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  RETURN v_path;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a raw path value, and strips out the datadir or tmpdir\n             replacing with @@datadir and @@tmpdir respectively.\n             Also normalizes the paths across operating systems, so backslashes\n             on Windows are converted to forward slashes\n             Parameters\n             path (VARCHAR(512)):\n               The raw file path value to format.\n             Returns\n             VARCHAR(512) CHARSET UTF8\n             Example\n             mysql> select @@datadir;\n             +-----------------------------------------------+\n             | @@datadir                                     |\n             +-----------------------------------------------+\n             | /Users/mark/sandboxes/SmallTree/AMaster/data/ |\n             +-----------------------------------------------+\n             1 row in set (0.06 sec)\n             mysql> select format_path(\'/Users/mark/sandboxes/SmallTree/AMaster/data/mysql/proc.MYD\') AS path;\n             +--------------------------+\n             | path                     |\n             +--------------------------+\n             | @@datadir/mysql/proc.MYD |\n             +--------------------------+\n             1 row in set (0.03 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n  DECLARE v_dir VARCHAR(1024);\n  DECLARE v_path VARCHAR(512);\n  DECLARE path_separator CHAR(1) DEFAULT \'/\';\n  IF @@global.version_compile_os LIKE \'win%\' THEN\n    SET path_separator = \'\\\';\n  END IF;\n  IF in_path LIKE \'/private/%\' THEN\n    SET v_path = REPLACE(in_path, \'/private\', \'\');\n  ELSE\n    SET v_path = in_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_data_home_dir\'), \'\');\n  IF v_path IS NULL THEN\n    RETURN NULL;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.datadir, IF(SUBSTRING(@@global.datadir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.datadir, CONCAT(\'@@datadir\', IF(SUBSTRING(@@global.datadir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.tmpdir, IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.tmpdir, CONCAT(\'@@tmpdir\', IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_data_home_dir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_data_home_dir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_log_group_home_dir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_log_group_home_dir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir= IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'slave_load_tmpdir\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@slave_load_tmpdir\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  SET v_dir = IFNULL((SELECT VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME = \'innodb_undo_directory\'), \'\');\n  IF v_path LIKE CONCAT(v_dir, IF(SUBSTRING(v_dir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, v_dir, CONCAT(\'@@innodb_undo_directory\', IF(SUBSTRING(v_dir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  IF v_path LIKE CONCAT(@@global.basedir, IF(SUBSTRING(@@global.basedir, -1) = path_separator, \'%\', CONCAT(path_separator, \'%\'))) ESCAPE \'|\' THEN\n    SET v_path = REPLACE(v_path, @@global.basedir, CONCAT(\'@@basedir\', IF(SUBSTRING(@@global.basedir, -1) = path_separator, path_separator, \'\')));\n    RETURN v_path;\n  END IF;\n  RETURN v_path;\nEND','NONE'),('sys','format_statement','FUNCTION','format_statement','SQL','NO_SQL','YES','INVOKER','statement LONGTEXT\n    ','longtext CHARSET utf8mb3','BEGIN\n  IF @sys.statement_truncate_len IS NULL THEN\n      SET @sys.statement_truncate_len = sys_get_config(\'statement_truncate_len\', 64);\n  END IF;\n  IF CHAR_LENGTH(statement) > @sys.statement_truncate_len THEN\n      RETURN REPLACE(CONCAT(LEFT(statement, (@sys.statement_truncate_len/2)-2), \' ... \', RIGHT(statement, (@sys.statement_truncate_len/2)-2)), \'\\n\', \' \');\n  ELSE\n      RETURN REPLACE(statement, \'\\n\', \' \');\n  END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Formats a normalized statement, truncating it if it is > 64 characters long by default.\n             To configure the length to truncate the statement to by default, update the `statement_truncate_len`\n             variable with `sys_config` table to a different value. Alternatively, to change it just for just\n             your particular session, use `SET @sys.statement_truncate_len := <some new value>`.\n             Useful for printing statement related data from Performance Schema from\n             the command line.\n             Parameters\n             statement (LONGTEXT):\n               The statement to format.\n             Returns\n             LONGTEXT\n             Example\n             mysql> SELECT sys.format_statement(digest_text)\n                 ->   FROM performance_schema.events_statements_summary_by_digest\n                 ->  ORDER by sum_timer_wait DESC limit 5;\n             +-------------------------------------------------------------------+\n             | sys.format_statement(digest_text)                                 |\n             +-------------------------------------------------------------------+\n             | CREATE SQL SECURITY INVOKER VI ... KE ? AND `variable_value` > ?  |\n             | CREATE SQL SECURITY INVOKER VI ... ait` IS NOT NULL , `esc` . ... |\n             | CREATE SQL SECURITY INVOKER VI ... ait` IS NOT NULL , `sys` . ... |\n             | CREATE SQL SECURITY INVOKER VI ...  , `compressed_size` ) ) DESC  |\n             | CREATE SQL SECURITY INVOKER VI ... LIKE ? ORDER BY `timer_start`  |\n             +-------------------------------------------------------------------+\n             5 rows in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n  IF @sys.statement_truncate_len IS NULL THEN\n      SET @sys.statement_truncate_len = sys_get_config(\'statement_truncate_len\', 64);\n  END IF;\n  IF CHAR_LENGTH(statement) > @sys.statement_truncate_len THEN\n      RETURN REPLACE(CONCAT(LEFT(statement, (@sys.statement_truncate_len/2)-2), \' ... \', RIGHT(statement, (@sys.statement_truncate_len/2)-2)), \'\\n\', \' \');\n  ELSE\n      RETURN REPLACE(statement, \'\\n\', \' \');\n  END IF;\nEND','NONE'),('sys','list_add','FUNCTION','list_add','SQL','CONTAINS_SQL','YES','INVOKER','in_list TEXT,\n        in_add_value TEXT\n    ','text CHARSET utf8mb3','BEGIN\n    IF (in_add_value IS NULL) THEN\n        SIGNAL SQLSTATE \'02200\'\n           SET MESSAGE_TEXT = \'Function sys.list_add: in_add_value input variable should not be NULL\',\n               MYSQL_ERRNO = 1138;\n    END IF;\n    IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN\n        RETURN in_add_value;\n    END IF;\n    RETURN (SELECT CONCAT(TRIM(BOTH \',\' FROM TRIM(in_list)), \',\', in_add_value));\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a list, and a value to add to the list, and returns the resulting list.\n             Useful for altering certain session variables, like sql_mode or optimizer_switch for instance.\n             Parameters\n             in_list (TEXT):\n               The comma separated list to add a value to\n             in_add_value (TEXT):\n               The value to add to the input list\n             Returns\n             TEXT\n             Example\n             mysql> select @@sql_mode;\n             +-----------------------------------------------------------------------------------+\n             | @@sql_mode                                                                        |\n             +-----------------------------------------------------------------------------------+\n             | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\n             +-----------------------------------------------------------------------------------+\n             1 row in set (0.00 sec)\n             mysql> set sql_mode = sys.list_add(@@sql_mode, \'ANSI_QUOTES\');\n             Query OK, 0 rows affected (0.06 sec)\n             mysql> select @@sql_mode;\n             +-----------------------------------------------------------------------------------------------+\n             | @@sql_mode                                                                                    |\n             +-----------------------------------------------------------------------------------------------+\n             | ANSI_QUOTES,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\n             +-----------------------------------------------------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    IF (in_add_value IS NULL) THEN\n        SIGNAL SQLSTATE \'02200\'\n           SET MESSAGE_TEXT = \'Function sys.list_add: in_add_value input variable should not be NULL\',\n               MYSQL_ERRNO = 1138;\n    END IF;\n    IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN\n        RETURN in_add_value;\n    END IF;\n    RETURN (SELECT CONCAT(TRIM(BOTH \',\' FROM TRIM(in_list)), \',\', in_add_value));\nEND','NONE'),('sys','ps_statement_avg_latency_histogram','PROCEDURE','ps_statement_avg_latency_histogram','SQL','READS_SQL_DATA','NO','INVOKER','','','BEGIN\nSELECT CONCAT(\'\\n\',\n       \'\\n  . = 1 unit\',\n       \'\\n  * = 2 units\',\n       \'\\n  # = 3 units\\n\',\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(0 - \',\n                                               ROUND((@bucket_size := (SELECT ROUND((MAX(avg_us) - MIN(avg_us)) / (@buckets := 16)) AS size\n                                                                         FROM sys.x$ps_digest_avg_latency_distribution)) / (@unit_div := 1000)),\n                                                (@unit := \'ms\'), \')\'),\n                        REPEAT(\' \', (@max_label_size := ((1 + LENGTH(ROUND((@bucket_size * 15) / @unit_div)) + 3 + LENGTH(ROUND(@bucket_size * 16) / @unit_div)) + 1)) - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us <= @bucket_size), 0)),\n       REPEAT(\' \', (@max_label_len := (@max_label_size + LENGTH((@total_queries := (SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution)))) + 1) - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < (@one_unit := 40), \'.\', IF(@count_in_bucket < (@two_unit := 80), \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND(@bucket_size / @unit_div), \' - \', ROUND((@bucket_size * 2) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size AND b1.avg_us <= @bucket_size * 2), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 2) / @unit_div), \' - \', ROUND((@bucket_size * 3) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 2 AND b1.avg_us <= @bucket_size * 3), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 3) / @unit_div), \' - \', ROUND((@bucket_size * 4) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 3 AND b1.avg_us <= @bucket_size * 4), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 4) / @unit_div), \' - \', ROUND((@bucket_size * 5) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 4 AND b1.avg_us <= @bucket_size * 5), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 5) / @unit_div), \' - \', ROUND((@bucket_size * 6) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 5 AND b1.avg_us <= @bucket_size * 6), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 6) / @unit_div), \' - \', ROUND((@bucket_size * 7) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 6 AND b1.avg_us <= @bucket_size * 7), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 7) / @unit_div), \' - \', ROUND((@bucket_size * 8) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 7 AND b1.avg_us <= @bucket_size * 8), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 8) / @unit_div), \' - \', ROUND((@bucket_size * 9) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 8 AND b1.avg_us <= @bucket_size * 9), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 9) / @unit_div), \' - \', ROUND((@bucket_size * 10) / @unit_div), @unit, \')\'),\n                         REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                         @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                       FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                      WHERE b1.avg_us > @bucket_size * 9 AND b1.avg_us <= @bucket_size * 10), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 10) / @unit_div), \' - \', ROUND((@bucket_size * 11) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 10 AND b1.avg_us <= @bucket_size * 11), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 11) / @unit_div), \' - \', ROUND((@bucket_size * 12) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 11 AND b1.avg_us <= @bucket_size * 12), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 12) / @unit_div), \' - \', ROUND((@bucket_size * 13) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 12 AND b1.avg_us <= @bucket_size * 13), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 13) / @unit_div), \' - \', ROUND((@bucket_size * 14) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 13 AND b1.avg_us <= @bucket_size * 14), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 14) / @unit_div), \' - \', ROUND((@bucket_size * 15) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 14 AND b1.avg_us <= @bucket_size * 15), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 15) / @unit_div), \' - \', ROUND((@bucket_size * 16) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 15 AND b1.avg_us <= @bucket_size * 16), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       \'\\n\\n  Total Statements: \', @total_queries, \'; Buckets: \', @buckets , \'; Bucket Size: \', ROUND(@bucket_size / @unit_div) , \' \', @unit, \';\\n\'\n      ) AS `Performance Schema Statement Digest Average Latency Histogram`;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Outputs a textual histogram graph of the average latency values\n             across all normalized queries tracked within the Performance Schema\n             events_statements_summary_by_digest table.\n             Can be used to show a very high level picture of what kind of\n             latency distribution statements running within this instance have.\n             Parameters\n             None.\n             Example\n             mysql> CALL sys.ps_statement_avg_latency_histogram()\\G\n             *************************** 1. row ***************************\n             Performance Schema Statement Digest Average Latency Histogram:\n               . = 1 unit\n               * = 2 units\n               # = 3 units\n             (0 - 38ms)     240 | ################################################################################\n             (38 - 77ms)    38  | ......................................\n             (77 - 115ms)   3   | ...\n             (115 - 154ms)  62  | *******************************\n             (154 - 192ms)  3   | ...\n             (192 - 231ms)  0   |\n             (231 - 269ms)  0   |\n             (269 - 307ms)  0   |\n             (307 - 346ms)  0   |\n             (346 - 384ms)  1   | .\n             (384 - 423ms)  1   | .\n             (423 - 461ms)  0   |\n             (461 - 499ms)  0   |\n             (499 - 538ms)  0   |\n             (538 - 576ms)  0   |\n             (576 - 615ms)  1   | .\n               Total Statements: 350; Buckets: 16; Bucket Size: 38 ms;\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\nSELECT CONCAT(\'\\n\',\n       \'\\n  . = 1 unit\',\n       \'\\n  * = 2 units\',\n       \'\\n  # = 3 units\\n\',\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(0 - \',\n                                               ROUND((@bucket_size := (SELECT ROUND((MAX(avg_us) - MIN(avg_us)) / (@buckets := 16)) AS size\n                                                                         FROM sys.x$ps_digest_avg_latency_distribution)) / (@unit_div := 1000)),\n                                                (@unit := \'ms\'), \')\'),\n                        REPEAT(\' \', (@max_label_size := ((1 + LENGTH(ROUND((@bucket_size * 15) / @unit_div)) + 3 + LENGTH(ROUND(@bucket_size * 16) / @unit_div)) + 1)) - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us <= @bucket_size), 0)),\n       REPEAT(\' \', (@max_label_len := (@max_label_size + LENGTH((@total_queries := (SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution)))) + 1) - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < (@one_unit := 40), \'.\', IF(@count_in_bucket < (@two_unit := 80), \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND(@bucket_size / @unit_div), \' - \', ROUND((@bucket_size * 2) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size AND b1.avg_us <= @bucket_size * 2), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 2) / @unit_div), \' - \', ROUND((@bucket_size * 3) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 2 AND b1.avg_us <= @bucket_size * 3), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 3) / @unit_div), \' - \', ROUND((@bucket_size * 4) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 3 AND b1.avg_us <= @bucket_size * 4), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 4) / @unit_div), \' - \', ROUND((@bucket_size * 5) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 4 AND b1.avg_us <= @bucket_size * 5), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 5) / @unit_div), \' - \', ROUND((@bucket_size * 6) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 5 AND b1.avg_us <= @bucket_size * 6), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 6) / @unit_div), \' - \', ROUND((@bucket_size * 7) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 6 AND b1.avg_us <= @bucket_size * 7), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 7) / @unit_div), \' - \', ROUND((@bucket_size * 8) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 7 AND b1.avg_us <= @bucket_size * 8), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 8) / @unit_div), \' - \', ROUND((@bucket_size * 9) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 8 AND b1.avg_us <= @bucket_size * 9), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 9) / @unit_div), \' - \', ROUND((@bucket_size * 10) / @unit_div), @unit, \')\'),\n                         REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                         @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                       FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                      WHERE b1.avg_us > @bucket_size * 9 AND b1.avg_us <= @bucket_size * 10), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 10) / @unit_div), \' - \', ROUND((@bucket_size * 11) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 10 AND b1.avg_us <= @bucket_size * 11), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 11) / @unit_div), \' - \', ROUND((@bucket_size * 12) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 11 AND b1.avg_us <= @bucket_size * 12), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 12) / @unit_div), \' - \', ROUND((@bucket_size * 13) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 12 AND b1.avg_us <= @bucket_size * 13), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 13) / @unit_div), \' - \', ROUND((@bucket_size * 14) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 13 AND b1.avg_us <= @bucket_size * 14), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 14) / @unit_div), \' - \', ROUND((@bucket_size * 15) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 14 AND b1.avg_us <= @bucket_size * 15), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       @label := CONCAT(@label_inner := CONCAT(\'\\n(\', ROUND((@bucket_size * 15) / @unit_div), \' - \', ROUND((@bucket_size * 16) / @unit_div), @unit, \')\'),\n                        REPEAT(\' \', @max_label_size - LENGTH(@label_inner)),\n                        @count_in_bucket := IFNULL((SELECT SUM(cnt)\n                                                      FROM sys.x$ps_digest_avg_latency_distribution AS b1\n                                                     WHERE b1.avg_us > @bucket_size * 15 AND b1.avg_us <= @bucket_size * 16), 0)),\n       REPEAT(\' \', @max_label_len - LENGTH(@label)), \'| \',\n       IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, \'.\', IF(@count_in_bucket < @two_unit, \'*\', \'#\')),\n       	             IF(@count_in_bucket < @one_unit, @count_in_bucket,\n       	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), \'\'),\n       \'\\n\\n  Total Statements: \', @total_queries, \'; Buckets: \', @buckets , \'; Bucket Size: \', ROUND(@bucket_size / @unit_div) , \' \', @unit, \';\\n\'\n      ) AS `Performance Schema Statement Digest Average Latency Histogram`;\nEND','NONE'),('sys','ps_trace_statement_digest','PROCEDURE','ps_trace_statement_digest','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_digest VARCHAR(32),\n        IN in_runtime INT,\n        IN in_interval DECIMAL(2,2),\n        IN in_start_fresh BOOLEAN,\n        IN in_auto_enable BOOLEAN\n    ','','BEGIN\n    DECLARE v_start_fresh BOOLEAN DEFAULT false;\n    DECLARE v_auto_enable BOOLEAN DEFAULT false;\n    DECLARE v_explain     BOOLEAN DEFAULT true;\n    DECLARE v_this_thread_enabed ENUM(\'YES\', \'NO\');\n    DECLARE v_runtime INT DEFAULT 0;\n    DECLARE v_start INT DEFAULT 0;\n    DECLARE v_found_stmts INT;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    DROP TEMPORARY TABLE IF EXISTS stmt_trace;\n    CREATE TEMPORARY TABLE stmt_trace (\n        thread_id BIGINT UNSIGNED,\n        timer_start BIGINT UNSIGNED,\n        event_id BIGINT UNSIGNED,\n        sql_text longtext,\n        timer_wait BIGINT UNSIGNED,\n        lock_time BIGINT UNSIGNED,\n        errors BIGINT UNSIGNED,\n        mysql_errno INT,\n        rows_sent BIGINT UNSIGNED,\n        rows_affected BIGINT UNSIGNED,\n        rows_examined BIGINT UNSIGNED,\n        created_tmp_tables BIGINT UNSIGNED,\n        created_tmp_disk_tables BIGINT UNSIGNED,\n        no_index_used BIGINT UNSIGNED,\n        PRIMARY KEY (thread_id, timer_start)\n    );\n    DROP TEMPORARY TABLE IF EXISTS stmt_stages;\n    CREATE TEMPORARY TABLE stmt_stages (\n       event_id BIGINT UNSIGNED,\n       stmt_id BIGINT UNSIGNED,\n       event_name VARCHAR(128),\n       timer_wait BIGINT UNSIGNED,\n       PRIMARY KEY (event_id)\n    );\n    SET v_start_fresh = in_start_fresh;\n    IF v_start_fresh THEN\n        TRUNCATE TABLE performance_schema.events_statements_history_long;\n        TRUNCATE TABLE performance_schema.events_stages_history_long;\n    END IF;\n    SET v_auto_enable = in_auto_enable;\n    IF v_auto_enable THEN\n        CALL sys.ps_setup_save(0);\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = IF(PROCESSLIST_ID IS NOT NULL, \'YES\', \'NO\');\n        UPDATE performance_schema.setup_consumers\n           SET ENABLED = \'YES\'\n         WHERE NAME NOT LIKE \'%\\_history\'\n               AND NAME NOT LIKE \'events_wait%\'\n               AND NAME NOT LIKE \'events_transactions%\'\n               AND NAME <> \'statements_digest\';\n        UPDATE performance_schema.setup_instruments\n           SET ENABLED = \'YES\',\n               TIMED   = \'YES\'\n         WHERE NAME LIKE \'statement/%\' OR NAME LIKE \'stage/%\';\n    END IF;\n    WHILE v_runtime < in_runtime DO\n        SELECT UNIX_TIMESTAMP() INTO v_start;\n        INSERT IGNORE INTO stmt_trace\n        SELECT thread_id, timer_start, event_id, sql_text, timer_wait, lock_time, errors, mysql_errno,\n               rows_sent, rows_affected, rows_examined, created_tmp_tables, created_tmp_disk_tables, no_index_used\n          FROM performance_schema.events_statements_history_long\n        WHERE digest = in_digest;\n        INSERT IGNORE INTO stmt_stages\n        SELECT stages.event_id, stmt_trace.event_id,\n               stages.event_name, stages.timer_wait\n          FROM performance_schema.events_stages_history_long AS stages\n          JOIN stmt_trace ON stages.nesting_event_id = stmt_trace.event_id;\n        SELECT SLEEP(in_interval) INTO @sleep;\n        SET v_runtime = v_runtime + (UNIX_TIMESTAMP() - v_start);\n    END WHILE;\n    SELECT \"SUMMARY STATISTICS\";\n    SELECT COUNT(*) executions,\n           sys.format_time(SUM(timer_wait)) AS exec_time,\n           sys.format_time(SUM(lock_time)) AS lock_time,\n           SUM(rows_sent) AS rows_sent,\n           SUM(rows_affected) AS rows_affected,\n           SUM(rows_examined) AS rows_examined,\n           SUM(created_tmp_tables) AS tmp_tables,\n           SUM(no_index_used) AS full_scans\n      FROM stmt_trace;\n    SELECT event_name,\n           COUNT(*) as count,\n           sys.format_time(SUM(timer_wait)) as latency\n      FROM stmt_stages\n     GROUP BY event_name\n     ORDER BY SUM(timer_wait) DESC;\n    SELECT \"LONGEST RUNNING STATEMENT\";\n    SELECT thread_id,\n           sys.format_time(timer_wait) AS exec_time,\n           sys.format_time(lock_time) AS lock_time,\n           rows_sent,\n           rows_affected,\n           rows_examined,\n           created_tmp_tables AS tmp_tables,\n           no_index_used AS full_scan\n      FROM stmt_trace\n     ORDER BY timer_wait DESC LIMIT 1;\n    SELECT sql_text\n      FROM stmt_trace\n     ORDER BY timer_wait DESC LIMIT 1;\n    SELECT sql_text, event_id INTO @sql, @sql_id\n      FROM stmt_trace\n    ORDER BY timer_wait DESC LIMIT 1;\n    IF (@sql_id IS NOT NULL) THEN\n        SELECT event_name,\n               sys.format_time(timer_wait) as latency\n          FROM stmt_stages\n         WHERE stmt_id = @sql_id\n         ORDER BY event_id;\n    END IF;\n    DROP TEMPORARY TABLE stmt_trace;\n    DROP TEMPORARY TABLE stmt_stages;\n    IF (@sql IS NOT NULL) THEN\n        SET @stmt := CONCAT(\"EXPLAIN FORMAT=JSON \", @sql);\n        BEGIN\n            DECLARE CONTINUE HANDLER FOR 1064, 1146 SET v_explain = false;\n            PREPARE explain_stmt FROM @stmt;\n        END;\n        IF (v_explain) THEN\n            EXECUTE explain_stmt;\n            DEALLOCATE PREPARE explain_stmt;\n        END IF;\n    END IF;\n    IF v_auto_enable THEN\n        CALL sys.ps_setup_reload_saved();\n    END IF;\n    IF (v_this_thread_enabed = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Traces all instrumentation within Performance Schema for a specific\n             Statement Digest.\n             When finding a statement of interest within the\n             performance_schema.events_statements_summary_by_digest table, feed\n             the DIGEST MD5 value in to this procedure, set how long to poll for,\n             and at what interval to poll, and it will generate a report of all\n             statistics tracked within Performance Schema for that digest for the\n             interval.\n             It will also attempt to generate an EXPLAIN for the longest running\n             example of the digest during the interval. Note this may fail, as:\n                * Performance Schema truncates long SQL_TEXT values (and hence the\n                  EXPLAIN will fail due to parse errors)\n                * the default schema is sys (so tables that are not fully qualified\n                  in the query may not be found)\n                * some queries such as SHOW are not supported in EXPLAIN.\n             When the EXPLAIN fails, the error will be ignored and no EXPLAIN\n             output generated.\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Parameters\n             in_digest (VARCHAR(32)):\n               The statement digest identifier you would like to analyze\n             in_runtime (INT):\n               The number of seconds to run analysis for\n             in_interval (DECIMAL(2,2)):\n               The interval (in seconds, may be fractional) at which to try\n               and take snapshots\n             in_start_fresh (BOOLEAN):\n               Whether to TRUNCATE the events_statements_history_long and\n               events_stages_history_long tables before starting\n             in_auto_enable (BOOLEAN):\n               Whether to automatically turn on required consumers\n             Example\n             mysql> call ps_trace_statement_digest(\'891ec6860f98ba46d89dd20b0c03652c\', 10, 0.1, true, true);\n             +--------------------+\n             | SUMMARY STATISTICS |\n             +--------------------+\n             | SUMMARY STATISTICS |\n             +--------------------+\n             1 row in set (9.11 sec)\n             +------------+-----------+-----------+-----------+---------------+------------+------------+\n             | executions | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scans |\n             +------------+-----------+-----------+-----------+---------------+------------+------------+\n             |         21 | 4.11 ms   | 2.00 ms   |         0 |            21 |          0 |          0 |\n             +------------+-----------+-----------+-----------+---------------+------------+------------+\n             1 row in set (9.11 sec)\n             +------------------------------------------+-------+-----------+\n             | event_name                               | count | latency   |\n             +------------------------------------------+-------+-----------+\n             | stage/sql/checking query cache for query |    16 | 724.37 us |\n             | stage/sql/statistics                     |    16 | 546.92 us |\n             | stage/sql/freeing items                  |    18 | 520.11 us |\n             | stage/sql/init                           |    51 | 466.80 us |\n             ...\n             | stage/sql/cleaning up                    |    18 | 11.92 us  |\n             | stage/sql/executing                      |    16 | 6.95 us   |\n             +------------------------------------------+-------+-----------+\n             17 rows in set (9.12 sec)\n             +---------------------------+\n             | LONGEST RUNNING STATEMENT |\n             +---------------------------+\n             | LONGEST RUNNING STATEMENT |\n             +---------------------------+\n             1 row in set (9.16 sec)\n             +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n             | thread_id | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scan |\n             +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n             |    166646 | 618.43 us | 1.00 ms   |         0 |             1 |          0 |         0 |\n             +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n             1 row in set (9.16 sec)\n             // Truncated for clarity...\n             +-----------------------------------------------------------------+\n             | sql_text                                                        |\n             +-----------------------------------------------------------------+\n             | select hibeventhe0_.id as id1382_, hibeventhe0_.createdTime ... |\n             +-----------------------------------------------------------------+\n             1 row in set (9.17 sec)\n             +------------------------------------------+-----------+\n             | event_name                               | latency   |\n             +------------------------------------------+-----------+\n             | stage/sql/init                           | 8.61 us   |\n             | stage/sql/Waiting for query cache lock   | 453.23 us |\n             | stage/sql/init                           | 331.07 ns |\n             | stage/sql/checking query cache for query | 43.04 us  |\n             ...\n             | stage/sql/freeing items                  | 30.46 us  |\n             | stage/sql/cleaning up                    | 662.13 ns |\n             +------------------------------------------+-----------+\n             18 rows in set (9.23 sec)\n             +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n             | id | select_type | table        | type  | possible_keys | key       | key_len | ref         | rows | Extra |\n             +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n             |  1 | SIMPLE      | hibeventhe0_ | const | fixedTime     | fixedTime | 775     | const,const |    1 | NULL  |\n             +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n             1 row in set (9.27 sec)\n             Query OK, 0 rows affected (9.28 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_start_fresh BOOLEAN DEFAULT false;\n    DECLARE v_auto_enable BOOLEAN DEFAULT false;\n    DECLARE v_explain     BOOLEAN DEFAULT true;\n    DECLARE v_this_thread_enabed ENUM(\'YES\', \'NO\');\n    DECLARE v_runtime INT DEFAULT 0;\n    DECLARE v_start INT DEFAULT 0;\n    DECLARE v_found_stmts INT;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    DROP TEMPORARY TABLE IF EXISTS stmt_trace;\n    CREATE TEMPORARY TABLE stmt_trace (\n        thread_id BIGINT UNSIGNED,\n        timer_start BIGINT UNSIGNED,\n        event_id BIGINT UNSIGNED,\n        sql_text longtext,\n        timer_wait BIGINT UNSIGNED,\n        lock_time BIGINT UNSIGNED,\n        errors BIGINT UNSIGNED,\n        mysql_errno INT,\n        rows_sent BIGINT UNSIGNED,\n        rows_affected BIGINT UNSIGNED,\n        rows_examined BIGINT UNSIGNED,\n        created_tmp_tables BIGINT UNSIGNED,\n        created_tmp_disk_tables BIGINT UNSIGNED,\n        no_index_used BIGINT UNSIGNED,\n        PRIMARY KEY (thread_id, timer_start)\n    );\n    DROP TEMPORARY TABLE IF EXISTS stmt_stages;\n    CREATE TEMPORARY TABLE stmt_stages (\n       event_id BIGINT UNSIGNED,\n       stmt_id BIGINT UNSIGNED,\n       event_name VARCHAR(128),\n       timer_wait BIGINT UNSIGNED,\n       PRIMARY KEY (event_id)\n    );\n    SET v_start_fresh = in_start_fresh;\n    IF v_start_fresh THEN\n        TRUNCATE TABLE performance_schema.events_statements_history_long;\n        TRUNCATE TABLE performance_schema.events_stages_history_long;\n    END IF;\n    SET v_auto_enable = in_auto_enable;\n    IF v_auto_enable THEN\n        CALL sys.ps_setup_save(0);\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = IF(PROCESSLIST_ID IS NOT NULL, \'YES\', \'NO\');\n        UPDATE performance_schema.setup_consumers\n           SET ENABLED = \'YES\'\n         WHERE NAME NOT LIKE \'%\\_history\'\n               AND NAME NOT LIKE \'events_wait%\'\n               AND NAME NOT LIKE \'events_transactions%\'\n               AND NAME <> \'statements_digest\';\n        UPDATE performance_schema.setup_instruments\n           SET ENABLED = \'YES\',\n               TIMED   = \'YES\'\n         WHERE NAME LIKE \'statement/%\' OR NAME LIKE \'stage/%\';\n    END IF;\n    WHILE v_runtime < in_runtime DO\n        SELECT UNIX_TIMESTAMP() INTO v_start;\n        INSERT IGNORE INTO stmt_trace\n        SELECT thread_id, timer_start, event_id, sql_text, timer_wait, lock_time, errors, mysql_errno,\n               rows_sent, rows_affected, rows_examined, created_tmp_tables, created_tmp_disk_tables, no_index_used\n          FROM performance_schema.events_statements_history_long\n        WHERE digest = in_digest;\n        INSERT IGNORE INTO stmt_stages\n        SELECT stages.event_id, stmt_trace.event_id,\n               stages.event_name, stages.timer_wait\n          FROM performance_schema.events_stages_history_long AS stages\n          JOIN stmt_trace ON stages.nesting_event_id = stmt_trace.event_id;\n        SELECT SLEEP(in_interval) INTO @sleep;\n        SET v_runtime = v_runtime + (UNIX_TIMESTAMP() - v_start);\n    END WHILE;\n    SELECT \"SUMMARY STATISTICS\";\n    SELECT COUNT(*) executions,\n           sys.format_time(SUM(timer_wait)) AS exec_time,\n           sys.format_time(SUM(lock_time)) AS lock_time,\n           SUM(rows_sent) AS rows_sent,\n           SUM(rows_affected) AS rows_affected,\n           SUM(rows_examined) AS rows_examined,\n           SUM(created_tmp_tables) AS tmp_tables,\n           SUM(no_index_used) AS full_scans\n      FROM stmt_trace;\n    SELECT event_name,\n           COUNT(*) as count,\n           sys.format_time(SUM(timer_wait)) as latency\n      FROM stmt_stages\n     GROUP BY event_name\n     ORDER BY SUM(timer_wait) DESC;\n    SELECT \"LONGEST RUNNING STATEMENT\";\n    SELECT thread_id,\n           sys.format_time(timer_wait) AS exec_time,\n           sys.format_time(lock_time) AS lock_time,\n           rows_sent,\n           rows_affected,\n           rows_examined,\n           created_tmp_tables AS tmp_tables,\n           no_index_used AS full_scan\n      FROM stmt_trace\n     ORDER BY timer_wait DESC LIMIT 1;\n    SELECT sql_text\n      FROM stmt_trace\n     ORDER BY timer_wait DESC LIMIT 1;\n    SELECT sql_text, event_id INTO @sql, @sql_id\n      FROM stmt_trace\n    ORDER BY timer_wait DESC LIMIT 1;\n    IF (@sql_id IS NOT NULL) THEN\n        SELECT event_name,\n               sys.format_time(timer_wait) as latency\n          FROM stmt_stages\n         WHERE stmt_id = @sql_id\n         ORDER BY event_id;\n    END IF;\n    DROP TEMPORARY TABLE stmt_trace;\n    DROP TEMPORARY TABLE stmt_stages;\n    IF (@sql IS NOT NULL) THEN\n        SET @stmt := CONCAT(\"EXPLAIN FORMAT=JSON \", @sql);\n        BEGIN\n            DECLARE CONTINUE HANDLER FOR 1064, 1146 SET v_explain = false;\n            PREPARE explain_stmt FROM @stmt;\n        END;\n        IF (v_explain) THEN\n            EXECUTE explain_stmt;\n            DEALLOCATE PREPARE explain_stmt;\n        END IF;\n    END IF;\n    IF v_auto_enable THEN\n        CALL sys.ps_setup_reload_saved();\n    END IF;\n    IF (v_this_thread_enabed = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','NONE'),('sys','ps_trace_thread','PROCEDURE','ps_trace_thread','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_thread_id BIGINT UNSIGNED,\n        IN in_outfile VARCHAR(255),\n        IN in_max_runtime DECIMAL(20,2),\n        IN in_interval DECIMAL(20,2),\n        IN in_start_fresh BOOLEAN,\n        IN in_auto_setup BOOLEAN,\n        IN in_debug BOOLEAN\n    ','','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_start, v_runtime DECIMAL(20,2) DEFAULT 0.0;\n    DECLARE v_min_event_id bigint unsigned DEFAULT 0;\n    DECLARE v_this_thread_enabed ENUM(\'YES\', \'NO\');\n    DECLARE v_event longtext;\n    DECLARE c_stack CURSOR FOR\n        SELECT CONCAT(IF(nesting_event_id IS NOT NULL, CONCAT(nesting_event_id, \' -> \'), \'\'),\n                    event_id, \'; \', event_id, \' [label=\"\',\n                    \'(\', sys.format_time(timer_wait), \') \',\n                    IF (event_name NOT LIKE \'wait/io%\',\n                        SUBSTRING_INDEX(event_name, \'/\', -2),\n                        IF (event_name NOT LIKE \'wait/io/file%\' OR event_name NOT LIKE \'wait/io/socket%\',\n                            SUBSTRING_INDEX(event_name, \'/\', -4),\n                            event_name)\n                        ),\n                    IF (event_name LIKE \'statement/%\', IFNULL(CONCAT(\'\\\\n\', wait_info), \'\'), \'\'),\n                    IF (in_debug AND event_name LIKE \'wait%\', wait_info, \'\'),\n                    \'\", \',\n                    CASE WHEN event_name LIKE \'wait/io/file%\' THEN\n                           \'shape=box, style=filled, color=red\'\n                         WHEN event_name LIKE \'wait/io/table%\' THEN\n                           \'shape=box, style=filled, color=green\'\n                         WHEN event_name LIKE \'wait/io/socket%\' THEN\n                           \'shape=box, style=filled, color=yellow\'\n                         WHEN event_name LIKE \'wait/synch/mutex%\' THEN\n                           \'style=filled, color=lightskyblue\'\n                         WHEN event_name LIKE \'wait/synch/cond%\' THEN\n                           \'style=filled, color=darkseagreen3\'\n                         WHEN event_name LIKE \'wait/synch/rwlock%\' THEN\n                           \'style=filled, color=orchid\'\n                         WHEN event_name LIKE \'wait/lock%\' THEN\n                           \'shape=box, style=filled, color=tan\'\n                         WHEN event_name LIKE \'statement/%\' THEN\n                           CONCAT(\'shape=box, style=bold\',\n                                  CASE WHEN event_name LIKE \'statement/com/%\' THEN\n                                         \' style=filled, color=darkseagreen\'\n                                       ELSE\n                                         IF((timer_wait/1000000000000) > @@long_query_time,\n                                            \' style=filled, color=red\',\n                                            \' style=filled, color=lightblue\')\n                                  END\n                           )\n                         WHEN event_name LIKE \'stage/%\' THEN\n                           \'style=filled, color=slategray3\'\n                         WHEN event_name LIKE \'%idle%\' THEN\n                           \'shape=box, style=filled, color=firebrick3\'\n                         ELSE \'\' END,\n                     \'];\\n\'\n                   ) event, event_id\n        FROM (\n             (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,\n                     CONCAT(sql_text, \'\\\\n\',\n                            \'errors: \', errors, \'\\\\n\',\n                            \'warnings: \', warnings, \'\\\\n\',\n                            \'lock time: \', sys.format_time(lock_time),\'\\\\n\',\n                            \'rows affected: \', rows_affected, \'\\\\n\',\n                            \'rows sent: \', rows_sent, \'\\\\n\',\n                            \'rows examined: \', rows_examined, \'\\\\n\',\n                            \'tmp tables: \', created_tmp_tables, \'\\\\n\',\n                            \'tmp disk tables: \', created_tmp_disk_tables, \'\\\\n\'\n                            \'select scan: \', select_scan, \'\\\\n\',\n                            \'select full join: \', select_full_join, \'\\\\n\',\n                            \'select full range join: \', select_full_range_join, \'\\\\n\',\n                            \'select range: \', select_range, \'\\\\n\',\n                            \'select range check: \', select_range_check, \'\\\\n\',\n                            \'sort merge passes: \', sort_merge_passes, \'\\\\n\',\n                            \'sort rows: \', sort_rows, \'\\\\n\',\n                            \'sort range: \', sort_range, \'\\\\n\',\n                            \'sort scan: \', sort_scan, \'\\\\n\',\n                            \'no index used: \', IF(no_index_used, \'TRUE\', \'FALSE\'), \'\\\\n\',\n                            \'no good index used: \', IF(no_good_index_used, \'TRUE\', \'FALSE\'), \'\\\\n\'\n                     ) AS wait_info\n                FROM performance_schema.events_statements_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n             UNION\n             (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info\n                FROM performance_schema.events_stages_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n             UNION\n             (SELECT thread_id, event_id,\n                     CONCAT(event_name,\n                            IF(event_name NOT LIKE \'wait/synch/mutex%\', IFNULL(CONCAT(\' - \', operation), \'\'), \'\'),\n                            IF(number_of_bytes IS NOT NULL, CONCAT(\' \', number_of_bytes, \' bytes\'), \'\'),\n                            IF(event_name LIKE \'wait/io/file%\', \'\\\\n\', \'\'),\n                            IF(object_schema IS NOT NULL, CONCAT(\'\\\\nObject: \', object_schema, \'.\'), \'\'),\n                            IF(object_name IS NOT NULL,\n                               IF (event_name LIKE \'wait/io/socket%\',\n                                   CONCAT(\'\\\\n\', IF (object_name LIKE \':0%\', @@socket, object_name)),\n                                   object_name),\n                               \'\'\n                            ),\n                            IF(index_name IS NOT NULL, CONCAT(\' Index: \', index_name), \'\'), \'\\\\n\'\n                     ) AS event_name,\n                     timer_wait, timer_start, nesting_event_id, source AS wait_info\n                FROM performance_schema.events_waits_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n           ) events\n       ORDER BY event_id;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    IF (in_auto_setup) THEN\n        CALL sys.ps_setup_save(0);\n        DELETE FROM performance_schema.setup_actors;\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = IF(THREAD_ID = in_thread_id, \'YES\', \'NO\');\n        UPDATE performance_schema.setup_consumers\n           SET ENABLED = \'YES\'\n         WHERE NAME NOT LIKE \'%\\_history\';\n        UPDATE performance_schema.setup_instruments\n           SET ENABLED = \'YES\',\n               TIMED   = \'YES\';\n    END IF;\n    IF (in_start_fresh) THEN\n        TRUNCATE performance_schema.events_statements_history_long;\n        TRUNCATE performance_schema.events_stages_history_long;\n        TRUNCATE performance_schema.events_waits_history_long;\n    END IF;\n    DROP TEMPORARY TABLE IF EXISTS tmp_events;\n    CREATE TEMPORARY TABLE tmp_events (\n      event_id bigint unsigned NOT NULL,\n      event longblob,\n      PRIMARY KEY (event_id)\n    );\n    INSERT INTO tmp_events VALUES (0, CONCAT(\'digraph events { rankdir=LR; nodesep=0.10;\\n\',\n                                             \'// Stack created .....: \', NOW(), \'\\n\',\n                                             \'// MySQL version .....: \', VERSION(), \'\\n\',\n                                             \'// MySQL hostname ....: \', @@hostname, \'\\n\',\n                                             \'// MySQL port ........: \', @@port, \'\\n\',\n                                             \'// MySQL socket ......: \', @@socket, \'\\n\',\n                                             \'// MySQL user ........: \', CURRENT_USER(), \'\\n\'));\n    SELECT CONCAT(\'Data collection starting for THREAD_ID = \', in_thread_id) AS \'Info\';\n    SET v_min_event_id = 0,\n        v_start        = UNIX_TIMESTAMP(),\n        in_interval    = IFNULL(in_interval, 1.00),\n        in_max_runtime = IFNULL(in_max_runtime, 60.00);\n    WHILE (v_runtime < in_max_runtime\n           AND (SELECT INSTRUMENTED FROM performance_schema.threads WHERE THREAD_ID = in_thread_id) = \'YES\') DO\n        SET v_done = FALSE;\n        OPEN c_stack;\n        c_stack_loop: LOOP\n            FETCH c_stack INTO v_event, v_min_event_id;\n            IF v_done THEN\n                LEAVE c_stack_loop;\n            END IF;\n            IF (LENGTH(v_event) > 0) THEN\n                INSERT INTO tmp_events VALUES (v_min_event_id, v_event);\n            END IF;\n        END LOOP;\n        CLOSE c_stack;\n        SELECT SLEEP(in_interval) INTO @sleep;\n        SET v_runtime = (UNIX_TIMESTAMP() - v_start);\n    END WHILE;\n    INSERT INTO tmp_events VALUES (v_min_event_id+1, \'}\');\n    SET @query = CONCAT(\'SELECT event FROM tmp_events ORDER BY event_id INTO OUTFILE \'\'\', in_outfile, \'\'\' FIELDS ESCAPED BY \'\'\'\' LINES TERMINATED BY \'\'\'\'\');\n    PREPARE stmt_output FROM @query;\n    EXECUTE stmt_output;\n    DEALLOCATE PREPARE stmt_output;\n    SELECT CONCAT(\'Stack trace written to \', in_outfile) AS \'Info\';\n    SELECT CONCAT(\'dot -Tpdf -o /tmp/stack_\', in_thread_id, \'.pdf \', in_outfile) AS \'Convert to PDF\';\n    SELECT CONCAT(\'dot -Tpng -o /tmp/stack_\', in_thread_id, \'.png \', in_outfile) AS \'Convert to PNG\';\n    DROP TEMPORARY TABLE tmp_events;\n    IF (in_auto_setup) THEN\n        CALL sys.ps_setup_reload_saved();\n    END IF;\n    IF (v_this_thread_enabed = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Dumps all data within Performance Schema for an instrumented thread,\n             to create a DOT formatted graph file.\n             Each resultset returned from the procedure should be used for a complete graph\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Parameters\n             in_thread_id (BIGINT UNSIGNED):\n               The thread that you would like a stack trace for\n             in_outfile  (VARCHAR(255)):\n               The filename the dot file will be written to\n             in_max_runtime (DECIMAL(20,2)):\n               The maximum time to keep collecting data.\n               Use NULL to get the default which is 60 seconds.\n             in_interval (DECIMAL(20,2)):\n               How long to sleep between data collections.\n               Use NULL to get the default which is 1 second.\n             in_start_fresh (BOOLEAN):\n               Whether to reset all Performance Schema data before tracing.\n             in_auto_setup (BOOLEAN):\n               Whether to disable all other threads and enable all consumers/instruments.\n               This will also reset the settings at the end of the run.\n             in_debug (BOOLEAN):\n               Whether you would like to include file:lineno in the graph\n             Example\n             mysql> CALL sys.ps_trace_thread(25, CONCAT(\'/tmp/stack-\', REPLACE(NOW(), \' \', \'-\'), \'.dot\'), NULL, NULL, TRUE, TRUE, TRUE);\n             +-------------------+\n             | summary           |\n             +-------------------+\n             | Disabled 1 thread |\n             +-------------------+\n             1 row in set (0.00 sec)\n             +---------------------------------------------+\n             | Info                                        |\n             +---------------------------------------------+\n             | Data collection starting for THREAD_ID = 25 |\n             +---------------------------------------------+\n             1 row in set (0.03 sec)\n             +-----------------------------------------------------------+\n             | Info                                                      |\n             +-----------------------------------------------------------+\n             | Stack trace written to /tmp/stack-2014-02-16-21:18:41.dot |\n             +-----------------------------------------------------------+\n             1 row in set (60.07 sec)\n             +-------------------------------------------------------------------+\n             | Convert to PDF                                                    |\n             +-------------------------------------------------------------------+\n             | dot -Tpdf -o /tmp/stack_25.pdf /tmp/stack-2014-02-16-21:18:41.dot |\n             +-------------------------------------------------------------------+\n             1 row in set (60.07 sec)\n             +-------------------------------------------------------------------+\n             | Convert to PNG                                                    |\n             +-------------------------------------------------------------------+\n             | dot -Tpng -o /tmp/stack_25.png /tmp/stack-2014-02-16-21:18:41.dot |\n             +-------------------------------------------------------------------+\n             1 row in set (60.07 sec)\n             +------------------+\n             | summary          |\n             +------------------+\n             | Enabled 1 thread |\n             +------------------+\n             1 row in set (60.32 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_start, v_runtime DECIMAL(20,2) DEFAULT 0.0;\n    DECLARE v_min_event_id bigint unsigned DEFAULT 0;\n    DECLARE v_this_thread_enabed ENUM(\'YES\', \'NO\');\n    DECLARE v_event longtext;\n    DECLARE c_stack CURSOR FOR\n        SELECT CONCAT(IF(nesting_event_id IS NOT NULL, CONCAT(nesting_event_id, \' -> \'), \'\'),\n                    event_id, \'; \', event_id, \' [label=\"\',\n                    \'(\', sys.format_time(timer_wait), \') \',\n                    IF (event_name NOT LIKE \'wait/io%\',\n                        SUBSTRING_INDEX(event_name, \'/\', -2),\n                        IF (event_name NOT LIKE \'wait/io/file%\' OR event_name NOT LIKE \'wait/io/socket%\',\n                            SUBSTRING_INDEX(event_name, \'/\', -4),\n                            event_name)\n                        ),\n                    IF (event_name LIKE \'statement/%\', IFNULL(CONCAT(\'\\n\', wait_info), \'\'), \'\'),\n                    IF (in_debug AND event_name LIKE \'wait%\', wait_info, \'\'),\n                    \'\", \',\n                    CASE WHEN event_name LIKE \'wait/io/file%\' THEN\n                           \'shape=box, style=filled, color=red\'\n                         WHEN event_name LIKE \'wait/io/table%\' THEN\n                           \'shape=box, style=filled, color=green\'\n                         WHEN event_name LIKE \'wait/io/socket%\' THEN\n                           \'shape=box, style=filled, color=yellow\'\n                         WHEN event_name LIKE \'wait/synch/mutex%\' THEN\n                           \'style=filled, color=lightskyblue\'\n                         WHEN event_name LIKE \'wait/synch/cond%\' THEN\n                           \'style=filled, color=darkseagreen3\'\n                         WHEN event_name LIKE \'wait/synch/rwlock%\' THEN\n                           \'style=filled, color=orchid\'\n                         WHEN event_name LIKE \'wait/lock%\' THEN\n                           \'shape=box, style=filled, color=tan\'\n                         WHEN event_name LIKE \'statement/%\' THEN\n                           CONCAT(\'shape=box, style=bold\',\n                                  CASE WHEN event_name LIKE \'statement/com/%\' THEN\n                                         \' style=filled, color=darkseagreen\'\n                                       ELSE\n                                         IF((timer_wait/1000000000000) > @@long_query_time,\n                                            \' style=filled, color=red\',\n                                            \' style=filled, color=lightblue\')\n                                  END\n                           )\n                         WHEN event_name LIKE \'stage/%\' THEN\n                           \'style=filled, color=slategray3\'\n                         WHEN event_name LIKE \'%idle%\' THEN\n                           \'shape=box, style=filled, color=firebrick3\'\n                         ELSE \'\' END,\n                     \'];\\n\'\n                   ) event, event_id\n        FROM (\n             (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,\n                     CONCAT(sql_text, \'\\n\',\n                            \'errors: \', errors, \'\\n\',\n                            \'warnings: \', warnings, \'\\n\',\n                            \'lock time: \', sys.format_time(lock_time),\'\\n\',\n                            \'rows affected: \', rows_affected, \'\\n\',\n                            \'rows sent: \', rows_sent, \'\\n\',\n                            \'rows examined: \', rows_examined, \'\\n\',\n                            \'tmp tables: \', created_tmp_tables, \'\\n\',\n                            \'tmp disk tables: \', created_tmp_disk_tables, \'\\n\'\n                            \'select scan: \', select_scan, \'\\n\',\n                            \'select full join: \', select_full_join, \'\\n\',\n                            \'select full range join: \', select_full_range_join, \'\\n\',\n                            \'select range: \', select_range, \'\\n\',\n                            \'select range check: \', select_range_check, \'\\n\',\n                            \'sort merge passes: \', sort_merge_passes, \'\\n\',\n                            \'sort rows: \', sort_rows, \'\\n\',\n                            \'sort range: \', sort_range, \'\\n\',\n                            \'sort scan: \', sort_scan, \'\\n\',\n                            \'no index used: \', IF(no_index_used, \'TRUE\', \'FALSE\'), \'\\n\',\n                            \'no good index used: \', IF(no_good_index_used, \'TRUE\', \'FALSE\'), \'\\n\'\n                     ) AS wait_info\n                FROM performance_schema.events_statements_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n             UNION\n             (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info\n                FROM performance_schema.events_stages_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n             UNION\n             (SELECT thread_id, event_id,\n                     CONCAT(event_name,\n                            IF(event_name NOT LIKE \'wait/synch/mutex%\', IFNULL(CONCAT(\' - \', operation), \'\'), \'\'),\n                            IF(number_of_bytes IS NOT NULL, CONCAT(\' \', number_of_bytes, \' bytes\'), \'\'),\n                            IF(event_name LIKE \'wait/io/file%\', \'\\n\', \'\'),\n                            IF(object_schema IS NOT NULL, CONCAT(\'\\nObject: \', object_schema, \'.\'), \'\'),\n                            IF(object_name IS NOT NULL,\n                               IF (event_name LIKE \'wait/io/socket%\',\n                                   CONCAT(\'\\n\', IF (object_name LIKE \':0%\', @@socket, object_name)),\n                                   object_name),\n                               \'\'\n                            ),\n                            IF(index_name IS NOT NULL, CONCAT(\' Index: \', index_name), \'\'), \'\\n\'\n                     ) AS event_name,\n                     timer_wait, timer_start, nesting_event_id, source AS wait_info\n                FROM performance_schema.events_waits_history_long\n               WHERE thread_id = in_thread_id AND event_id > v_min_event_id)\n           ) events\n       ORDER BY event_id;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    IF (in_auto_setup) THEN\n        CALL sys.ps_setup_save(0);\n        DELETE FROM performance_schema.setup_actors;\n        UPDATE performance_schema.threads\n           SET INSTRUMENTED = IF(THREAD_ID = in_thread_id, \'YES\', \'NO\');\n        UPDATE performance_schema.setup_consumers\n           SET ENABLED = \'YES\'\n         WHERE NAME NOT LIKE \'%\\_history\';\n        UPDATE performance_schema.setup_instruments\n           SET ENABLED = \'YES\',\n               TIMED   = \'YES\';\n    END IF;\n    IF (in_start_fresh) THEN\n        TRUNCATE performance_schema.events_statements_history_long;\n        TRUNCATE performance_schema.events_stages_history_long;\n        TRUNCATE performance_schema.events_waits_history_long;\n    END IF;\n    DROP TEMPORARY TABLE IF EXISTS tmp_events;\n    CREATE TEMPORARY TABLE tmp_events (\n      event_id bigint unsigned NOT NULL,\n      event longblob,\n      PRIMARY KEY (event_id)\n    );\n    INSERT INTO tmp_events VALUES (0, CONCAT(\'digraph events { rankdir=LR; nodesep=0.10;\\n\',\n                                             \'// Stack created .....: \', NOW(), \'\\n\',\n                                             \'// MySQL version .....: \', VERSION(), \'\\n\',\n                                             \'// MySQL hostname ....: \', @@hostname, \'\\n\',\n                                             \'// MySQL port ........: \', @@port, \'\\n\',\n                                             \'// MySQL socket ......: \', @@socket, \'\\n\',\n                                             \'// MySQL user ........: \', CURRENT_USER(), \'\\n\'));\n    SELECT CONCAT(\'Data collection starting for THREAD_ID = \', in_thread_id) AS \'Info\';\n    SET v_min_event_id = 0,\n        v_start        = UNIX_TIMESTAMP(),\n        in_interval    = IFNULL(in_interval, 1.00),\n        in_max_runtime = IFNULL(in_max_runtime, 60.00);\n    WHILE (v_runtime < in_max_runtime\n           AND (SELECT INSTRUMENTED FROM performance_schema.threads WHERE THREAD_ID = in_thread_id) = \'YES\') DO\n        SET v_done = FALSE;\n        OPEN c_stack;\n        c_stack_loop: LOOP\n            FETCH c_stack INTO v_event, v_min_event_id;\n            IF v_done THEN\n                LEAVE c_stack_loop;\n            END IF;\n            IF (LENGTH(v_event) > 0) THEN\n                INSERT INTO tmp_events VALUES (v_min_event_id, v_event);\n            END IF;\n        END LOOP;\n        CLOSE c_stack;\n        SELECT SLEEP(in_interval) INTO @sleep;\n        SET v_runtime = (UNIX_TIMESTAMP() - v_start);\n    END WHILE;\n    INSERT INTO tmp_events VALUES (v_min_event_id+1, \'}\');\n    SET @query = CONCAT(\'SELECT event FROM tmp_events ORDER BY event_id INTO OUTFILE \'\'\', in_outfile, \'\'\' FIELDS ESCAPED BY \'\'\'\' LINES TERMINATED BY \'\'\'\'\');\n    PREPARE stmt_output FROM @query;\n    EXECUTE stmt_output;\n    DEALLOCATE PREPARE stmt_output;\n    SELECT CONCAT(\'Stack trace written to \', in_outfile) AS \'Info\';\n    SELECT CONCAT(\'dot -Tpdf -o /tmp/stack_\', in_thread_id, \'.pdf \', in_outfile) AS \'Convert to PDF\';\n    SELECT CONCAT(\'dot -Tpng -o /tmp/stack_\', in_thread_id, \'.png \', in_outfile) AS \'Convert to PNG\';\n    DROP TEMPORARY TABLE tmp_events;\n    IF (in_auto_setup) THEN\n        CALL sys.ps_setup_reload_saved();\n    END IF;\n    IF (v_this_thread_enabed = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','NONE'),('sys','ps_setup_reset_to_default','PROCEDURE','ps_setup_reset_to_default','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n       IN in_verbose BOOLEAN\n    ','','BEGIN\n    SET @query = \'DELETE\n                    FROM performance_schema.setup_actors\n                   WHERE NOT (HOST = \'\'%\'\' AND USER = \'\'%\'\' AND ROLE = \'\'%\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_actors\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'INSERT IGNORE INTO performance_schema.setup_actors\n                  VALUES (\'\'%\'\', \'\'%\'\', \'\'%\'\', \'\'YES\'\', \'\'YES\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_actors\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.setup_instruments\n                     SET ENABLED = sys.ps_is_instrument_default_enabled(NAME),\n                         TIMED   = sys.ps_is_instrument_default_timed(NAME)\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_instruments\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.setup_consumers\n                     SET ENABLED = IF(NAME IN (\'\'events_statements_current\'\', \'\'events_transactions_current\'\', \'\'global_instrumentation\'\', \'\'thread_instrumentation\'\', \'\'statements_digest\'\'), \'\'YES\'\', \'\'NO\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_consumers\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'DELETE\n                    FROM performance_schema.setup_objects\n                   WHERE NOT (OBJECT_TYPE IN (\'\'EVENT\'\', \'\'FUNCTION\'\', \'\'PROCEDURE\'\', \'\'TABLE\'\', \'\'TRIGGER\'\') AND OBJECT_NAME = \'\'%\'\'\n                     AND (OBJECT_SCHEMA = \'\'mysql\'\'              AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\n                      OR (OBJECT_SCHEMA = \'\'performance_schema\'\' AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\n                      OR (OBJECT_SCHEMA = \'\'information_schema\'\' AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\n                      OR (OBJECT_SCHEMA = \'\'%\'\'                  AND ENABLED = \'\'YES\'\' AND TIMED = \'\'YES\'\'))\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_objects\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'INSERT IGNORE INTO performance_schema.setup_objects\n                  VALUES (\'\'EVENT\'\'    , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'EVENT\'\'    , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'EVENT\'\'    , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'EVENT\'\'    , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\n                         (\'\'FUNCTION\'\' , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'FUNCTION\'\' , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'FUNCTION\'\' , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'FUNCTION\'\' , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\n                         (\'\'PROCEDURE\'\', \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'PROCEDURE\'\', \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'PROCEDURE\'\', \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'PROCEDURE\'\', \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\n                         (\'\'TABLE\'\'    , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TABLE\'\'    , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TABLE\'\'    , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TABLE\'\'    , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\n                         (\'\'TRIGGER\'\'  , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TRIGGER\'\'  , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TRIGGER\'\'  , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\n                         (\'\'TRIGGER\'\'  , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_objects\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.threads\n                     SET INSTRUMENTED = \'\'YES\'\'\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: threads\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Resets the Performance Schema setup to the default settings.\n             Parameters\n             in_verbose (BOOLEAN):\n               Whether to print each setup stage (including the SQL) whilst running.\n             Example\n             mysql> CALL sys.ps_setup_reset_to_default(true)\\G\n             *************************** 1. row ***************************\n             status: Resetting: setup_actors\n             DELETE\n             FROM performance_schema.setup_actors\n              WHERE NOT (HOST = \'%\' AND USER = \'%\' AND ROLE = \'%\')\n             1 row in set (0.00 sec)\n             *************************** 1. row ***************************\n             status: Resetting: setup_actors\n             INSERT IGNORE INTO performance_schema.setup_actors\n             VALUES (\'%\', \'%\', \'%\')\n             1 row in set (0.00 sec)\n             ...\n             mysql> CALL sys.ps_setup_reset_to_default(false)\\G\n             Query OK, 0 rows affected (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SET @query = \'DELETE\\n                    FROM performance_schema.setup_actors\\n                   WHERE NOT (HOST = \'\'%\'\' AND USER = \'\'%\'\' AND ROLE = \'\'%\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_actors\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'INSERT IGNORE INTO performance_schema.setup_actors\\n                  VALUES (\'\'%\'\', \'\'%\'\', \'\'%\'\', \'\'YES\'\', \'\'YES\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_actors\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.setup_instruments\\n                     SET ENABLED = sys.ps_is_instrument_default_enabled(NAME),\\n                         TIMED   = sys.ps_is_instrument_default_timed(NAME)\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_instruments\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.setup_consumers\\n                     SET ENABLED = IF(NAME IN (\'\'events_statements_current\'\', \'\'events_transactions_current\'\', \'\'global_instrumentation\'\', \'\'thread_instrumentation\'\', \'\'statements_digest\'\'), \'\'YES\'\', \'\'NO\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_consumers\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'DELETE\\n                    FROM performance_schema.setup_objects\\n                   WHERE NOT (OBJECT_TYPE IN (\'\'EVENT\'\', \'\'FUNCTION\'\', \'\'PROCEDURE\'\', \'\'TABLE\'\', \'\'TRIGGER\'\') AND OBJECT_NAME = \'\'%\'\'\\n                     AND (OBJECT_SCHEMA = \'\'mysql\'\'              AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\\n                      OR (OBJECT_SCHEMA = \'\'performance_schema\'\' AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\\n                      OR (OBJECT_SCHEMA = \'\'information_schema\'\' AND ENABLED = \'\'NO\'\'  AND TIMED = \'\'NO\'\' )\\n                      OR (OBJECT_SCHEMA = \'\'%\'\'                  AND ENABLED = \'\'YES\'\' AND TIMED = \'\'YES\'\'))\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_objects\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'INSERT IGNORE INTO performance_schema.setup_objects\\n                  VALUES (\'\'EVENT\'\'    , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'EVENT\'\'    , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'EVENT\'\'    , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'EVENT\'\'    , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\\n                         (\'\'FUNCTION\'\' , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'FUNCTION\'\' , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'FUNCTION\'\' , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'FUNCTION\'\' , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\\n                         (\'\'PROCEDURE\'\', \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'PROCEDURE\'\', \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'PROCEDURE\'\', \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'PROCEDURE\'\', \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\\n                         (\'\'TABLE\'\'    , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TABLE\'\'    , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TABLE\'\'    , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TABLE\'\'    , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\'),\\n                         (\'\'TRIGGER\'\'  , \'\'mysql\'\'             , \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TRIGGER\'\'  , \'\'performance_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TRIGGER\'\'  , \'\'information_schema\'\', \'\'%\'\', \'\'NO\'\' , \'\'NO\'\' ),\\n                         (\'\'TRIGGER\'\'  , \'\'%\'\'                 , \'\'%\'\', \'\'YES\'\', \'\'YES\'\')\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: setup_objects\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\n    SET @query = \'UPDATE performance_schema.threads\\n                     SET INSTRUMENTED = \'\'YES\'\'\';\n    IF (in_verbose) THEN\n        SELECT CONCAT(\'Resetting: threads\\n\', REPLACE(@query, \'  \', \'\')) AS status;\n    END IF;\n    PREPARE reset_stmt FROM @query;\n    EXECUTE reset_stmt;\n    DEALLOCATE PREPARE reset_stmt;\nEND','NONE'),('sys','ps_setup_show_disabled_instruments','PROCEDURE','ps_setup_show_disabled_instruments','SQL','READS_SQL_DATA','YES','INVOKER','','','BEGIN\n    SELECT name AS disabled_instruments, timed\n      FROM performance_schema.setup_instruments\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_instruments;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently disabled instruments.\n             Parameters\n             None\n             Example\n             mysql> CALL sys.ps_setup_show_disabled_instruments();\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT name AS disabled_instruments, timed\n      FROM performance_schema.setup_instruments\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_instruments;\nEND','NONE'),('sys','format_time','FUNCTION','format_time','SQL','NO_SQL','YES','INVOKER','picoseconds TEXT\n    ','text CHARSET utf8mb3','BEGIN\n  IF picoseconds IS NULL THEN RETURN NULL;\n  ELSEIF picoseconds >= 604800000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 604800000000000000, 2), \' w\');\n  ELSEIF picoseconds >= 86400000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 86400000000000000, 2), \' d\');\n  ELSEIF picoseconds >= 3600000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 3600000000000000, 2), \' h\');\n  ELSEIF picoseconds >= 60000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 60000000000000, 2), \' m\');\n  ELSEIF picoseconds >= 1000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000000, 2), \' s\');\n  ELSEIF picoseconds >= 1000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000, 2), \' ms\');\n  ELSEIF picoseconds >= 1000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000, 2), \' us\');\n  ELSEIF picoseconds >= 1000 THEN RETURN CONCAT(ROUND(picoseconds / 1000, 2), \' ns\');\n  ELSE RETURN CONCAT(picoseconds, \' ps\');\n  END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a raw picoseconds value, and converts it to a human readable form.\n             Picoseconds are the precision that all latency values are printed in\n             within Performance Schema, however are not user friendly when wanting\n             to scan output from the command line.\n             Parameters\n             picoseconds (TEXT):\n               The raw picoseconds value to convert.\n             Returns\n             TEXT\n             Example\n             mysql> select format_time(342342342342345);\n             +------------------------------+\n             | format_time(342342342342345) |\n             +------------------------------+\n             | 00:05:42                     |\n             +------------------------------+\n             1 row in set (0.00 sec)\n             mysql> select format_time(342342342);\n             +------------------------+\n             | format_time(342342342) |\n             +------------------------+\n             | 342.34 us              |\n             +------------------------+\n             1 row in set (0.00 sec)\n             mysql> select format_time(34234);\n              +--------------------+\n             | format_time(34234) |\n             +--------------------+\n             | 34.23 ns           |\n             +--------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n  IF picoseconds IS NULL THEN RETURN NULL;\n  ELSEIF picoseconds >= 604800000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 604800000000000000, 2), \' w\');\n  ELSEIF picoseconds >= 86400000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 86400000000000000, 2), \' d\');\n  ELSEIF picoseconds >= 3600000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 3600000000000000, 2), \' h\');\n  ELSEIF picoseconds >= 60000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 60000000000000, 2), \' m\');\n  ELSEIF picoseconds >= 1000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000000, 2), \' s\');\n  ELSEIF picoseconds >= 1000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000, 2), \' ms\');\n  ELSEIF picoseconds >= 1000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000, 2), \' us\');\n  ELSEIF picoseconds >= 1000 THEN RETURN CONCAT(ROUND(picoseconds / 1000, 2), \' ns\');\n  ELSE RETURN CONCAT(picoseconds, \' ps\');\n  END IF;\nEND','NONE'),('sys','list_drop','FUNCTION','list_drop','SQL','CONTAINS_SQL','YES','INVOKER','in_list TEXT,\n        in_drop_value TEXT\n    ','text CHARSET utf8mb3','BEGIN\n    IF (in_drop_value IS NULL) THEN\n        SIGNAL SQLSTATE \'02200\'\n           SET MESSAGE_TEXT = \'Function sys.list_drop: in_drop_value input variable should not be NULL\',\n               MYSQL_ERRNO = 1138;\n    END IF;\n    IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN\n        RETURN in_list;\n    END IF;\n    RETURN (SELECT TRIM(BOTH \',\' FROM REPLACE(REPLACE(CONCAT(\',\', in_list), CONCAT(\',\', in_drop_value), \'\'), CONCAT(\', \', in_drop_value), \'\')));\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes a list, and a value to attempt to remove from the list, and returns the resulting list.\n             Useful for altering certain session variables, like sql_mode or optimizer_switch for instance.\n             Parameters\n             in_list (TEXT):\n               The comma separated list to drop a value from\n             in_drop_value (TEXT):\n               The value to drop from the input list\n             Returns\n             TEXT\n             Example\n             mysql> select @@sql_mode;\n             +-----------------------------------------------------------------------------------------------+\n             | @@sql_mode                                                                                    |\n             +-----------------------------------------------------------------------------------------------+\n             | ANSI_QUOTES,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\n             +-----------------------------------------------------------------------------------------------+\n             1 row in set (0.00 sec)\n             mysql> set sql_mode = sys.list_drop(@@sql_mode, \'ONLY_FULL_GROUP_BY\');\n             Query OK, 0 rows affected (0.03 sec)\n             mysql> select @@sql_mode;\n             +----------------------------------------------------------------------------+\n             | @@sql_mode                                                                 |\n             +----------------------------------------------------------------------------+\n             | ANSI_QUOTES,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\n             +----------------------------------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    IF (in_drop_value IS NULL) THEN\n        SIGNAL SQLSTATE \'02200\'\n           SET MESSAGE_TEXT = \'Function sys.list_drop: in_drop_value input variable should not be NULL\',\n               MYSQL_ERRNO = 1138;\n    END IF;\n    IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN\n        RETURN in_list;\n    END IF;\n    RETURN (SELECT TRIM(BOTH \',\' FROM REPLACE(REPLACE(CONCAT(\',\', in_list), CONCAT(\',\', in_drop_value), \'\'), CONCAT(\', \', in_drop_value), \'\')));\nEND','NONE'),('sys','ps_setup_show_enabled_instruments','PROCEDURE','ps_setup_show_enabled_instruments','SQL','READS_SQL_DATA','YES','INVOKER','','','BEGIN\n    SELECT name AS enabled_instruments, timed\n      FROM performance_schema.setup_instruments\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_instruments;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently enabled instruments.\n             Parameters\n             None\n             Example\n             mysql> CALL sys.ps_setup_show_enabled_instruments();\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT name AS enabled_instruments, timed\n      FROM performance_schema.setup_instruments\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_instruments;\nEND','NONE'),('sys','statement_performance_analyzer','PROCEDURE','statement_performance_analyzer','SQL','CONTAINS_SQL','NO','INVOKER','\n        IN in_action ENUM(\'snapshot\', \'overall\', \'delta\', \'create_table\', \'create_tmp\', \'save\', \'cleanup\'),\n        IN in_table VARCHAR(129),\n        IN in_views SET (\'with_runtimes_in_95th_percentile\', \'analysis\', \'with_errors_or_warnings\', \'with_full_table_scans\', \'with_sorting\', \'with_temp_tables\', \'custom\')\n    ','','BEGIN\n    DECLARE v_table_exists, v_tmp_digests_table_exists, v_custom_view_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\') DEFAULT \'\';\n    DECLARE v_this_thread_enabled ENUM(\'YES\', \'NO\');\n    DECLARE v_force_new_snapshot BOOLEAN DEFAULT FALSE;\n    DECLARE v_digests_table VARCHAR(133);\n    DECLARE v_quoted_table, v_quoted_custom_view VARCHAR(133) DEFAULT \'\';\n    DECLARE v_table_db, v_table_name, v_custom_db, v_custom_name VARCHAR(64);\n    DECLARE v_digest_table_template, v_checksum_ref, v_checksum_table text;\n    DECLARE v_sql longtext;\n    DECLARE v_error_msg VARCHAR(128);\n    SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    END IF;\n    SET @log_bin := @@sql_log_bin;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = 0;\n    END IF;\n    IF (@sys.statement_performance_analyzer.limit IS NULL) THEN\n        SET @sys.statement_performance_analyzer.limit = sys.sys_get_config(\'statement_performance_analyzer.limit\', \'100\');\n    END IF;\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug                                = sys.sys_get_config(\'debug\'                               , \'OFF\');\n    END IF;\n    IF (in_table = \'NOW()\') THEN\n        SET v_force_new_snapshot = TRUE,\n            in_table             = NULL;\n    ELSEIF (in_table IS NOT NULL) THEN\n        IF (NOT INSTR(in_table, \'.\')) THEN\n            SET v_table_db   = DATABASE(),\n                v_table_name = in_table;\n        ELSE\n            SET v_table_db   = SUBSTRING_INDEX(in_table, \'.\', 1);\n            SET v_table_name = SUBSTRING(in_table, CHAR_LENGTH(v_table_db)+2);\n        END IF;\n        SET v_quoted_table = CONCAT(\'`\', v_table_db, \'`.`\', v_table_name, \'`\');\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'in_table is: db = \'\'\', v_table_db, \'\'\', table = \'\'\', v_table_name, \'\'\'\') AS \'Debug\';\n        END IF;\n        IF (v_table_db = DATABASE() AND (v_table_name = \'tmp_digests\' OR v_table_name = \'tmp_digests_delta\')) THEN\n            SET v_error_msg = CONCAT(\'Invalid value for in_table: \', v_quoted_table, \' is reserved table name.\');\n            SIGNAL SQLSTATE \'45000\'\n               SET MESSAGE_TEXT = v_error_msg;\n        END IF;\n        CALL sys.table_exists(v_table_db, v_table_name, v_table_exists);\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'v_table_exists = \', v_table_exists) AS \'Debug\';\n        END IF;\n        IF (v_table_exists = \'BASE TABLE\') THEN\n            SET v_checksum_ref = (\n                 SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum\n                   FROM information_schema.COLUMNS\n                  WHERE TABLE_SCHEMA = \'performance_schema\' AND TABLE_NAME = \'events_statements_summary_by_digest\'\n                ),\n                v_checksum_table = (\n                 SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum\n                   FROM information_schema.COLUMNS\n                  WHERE TABLE_SCHEMA = v_table_db AND TABLE_NAME = v_table_name\n                );\n            IF (v_checksum_ref <> v_checksum_table) THEN\n                SET v_error_msg = CONCAT(\'The table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 93, CONCAT(\'...\', SUBSTRING(v_quoted_table, -90)), v_quoted_table),\n                                         \' has the wrong definition.\');\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        END IF;\n    END IF;\n    IF (in_views IS NULL OR in_views = \'\') THEN\n        SET in_views = \'with_runtimes_in_95th_percentile,analysis,with_errors_or_warnings,with_full_table_scans,with_sorting,with_temp_tables\';\n    END IF;\n    CALL sys.table_exists(DATABASE(), \'tmp_digests\', v_tmp_digests_table_exists);\n    IF (@sys.debug = \'ON\') THEN\n        SELECT CONCAT(\'v_tmp_digests_table_exists = \', v_tmp_digests_table_exists) AS \'Debug\';\n    END IF;\n    CASE\n        WHEN in_action IN (\'snapshot\', \'overall\') THEN\n            IF (in_table IS NOT NULL) THEN\n                IF (NOT v_table_exists IN (\'TEMPORARY\', \'BASE TABLE\')) THEN\n                    SET v_error_msg = CONCAT(\'The \', in_action, \' action requires in_table to be NULL, NOW() or specify an existing table.\',\n                                             \' The table \',\n                                             IF(CHAR_LENGTH(v_quoted_table) > 16, CONCAT(\'...\', SUBSTRING(v_quoted_table, -13)), v_quoted_table),\n                                             \' does not exist.\');\n                    SIGNAL SQLSTATE \'45000\'\n                       SET MESSAGE_TEXT = v_error_msg;\n                END IF;\n            END IF;\n        WHEN in_action IN (\'delta\', \'save\') THEN\n            IF (v_table_exists NOT IN (\'TEMPORARY\', \'BASE TABLE\')) THEN\n                SET v_error_msg = CONCAT(\'The \', in_action, \' action requires in_table to be an existing table.\',\n                                         IF(in_table IS NOT NULL, CONCAT(\' The table \',\n                                             IF(CHAR_LENGTH(v_quoted_table) > 39, CONCAT(\'...\', SUBSTRING(v_quoted_table, -36)), v_quoted_table),\n                                             \' does not exist.\'), \'\'));\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n            IF (in_action = \'delta\' AND v_tmp_digests_table_exists <> \'TEMPORARY\') THEN\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = \'An existing snapshot generated with the statement_performance_analyzer() must exist.\';\n            END IF;\n        WHEN in_action = \'create_tmp\' THEN\n            IF (v_table_exists = \'TEMPORARY\') THEN\n                SET v_error_msg = CONCAT(\'Cannot create the table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 72, CONCAT(\'...\', SUBSTRING(v_quoted_table, -69)), v_quoted_table),\n                                         \' as it already exists.\');\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        WHEN in_action = \'create_table\' THEN\n            IF (v_table_exists <> \'\') THEN\n                SET v_error_msg = CONCAT(\'Cannot create the table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 52, CONCAT(\'...\', SUBSTRING(v_quoted_table, -49)), v_quoted_table),\n                                         \' as it already exists\',\n                                         IF(v_table_exists = \'TEMPORARY\', \' as a temporary table.\', \'.\'));\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        WHEN in_action = \'cleanup\' THEN\n            DO (SELECT 1);\n        ELSE\n            SIGNAL SQLSTATE \'45000\'\n               SET MESSAGE_TEXT = \'Unknown action. Supported actions are: cleanup, create_table, create_tmp, delta, overall, save, snapshot\';\n    END CASE;\n    SET v_digest_table_template = \'CREATE %{TEMPORARY}TABLE %{TABLE_NAME} (\n  `SCHEMA_NAME` varchar(64) DEFAULT NULL,\n  `DIGEST` varchar(32) DEFAULT NULL,\n  `DIGEST_TEXT` longtext,\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\n  `FIRST_SEEN` timestamp NULL DEFAULT NULL,\n  `LAST_SEEN` timestamp NULL DEFAULT NULL,\n  INDEX (SCHEMA_NAME, DIGEST)\n) DEFAULT CHARSET=utf8\';\n    IF (v_force_new_snapshot\n           OR in_action = \'snapshot\'\n           OR (in_action = \'overall\' AND in_table IS NULL)\n           OR (in_action = \'save\' AND v_tmp_digests_table_exists <> \'TEMPORARY\')\n       ) THEN\n        IF (v_tmp_digests_table_exists = \'TEMPORARY\') THEN\n            IF (@sys.debug = \'ON\') THEN\n                SELECT \'DROP TEMPORARY TABLE IF EXISTS tmp_digests\' AS \'Debug\';\n            END IF;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digests;\n        END IF;\n        CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'TEMPORARY \'), \'%{TABLE_NAME}\', \'tmp_digests\'));\n        SET v_sql = CONCAT(\'INSERT INTO tmp_digests SELECT * FROM \',\n                           IF(in_table IS NULL OR in_action = \'save\', \'performance_schema.events_statements_summary_by_digest\', v_quoted_table));\n        CALL sys.execute_prepared_stmt(v_sql);\n    END IF;\n    IF (in_action IN (\'create_table\', \'create_tmp\')) THEN\n        IF (in_action = \'create_table\') THEN\n            CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'\'), \'%{TABLE_NAME}\', v_quoted_table));\n        ELSE\n            CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'TEMPORARY \'), \'%{TABLE_NAME}\', v_quoted_table));\n        END IF;\n    ELSEIF (in_action = \'save\') THEN\n        CALL sys.execute_prepared_stmt(CONCAT(\'DELETE FROM \', v_quoted_table));\n        CALL sys.execute_prepared_stmt(CONCAT(\'INSERT INTO \', v_quoted_table, \' SELECT * FROM tmp_digests\'));\n    ELSEIF (in_action = \'cleanup\') THEN\n        DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests;\n        DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests_delta;\n    ELSEIF (in_action IN (\'overall\', \'delta\')) THEN\n        IF (in_action = \'overall\') THEN\n            IF (in_table IS NULL) THEN\n                SET v_digests_table = \'tmp_digests\';\n            ELSE\n                SET v_digests_table = v_quoted_table;\n            END IF;\n        ELSE\n            SET v_digests_table = \'tmp_digests_delta\';\n            DROP TEMPORARY TABLE IF EXISTS tmp_digests_delta;\n            CREATE TEMPORARY TABLE tmp_digests_delta LIKE tmp_digests;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digests_delta\nSELECT `d_end`.`SCHEMA_NAME`,\n       `d_end`.`DIGEST`,\n       `d_end`.`DIGEST_TEXT`,\n       `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) AS \'\'COUNT_STAR\'\',\n       `d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0) AS \'\'SUM_TIMER_WAIT\'\',\n       `d_end`.`MIN_TIMER_WAIT` AS \'\'MIN_TIMER_WAIT\'\',\n       IFNULL((`d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0))/NULLIF(`d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0), 0), 0) AS \'\'AVG_TIMER_WAIT\'\',\n       `d_end`.`MAX_TIMER_WAIT` AS \'\'MAX_TIMER_WAIT\'\',\n       `d_end`.`SUM_LOCK_TIME`-IFNULL(`d_start`.`SUM_LOCK_TIME`, 0) AS \'\'SUM_LOCK_TIME\'\',\n       `d_end`.`SUM_ERRORS`-IFNULL(`d_start`.`SUM_ERRORS`, 0) AS \'\'SUM_ERRORS\'\',\n       `d_end`.`SUM_WARNINGS`-IFNULL(`d_start`.`SUM_WARNINGS`, 0) AS \'\'SUM_WARNINGS\'\',\n       `d_end`.`SUM_ROWS_AFFECTED`-IFNULL(`d_start`.`SUM_ROWS_AFFECTED`, 0) AS \'\'SUM_ROWS_AFFECTED\'\',\n       `d_end`.`SUM_ROWS_SENT`-IFNULL(`d_start`.`SUM_ROWS_SENT`, 0) AS \'\'SUM_ROWS_SENT\'\',\n       `d_end`.`SUM_ROWS_EXAMINED`-IFNULL(`d_start`.`SUM_ROWS_EXAMINED`, 0) AS \'\'SUM_ROWS_EXAMINED\'\',\n       `d_end`.`SUM_CREATED_TMP_DISK_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_DISK_TABLES`, 0) AS \'\'SUM_CREATED_TMP_DISK_TABLES\'\',\n       `d_end`.`SUM_CREATED_TMP_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_TABLES`, 0) AS \'\'SUM_CREATED_TMP_TABLES\'\',\n       `d_end`.`SUM_SELECT_FULL_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_JOIN`, 0) AS \'\'SUM_SELECT_FULL_JOIN\'\',\n       `d_end`.`SUM_SELECT_FULL_RANGE_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_RANGE_JOIN`, 0) AS \'\'SUM_SELECT_FULL_RANGE_JOIN\'\',\n       `d_end`.`SUM_SELECT_RANGE`-IFNULL(`d_start`.`SUM_SELECT_RANGE`, 0) AS \'\'SUM_SELECT_RANGE\'\',\n       `d_end`.`SUM_SELECT_RANGE_CHECK`-IFNULL(`d_start`.`SUM_SELECT_RANGE_CHECK`, 0) AS \'\'SUM_SELECT_RANGE_CHECK\'\',\n       `d_end`.`SUM_SELECT_SCAN`-IFNULL(`d_start`.`SUM_SELECT_SCAN`, 0) AS \'\'SUM_SELECT_SCAN\'\',\n       `d_end`.`SUM_SORT_MERGE_PASSES`-IFNULL(`d_start`.`SUM_SORT_MERGE_PASSES`, 0) AS \'\'SUM_SORT_MERGE_PASSES\'\',\n       `d_end`.`SUM_SORT_RANGE`-IFNULL(`d_start`.`SUM_SORT_RANGE`, 0) AS \'\'SUM_SORT_RANGE\'\',\n       `d_end`.`SUM_SORT_ROWS`-IFNULL(`d_start`.`SUM_SORT_ROWS`, 0) AS \'\'SUM_SORT_ROWS\'\',\n       `d_end`.`SUM_SORT_SCAN`-IFNULL(`d_start`.`SUM_SORT_SCAN`, 0) AS \'\'SUM_SORT_SCAN\'\',\n       `d_end`.`SUM_NO_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_INDEX_USED`, 0) AS \'\'SUM_NO_INDEX_USED\'\',\n       `d_end`.`SUM_NO_GOOD_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_GOOD_INDEX_USED`, 0) AS \'\'SUM_NO_GOOD_INDEX_USED\'\',\n       `d_end`.`FIRST_SEEN`,\n       `d_end`.`LAST_SEEN`\n  FROM tmp_digests d_end\n       LEFT OUTER JOIN \', v_quoted_table, \' d_start ON `d_start`.`DIGEST` = `d_end`.`DIGEST`\n                                                    AND (`d_start`.`SCHEMA_NAME` = `d_end`.`SCHEMA_NAME`\n                                                          OR (`d_start`.`SCHEMA_NAME` IS NULL AND `d_end`.`SCHEMA_NAME` IS NULL)\n                                                        )\n WHERE `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) > 0\');\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_runtimes_in_95th_percentile\', in_views)) THEN\n            SELECT \'Queries with Runtime in 95th Percentile\' AS \'Next Output\';\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution1;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution2;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_95th_percentile_by_avg_us;\n            CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution1 (\n              cnt bigint unsigned NOT NULL,\n              avg_us decimal(21,0) NOT NULL,\n              PRIMARY KEY (avg_us)\n            ) ENGINE=InnoDB;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digest_avg_latency_distribution1\nSELECT COUNT(*) cnt,\n       ROUND(avg_timer_wait/1000000) AS avg_us\n  FROM \', v_digests_table, \'\n GROUP BY avg_us\');\n            CALL sys.execute_prepared_stmt(v_sql);\n            CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution2 LIKE tmp_digest_avg_latency_distribution1;\n            INSERT INTO tmp_digest_avg_latency_distribution2 SELECT * FROM tmp_digest_avg_latency_distribution1;\n            CREATE TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us (\n              avg_us decimal(21,0) NOT NULL,\n              percentile decimal(46,4) NOT NULL,\n              PRIMARY KEY (avg_us)\n            ) ENGINE=InnoDB;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digest_95th_percentile_by_avg_us\nSELECT s2.avg_us avg_us,\n       IFNULL(SUM(s1.cnt)/NULLIF((SELECT COUNT(*) FROM \', v_digests_table, \'), 0), 0) percentile\n  FROM tmp_digest_avg_latency_distribution1 AS s1\n       JOIN tmp_digest_avg_latency_distribution2 AS s2 ON s1.avg_us <= s2.avg_us\n GROUP BY s2.avg_us\nHAVING percentile > 0.95\n ORDER BY percentile\n LIMIT 1\');\n            CALL sys.execute_prepared_stmt(v_sql);\n            SET v_sql =\n                REPLACE(\n                    REPLACE(\n                        (SELECT VIEW_DEFINITION\n                           FROM information_schema.VIEWS\n                          WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_runtimes_in_95th_percentile\'\n                        ),\n                        \'`performance_schema`.`events_statements_summary_by_digest`\',\n                        v_digests_table\n                    ),\n                    \'sys.x$ps_digest_95th_percentile_by_avg_us\',\n                    \'`sys`.`x$ps_digest_95th_percentile_by_avg_us`\'\n              );\n            CALL sys.execute_prepared_stmt(v_sql);\n            DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution1;\n            DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution2;\n            DROP TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us;\n        END IF;\n        IF (FIND_IN_SET(\'analysis\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries Ordered by Total Latency\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statement_analysis\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_errors_or_warnings\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Errors\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_errors_or_warnings\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_full_table_scans\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Full Table Scan\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_full_table_scans\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_sorting\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Sorting\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_sorting\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_temp_tables\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Internal Temporary Tables\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_temp_tables\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'custom\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries Using Custom View\') AS \'Next Output\';\n            IF (@sys.statement_performance_analyzer.view IS NULL) THEN\n                SET @sys.statement_performance_analyzer.view = sys.sys_get_config(\'statement_performance_analyzer.view\', NULL);\n            END IF;\n            IF (@sys.statement_performance_analyzer.view IS NULL) THEN\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = \'The @sys.statement_performance_analyzer.view user variable must be set with the view or query to use.\';\n            END IF;\n            IF (NOT INSTR(@sys.statement_performance_analyzer.view, \' \')) THEN\n                IF (NOT INSTR(@sys.statement_performance_analyzer.view, \'.\')) THEN\n                    SET v_custom_db   = DATABASE(),\n                        v_custom_name = @sys.statement_performance_analyzer.view;\n                ELSE\n                    SET v_custom_db   = SUBSTRING_INDEX(@sys.statement_performance_analyzer.view, \'.\', 1);\n                    SET v_custom_name = SUBSTRING(@sys.statement_performance_analyzer.view, CHAR_LENGTH(v_custom_db)+2);\n                END IF;\n                CALL sys.table_exists(v_custom_db, v_custom_name, v_custom_view_exists);\n                IF (v_custom_view_exists <> \'VIEW\') THEN\n                    SIGNAL SQLSTATE \'45000\'\n                       SET MESSAGE_TEXT = \'The @sys.statement_performance_analyzer.view user variable is set but specified neither an existing view nor a query.\';\n                END IF;\n                SET v_sql =\n                    REPLACE(\n                        (SELECT VIEW_DEFINITION\n                           FROM information_schema.VIEWS\n                          WHERE TABLE_SCHEMA = v_custom_db AND TABLE_NAME = v_custom_name\n                        ),\n                        \'`performance_schema`.`events_statements_summary_by_digest`\',\n                        v_digests_table\n                    );\n            ELSE\n                SET v_sql = REPLACE(@sys.statement_performance_analyzer.view, \'`performance_schema`.`events_statements_summary_by_digest`\', v_digests_table);\n            END IF;\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n    END IF;\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = @log_bin;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Create a report of the statements running on the server.\n             The views are calculated based on the overall and/or delta activity.\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Parameters\n             in_action (ENUM(\'snapshot\', \'overall\', \'delta\', \'create_tmp\', \'create_table\', \'save\', \'cleanup\')):\n               The action to take. Supported actions are:\n                 * snapshot      Store a snapshot. The default is to make a snapshot of the current content of\n                                 performance_schema.events_statements_summary_by_digest, but by setting in_table\n                                 this can be overwritten to copy the content of the specified table.\n                                 The snapshot is stored in the sys.tmp_digests temporary table.\n                 * overall       Generate analyzis based on the content specified by in_table. For the overall analyzis,\n                                 in_table can be NOW() to use a fresh snapshot. This will overwrite an existing snapshot.\n                                 Use NULL for in_table to use the existing snapshot. If in_table IS NULL and no snapshot\n                                 exists, a new will be created.\n                                 See also in_views and @sys.statement_performance_analyzer.limit.\n                 * delta         Generate a delta analysis. The delta will be calculated between the reference table in\n                                 in_table and the snapshot. An existing snapshot must exist.\n                                 The action uses the sys.tmp_digests_delta temporary table.\n                                 See also in_views and @sys.statement_performance_analyzer.limit.\n                 * create_table  Create a regular table suitable for storing the snapshot for later use, e.g. for\n                                 calculating deltas.\n                 * create_tmp    Create a temporary table suitable for storing the snapshot for later use, e.g. for\n                                 calculating deltas.\n                 * save          Save the snapshot in the table specified by in_table. The table must exists and have\n                                 the correct structure.\n                                 If no snapshot exists, a new is created.\n                 * cleanup       Remove the temporary tables used for the snapshot and delta.\n             in_table (VARCHAR(129)):\n               The table argument used for some actions. Use the format \'db1.t1\' or \'t1\' without using any backticks (`)\n               for quoting. Periods (.) are not supported in the database and table names.\n               The meaning of the table for each action supporting the argument is:\n                 * snapshot      The snapshot is created based on the specified table. Set to NULL or NOW() to use\n                                 the current content of performance_schema.events_statements_summary_by_digest.\n                 * overall       The table with the content to create the overall analyzis for. The following values\n                                 can be used:\n                                   - A table name - use the content of that table.\n                                   - NOW()        - create a fresh snapshot and overwrite the existing snapshot.\n                                   - NULL         - use the last stored snapshot.\n                 * delta         The table name is mandatory and specified the reference view to compare the currently\n                                 stored snapshot against. If no snapshot exists, a new will be created.\n                 * create_table  The name of the regular table to create.\n                 * create_tmp    The name of the temporary table to create.\n                 * save          The name of the table to save the currently stored snapshot into.\n             in_views (SET (\'with_runtimes_in_95th_percentile\', \'analysis\', \'with_errors_or_warnings\',\n                            \'with_full_table_scans\', \'with_sorting\', \'with_temp_tables\', \'custom\'))\n               Which views to include:\n                 * with_runtimes_in_95th_percentile  Based on the sys.statements_with_runtimes_in_95th_percentile view\n                 * analysis                          Based on the sys.statement_analysis view\n                 * with_errors_or_warnings           Based on the sys.statements_with_errors_or_warnings view\n                 * with_full_table_scans             Based on the sys.statements_with_full_table_scans view\n                 * with_sorting                      Based on the sys.statements_with_sorting view\n                 * with_temp_tables                  Based on the sys.statements_with_temp_tables view\n                 * custom                            Use a custom view. This view must be specified in @sys.statement_performance_analyzer.view to an existing view or a query\n             Default is to include all except \'custom\'.\n             Configuration Options\n             sys.statement_performance_analyzer.limit\n               The maximum number of rows to include for the views that does not have a built-in limit (e.g. the 95th percentile view).\n               If not set the limit is 100.\n             sys.statement_performance_analyzer.view\n               Used together with the \'custom\' view. If the value contains a space, it is considered a query, otherwise it must be\n               an existing view querying the performance_schema.events_statements_summary_by_digest table. There cannot be any limit\n               clause including in the query or view definition if @sys.statement_performance_analyzer.limit > 0.\n               If specifying a view, use the same format as for in_table.\n             sys.debug\n               Whether to provide debugging output.\n               Default is \'OFF\'. Set to \'ON\' to include.\n             Example\n             To create a report with the queries in the 95th percentile since last truncate of performance_schema.events_statements_summary_by_digest\n             and the delta for a 1 minute period:\n                1. Create a temporary table to store the initial snapshot.\n                2. Create the initial snapshot.\n                3. Save the initial snapshot in the temporary table.\n                4. Wait one minute.\n                5. Create a new snapshot.\n                6. Perform analyzis based on the new snapshot.\n                7. Perform analyzis based on the delta between the initial and new snapshots.\n             mysql> CALL sys.statement_performance_analyzer(\'create_tmp\', \'mydb.tmp_digests_ini\', NULL);\n             Query OK, 0 rows affected (0.08 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n             Query OK, 0 rows affected (0.02 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'save\', \'mydb.tmp_digests_ini\', NULL);\n             Query OK, 0 rows affected (0.00 sec)\n             mysql> DO SLEEP(60);\n             Query OK, 0 rows affected (1 min 0.00 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n             Query OK, 0 rows affected (0.02 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile\');\n             +-----------------------------------------+\n             | Next Output                             |\n             +-----------------------------------------+\n             | Queries with Runtime in 95th Percentile |\n             +-----------------------------------------+\n             1 row in set (0.05 sec)\n             ...\n             mysql> CALL sys.statement_performance_analyzer(\'delta\', \'mydb.tmp_digests_ini\', \'with_runtimes_in_95th_percentile\');\n             +-----------------------------------------+\n             | Next Output                             |\n             +-----------------------------------------+\n             | Queries with Runtime in 95th Percentile |\n             +-----------------------------------------+\n             1 row in set (0.03 sec)\n             ...\n             To create an overall report of the 95th percentile queries and the top 10 queries with full table scans:\n             mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL);\n             Query OK, 0 rows affected (0.01 sec)\n             mysql> SET @sys.statement_performance_analyzer.limit = 10;\n             Query OK, 0 rows affected (0.00 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile,with_full_table_scans\');\n             +-----------------------------------------+\n             | Next Output                             |\n             +-----------------------------------------+\n             | Queries with Runtime in 95th Percentile |\n             +-----------------------------------------+\n             1 row in set (0.01 sec)\n             ...\n             +-------------------------------------+\n             | Next Output                         |\n             +-------------------------------------+\n             | Top 10 Queries with Full Table Scan |\n             +-------------------------------------+\n             1 row in set (0.09 sec)\n             ...\n             Use a custom view showing the top 10 query sorted by total execution time refreshing the view every minute using\n             the watch command in Linux.\n             mysql> CREATE OR REPLACE VIEW mydb.my_statements AS\n                 -> SELECT sys.format_statement(DIGEST_TEXT) AS query,\n                 ->        SCHEMA_NAME AS db,\n                 ->        COUNT_STAR AS exec_count,\n                 ->        sys.format_time(SUM_TIMER_WAIT) AS total_latency,\n                 ->        sys.format_time(AVG_TIMER_WAIT) AS avg_latency,\n                 ->        ROUND(IFNULL(SUM_ROWS_SENT / NULLIF(COUNT_STAR, 0), 0)) AS rows_sent_avg,\n                 ->        ROUND(IFNULL(SUM_ROWS_EXAMINED / NULLIF(COUNT_STAR, 0), 0)) AS rows_examined_avg,\n                 ->        ROUND(IFNULL(SUM_ROWS_AFFECTED / NULLIF(COUNT_STAR, 0), 0)) AS rows_affected_avg,\n                 ->        DIGEST AS digest\n                 ->   FROM performance_schema.events_statements_summary_by_digest\n                 -> ORDER BY SUM_TIMER_WAIT DESC;\n             Query OK, 0 rows affected (0.01 sec)\n             mysql> CALL sys.statement_performance_analyzer(\'create_table\', \'mydb.digests_prev\', NULL);\n             Query OK, 0 rows affected (0.10 sec)\n             shell$ watch -n 60 \"mysql sys --table -e \"\n             > SET @sys.statement_performance_analyzer.view = \'mydb.my_statements\';\n             > SET @sys.statement_performance_analyzer.limit = 10;\n             > CALL statement_performance_analyzer(\'snapshot\', NULL, NULL);\n             > CALL statement_performance_analyzer(\'delta\', \'mydb.digests_prev\', \'custom\');\n             > CALL statement_performance_analyzer(\'save\', \'mydb.digests_prev\', NULL);\n             > \"\"\n             Every 60.0s: mysql sys --table -e \"                                                                                                   ...  Mon Dec 22 10:58:51 2014\n             +----------------------------------+\n             | Next Output                      |\n             +----------------------------------+\n             | Top 10 Queries Using Custom View |\n             +----------------------------------+\n             +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+\n             | query             | db    | exec_count | total_latency | avg_latency | rows_sent_avg | rows_examined_avg | rows_affected_avg | digest                           |\n             +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+\n             ...\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_table_exists, v_tmp_digests_table_exists, v_custom_view_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\') DEFAULT \'\';\n    DECLARE v_this_thread_enabled ENUM(\'YES\', \'NO\');\n    DECLARE v_force_new_snapshot BOOLEAN DEFAULT FALSE;\n    DECLARE v_digests_table VARCHAR(133);\n    DECLARE v_quoted_table, v_quoted_custom_view VARCHAR(133) DEFAULT \'\';\n    DECLARE v_table_db, v_table_name, v_custom_db, v_custom_name VARCHAR(64);\n    DECLARE v_digest_table_template, v_checksum_ref, v_checksum_table text;\n    DECLARE v_sql longtext;\n    DECLARE v_error_msg VARCHAR(128);\n    SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID();\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n    END IF;\n    SET @log_bin := @@sql_log_bin;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = 0;\n    END IF;\n    IF (@sys.statement_performance_analyzer.limit IS NULL) THEN\n        SET @sys.statement_performance_analyzer.limit = sys.sys_get_config(\'statement_performance_analyzer.limit\', \'100\');\n    END IF;\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug                                = sys.sys_get_config(\'debug\'                               , \'OFF\');\n    END IF;\n    IF (in_table = \'NOW()\') THEN\n        SET v_force_new_snapshot = TRUE,\n            in_table             = NULL;\n    ELSEIF (in_table IS NOT NULL) THEN\n        IF (NOT INSTR(in_table, \'.\')) THEN\n            SET v_table_db   = DATABASE(),\n                v_table_name = in_table;\n        ELSE\n            SET v_table_db   = SUBSTRING_INDEX(in_table, \'.\', 1);\n            SET v_table_name = SUBSTRING(in_table, CHAR_LENGTH(v_table_db)+2);\n        END IF;\n        SET v_quoted_table = CONCAT(\'`\', v_table_db, \'`.`\', v_table_name, \'`\');\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'in_table is: db = \'\'\', v_table_db, \'\'\', table = \'\'\', v_table_name, \'\'\'\') AS \'Debug\';\n        END IF;\n        IF (v_table_db = DATABASE() AND (v_table_name = \'tmp_digests\' OR v_table_name = \'tmp_digests_delta\')) THEN\n            SET v_error_msg = CONCAT(\'Invalid value for in_table: \', v_quoted_table, \' is reserved table name.\');\n            SIGNAL SQLSTATE \'45000\'\n               SET MESSAGE_TEXT = v_error_msg;\n        END IF;\n        CALL sys.table_exists(v_table_db, v_table_name, v_table_exists);\n        IF (@sys.debug = \'ON\') THEN\n            SELECT CONCAT(\'v_table_exists = \', v_table_exists) AS \'Debug\';\n        END IF;\n        IF (v_table_exists = \'BASE TABLE\') THEN\n            SET v_checksum_ref = (\n                 SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum\n                   FROM information_schema.COLUMNS\n                  WHERE TABLE_SCHEMA = \'performance_schema\' AND TABLE_NAME = \'events_statements_summary_by_digest\'\n                ),\n                v_checksum_table = (\n                 SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum\n                   FROM information_schema.COLUMNS\n                  WHERE TABLE_SCHEMA = v_table_db AND TABLE_NAME = v_table_name\n                );\n            IF (v_checksum_ref <> v_checksum_table) THEN\n                SET v_error_msg = CONCAT(\'The table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 93, CONCAT(\'...\', SUBSTRING(v_quoted_table, -90)), v_quoted_table),\n                                         \' has the wrong definition.\');\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        END IF;\n    END IF;\n    IF (in_views IS NULL OR in_views = \'\') THEN\n        SET in_views = \'with_runtimes_in_95th_percentile,analysis,with_errors_or_warnings,with_full_table_scans,with_sorting,with_temp_tables\';\n    END IF;\n    CALL sys.table_exists(DATABASE(), \'tmp_digests\', v_tmp_digests_table_exists);\n    IF (@sys.debug = \'ON\') THEN\n        SELECT CONCAT(\'v_tmp_digests_table_exists = \', v_tmp_digests_table_exists) AS \'Debug\';\n    END IF;\n    CASE\n        WHEN in_action IN (\'snapshot\', \'overall\') THEN\n            IF (in_table IS NOT NULL) THEN\n                IF (NOT v_table_exists IN (\'TEMPORARY\', \'BASE TABLE\')) THEN\n                    SET v_error_msg = CONCAT(\'The \', in_action, \' action requires in_table to be NULL, NOW() or specify an existing table.\',\n                                             \' The table \',\n                                             IF(CHAR_LENGTH(v_quoted_table) > 16, CONCAT(\'...\', SUBSTRING(v_quoted_table, -13)), v_quoted_table),\n                                             \' does not exist.\');\n                    SIGNAL SQLSTATE \'45000\'\n                       SET MESSAGE_TEXT = v_error_msg;\n                END IF;\n            END IF;\n        WHEN in_action IN (\'delta\', \'save\') THEN\n            IF (v_table_exists NOT IN (\'TEMPORARY\', \'BASE TABLE\')) THEN\n                SET v_error_msg = CONCAT(\'The \', in_action, \' action requires in_table to be an existing table.\',\n                                         IF(in_table IS NOT NULL, CONCAT(\' The table \',\n                                             IF(CHAR_LENGTH(v_quoted_table) > 39, CONCAT(\'...\', SUBSTRING(v_quoted_table, -36)), v_quoted_table),\n                                             \' does not exist.\'), \'\'));\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n            IF (in_action = \'delta\' AND v_tmp_digests_table_exists <> \'TEMPORARY\') THEN\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = \'An existing snapshot generated with the statement_performance_analyzer() must exist.\';\n            END IF;\n        WHEN in_action = \'create_tmp\' THEN\n            IF (v_table_exists = \'TEMPORARY\') THEN\n                SET v_error_msg = CONCAT(\'Cannot create the table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 72, CONCAT(\'...\', SUBSTRING(v_quoted_table, -69)), v_quoted_table),\n                                         \' as it already exists.\');\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        WHEN in_action = \'create_table\' THEN\n            IF (v_table_exists <> \'\') THEN\n                SET v_error_msg = CONCAT(\'Cannot create the table \',\n                                         IF(CHAR_LENGTH(v_quoted_table) > 52, CONCAT(\'...\', SUBSTRING(v_quoted_table, -49)), v_quoted_table),\n                                         \' as it already exists\',\n                                         IF(v_table_exists = \'TEMPORARY\', \' as a temporary table.\', \'.\'));\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = v_error_msg;\n            END IF;\n        WHEN in_action = \'cleanup\' THEN\n            DO (SELECT 1);\n        ELSE\n            SIGNAL SQLSTATE \'45000\'\n               SET MESSAGE_TEXT = \'Unknown action. Supported actions are: cleanup, create_table, create_tmp, delta, overall, save, snapshot\';\n    END CASE;\n    SET v_digest_table_template = \'CREATE %{TEMPORARY}TABLE %{TABLE_NAME} (\\n  `SCHEMA_NAME` varchar(64) DEFAULT NULL,\\n  `DIGEST` varchar(32) DEFAULT NULL,\\n  `DIGEST_TEXT` longtext,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `FIRST_SEEN` timestamp NULL DEFAULT NULL,\\n  `LAST_SEEN` timestamp NULL DEFAULT NULL,\\n  INDEX (SCHEMA_NAME, DIGEST)\\n) DEFAULT CHARSET=utf8\';\n    IF (v_force_new_snapshot\n           OR in_action = \'snapshot\'\n           OR (in_action = \'overall\' AND in_table IS NULL)\n           OR (in_action = \'save\' AND v_tmp_digests_table_exists <> \'TEMPORARY\')\n       ) THEN\n        IF (v_tmp_digests_table_exists = \'TEMPORARY\') THEN\n            IF (@sys.debug = \'ON\') THEN\n                SELECT \'DROP TEMPORARY TABLE IF EXISTS tmp_digests\' AS \'Debug\';\n            END IF;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digests;\n        END IF;\n        CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'TEMPORARY \'), \'%{TABLE_NAME}\', \'tmp_digests\'));\n        SET v_sql = CONCAT(\'INSERT INTO tmp_digests SELECT * FROM \',\n                           IF(in_table IS NULL OR in_action = \'save\', \'performance_schema.events_statements_summary_by_digest\', v_quoted_table));\n        CALL sys.execute_prepared_stmt(v_sql);\n    END IF;\n    IF (in_action IN (\'create_table\', \'create_tmp\')) THEN\n        IF (in_action = \'create_table\') THEN\n            CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'\'), \'%{TABLE_NAME}\', v_quoted_table));\n        ELSE\n            CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, \'%{TEMPORARY}\', \'TEMPORARY \'), \'%{TABLE_NAME}\', v_quoted_table));\n        END IF;\n    ELSEIF (in_action = \'save\') THEN\n        CALL sys.execute_prepared_stmt(CONCAT(\'DELETE FROM \', v_quoted_table));\n        CALL sys.execute_prepared_stmt(CONCAT(\'INSERT INTO \', v_quoted_table, \' SELECT * FROM tmp_digests\'));\n    ELSEIF (in_action = \'cleanup\') THEN\n        DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests;\n        DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests_delta;\n    ELSEIF (in_action IN (\'overall\', \'delta\')) THEN\n        IF (in_action = \'overall\') THEN\n            IF (in_table IS NULL) THEN\n                SET v_digests_table = \'tmp_digests\';\n            ELSE\n                SET v_digests_table = v_quoted_table;\n            END IF;\n        ELSE\n            SET v_digests_table = \'tmp_digests_delta\';\n            DROP TEMPORARY TABLE IF EXISTS tmp_digests_delta;\n            CREATE TEMPORARY TABLE tmp_digests_delta LIKE tmp_digests;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digests_delta\\nSELECT `d_end`.`SCHEMA_NAME`,\\n       `d_end`.`DIGEST`,\\n       `d_end`.`DIGEST_TEXT`,\\n       `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) AS \'\'COUNT_STAR\'\',\\n       `d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0) AS \'\'SUM_TIMER_WAIT\'\',\\n       `d_end`.`MIN_TIMER_WAIT` AS \'\'MIN_TIMER_WAIT\'\',\\n       IFNULL((`d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0))/NULLIF(`d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0), 0), 0) AS \'\'AVG_TIMER_WAIT\'\',\\n       `d_end`.`MAX_TIMER_WAIT` AS \'\'MAX_TIMER_WAIT\'\',\\n       `d_end`.`SUM_LOCK_TIME`-IFNULL(`d_start`.`SUM_LOCK_TIME`, 0) AS \'\'SUM_LOCK_TIME\'\',\\n       `d_end`.`SUM_ERRORS`-IFNULL(`d_start`.`SUM_ERRORS`, 0) AS \'\'SUM_ERRORS\'\',\\n       `d_end`.`SUM_WARNINGS`-IFNULL(`d_start`.`SUM_WARNINGS`, 0) AS \'\'SUM_WARNINGS\'\',\\n       `d_end`.`SUM_ROWS_AFFECTED`-IFNULL(`d_start`.`SUM_ROWS_AFFECTED`, 0) AS \'\'SUM_ROWS_AFFECTED\'\',\\n       `d_end`.`SUM_ROWS_SENT`-IFNULL(`d_start`.`SUM_ROWS_SENT`, 0) AS \'\'SUM_ROWS_SENT\'\',\\n       `d_end`.`SUM_ROWS_EXAMINED`-IFNULL(`d_start`.`SUM_ROWS_EXAMINED`, 0) AS \'\'SUM_ROWS_EXAMINED\'\',\\n       `d_end`.`SUM_CREATED_TMP_DISK_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_DISK_TABLES`, 0) AS \'\'SUM_CREATED_TMP_DISK_TABLES\'\',\\n       `d_end`.`SUM_CREATED_TMP_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_TABLES`, 0) AS \'\'SUM_CREATED_TMP_TABLES\'\',\\n       `d_end`.`SUM_SELECT_FULL_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_JOIN`, 0) AS \'\'SUM_SELECT_FULL_JOIN\'\',\\n       `d_end`.`SUM_SELECT_FULL_RANGE_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_RANGE_JOIN`, 0) AS \'\'SUM_SELECT_FULL_RANGE_JOIN\'\',\\n       `d_end`.`SUM_SELECT_RANGE`-IFNULL(`d_start`.`SUM_SELECT_RANGE`, 0) AS \'\'SUM_SELECT_RANGE\'\',\\n       `d_end`.`SUM_SELECT_RANGE_CHECK`-IFNULL(`d_start`.`SUM_SELECT_RANGE_CHECK`, 0) AS \'\'SUM_SELECT_RANGE_CHECK\'\',\\n       `d_end`.`SUM_SELECT_SCAN`-IFNULL(`d_start`.`SUM_SELECT_SCAN`, 0) AS \'\'SUM_SELECT_SCAN\'\',\\n       `d_end`.`SUM_SORT_MERGE_PASSES`-IFNULL(`d_start`.`SUM_SORT_MERGE_PASSES`, 0) AS \'\'SUM_SORT_MERGE_PASSES\'\',\\n       `d_end`.`SUM_SORT_RANGE`-IFNULL(`d_start`.`SUM_SORT_RANGE`, 0) AS \'\'SUM_SORT_RANGE\'\',\\n       `d_end`.`SUM_SORT_ROWS`-IFNULL(`d_start`.`SUM_SORT_ROWS`, 0) AS \'\'SUM_SORT_ROWS\'\',\\n       `d_end`.`SUM_SORT_SCAN`-IFNULL(`d_start`.`SUM_SORT_SCAN`, 0) AS \'\'SUM_SORT_SCAN\'\',\\n       `d_end`.`SUM_NO_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_INDEX_USED`, 0) AS \'\'SUM_NO_INDEX_USED\'\',\\n       `d_end`.`SUM_NO_GOOD_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_GOOD_INDEX_USED`, 0) AS \'\'SUM_NO_GOOD_INDEX_USED\'\',\\n       `d_end`.`FIRST_SEEN`,\\n       `d_end`.`LAST_SEEN`\\n  FROM tmp_digests d_end\\n       LEFT OUTER JOIN \', v_quoted_table, \' d_start ON `d_start`.`DIGEST` = `d_end`.`DIGEST`\\n                                                    AND (`d_start`.`SCHEMA_NAME` = `d_end`.`SCHEMA_NAME`\\n                                                          OR (`d_start`.`SCHEMA_NAME` IS NULL AND `d_end`.`SCHEMA_NAME` IS NULL)\\n                                                        )\\n WHERE `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) > 0\');\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_runtimes_in_95th_percentile\', in_views)) THEN\n            SELECT \'Queries with Runtime in 95th Percentile\' AS \'Next Output\';\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution1;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution2;\n            DROP TEMPORARY TABLE IF EXISTS tmp_digest_95th_percentile_by_avg_us;\n            CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution1 (\n              cnt bigint unsigned NOT NULL,\n              avg_us decimal(21,0) NOT NULL,\n              PRIMARY KEY (avg_us)\n            ) ENGINE=InnoDB;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digest_avg_latency_distribution1\\nSELECT COUNT(*) cnt,\\n       ROUND(avg_timer_wait/1000000) AS avg_us\\n  FROM \', v_digests_table, \'\\n GROUP BY avg_us\');\n            CALL sys.execute_prepared_stmt(v_sql);\n            CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution2 LIKE tmp_digest_avg_latency_distribution1;\n            INSERT INTO tmp_digest_avg_latency_distribution2 SELECT * FROM tmp_digest_avg_latency_distribution1;\n            CREATE TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us (\n              avg_us decimal(21,0) NOT NULL,\n              percentile decimal(46,4) NOT NULL,\n              PRIMARY KEY (avg_us)\n            ) ENGINE=InnoDB;\n            SET v_sql = CONCAT(\'INSERT INTO tmp_digest_95th_percentile_by_avg_us\\nSELECT s2.avg_us avg_us,\\n       IFNULL(SUM(s1.cnt)/NULLIF((SELECT COUNT(*) FROM \', v_digests_table, \'), 0), 0) percentile\\n  FROM tmp_digest_avg_latency_distribution1 AS s1\\n       JOIN tmp_digest_avg_latency_distribution2 AS s2 ON s1.avg_us <= s2.avg_us\\n GROUP BY s2.avg_us\\nHAVING percentile > 0.95\\n ORDER BY percentile\\n LIMIT 1\');\n            CALL sys.execute_prepared_stmt(v_sql);\n            SET v_sql =\n                REPLACE(\n                    REPLACE(\n                        (SELECT VIEW_DEFINITION\n                           FROM information_schema.VIEWS\n                          WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_runtimes_in_95th_percentile\'\n                        ),\n                        \'`performance_schema`.`events_statements_summary_by_digest`\',\n                        v_digests_table\n                    ),\n                    \'sys.x$ps_digest_95th_percentile_by_avg_us\',\n                    \'`sys`.`x$ps_digest_95th_percentile_by_avg_us`\'\n              );\n            CALL sys.execute_prepared_stmt(v_sql);\n            DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution1;\n            DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution2;\n            DROP TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us;\n        END IF;\n        IF (FIND_IN_SET(\'analysis\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries Ordered by Total Latency\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statement_analysis\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_errors_or_warnings\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Errors\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_errors_or_warnings\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_full_table_scans\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Full Table Scan\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_full_table_scans\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_sorting\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Sorting\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_sorting\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'with_temp_tables\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries with Internal Temporary Tables\') AS \'Next Output\';\n            SET v_sql =\n                REPLACE(\n                    (SELECT VIEW_DEFINITION\n                       FROM information_schema.VIEWS\n                      WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = \'statements_with_temp_tables\'\n                    ),\n                    \'`performance_schema`.`events_statements_summary_by_digest`\',\n                    v_digests_table\n                );\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n        IF (FIND_IN_SET(\'custom\', in_views)) THEN\n            SELECT CONCAT(\'Top \', @sys.statement_performance_analyzer.limit, \' Queries Using Custom View\') AS \'Next Output\';\n            IF (@sys.statement_performance_analyzer.view IS NULL) THEN\n                SET @sys.statement_performance_analyzer.view = sys.sys_get_config(\'statement_performance_analyzer.view\', NULL);\n            END IF;\n            IF (@sys.statement_performance_analyzer.view IS NULL) THEN\n                SIGNAL SQLSTATE \'45000\'\n                   SET MESSAGE_TEXT = \'The @sys.statement_performance_analyzer.view user variable must be set with the view or query to use.\';\n            END IF;\n            IF (NOT INSTR(@sys.statement_performance_analyzer.view, \' \')) THEN\n                IF (NOT INSTR(@sys.statement_performance_analyzer.view, \'.\')) THEN\n                    SET v_custom_db   = DATABASE(),\n                        v_custom_name = @sys.statement_performance_analyzer.view;\n                ELSE\n                    SET v_custom_db   = SUBSTRING_INDEX(@sys.statement_performance_analyzer.view, \'.\', 1);\n                    SET v_custom_name = SUBSTRING(@sys.statement_performance_analyzer.view, CHAR_LENGTH(v_custom_db)+2);\n                END IF;\n                CALL sys.table_exists(v_custom_db, v_custom_name, v_custom_view_exists);\n                IF (v_custom_view_exists <> \'VIEW\') THEN\n                    SIGNAL SQLSTATE \'45000\'\n                       SET MESSAGE_TEXT = \'The @sys.statement_performance_analyzer.view user variable is set but specified neither an existing view nor a query.\';\n                END IF;\n                SET v_sql =\n                    REPLACE(\n                        (SELECT VIEW_DEFINITION\n                           FROM information_schema.VIEWS\n                          WHERE TABLE_SCHEMA = v_custom_db AND TABLE_NAME = v_custom_name\n                        ),\n                        \'`performance_schema`.`events_statements_summary_by_digest`\',\n                        v_digests_table\n                    );\n            ELSE\n                SET v_sql = REPLACE(@sys.statement_performance_analyzer.view, \'`performance_schema`.`events_statements_summary_by_digest`\', v_digests_table);\n            END IF;\n            IF (@sys.statement_performance_analyzer.limit > 0) THEN\n                SET v_sql = CONCAT(v_sql, \' LIMIT \', @sys.statement_performance_analyzer.limit);\n            END IF;\n            CALL sys.execute_prepared_stmt(v_sql);\n        END IF;\n    END IF;\n    IF (v_this_thread_enabled = \'YES\') THEN\n        CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n    END IF;\n    IF (@log_bin = 1) THEN\n        SET sql_log_bin = @log_bin;\n    END IF;\nEND','NONE'),('sys','ps_is_account_enabled','FUNCTION','ps_is_account_enabled','SQL','READS_SQL_DATA','YES','INVOKER','in_host VARCHAR(60),\n        in_user VARCHAR(16)\n    ','enum(\'YES\',\'NO\') CHARSET utf8mb3','BEGIN\n    RETURN IF(EXISTS(SELECT 1\n                       FROM performance_schema.setup_actors\n                      WHERE (`HOST` = \'%\' OR in_host LIKE `HOST`)\n                        AND (`USER` = \'%\' OR `USER` = in_user)\n                    ),\n              \'YES\', \'NO\'\n           );\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Determines whether instrumentation of an account is enabled\n             within Performance Schema.\n             Parameters\n             in_host VARCHAR(60):\n               The hostname of the account to check.\n             in_user (VARCHAR(16)):\n               The username of the account to check.\n             Returns\n             ENUM(\'YES\', \'NO\', \'PARTIAL\')\n             Example\n             mysql> SELECT sys.ps_is_account_enabled(\'localhost\', \'root\');\n             +------------------------------------------------+\n             | sys.ps_is_account_enabled(\'localhost\', \'root\') |\n             +------------------------------------------------+\n             | YES                                            |\n             +------------------------------------------------+\n             1 row in set (0.01 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN IF(EXISTS(SELECT 1\n                       FROM performance_schema.setup_actors\n                      WHERE (`HOST` = \'%\' OR in_host LIKE `HOST`)\n                        AND (`USER` = \'%\' OR `USER` = in_user)\n                    ),\n              \'YES\', \'NO\'\n           );\nEND','NONE'),('sys','ps_is_consumer_enabled','FUNCTION','ps_is_consumer_enabled','SQL','READS_SQL_DATA','YES','INVOKER','in_consumer varchar(64)\n   ','enum(\'YES\',\'NO\') CHARSET utf8mb3','BEGIN\n    RETURN (\n        SELECT (CASE\n                   WHEN c.NAME = \'global_instrumentation\' THEN c.ENABLED\n                   WHEN c.NAME = \'thread_instrumentation\' THEN IF(cg.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   WHEN c.NAME LIKE \'%\\_digest\'           THEN IF(cg.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   WHEN c.NAME LIKE \'%\\_current\'          THEN IF(cg.ENABLED = \'YES\' AND ct.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   ELSE IF(cg.ENABLED = \'YES\' AND ct.ENABLED = \'YES\' AND c.ENABLED = \'YES\'\n                           AND ( SELECT cc.ENABLED FROM performance_schema.setup_consumers cc WHERE NAME = CONCAT(SUBSTRING_INDEX(c.NAME, \'_\', 2), \'_current\')\n                               ) = \'YES\', \'YES\', \'NO\')\n                END) AS IsEnabled\n          FROM performance_schema.setup_consumers c\n               INNER JOIN performance_schema.setup_consumers cg\n               INNER JOIN performance_schema.setup_consumers ct\n         WHERE cg.NAME       = \'global_instrumentation\'\n               AND ct.NAME   = \'thread_instrumentation\'\n               AND c.NAME    = in_consumer\n       );\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Determines whether a consumer is enabled (taking the consumer hierarchy into consideration)\n             within the Performance Schema.\n             Parameters\n             in_consumer VARCHAR(64):\n               The name of the consumer to check.\n             Returns\n             ENUM(\'YES\', \'NO\')\n             Example\n             mysql> SELECT sys.ps_is_consumer_enabled(\'events_stages_history\');\n             +-----------------------------------------------------+\n             | sys.ps_is_consumer_enabled(\'events_stages_history\') |\n             +-----------------------------------------------------+\n             | NO                                                  |\n             +-----------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN (\n        SELECT (CASE\n                   WHEN c.NAME = \'global_instrumentation\' THEN c.ENABLED\n                   WHEN c.NAME = \'thread_instrumentation\' THEN IF(cg.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   WHEN c.NAME LIKE \'%\\_digest\'           THEN IF(cg.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   WHEN c.NAME LIKE \'%\\_current\'          THEN IF(cg.ENABLED = \'YES\' AND ct.ENABLED = \'YES\' AND c.ENABLED = \'YES\', \'YES\', \'NO\')\n                   ELSE IF(cg.ENABLED = \'YES\' AND ct.ENABLED = \'YES\' AND c.ENABLED = \'YES\'\n                           AND ( SELECT cc.ENABLED FROM performance_schema.setup_consumers cc WHERE NAME = CONCAT(SUBSTRING_INDEX(c.NAME, \'_\', 2), \'_current\')\n                               ) = \'YES\', \'YES\', \'NO\')\n                END) AS IsEnabled\n          FROM performance_schema.setup_consumers c\n               INNER JOIN performance_schema.setup_consumers cg\n               INNER JOIN performance_schema.setup_consumers ct\n         WHERE cg.NAME       = \'global_instrumentation\'\n               AND ct.NAME   = \'thread_instrumentation\'\n               AND c.NAME    = in_consumer\n       );\nEND','NONE'),('sys','table_exists','PROCEDURE','table_exists','SQL','CONTAINS_SQL','NO','INVOKER','\n        IN in_db VARCHAR(64), IN in_table VARCHAR(64),\n        OUT out_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\', \'SEQUENCE\', \'SYSTEM VIEW\')\n    ','','BEGIN\n    DECLARE v_error BOOLEAN DEFAULT FALSE;\n    DECLARE db_quoted VARCHAR(64);\n    DECLARE table_quoted VARCHAR(64);\n    DECLARE v_table_type VARCHAR(16) DEFAULT \'\';\n    DECLARE v_system_db BOOLEAN\n        DEFAULT LOWER(in_db) IN (\'information_schema\', \'performance_schema\');\n    DECLARE CONTINUE HANDLER FOR 1050 SET v_error = TRUE;\n    DECLARE CONTINUE HANDLER FOR 1146 SET v_error = TRUE;\n    SET out_exists = \'\';\n    SET db_quoted = sys.quote_identifier(in_db);\n    SET table_quoted = sys.quote_identifier(in_table);\n    IF (EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table)) THEN\n        IF v_system_db = FALSE THEN\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'CREATE TEMPORARY TABLE \',\n                                                    db_quoted,\n                                                    \'.\',\n                                                    table_quoted,\n                                                    \'(id INT PRIMARY KEY)\');\n            PREPARE stmt_create_table FROM @sys.tmp.table_exists.SQL;\n            EXECUTE stmt_create_table;\n            DEALLOCATE PREPARE stmt_create_table;\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'DROP TEMPORARY TABLE \',\n                                                                db_quoted,\n                                                                \'.\',\n                                                                table_quoted);\n            PREPARE stmt_drop_table FROM @sys.tmp.table_exists.SQL;\n            EXECUTE stmt_drop_table;\n            DEALLOCATE PREPARE stmt_drop_table;\n        END IF;\n        IF (v_error) THEN\n            SET out_exists = \'TEMPORARY\';\n        ELSE\n            SET v_table_type = (SELECT TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table);\n            IF v_table_type = \'SYSTEM VERSIONED\' THEN\n                SET out_exists = \'BASE TABLE\';\n            ELSE\n                SET out_exists = v_table_type;\n            END IF;\n        END IF;\n    ELSE\n        IF v_system_db = FALSE THEN\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'SELECT COUNT(*) FROM \',\n                                                            db_quoted,\n                                                            \'.\',\n                                                            table_quoted);\n            PREPARE stmt_select FROM @sys.tmp.table_exists.SQL;\n            IF (NOT v_error) THEN\n                DEALLOCATE PREPARE stmt_select;\n                SET out_exists = \'TEMPORARY\';\n            END IF;\n        END IF;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Tests whether the table specified in in_db and in_table exists either as a regular\n             table, or as a temporary table. The returned value corresponds to the table that\n             will be used, so if there\'s both a temporary and a permanent table with the given\n             name, then \'TEMPORARY\' will be returned.\n             Parameters\n             in_db (VARCHAR(64)):\n               The database name to check for the existence of the table in.\n             in_table (VARCHAR(64)):\n               The name of the table to check the existence of.\n             out_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\'):\n               The return value: whether the table exists. The value is one of:\n                 * \'\'             - the table does not exist neither as a base table, view, sequence nor temporary table.\n                 * \'BASE TABLE\'   - the table name exists as a permanent base table table.\n                 * \'VIEW\'         - the table name exists as a view.\n                 * \'TEMPORARY\'    - the table name exists as a temporary table.\n                 * \'SEQUENCE\'     - the table name exists as a sequence.\n                 * \'SYSTEM VIEW\'  - the table name exists as a system view.\n             Example\n             mysql> CREATE DATABASE db1;\n             Query OK, 1 row affected (0.07 sec)\n             mysql> use db1;\n             Database changed\n             mysql> CREATE TABLE t1 (id INT PRIMARY KEY);\n             Query OK, 0 rows affected (0.08 sec)\n             mysql> CREATE TABLE t2 (id INT PRIMARY KEY);\n             Query OK, 0 rows affected (0.08 sec)\n             mysql> CREATE view v_t1 AS SELECT * FROM t1;\n             Query OK, 0 rows affected (0.00 sec)\n             mysql> CREATE TEMPORARY TABLE t1 (id INT PRIMARY KEY);\n             Query OK, 0 rows affected (0.00 sec)\n             mysql> CALL sys.table_exists(\'db1\', \'t1\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.00 sec)\n             +------------+\n             | @exists    |\n             +------------+\n             | TEMPORARY  |\n             +------------+\n             1 row in set (0.00 sec)\n             mysql> CALL sys.table_exists(\'db1\', \'t2\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.00 sec)\n             +------------+\n             | @exists    |\n             +------------+\n             | BASE TABLE |\n             +------------+\n             1 row in set (0.01 sec)\n             mysql> CALL sys.table_exists(\'db1\', \'v_t1\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.00 sec)\n             +---------+\n             | @exists |\n             +---------+\n             | VIEW    |\n             +---------+\n             1 row in set (0.00 sec)\n             MariaDB [sys]> CALL sys.table_exists(\'db1\', \'s\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.006 sec)\n             +----------+\n             | @exists  |\n             +----------+\n             | SEQUENCE |\n             +----------+\n             1 row in set (0.000 sec)\n             MariaDB [sys]> CALL table_exists(\'information_schema\', \'user_variables\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.003 sec)\n             +-------------+\n             | @exists     |\n             +-------------+\n             | SYSTEM VIEW |\n             +-------------+\n             1 row in set (0.001 sec)\n             mysql> CALL sys.table_exists(\'db1\', \'t3\', @exists); SELECT @exists;\n             Query OK, 0 rows affected (0.01 sec)\n             +---------+\n             | @exists |\n             +---------+\n             |         |\n             +---------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_error BOOLEAN DEFAULT FALSE;\n    DECLARE db_quoted VARCHAR(64);\n    DECLARE table_quoted VARCHAR(64);\n    DECLARE v_table_type VARCHAR(16) DEFAULT \'\';\n    DECLARE v_system_db BOOLEAN\n        DEFAULT LOWER(in_db) IN (\'information_schema\', \'performance_schema\');\n    DECLARE CONTINUE HANDLER FOR 1050 SET v_error = TRUE;\n    DECLARE CONTINUE HANDLER FOR 1146 SET v_error = TRUE;\n    SET out_exists = \'\';\n    SET db_quoted = sys.quote_identifier(in_db);\n    SET table_quoted = sys.quote_identifier(in_table);\n    IF (EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table)) THEN\n        IF v_system_db = FALSE THEN\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'CREATE TEMPORARY TABLE \',\n                                                    db_quoted,\n                                                    \'.\',\n                                                    table_quoted,\n                                                    \'(id INT PRIMARY KEY)\');\n            PREPARE stmt_create_table FROM @sys.tmp.table_exists.SQL;\n            EXECUTE stmt_create_table;\n            DEALLOCATE PREPARE stmt_create_table;\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'DROP TEMPORARY TABLE \',\n                                                                db_quoted,\n                                                                \'.\',\n                                                                table_quoted);\n            PREPARE stmt_drop_table FROM @sys.tmp.table_exists.SQL;\n            EXECUTE stmt_drop_table;\n            DEALLOCATE PREPARE stmt_drop_table;\n        END IF;\n        IF (v_error) THEN\n            SET out_exists = \'TEMPORARY\';\n        ELSE\n            SET v_table_type = (SELECT TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table);\n            IF v_table_type = \'SYSTEM VERSIONED\' THEN\n                SET out_exists = \'BASE TABLE\';\n            ELSE\n                SET out_exists = v_table_type;\n            END IF;\n        END IF;\n    ELSE\n        IF v_system_db = FALSE THEN\n            SET @sys.tmp.table_exists.SQL = CONCAT(\'SELECT COUNT(*) FROM \',\n                                                            db_quoted,\n                                                            \'.\',\n                                                            table_quoted);\n            PREPARE stmt_select FROM @sys.tmp.table_exists.SQL;\n            IF (NOT v_error) THEN\n                DEALLOCATE PREPARE stmt_select;\n                SET out_exists = \'TEMPORARY\';\n            END IF;\n        END IF;\n    END IF;\nEND','NONE'),('sys','ps_is_instrument_default_enabled','FUNCTION','ps_is_instrument_default_enabled','SQL','READS_SQL_DATA','YES','INVOKER','in_instrument VARCHAR(128)\n    ','enum(\'YES\',\'NO\') CHARSET utf8mb3','BEGIN\n    DECLARE v_enabled ENUM(\'YES\', \'NO\');\n    SET v_enabled = IF(in_instrument LIKE \'wait/io/file/%\'\n                        OR in_instrument LIKE \'wait/io/table/%\'\n                        OR in_instrument LIKE \'statement/%\'\n                        OR in_instrument LIKE \'memory/performance_schema/%\'\n                        OR in_instrument IN (\'wait/lock/table/sql/handler\', \'idle\')\n               \n                      ,\n                       \'YES\',\n                       \'NO\'\n                    );\n    RETURN v_enabled;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns whether an instrument is enabled by default in this version of MySQL.\n             Parameters\n             in_instrument VARCHAR(128):\n               The instrument to check.\n             Returns\n             ENUM(\'YES\', \'NO\')\n             Example\n             mysql> SELECT sys.ps_is_instrument_default_enabled(\'statement/sql/select\');\n             +--------------------------------------------------------------+\n             | sys.ps_is_instrument_default_enabled(\'statement/sql/select\') |\n             +--------------------------------------------------------------+\n             | YES                                                          |\n             +--------------------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_enabled ENUM(\'YES\', \'NO\');\n    SET v_enabled = IF(in_instrument LIKE \'wait/io/file/%\'\n                        OR in_instrument LIKE \'wait/io/table/%\'\n                        OR in_instrument LIKE \'statement/%\'\n                        OR in_instrument LIKE \'memory/performance_schema/%\'\n                        OR in_instrument IN (\'wait/lock/table/sql/handler\', \'idle\')\n               \n                      ,\n                       \'YES\',\n                       \'NO\'\n                    );\n    RETURN v_enabled;\nEND','NONE'),('sys','ps_is_instrument_default_timed','FUNCTION','ps_is_instrument_default_timed','SQL','READS_SQL_DATA','YES','INVOKER','in_instrument VARCHAR(128)\n    ','enum(\'YES\',\'NO\') CHARSET utf8mb3','BEGIN\n    DECLARE v_timed ENUM(\'YES\', \'NO\');\n    SET v_timed = IF(in_instrument LIKE \'wait/io/file/%\'\n                        OR in_instrument LIKE \'wait/io/table/%\'\n                        OR in_instrument LIKE \'statement/%\'\n                        OR in_instrument IN (\'wait/lock/table/sql/handler\', \'idle\')\n               \n                      ,\n                       \'YES\',\n                       \'NO\'\n                    );\n    RETURN v_timed;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns whether an instrument is timed by default in this version of MySQL.\n             Parameters\n             in_instrument VARCHAR(128):\n               The instrument to check.\n             Returns\n             ENUM(\'YES\', \'NO\')\n             Example\n             mysql> SELECT sys.ps_is_instrument_default_timed(\'statement/sql/select\');\n             +------------------------------------------------------------+\n             | sys.ps_is_instrument_default_timed(\'statement/sql/select\') |\n             +------------------------------------------------------------+\n             | YES                                                        |\n             +------------------------------------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_timed ENUM(\'YES\', \'NO\');\n    SET v_timed = IF(in_instrument LIKE \'wait/io/file/%\'\n                        OR in_instrument LIKE \'wait/io/table/%\'\n                        OR in_instrument LIKE \'statement/%\'\n                        OR in_instrument IN (\'wait/lock/table/sql/handler\', \'idle\')\n               \n                      ,\n                       \'YES\',\n                       \'NO\'\n                    );\n    RETURN v_timed;\nEND','NONE'),('sys','ps_is_thread_instrumented','FUNCTION','ps_is_thread_instrumented','SQL','READS_SQL_DATA','NO','INVOKER','in_connection_id BIGINT UNSIGNED\n    ','enum(\'YES\',\'NO\',\'UNKNOWN\') CHARSET utf8mb3','BEGIN\n    DECLARE v_enabled ENUM(\'YES\', \'NO\', \'UNKNOWN\');\n    IF (in_connection_id IS NULL) THEN\n        RETURN NULL;\n    END IF;\n    SELECT INSTRUMENTED INTO v_enabled\n      FROM performance_schema.threads\n     WHERE PROCESSLIST_ID = in_connection_id;\n    IF (v_enabled IS NULL) THEN\n        RETURN \'UNKNOWN\';\n    ELSE\n        RETURN v_enabled;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Checks whether the provided connection id is instrumented within Performance Schema.\n             Parameters\n             in_connection_id (BIGINT UNSIGNED):\n               The id of the connection to check.\n             Returns\n             ENUM(\'YES\', \'NO\', \'UNKNOWN\')\n             Example\n             mysql> SELECT sys.ps_is_thread_instrumented(CONNECTION_ID());\n             +------------------------------------------------+\n             | sys.ps_is_thread_instrumented(CONNECTION_ID()) |\n             +------------------------------------------------+\n             | YES                                            |\n             +------------------------------------------------+\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_enabled ENUM(\'YES\', \'NO\', \'UNKNOWN\');\n    IF (in_connection_id IS NULL) THEN\n        RETURN NULL;\n    END IF;\n    SELECT INSTRUMENTED INTO v_enabled\n      FROM performance_schema.threads\n     WHERE PROCESSLIST_ID = in_connection_id;\n    IF (v_enabled IS NULL) THEN\n        RETURN \'UNKNOWN\';\n    ELSE\n        RETURN v_enabled;\n    END IF;\nEND','NONE'),('sys','ps_thread_id','FUNCTION','ps_thread_id','SQL','READS_SQL_DATA','NO','INVOKER','in_connection_id BIGINT UNSIGNED\n    ','bigint(20) unsigned','BEGIN\n    RETURN (SELECT THREAD_ID\n              FROM `performance_schema`.`threads`\n             WHERE PROCESSLIST_ID = IFNULL(in_connection_id, CONNECTION_ID())\n           );\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Return the Performance Schema THREAD_ID for the specified connection ID.\n             Parameters\n             in_connection_id (BIGINT UNSIGNED):\n               The id of the connection to return the thread id for. If NULL, the current\n               connection thread id is returned.\n             Example\n             mysql> SELECT sys.ps_thread_id(79);\n             +----------------------+\n             | sys.ps_thread_id(79) |\n             +----------------------+\n             |                   98 |\n             +----------------------+\n             1 row in set (0.00 sec)\n             mysql> SELECT sys.ps_thread_id(CONNECTION_ID());\n             +-----------------------------------+\n             | sys.ps_thread_id(CONNECTION_ID()) |\n             +-----------------------------------+\n             |                                98 |\n             +-----------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN (SELECT THREAD_ID\n              FROM `performance_schema`.`threads`\n             WHERE PROCESSLIST_ID = IFNULL(in_connection_id, CONNECTION_ID())\n           );\nEND','NONE'),('sys','ps_thread_account','FUNCTION','ps_thread_account','SQL','READS_SQL_DATA','NO','INVOKER','in_thread_id BIGINT UNSIGNED\n    ','text CHARSET utf8mb3','BEGIN\n    RETURN (SELECT IF(\n                      type = \'FOREGROUND\',\n                      CONCAT(processlist_user, \'@\', processlist_host),\n                      type\n                     ) AS account\n              FROM `performance_schema`.`threads`\n             WHERE thread_id = in_thread_id);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Return the user@host account for the given Performance Schema thread id.\n             Parameters\n             in_thread_id (BIGINT UNSIGNED):\n               The id of the thread to return the account for.\n             Example\n             mysql> select thread_id, processlist_user, processlist_host from performance_schema.threads where type = \'foreground\';\n              +-----------+------------------+------------------+\n              | thread_id | processlist_user | processlist_host |\n              +-----------+------------------+------------------+\n              |        23 | NULL             | NULL             |\n              |        30 | root             | localhost        |\n              |        31 | msandbox         | localhost        |\n              |        32 | msandbox         | localhost        |\n              +-----------+------------------+------------------+\n              4 rows in set (0.00 sec)\n              mysql> select sys.ps_thread_account(31);\n              +---------------------------+\n              | sys.ps_thread_account(31) |\n              +---------------------------+\n              | msandbox@localhost        |\n              +---------------------------+\n              1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN (SELECT IF(\n                      type = \'FOREGROUND\',\n                      CONCAT(processlist_user, \'@\', processlist_host),\n                      type\n                     ) AS account\n              FROM `performance_schema`.`threads`\n             WHERE thread_id = in_thread_id);\nEND','NONE'),('sys','quote_identifier','FUNCTION','quote_identifier','SQL','NO_SQL','YES','INVOKER','in_identifier TEXT','text CHARSET utf8mb3','BEGIN\n    RETURN CONCAT(\'`\', REPLACE(in_identifier, \'`\', \'``\'), \'`\');\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Takes an unquoted identifier (schema name, table name, etc.) and\n             returns the identifier quoted with backticks.\n             Parameters\n             in_identifier (TEXT):\n               The identifier to quote.\n             Returns\n             TEXT\n             Example\n             mysql> SELECT sys.quote_identifier(\'my_identifier\') AS Identifier;\n             +-----------------+\n             | Identifier      |\n             +-----------------+\n             | `my_identifier` |\n             +-----------------+\n             1 row in set (0.00 sec)\n             mysql> SELECT sys.quote_identifier(\'my`idenfier\') AS Identifier;\n             +----------------+\n             | Identifier     |\n             +----------------+\n             | `my``idenfier` |\n             +----------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN CONCAT(\'`\', REPLACE(in_identifier, \'`\', \'``\'), \'`\');\nEND','NONE'),('sys','sys_get_config','FUNCTION','sys_get_config','SQL','READS_SQL_DATA','YES','INVOKER','in_variable_name VARCHAR(128),\n        in_default_value VARCHAR(128)\n    ','varchar(128) CHARSET utf8mb3','BEGIN\n    DECLARE v_value VARCHAR(128) DEFAULT NULL;\n    DECLARE old_val INTEGER DEFAULT NULL;\n    SET v_value = (SELECT value FROM sys.sys_config WHERE variable = in_variable_name);\n    IF (v_value IS NULL) THEN\n        SET v_value = in_default_value;\n    END IF;\n    RETURN v_value;\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns the value for the requested variable using the following logic:\n                1. If the option exists in sys.sys_config return the value from there.\n                2. Else fall back on the provided default value.\n             Notes for using sys_get_config():\n                * If the default value argument to sys_get_config() is NULL and case 2. is reached, NULL is returned.\n                  It is then expected that the caller is able to handle NULL for the given configuration option.\n                * The convention is to name the user variables @sys.<name of variable>. It is <name of variable> that\n                  is stored in the sys_config table and is what is expected as the argument to sys_get_config().\n                * If you want to check whether the configuration option has already been set and if not assign with\n                  the return value of sys_get_config() you can use IFNULL(...) (see example below). However this should\n                  not be done inside a loop (e.g. for each row in a result set) as for repeated calls where assignment\n                  is only needed in the first iteration using IFNULL(...) is expected to be significantly slower than\n                  using an IF (...) THEN ... END IF; block (see example below).\n             Parameters\n             in_variable_name (VARCHAR(128)):\n               The name of the config option to return the value for.\n             in_default_value (VARCHAR(128)):\n               The default value to return if the variable does not exist in sys.sys_config.\n             Returns\n             VARCHAR(128)\n             Example\n             mysql> SELECT sys.sys_get_config(\'statement_truncate_len\', 128) AS Value;\n             +-------+\n             | Value |\n             +-------+\n             | 64    |\n             +-------+\n             1 row in set (0.00 sec)\n             mysql> SET @sys.statement_truncate_len = IFNULL(@sys.statement_truncate_len, sys.sys_get_config(\'statement_truncate_len\', 64));\n             Query OK, 0 rows affected (0.00 sec)\n             IF (@sys.statement_truncate_len IS NULL) THEN\n                 SET @sys.statement_truncate_len = sys.sys_get_config(\'statement_truncate_len\', 64);\n             END IF;\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_value VARCHAR(128) DEFAULT NULL;\n    DECLARE old_val INTEGER DEFAULT NULL;\n    SET v_value = (SELECT value FROM sys.sys_config WHERE variable = in_variable_name);\n    IF (v_value IS NULL) THEN\n        SET v_value = in_default_value;\n    END IF;\n    RETURN v_value;\nEND','NONE'),('sys','version_major','FUNCTION','version_major','SQL','NO_SQL','NO','INVOKER','','tinyint(3) unsigned','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', 1);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns the major version of MySQL Server.\n             Returns\n             TINYINT UNSIGNED\n             Example\n             mysql> SELECT VERSION(), sys.version_major();\n             +--------------------------------------+---------------------+\n             | VERSION()                            | sys.version_major() |\n             +--------------------------------------+---------------------+\n             | 5.7.9-enterprise-commercial-advanced | 5                   |\n             +--------------------------------------+---------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', 1);\nEND','NONE'),('sys','version_minor','FUNCTION','version_minor','SQL','NO_SQL','NO','INVOKER','','tinyint(3) unsigned','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', 2), \'.\', -1);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns the minor (release series) version of MySQL Server.\n             Returns\n             TINYINT UNSIGNED\n             Example\n             mysql> SELECT VERSION(), sys.server_minor();\n             +--------------------------------------+---------------------+\n             | VERSION()                            | sys.version_minor() |\n             +--------------------------------------+---------------------+\n             | 5.7.9-enterprise-commercial-advanced | 7                   |\n             +--------------------------------------+---------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', 2), \'.\', -1);\nEND','NONE'),('sys','version_patch','FUNCTION','version_patch','SQL','NO_SQL','NO','INVOKER','','tinyint(3) unsigned','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', -1);\nEND','mariadb.sys@localhost','2022-10-06 08:23:08','2022-10-06 08:23:08','','\n             Description\n             Returns the patch release version of MySQL Server.\n             Returns\n             TINYINT UNSIGNED\n             Example\n             mysql> SELECT VERSION(), sys.version_patch();\n             +--------------------------------------+---------------------+\n             | VERSION()                            | sys.version_patch() |\n             +--------------------------------------+---------------------+\n             | 5.7.9-enterprise-commercial-advanced | 9                   |\n             +--------------------------------------+---------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), \'-\', 1), \'.\', -1);\nEND','NONE'),('sys','execute_prepared_stmt','PROCEDURE','execute_prepared_stmt','SQL','READS_SQL_DATA','NO','INVOKER','\n        IN in_query longtext CHARACTER SET UTF8\n    ','','BEGIN\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug = sys.sys_get_config(\'debug\', \'OFF\');\n    END IF;\n    IF (in_query IS NULL OR LENGTH(in_query) < 4) THEN\n       SIGNAL SQLSTATE \'45000\'\n          SET MESSAGE_TEXT = \"The @sys.execute_prepared_stmt.sql must contain a query\";\n    END IF;\n    SET @sys.execute_prepared_stmt.sql = in_query;\n    IF (@sys.debug = \'ON\') THEN\n        SELECT @sys.execute_prepared_stmt.sql AS \'Debug\';\n    END IF;\n    PREPARE sys_execute_prepared_stmt FROM @sys.execute_prepared_stmt.sql;\n    EXECUTE sys_execute_prepared_stmt;\n    DEALLOCATE PREPARE sys_execute_prepared_stmt;\n    SET @sys.execute_prepared_stmt.sql = NULL;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Takes the query in the argument and executes it using a prepared statement. The prepared statement is deallocated,\n             so the procedure is mainly useful for executing one off dynamically created queries.\n             The sys_execute_prepared_stmt prepared statement name is used for the query and is required not to exist.\n             Parameters\n             in_query (longtext CHARACTER SET UTF8):\n               The query to execute.\n             Configuration Options\n             sys.debug\n               Whether to provide debugging output.\n               Default is \'OFF\'. Set to \'ON\' to include.\n             Example\n             mysql> CALL sys.execute_prepared_stmt(\'SELECT * FROM sys.sys_config\');\n             +------------------------+-------+---------------------+--------+\n             | variable               | value | set_time            | set_by |\n             +------------------------+-------+---------------------+--------+\n             | statement_truncate_len | 64    | 2015-06-30 13:06:00 | NULL   |\n             +------------------------+-------+---------------------+--------+\n             1 row in set (0.00 sec)\n             Query OK, 0 rows affected (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    IF (@sys.debug IS NULL) THEN\n        SET @sys.debug = sys.sys_get_config(\'debug\', \'OFF\');\n    END IF;\n    IF (in_query IS NULL OR LENGTH(in_query) < 4) THEN\n       SIGNAL SQLSTATE \'45000\'\n          SET MESSAGE_TEXT = \"The @sys.execute_prepared_stmt.sql must contain a query\";\n    END IF;\n    SET @sys.execute_prepared_stmt.sql = in_query;\n    IF (@sys.debug = \'ON\') THEN\n        SELECT @sys.execute_prepared_stmt.sql AS \'Debug\';\n    END IF;\n    PREPARE sys_execute_prepared_stmt FROM @sys.execute_prepared_stmt.sql;\n    EXECUTE sys_execute_prepared_stmt;\n    DEALLOCATE PREPARE sys_execute_prepared_stmt;\n    SET @sys.execute_prepared_stmt.sql = NULL;\nEND','NONE'),('sys','ps_setup_disable_background_threads','PROCEDURE','ps_setup_disable_background_threads','SQL','MODIFIES_SQL_DATA','NO','INVOKER','','','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE type = \'BACKGROUND\';\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' background thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Disable all background thread instrumentation within Performance Schema.\n             Parameters\n             None.\n             Example\n             mysql> CALL sys.ps_setup_disable_background_threads();\n             +--------------------------------+\n             | summary                        |\n             +--------------------------------+\n             | Disabled 18 background threads |\n             +--------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE type = \'BACKGROUND\';\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' background thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_disable_consumer','PROCEDURE','ps_setup_disable_consumer','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN consumer VARCHAR(128)\n    ','','BEGIN\n    UPDATE performance_schema.setup_consumers\n       SET enabled = \'NO\'\n     WHERE name LIKE CONCAT(\'%\', consumer, \'%\');\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' consumer\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Disables consumers within Performance Schema\n             matching the input pattern.\n             Parameters\n             consumer (VARCHAR(128)):\n               A LIKE pattern match (using \"%consumer%\") of consumers to disable\n             Example\n             To disable all consumers:\n             mysql> CALL sys.ps_setup_disable_consumer(\'\');\n             +--------------------------+\n             | summary                  |\n             +--------------------------+\n             | Disabled 15 consumers    |\n             +--------------------------+\n             1 row in set (0.02 sec)\n             To disable just the event_stage consumers:\n             mysql> CALL sys.ps_setup_disable_comsumers(\'stage\');\n             +------------------------+\n             | summary                |\n             +------------------------+\n             | Disabled 3 consumers   |\n             +------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.setup_consumers\n       SET enabled = \'NO\'\n     WHERE name LIKE CONCAT(\'%\', consumer, \'%\');\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' consumer\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_disable_instrument','PROCEDURE','ps_setup_disable_instrument','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_pattern VARCHAR(128)\n    ','','BEGIN\n    UPDATE performance_schema.setup_instruments\n       SET enabled = \'NO\', timed = \'NO\'\n     WHERE name LIKE CONCAT(\'%\', in_pattern, \'%\');\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' instrument\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Disables instruments within Performance Schema\n             matching the input pattern.\n             Parameters\n             in_pattern (VARCHAR(128)):\n               A LIKE pattern match (using \"%in_pattern%\") of events to disable\n             Example\n             To disable all mutex instruments:\n             mysql> CALL sys.ps_setup_disable_instrument(\'wait/synch/mutex\');\n             +--------------------------+\n             | summary                  |\n             +--------------------------+\n             | Disabled 155 instruments |\n             +--------------------------+\n             1 row in set (0.02 sec)\n             To disable just a specific TCP/IP based network IO instrument:\n             mysql> CALL sys.ps_setup_disable_instrument(\'wait/io/socket/sql/server_tcpip_socket\');\n             +------------------------+\n             | summary                |\n             +------------------------+\n             | Disabled 1 instruments |\n             +------------------------+\n             1 row in set (0.00 sec)\n             To disable all instruments:\n             mysql> CALL sys.ps_setup_disable_instrument(\'\');\n             +--------------------------+\n             | summary                  |\n             +--------------------------+\n             | Disabled 547 instruments |\n             +--------------------------+\n             1 row in set (0.01 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.setup_instruments\n       SET enabled = \'NO\', timed = \'NO\'\n     WHERE name LIKE CONCAT(\'%\', in_pattern, \'%\');\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' instrument\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_disable_thread','PROCEDURE','ps_setup_disable_thread','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_connection_id BIGINT\n    ','','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE processlist_id = in_connection_id;\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Disable the given connection/thread in Performance Schema.\n             Parameters\n             in_connection_id (BIGINT):\n               The connection ID (PROCESSLIST_ID from performance_schema.threads\n               or the ID shown within SHOW PROCESSLIST)\n             Example\n             mysql> CALL sys.ps_setup_disable_thread(3);\n             +-------------------+\n             | summary           |\n             +-------------------+\n             | Disabled 1 thread |\n             +-------------------+\n             1 row in set (0.01 sec)\n             To disable the current connection:\n             mysql> CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n             +-------------------+\n             | summary           |\n             +-------------------+\n             | Disabled 1 thread |\n             +-------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'NO\'\n     WHERE processlist_id = in_connection_id;\n    SELECT CONCAT(\'Disabled \', @rows := ROW_COUNT(), \' thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_enable_background_threads','PROCEDURE','ps_setup_enable_background_threads','SQL','MODIFIES_SQL_DATA','NO','INVOKER','','','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'YES\'\n     WHERE type = \'BACKGROUND\';\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' background thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Enable all background thread instrumentation within Performance Schema.\n             Parameters\n             None.\n             Example\n             mysql> CALL sys.ps_setup_enable_background_threads();\n             +-------------------------------+\n             | summary                       |\n             +-------------------------------+\n             | Enabled 18 background threads |\n             +-------------------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'YES\'\n     WHERE type = \'BACKGROUND\';\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' background thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_enable_consumer','PROCEDURE','ps_setup_enable_consumer','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN consumer VARCHAR(128)\n    ','','BEGIN\n    UPDATE performance_schema.setup_consumers\n       SET enabled = \'YES\'\n     WHERE name LIKE CONCAT(\'%\', consumer, \'%\');\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' consumer\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Enables consumers within Performance Schema\n             matching the input pattern.\n             Parameters\n             consumer (VARCHAR(128)):\n               A LIKE pattern match (using \"%consumer%\") of consumers to enable\n             Example\n             To enable all consumers:\n             mysql> CALL sys.ps_setup_enable_consumer(\'\');\n             +-------------------------+\n             | summary                 |\n             +-------------------------+\n             | Enabled 10 consumers    |\n             +-------------------------+\n             1 row in set (0.02 sec)\n             Query OK, 0 rows affected (0.02 sec)\n             To enable just \"waits\" consumers:\n             mysql> CALL sys.ps_setup_enable_consumer(\'waits\');\n             +-----------------------+\n             | summary               |\n             +-----------------------+\n             | Enabled 3 consumers   |\n             +-----------------------+\n             1 row in set (0.00 sec)\n             Query OK, 0 rows affected (0.00 sec)\n             ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.setup_consumers\n       SET enabled = \'YES\'\n     WHERE name LIKE CONCAT(\'%\', consumer, \'%\');\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' consumer\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_enable_instrument','PROCEDURE','ps_setup_enable_instrument','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_pattern VARCHAR(128)\n    ','','BEGIN\n    UPDATE performance_schema.setup_instruments\n       SET enabled = \'YES\', timed = \'YES\'\n     WHERE name LIKE CONCAT(\'%\', in_pattern, \'%\');\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' instrument\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Enables instruments within Performance Schema\n             matching the input pattern.\n             Parameters\n             in_pattern (VARCHAR(128)):\n               A LIKE pattern match (using \"%in_pattern%\") of events to enable\n             Example\n             To enable all mutex instruments:\n             mysql> CALL sys.ps_setup_enable_instrument(\'wait/synch/mutex\');\n             +-------------------------+\n             | summary                 |\n             +-------------------------+\n             | Enabled 155 instruments |\n             +-------------------------+\n             1 row in set (0.02 sec)\n             Query OK, 0 rows affected (0.02 sec)\n             To enable just a specific TCP/IP based network IO instrument:\n             mysql> CALL sys.ps_setup_enable_instrument(\'wait/io/socket/sql/server_tcpip_socket\');\n             +-----------------------+\n             | summary               |\n             +-----------------------+\n             | Enabled 1 instruments |\n             +-----------------------+\n             1 row in set (0.00 sec)\n             Query OK, 0 rows affected (0.00 sec)\n             To enable all instruments:\n             mysql> CALL sys.ps_setup_enable_instrument(\'\');\n             +-------------------------+\n             | summary                 |\n             +-------------------------+\n             | Enabled 547 instruments |\n             +-------------------------+\n             1 row in set (0.01 sec)\n             Query OK, 0 rows affected (0.01 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.setup_instruments\n       SET enabled = \'YES\', timed = \'YES\'\n     WHERE name LIKE CONCAT(\'%\', in_pattern, \'%\');\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' instrument\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_enable_thread','PROCEDURE','ps_setup_enable_thread','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_connection_id BIGINT\n    ','','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'YES\'\n     WHERE processlist_id = in_connection_id;\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Enable the given connection/thread in Performance Schema.\n             Parameters\n             in_connection_id (BIGINT):\n               The connection ID (PROCESSLIST_ID from performance_schema.threads\n               or the ID shown within SHOW PROCESSLIST)\n             Example\n             mysql> CALL sys.ps_setup_enable_thread(3);\n             +------------------+\n             | summary          |\n             +------------------+\n             | Enabled 1 thread |\n             +------------------+\n             1 row in set (0.01 sec)\n             To enable the current connection:\n             mysql> CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n             +------------------+\n             | summary          |\n             +------------------+\n             | Enabled 1 thread |\n             +------------------+\n             1 row in set (0.00 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    UPDATE performance_schema.threads\n       SET instrumented = \'YES\'\n     WHERE processlist_id = in_connection_id;\n    SELECT CONCAT(\'Enabled \', @rows := ROW_COUNT(), \' thread\', IF(@rows != 1, \'s\', \'\')) AS summary;\nEND','NONE'),('sys','ps_setup_save','PROCEDURE','ps_setup_save','SQL','MODIFIES_SQL_DATA','NO','INVOKER','\n        IN in_timeout INT\n    ','','BEGIN\n    DECLARE v_lock_result INT;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT GET_LOCK(\'sys.ps_setup_save\', in_timeout) INTO v_lock_result;\n    IF v_lock_result THEN\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_actors;\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_consumers;\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_instruments;\n        DROP TEMPORARY TABLE IF EXISTS tmp_threads;\n        CREATE TEMPORARY TABLE tmp_setup_actors AS SELECT * FROM performance_schema.setup_actors;\n        CREATE TEMPORARY TABLE tmp_setup_consumers AS SELECT * FROM  performance_schema.setup_consumers;\n        CREATE TEMPORARY TABLE tmp_setup_instruments AS SELECT * FROM  performance_schema.setup_instruments;\n        CREATE TEMPORARY TABLE tmp_threads (THREAD_ID bigint unsigned NOT NULL PRIMARY KEY, INSTRUMENTED enum(\'YES\',\'NO\') NOT NULL);\n        INSERT INTO tmp_threads SELECT THREAD_ID, INSTRUMENTED FROM performance_schema.threads;\n    ELSE\n        SIGNAL SQLSTATE VALUE \'90000\'\n           SET MESSAGE_TEXT = \'Could not lock the sys.ps_setup_save user lock, another thread has a saved configuration\';\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Saves the current configuration of Performance Schema,\n             so that you can alter the setup for debugging purposes,\n             but restore it to a previous state.\n             Use the companion procedure - ps_setup_reload_saved(), to\n             restore the saved config.\n             The named lock \"sys.ps_setup_save\" is taken before the\n             current configuration is saved. If the attempt to get the named\n             lock times out, an error occurs.\n             The lock is released after the settings have been restored by\n             calling ps_setup_reload_saved().\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Parameters\n             in_timeout INT\n               The timeout in seconds used when trying to obtain the lock.\n               A negative timeout means infinite timeout.\n             Example\n             mysql> CALL sys.ps_setup_save(-1);\n             Query OK, 0 rows affected (0.08 sec)\n             mysql> UPDATE performance_schema.setup_instruments\n                 ->    SET enabled = \'YES\', timed = \'YES\';\n             Query OK, 547 rows affected (0.40 sec)\n             Rows matched: 784  Changed: 547  Warnings: 0\n             /* Run some tests that need more detailed instrumentation here */\n             mysql> CALL sys.ps_setup_reload_saved();\n             Query OK, 0 rows affected (0.32 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_lock_result INT;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT GET_LOCK(\'sys.ps_setup_save\', in_timeout) INTO v_lock_result;\n    IF v_lock_result THEN\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_actors;\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_consumers;\n        DROP TEMPORARY TABLE IF EXISTS tmp_setup_instruments;\n        DROP TEMPORARY TABLE IF EXISTS tmp_threads;\n        CREATE TEMPORARY TABLE tmp_setup_actors AS SELECT * FROM performance_schema.setup_actors;\n        CREATE TEMPORARY TABLE tmp_setup_consumers AS SELECT * FROM  performance_schema.setup_consumers;\n        CREATE TEMPORARY TABLE tmp_setup_instruments AS SELECT * FROM  performance_schema.setup_instruments;\n        CREATE TEMPORARY TABLE tmp_threads (THREAD_ID bigint unsigned NOT NULL PRIMARY KEY, INSTRUMENTED enum(\'YES\',\'NO\') NOT NULL);\n        INSERT INTO tmp_threads SELECT THREAD_ID, INSTRUMENTED FROM performance_schema.threads;\n    ELSE\n        SIGNAL SQLSTATE VALUE \'90000\'\n           SET MESSAGE_TEXT = \'Could not lock the sys.ps_setup_save user lock, another thread has a saved configuration\';\n    END IF;\n    SET sql_log_bin = @log_bin;\nEND','NONE'),('sys','ps_setup_reload_saved','PROCEDURE','ps_setup_reload_saved','SQL','MODIFIES_SQL_DATA','NO','INVOKER','','','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_lock_result INT;\n    DECLARE v_lock_used_by BIGINT;\n    DECLARE v_signal_message TEXT;\n    DECLARE EXIT HANDLER FOR SQLEXCEPTION\n    BEGIN\n        SIGNAL SQLSTATE VALUE \'90001\'\n           SET MESSAGE_TEXT = \'An error occurred, was sys.ps_setup_save() run before this procedure?\';\n    END;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT IS_USED_LOCK(\'sys.ps_setup_save\') INTO v_lock_used_by;\n    IF (v_lock_used_by != CONNECTION_ID()) THEN\n        SET v_signal_message = CONCAT(\'The sys.ps_setup_save lock is currently owned by \', v_lock_used_by);\n        SIGNAL SQLSTATE VALUE \'90002\'\n           SET MESSAGE_TEXT = v_signal_message;\n    END IF;\n    DELETE FROM performance_schema.setup_actors;\n    INSERT INTO performance_schema.setup_actors SELECT * FROM tmp_setup_actors;\n    BEGIN\n        DECLARE v_name varchar(64);\n        DECLARE v_enabled enum(\'YES\', \'NO\');\n        DECLARE c_consumers CURSOR FOR SELECT NAME, ENABLED FROM tmp_setup_consumers;\n        DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n        SET v_done = FALSE;\n        OPEN c_consumers;\n        c_consumers_loop: LOOP\n            FETCH c_consumers INTO v_name, v_enabled;\n            IF v_done THEN\n               LEAVE c_consumers_loop;\n            END IF;\n            UPDATE performance_schema.setup_consumers\n               SET ENABLED = v_enabled\n             WHERE NAME = v_name;\n         END LOOP;\n         CLOSE c_consumers;\n    END;\n    UPDATE performance_schema.setup_instruments\n     INNER JOIN tmp_setup_instruments USING (NAME)\n       SET performance_schema.setup_instruments.ENABLED = tmp_setup_instruments.ENABLED,\n           performance_schema.setup_instruments.TIMED   = tmp_setup_instruments.TIMED;\n    BEGIN\n        DECLARE v_thread_id bigint unsigned;\n        DECLARE v_instrumented enum(\'YES\', \'NO\');\n        DECLARE c_threads CURSOR FOR SELECT THREAD_ID, INSTRUMENTED FROM tmp_threads;\n        DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n        SET v_done = FALSE;\n        OPEN c_threads;\n        c_threads_loop: LOOP\n            FETCH c_threads INTO v_thread_id, v_instrumented;\n            IF v_done THEN\n               LEAVE c_threads_loop;\n            END IF;\n            UPDATE performance_schema.threads\n               SET INSTRUMENTED = v_instrumented\n             WHERE THREAD_ID = v_thread_id;\n        END LOOP;\n        CLOSE c_threads;\n    END;\n    UPDATE performance_schema.threads\n       SET INSTRUMENTED = IF(PROCESSLIST_USER IS NOT NULL,\n                             sys.ps_is_account_enabled(PROCESSLIST_HOST, PROCESSLIST_USER),\n                             \'YES\')\n     WHERE THREAD_ID NOT IN (SELECT THREAD_ID FROM tmp_threads);\n    DROP TEMPORARY TABLE tmp_setup_actors;\n    DROP TEMPORARY TABLE tmp_setup_consumers;\n    DROP TEMPORARY TABLE tmp_setup_instruments;\n    DROP TEMPORARY TABLE tmp_threads;\n    SELECT RELEASE_LOCK(\'sys.ps_setup_save\') INTO v_lock_result;\n    SET sql_log_bin = @log_bin;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Reloads a saved Performance Schema configuration,\n             so that you can alter the setup for debugging purposes,\n             but restore it to a previous state.\n             Use the companion procedure - ps_setup_save(), to\n             save a configuration.\n             Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n             Parameters\n             None.\n             Example\n             mysql> CALL sys.ps_setup_save();\n             Query OK, 0 rows affected (0.08 sec)\n             mysql> UPDATE performance_schema.setup_instruments SET enabled = \'YES\', timed = \'YES\';\n             Query OK, 547 rows affected (0.40 sec)\n             Rows matched: 784  Changed: 547  Warnings: 0\n             /* Run some tests that need more detailed instrumentation here */\n             mysql> CALL sys.ps_setup_reload_saved();\n             Query OK, 0 rows affected (0.32 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_done bool DEFAULT FALSE;\n    DECLARE v_lock_result INT;\n    DECLARE v_lock_used_by BIGINT;\n    DECLARE v_signal_message TEXT;\n    DECLARE EXIT HANDLER FOR SQLEXCEPTION\n    BEGIN\n        SIGNAL SQLSTATE VALUE \'90001\'\n           SET MESSAGE_TEXT = \'An error occurred, was sys.ps_setup_save() run before this procedure?\';\n    END;\n    SET @log_bin := @@sql_log_bin;\n    SET sql_log_bin = 0;\n    SELECT IS_USED_LOCK(\'sys.ps_setup_save\') INTO v_lock_used_by;\n    IF (v_lock_used_by != CONNECTION_ID()) THEN\n        SET v_signal_message = CONCAT(\'The sys.ps_setup_save lock is currently owned by \', v_lock_used_by);\n        SIGNAL SQLSTATE VALUE \'90002\'\n           SET MESSAGE_TEXT = v_signal_message;\n    END IF;\n    DELETE FROM performance_schema.setup_actors;\n    INSERT INTO performance_schema.setup_actors SELECT * FROM tmp_setup_actors;\n    BEGIN\n        DECLARE v_name varchar(64);\n        DECLARE v_enabled enum(\'YES\', \'NO\');\n        DECLARE c_consumers CURSOR FOR SELECT NAME, ENABLED FROM tmp_setup_consumers;\n        DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n        SET v_done = FALSE;\n        OPEN c_consumers;\n        c_consumers_loop: LOOP\n            FETCH c_consumers INTO v_name, v_enabled;\n            IF v_done THEN\n               LEAVE c_consumers_loop;\n            END IF;\n            UPDATE performance_schema.setup_consumers\n               SET ENABLED = v_enabled\n             WHERE NAME = v_name;\n         END LOOP;\n         CLOSE c_consumers;\n    END;\n    UPDATE performance_schema.setup_instruments\n     INNER JOIN tmp_setup_instruments USING (NAME)\n       SET performance_schema.setup_instruments.ENABLED = tmp_setup_instruments.ENABLED,\n           performance_schema.setup_instruments.TIMED   = tmp_setup_instruments.TIMED;\n    BEGIN\n        DECLARE v_thread_id bigint unsigned;\n        DECLARE v_instrumented enum(\'YES\', \'NO\');\n        DECLARE c_threads CURSOR FOR SELECT THREAD_ID, INSTRUMENTED FROM tmp_threads;\n        DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n        SET v_done = FALSE;\n        OPEN c_threads;\n        c_threads_loop: LOOP\n            FETCH c_threads INTO v_thread_id, v_instrumented;\n            IF v_done THEN\n               LEAVE c_threads_loop;\n            END IF;\n            UPDATE performance_schema.threads\n               SET INSTRUMENTED = v_instrumented\n             WHERE THREAD_ID = v_thread_id;\n        END LOOP;\n        CLOSE c_threads;\n    END;\n    UPDATE performance_schema.threads\n       SET INSTRUMENTED = IF(PROCESSLIST_USER IS NOT NULL,\n                             sys.ps_is_account_enabled(PROCESSLIST_HOST, PROCESSLIST_USER),\n                             \'YES\')\n     WHERE THREAD_ID NOT IN (SELECT THREAD_ID FROM tmp_threads);\n    DROP TEMPORARY TABLE tmp_setup_actors;\n    DROP TEMPORARY TABLE tmp_setup_consumers;\n    DROP TEMPORARY TABLE tmp_setup_instruments;\n    DROP TEMPORARY TABLE tmp_threads;\n    SELECT RELEASE_LOCK(\'sys.ps_setup_save\') INTO v_lock_result;\n    SET sql_log_bin = @log_bin;\nEND','NONE'),('sys','ps_setup_show_disabled','PROCEDURE','ps_setup_show_disabled','SQL','READS_SQL_DATA','NO','INVOKER','\n        IN in_show_instruments BOOLEAN,\n        IN in_show_threads BOOLEAN\n    ','','BEGIN\n    SELECT @@performance_schema AS performance_schema_enabled;\n    \n    SELECT object_type,\n           CONCAT(object_schema, \'.\', object_name) AS objects,\n           enabled,\n           timed\n      FROM performance_schema.setup_objects\n     WHERE enabled = \'NO\'\n     ORDER BY object_type, objects;\n    SELECT name AS disabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_consumers;\n    IF (in_show_threads) THEN\n        SELECT IF(name = \'thread/sql/one_connection\',\n                  CONCAT(processlist_user, \'@\', processlist_host),\n                  REPLACE(name, \'thread/\', \'\')) AS disabled_threads,\n        TYPE AS thread_type\n          FROM performance_schema.threads\n         WHERE INSTRUMENTED = \'NO\'\n         ORDER BY disabled_threads;\n    END IF;\n    IF (in_show_instruments) THEN\n        SELECT name AS disabled_instruments,\n               timed\n          FROM performance_schema.setup_instruments\n         WHERE enabled = \'NO\'\n         ORDER BY disabled_instruments;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently disable Performance Schema configuration.\n             Disabled users is only available for MySQL 5.7.6 and later.\n             In earlier versions it was only possible to enable users.\n             Parameters\n             in_show_instruments (BOOLEAN):\n               Whether to print disabled instruments (can print many items)\n             in_show_threads (BOOLEAN):\n               Whether to print disabled threads\n             Example\n             mysql> CALL sys.ps_setup_show_disabled(TRUE, TRUE);\n             +----------------------------+\n             | performance_schema_enabled |\n             +----------------------------+\n             |                          1 |\n             +----------------------------+\n             1 row in set (0.00 sec)\n             +--------------------+\n             | disabled_users     |\n             +--------------------+\n             | \'mark\'@\'localhost\' |\n             +--------------------+\n             1 row in set (0.00 sec)\n             +-------------+----------------------+---------+-------+\n             | object_type | objects              | enabled | timed |\n             +-------------+----------------------+---------+-------+\n             | EVENT       | mysql.%              | NO      | NO    |\n             | EVENT       | performance_schema.% | NO      | NO    |\n             | EVENT       | information_schema.% | NO      | NO    |\n             | FUNCTION    | mysql.%              | NO      | NO    |\n             | FUNCTION    | performance_schema.% | NO      | NO    |\n             | FUNCTION    | information_schema.% | NO      | NO    |\n             | PROCEDURE   | mysql.%              | NO      | NO    |\n             | PROCEDURE   | performance_schema.% | NO      | NO    |\n             | PROCEDURE   | information_schema.% | NO      | NO    |\n             | TABLE       | mysql.%              | NO      | NO    |\n             | TABLE       | performance_schema.% | NO      | NO    |\n             | TABLE       | information_schema.% | NO      | NO    |\n             | TRIGGER     | mysql.%              | NO      | NO    |\n             | TRIGGER     | performance_schema.% | NO      | NO    |\n             | TRIGGER     | information_schema.% | NO      | NO    |\n             +-------------+----------------------+---------+-------+\n             15 rows in set (0.00 sec)\n             +----------------------------------+\n             | disabled_consumers               |\n             +----------------------------------+\n             | events_stages_current            |\n             | events_stages_history            |\n             | events_stages_history_long       |\n             | events_statements_history        |\n             | events_statements_history_long   |\n             | events_transactions_history      |\n             | events_transactions_history_long |\n             | events_waits_current             |\n             | events_waits_history             |\n             | events_waits_history_long        |\n             +----------------------------------+\n             10 rows in set (0.00 sec)\n             Empty set (0.00 sec)\n             +---------------------------------------------------------------------------------------+-------+\n             | disabled_instruments                                                                  | timed |\n             +---------------------------------------------------------------------------------------+-------+\n             | wait/synch/mutex/sql/TC_LOG_MMAP::LOCK_tc                                             | NO    |\n             | wait/synch/mutex/sql/LOCK_des_key_file                                                | NO    |\n             | wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_commit                                       | NO    |\n             ...\n             | memory/sql/servers_cache                                                              | NO    |\n             | memory/sql/udf_mem                                                                    | NO    |\n             | wait/lock/metadata/sql/mdl                                                            | NO    |\n             +---------------------------------------------------------------------------------------+-------+\n             547 rows in set (0.00 sec)\n             Query OK, 0 rows affected (0.01 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT @@performance_schema AS performance_schema_enabled;\n    \n    SELECT object_type,\n           CONCAT(object_schema, \'.\', object_name) AS objects,\n           enabled,\n           timed\n      FROM performance_schema.setup_objects\n     WHERE enabled = \'NO\'\n     ORDER BY object_type, objects;\n    SELECT name AS disabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_consumers;\n    IF (in_show_threads) THEN\n        SELECT IF(name = \'thread/sql/one_connection\',\n                  CONCAT(processlist_user, \'@\', processlist_host),\n                  REPLACE(name, \'thread/\', \'\')) AS disabled_threads,\n        TYPE AS thread_type\n          FROM performance_schema.threads\n         WHERE INSTRUMENTED = \'NO\'\n         ORDER BY disabled_threads;\n    END IF;\n    IF (in_show_instruments) THEN\n        SELECT name AS disabled_instruments,\n               timed\n          FROM performance_schema.setup_instruments\n         WHERE enabled = \'NO\'\n         ORDER BY disabled_instruments;\n    END IF;\nEND','NONE'),('sys','ps_setup_show_disabled_consumers','PROCEDURE','ps_setup_show_disabled_consumers','SQL','READS_SQL_DATA','YES','INVOKER','','','BEGIN\n    SELECT name AS disabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_consumers;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently disabled consumers.\n             Parameters\n             None\n             Example\n             mysql> CALL sys.ps_setup_show_disabled_consumers();\n             +---------------------------+\n             | disabled_consumers        |\n             +---------------------------+\n             | events_statements_current |\n             | global_instrumentation    |\n             | thread_instrumentation    |\n             | statements_digest         |\n             +---------------------------+\n             4 rows in set (0.05 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT name AS disabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'NO\'\n     ORDER BY disabled_consumers;\nEND','NONE'),('sys','ps_setup_show_enabled_consumers','PROCEDURE','ps_setup_show_enabled_consumers','SQL','READS_SQL_DATA','YES','INVOKER','','','BEGIN\n    SELECT name AS enabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_consumers;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently enabled consumers.\n             Parameters\n             None\n             Example\n             mysql> CALL sys.ps_setup_show_enabled_consumers();\n             +---------------------------+\n             | enabled_consumers         |\n             +---------------------------+\n             | events_statements_current |\n             | global_instrumentation    |\n             | thread_instrumentation    |\n             | statements_digest         |\n             +---------------------------+\n             4 rows in set (0.05 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT name AS enabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_consumers;\nEND','NONE'),('sys','ps_truncate_all_tables','PROCEDURE','ps_truncate_all_tables','SQL','MODIFIES_SQL_DATA','YES','INVOKER','\n        IN in_verbose BOOLEAN\n    ','','BEGIN\n    DECLARE v_done INT DEFAULT FALSE;\n    DECLARE v_total_tables INT DEFAULT 0;\n    DECLARE v_ps_table VARCHAR(64);\n    DECLARE ps_tables CURSOR FOR\n        SELECT table_name\n          FROM INFORMATION_SCHEMA.TABLES\n         WHERE table_schema = \'performance_schema\'\n           AND (table_name LIKE \'%summary%\'\n            OR table_name LIKE \'%history%\');\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    OPEN ps_tables;\n    ps_tables_loop: LOOP\n        FETCH ps_tables INTO v_ps_table;\n        IF v_done THEN\n          LEAVE ps_tables_loop;\n        END IF;\n        SET @truncate_stmt := CONCAT(\'TRUNCATE TABLE performance_schema.\', v_ps_table);\n        IF in_verbose THEN\n            SELECT CONCAT(\'Running: \', @truncate_stmt) AS status;\n        END IF;\n        PREPARE truncate_stmt FROM @truncate_stmt;\n        EXECUTE truncate_stmt;\n        DEALLOCATE PREPARE truncate_stmt;\n        SET v_total_tables = v_total_tables + 1;\n    END LOOP;\n    CLOSE ps_tables;\n    SELECT CONCAT(\'Truncated \', v_total_tables, \' tables\') AS summary;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Truncates all summary tables within Performance Schema,\n             resetting all aggregated instrumentation as a snapshot.\n             Parameters\n             in_verbose (BOOLEAN):\n               Whether to print each TRUNCATE statement before running\n             Example\n             mysql> CALL sys.ps_truncate_all_tables(false);\n             +---------------------+\n             | summary             |\n             +---------------------+\n             | Truncated 44 tables |\n             +---------------------+\n             1 row in set (0.10 sec)\n             Query OK, 0 rows affected (0.10 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    DECLARE v_done INT DEFAULT FALSE;\n    DECLARE v_total_tables INT DEFAULT 0;\n    DECLARE v_ps_table VARCHAR(64);\n    DECLARE ps_tables CURSOR FOR\n        SELECT table_name\n          FROM INFORMATION_SCHEMA.TABLES\n         WHERE table_schema = \'performance_schema\'\n           AND (table_name LIKE \'%summary%\'\n            OR table_name LIKE \'%history%\');\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;\n    OPEN ps_tables;\n    ps_tables_loop: LOOP\n        FETCH ps_tables INTO v_ps_table;\n        IF v_done THEN\n          LEAVE ps_tables_loop;\n        END IF;\n        SET @truncate_stmt := CONCAT(\'TRUNCATE TABLE performance_schema.\', v_ps_table);\n        IF in_verbose THEN\n            SELECT CONCAT(\'Running: \', @truncate_stmt) AS status;\n        END IF;\n        PREPARE truncate_stmt FROM @truncate_stmt;\n        EXECUTE truncate_stmt;\n        DEALLOCATE PREPARE truncate_stmt;\n        SET v_total_tables = v_total_tables + 1;\n    END LOOP;\n    CLOSE ps_tables;\n    SELECT CONCAT(\'Truncated \', v_total_tables, \' tables\') AS summary;\nEND','NONE'),('sys','ps_setup_show_enabled','PROCEDURE','ps_setup_show_enabled','SQL','READS_SQL_DATA','YES','INVOKER','\n        IN in_show_instruments BOOLEAN,\n        IN in_show_threads BOOLEAN\n    ','','BEGIN\n    SELECT @@performance_schema AS performance_schema_enabled;\n    SELECT CONCAT(\'\\\'\', user, \'\\\'@\\\'\', host, \'\\\'\') AS enabled_users\n      FROM performance_schema.setup_actors\n      WHERE enabled = \'YES\'\n     ORDER BY enabled_users;\n    SELECT object_type,\n           CONCAT(object_schema, \'.\', object_name) AS objects,\n           enabled,\n           timed\n      FROM performance_schema.setup_objects\n     WHERE enabled = \'YES\'\n     ORDER BY object_type, objects;\n    SELECT name AS enabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_consumers;\n    IF (in_show_threads) THEN\n        SELECT IF(name = \'thread/sql/one_connection\',\n                  CONCAT(processlist_user, \'@\', processlist_host),\n                  REPLACE(name, \'thread/\', \'\')) AS enabled_threads,\n        TYPE AS thread_type\n          FROM performance_schema.threads\n         WHERE INSTRUMENTED = \'YES\' AND name <> \'thread/innodb/thread_pool_thread\'\n         ORDER BY enabled_threads;\n    END IF;\n    IF (in_show_instruments) THEN\n        SELECT name AS enabled_instruments,\n               timed\n          FROM performance_schema.setup_instruments\n         WHERE enabled = \'YES\'\n         ORDER BY enabled_instruments;\n    END IF;\nEND','mariadb.sys@localhost','2022-10-06 08:23:09','2022-10-06 08:23:09','','\n             Description\n             Shows all currently enabled Performance Schema configuration.\n             Parameters\n             in_show_instruments (BOOLEAN):\n               Whether to print enabled instruments (can print many items)\n             in_show_threads (BOOLEAN):\n               Whether to print enabled threads\n             Example\n             mysql> CALL sys.ps_setup_show_enabled(TRUE, TRUE);\n             +----------------------------+\n             | performance_schema_enabled |\n             +----------------------------+\n             |                          1 |\n             +----------------------------+\n             1 row in set (0.00 sec)\n             +---------------+\n             | enabled_users |\n             +---------------+\n             | \'%\'@\'%\'       |\n             +---------------+\n             1 row in set (0.01 sec)\n             +-------------+---------+---------+-------+\n             | object_type | objects | enabled | timed |\n             +-------------+---------+---------+-------+\n             | EVENT       | %.%     | YES     | YES   |\n             | FUNCTION    | %.%     | YES     | YES   |\n             | PROCEDURE   | %.%     | YES     | YES   |\n             | TABLE       | %.%     | YES     | YES   |\n             | TRIGGER     | %.%     | YES     | YES   |\n             +-------------+---------+---------+-------+\n             5 rows in set (0.01 sec)\n             +---------------------------+\n             | enabled_consumers         |\n             +---------------------------+\n             | events_statements_current |\n             | global_instrumentation    |\n             | thread_instrumentation    |\n             | statements_digest         |\n             +---------------------------+\n             4 rows in set (0.05 sec)\n             +---------------------------------+-------------+\n             | enabled_threads                 | thread_type |\n             +---------------------------------+-------------+\n             | sql/main                        | BACKGROUND  |\n             | sql/thread_timer_notifier       | BACKGROUND  |\n             | innodb/io_ibuf_thread           | BACKGROUND  |\n             | innodb/io_log_thread            | BACKGROUND  |\n             | innodb/io_read_thread           | BACKGROUND  |\n             | innodb/io_read_thread           | BACKGROUND  |\n             | innodb/io_write_thread          | BACKGROUND  |\n             | innodb/io_write_thread          | BACKGROUND  |\n             | innodb/page_cleaner_thread      | BACKGROUND  |\n             | innodb/srv_lock_timeout_thread  | BACKGROUND  |\n             | innodb/srv_error_monitor_thread | BACKGROUND  |\n             | innodb/srv_monitor_thread       | BACKGROUND  |\n             | innodb/srv_master_thread        | BACKGROUND  |\n             | innodb/srv_purge_thread         | BACKGROUND  |\n             | innodb/srv_worker_thread        | BACKGROUND  |\n             | innodb/srv_worker_thread        | BACKGROUND  |\n             | innodb/srv_worker_thread        | BACKGROUND  |\n             | innodb/buf_dump_thread          | BACKGROUND  |\n             | innodb/dict_stats_thread        | BACKGROUND  |\n             | sql/signal_handler              | BACKGROUND  |\n             | sql/compress_gtid_table         | FOREGROUND  |\n             | root@localhost                  | FOREGROUND  |\n             +---------------------------------+-------------+\n             22 rows in set (0.01 sec)\n             +-------------------------------------+-------+\n             | enabled_instruments                 | timed |\n             +-------------------------------------+-------+\n             | wait/io/file/sql/map                | YES   |\n             | wait/io/file/sql/binlog             | YES   |\n             ...\n             | statement/com/Error                 | YES   |\n             | statement/com/                      | YES   |\n             | idle                                | YES   |\n             +-------------------------------------+-------+\n             210 rows in set (0.08 sec)\n             Query OK, 0 rows affected (0.89 sec)\n            ','utf8mb3','utf8mb3_general_ci','utf8mb3_general_ci','BEGIN\n    SELECT @@performance_schema AS performance_schema_enabled;\n    SELECT CONCAT(\'\'\'\', user, \'\'\'@\'\'\', host, \'\'\'\') AS enabled_users\n      FROM performance_schema.setup_actors\n      WHERE enabled = \'YES\'\n     ORDER BY enabled_users;\n    SELECT object_type,\n           CONCAT(object_schema, \'.\', object_name) AS objects,\n           enabled,\n           timed\n      FROM performance_schema.setup_objects\n     WHERE enabled = \'YES\'\n     ORDER BY object_type, objects;\n    SELECT name AS enabled_consumers\n      FROM performance_schema.setup_consumers\n     WHERE enabled = \'YES\'\n     ORDER BY enabled_consumers;\n    IF (in_show_threads) THEN\n        SELECT IF(name = \'thread/sql/one_connection\',\n                  CONCAT(processlist_user, \'@\', processlist_host),\n                  REPLACE(name, \'thread/\', \'\')) AS enabled_threads,\n        TYPE AS thread_type\n          FROM performance_schema.threads\n         WHERE INSTRUMENTED = \'YES\' AND name <> \'thread/innodb/thread_pool_thread\'\n         ORDER BY enabled_threads;\n    END IF;\n    IF (in_show_instruments) THEN\n        SELECT name AS enabled_instruments,\n               timed\n          FROM performance_schema.setup_instruments\n         WHERE enabled = \'YES\'\n         ORDER BY enabled_instruments;\n    END IF;\nEND','NONE');
/*!40000 ALTER TABLE `proc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `procs_priv`
--

DROP TABLE IF EXISTS `procs_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `procs_priv` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) CHARACTER SET utf8mb3 NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY') COLLATE utf8mb3_bin NOT NULL,
  `Grantor` varchar(384) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8mb3 NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Procedure privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `procs_priv`
--

LOCK TABLES `procs_priv` WRITE;
/*!40000 ALTER TABLE `procs_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `procs_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proxies_priv`
--

DROP TABLE IF EXISTS `proxies_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proxies_priv` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Proxied_host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Proxied_user` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `With_grant` tinyint(1) NOT NULL DEFAULT 0,
  `Grantor` varchar(384) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`Host`,`User`,`Proxied_host`,`Proxied_user`),
  KEY `Grantor` (`Grantor`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='User proxy privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proxies_priv`
--

LOCK TABLES `proxies_priv` WRITE;
/*!40000 ALTER TABLE `proxies_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `proxies_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roles_mapping`
--

DROP TABLE IF EXISTS `roles_mapping`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `roles_mapping` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Role` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Admin_option` enum('N','Y') CHARACTER SET utf8mb3 NOT NULL DEFAULT 'N',
  UNIQUE KEY `Host` (`Host`,`User`,`Role`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Granted roles';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roles_mapping`
--

LOCK TABLES `roles_mapping` WRITE;
/*!40000 ALTER TABLE `roles_mapping` DISABLE KEYS */;
/*!40000 ALTER TABLE `roles_mapping` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `servers`
--

DROP TABLE IF EXISTS `servers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` varchar(2048) NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(128) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int(4) NOT NULL DEFAULT 0,
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` varchar(512) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='MySQL Foreign Servers table';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `servers`
--

LOCK TABLES `servers` WRITE;
/*!40000 ALTER TABLE `servers` DISABLE KEYS */;
/*!40000 ALTER TABLE `servers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `table_stats`
--

DROP TABLE IF EXISTS `table_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `table_stats` (
  `db_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `table_name` varchar(64) COLLATE utf8mb3_bin NOT NULL,
  `cardinality` bigint(21) unsigned DEFAULT NULL,
  PRIMARY KEY (`db_name`,`table_name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=0 COMMENT='Statistics on Tables';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `table_stats`
--

LOCK TABLES `table_stats` WRITE;
/*!40000 ALTER TABLE `table_stats` DISABLE KEYS */;
/*!40000 ALTER TABLE `table_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tables_priv`
--

DROP TABLE IF EXISTS `tables_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tables_priv` (
  `Host` char(255) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `User` char(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Grantor` varchar(384) COLLATE utf8mb3_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger','Delete versioning rows') CHARACTER SET utf8mb3 NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8mb3 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Table privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tables_priv`
--

LOCK TABLES `tables_priv` WRITE;
/*!40000 ALTER TABLE `tables_priv` DISABLE KEYS */;
INSERT INTO `tables_priv` VALUES ('localhost','mysql','mariadb.sys','global_priv','root@localhost','0000-00-00 00:00:00','Select,Delete','');
/*!40000 ALTER TABLE `tables_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone`
--

DROP TABLE IF EXISTS `time_zone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone` (
  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) ENGINE=Aria AUTO_INCREMENT=1788 DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone`
--

LOCK TABLES `time_zone` WRITE;
/*!40000 ALTER TABLE `time_zone` DISABLE KEYS */;
INSERT INTO `time_zone` VALUES (1,'N'),(2,'N'),(3,'N'),(4,'N'),(5,'N'),(6,'N'),(7,'N'),(8,'N'),(9,'N'),(10,'N'),(11,'N'),(12,'N'),(13,'N'),(14,'N'),(15,'N'),(16,'N'),(17,'N'),(18,'N'),(19,'N'),(20,'N'),(21,'N'),(22,'N'),(23,'N'),(24,'N'),(25,'N'),(26,'N'),(27,'N'),(28,'N'),(29,'N'),(30,'N'),(31,'N'),(32,'N'),(33,'N'),(34,'N'),(35,'N'),(36,'N'),(37,'N'),(38,'N'),(39,'N'),(40,'N'),(41,'N'),(42,'N'),(43,'N'),(44,'N'),(45,'N'),(46,'N'),(47,'N'),(48,'N'),(49,'N'),(50,'N'),(51,'N'),(52,'N'),(53,'N'),(54,'N'),(55,'N'),(56,'N'),(57,'N'),(58,'N'),(59,'N'),(60,'N'),(61,'N'),(62,'N'),(63,'N'),(64,'N'),(65,'N'),(66,'N'),(67,'N'),(68,'N'),(69,'N'),(70,'N'),(71,'N'),(72,'N'),(73,'N'),(74,'N'),(75,'N'),(76,'N'),(77,'N'),(78,'N'),(79,'N'),(80,'N'),(81,'N'),(82,'N'),(83,'N'),(84,'N'),(85,'N'),(86,'N'),(87,'N'),(88,'N'),(89,'N'),(90,'N'),(91,'N'),(92,'N'),(93,'N'),(94,'N'),(95,'N'),(96,'N'),(97,'N'),(98,'N'),(99,'N'),(100,'N'),(101,'N'),(102,'N'),(103,'N'),(104,'N'),(105,'N'),(106,'N'),(107,'N'),(108,'N'),(109,'N'),(110,'N'),(111,'N'),(112,'N'),(113,'N'),(114,'N'),(115,'N'),(116,'N'),(117,'N'),(118,'N'),(119,'N'),(120,'N'),(121,'N'),(122,'N'),(123,'N'),(124,'N'),(125,'N'),(126,'N'),(127,'N'),(128,'N'),(129,'N'),(130,'N'),(131,'N'),(132,'N'),(133,'N'),(134,'N'),(135,'N'),(136,'N'),(137,'N'),(138,'N'),(139,'N'),(140,'N'),(141,'N'),(142,'N'),(143,'N'),(144,'N'),(145,'N'),(146,'N'),(147,'N'),(148,'N'),(149,'N'),(150,'N'),(151,'N'),(152,'N'),(153,'N'),(154,'N'),(155,'N'),(156,'N'),(157,'N'),(158,'N'),(159,'N'),(160,'N'),(161,'N'),(162,'N'),(163,'N'),(164,'N'),(165,'N'),(166,'N'),(167,'N'),(168,'N'),(169,'N'),(170,'N'),(171,'N'),(172,'N'),(173,'N'),(174,'N'),(175,'N'),(176,'N'),(177,'N'),(178,'N'),(179,'N'),(180,'N'),(181,'N'),(182,'N'),(183,'N'),(184,'N'),(185,'N'),(186,'N'),(187,'N'),(188,'N'),(189,'N'),(190,'N'),(191,'N'),(192,'N'),(193,'N'),(194,'N'),(195,'N'),(196,'N'),(197,'N'),(198,'N'),(199,'N'),(200,'N'),(201,'N'),(202,'N'),(203,'N'),(204,'N'),(205,'N'),(206,'N'),(207,'N'),(208,'N'),(209,'N'),(210,'N'),(211,'N'),(212,'N'),(213,'N'),(214,'N'),(215,'N'),(216,'N'),(217,'N'),(218,'N'),(219,'N'),(220,'N'),(221,'N'),(222,'N'),(223,'N'),(224,'N'),(225,'N'),(226,'N'),(227,'N'),(228,'N'),(229,'N'),(230,'N'),(231,'N'),(232,'N'),(233,'N'),(234,'N'),(235,'N'),(236,'N'),(237,'N'),(238,'N'),(239,'N'),(240,'N'),(241,'N'),(242,'N'),(243,'N'),(244,'N'),(245,'N'),(246,'N'),(247,'N'),(248,'N'),(249,'N'),(250,'N'),(251,'N'),(252,'N'),(253,'N'),(254,'N'),(255,'N'),(256,'N'),(257,'N'),(258,'N'),(259,'N'),(260,'N'),(261,'N'),(262,'N'),(263,'N'),(264,'N'),(265,'N'),(266,'N'),(267,'N'),(268,'N'),(269,'N'),(270,'N'),(271,'N'),(272,'N'),(273,'N'),(274,'N'),(275,'N'),(276,'N'),(277,'N'),(278,'N'),(279,'N'),(280,'N'),(281,'N'),(282,'N'),(283,'N'),(284,'N'),(285,'N'),(286,'N'),(287,'N'),(288,'N'),(289,'N'),(290,'N'),(291,'N'),(292,'N'),(293,'N'),(294,'N'),(295,'N'),(296,'N'),(297,'N'),(298,'N'),(299,'N'),(300,'N'),(301,'N'),(302,'N'),(303,'N'),(304,'N'),(305,'N'),(306,'N'),(307,'N'),(308,'N'),(309,'N'),(310,'N'),(311,'N'),(312,'N'),(313,'N'),(314,'N'),(315,'N'),(316,'N'),(317,'N'),(318,'N'),(319,'N'),(320,'N'),(321,'N'),(322,'N'),(323,'N'),(324,'N'),(325,'N'),(326,'N'),(327,'N'),(328,'N'),(329,'N'),(330,'N'),(331,'N'),(332,'N'),(333,'N'),(334,'N'),(335,'N'),(336,'N'),(337,'N'),(338,'N'),(339,'N'),(340,'N'),(341,'N'),(342,'N'),(343,'N'),(344,'N'),(345,'N'),(346,'N'),(347,'N'),(348,'N'),(349,'N'),(350,'N'),(351,'N'),(352,'N'),(353,'N'),(354,'N'),(355,'N'),(356,'N'),(357,'N'),(358,'N'),(359,'N'),(360,'N'),(361,'N'),(362,'N'),(363,'N'),(364,'N'),(365,'N'),(366,'N'),(367,'N'),(368,'N'),(369,'N'),(370,'N'),(371,'N'),(372,'N'),(373,'N'),(374,'N'),(375,'N'),(376,'N'),(377,'N'),(378,'N'),(379,'N'),(380,'N'),(381,'N'),(382,'N'),(383,'N'),(384,'N'),(385,'N'),(386,'N'),(387,'N'),(388,'N'),(389,'N'),(390,'N'),(391,'N'),(392,'N'),(393,'N'),(394,'N'),(395,'N'),(396,'N'),(397,'N'),(398,'N'),(399,'N'),(400,'N'),(401,'N'),(402,'N'),(403,'N'),(404,'N'),(405,'N'),(406,'N'),(407,'N'),(408,'N'),(409,'N'),(410,'N'),(411,'N'),(412,'N'),(413,'N'),(414,'N'),(415,'N'),(416,'N'),(417,'N'),(418,'N'),(419,'N'),(420,'N'),(421,'N'),(422,'N'),(423,'N'),(424,'N'),(425,'N'),(426,'N'),(427,'N'),(428,'N'),(429,'N'),(430,'N'),(431,'N'),(432,'N'),(433,'N'),(434,'N'),(435,'N'),(436,'N'),(437,'N'),(438,'N'),(439,'N'),(440,'N'),(441,'N'),(442,'N'),(443,'N'),(444,'N'),(445,'N'),(446,'N'),(447,'N'),(448,'N'),(449,'N'),(450,'N'),(451,'N'),(452,'N'),(453,'N'),(454,'N'),(455,'N'),(456,'N'),(457,'N'),(458,'N'),(459,'N'),(460,'N'),(461,'N'),(462,'N'),(463,'N'),(464,'N'),(465,'N'),(466,'N'),(467,'N'),(468,'N'),(469,'N'),(470,'N'),(471,'N'),(472,'N'),(473,'N'),(474,'N'),(475,'N'),(476,'N'),(477,'N'),(478,'N'),(479,'N'),(480,'N'),(481,'N'),(482,'N'),(483,'N'),(484,'N'),(485,'N'),(486,'N'),(487,'N'),(488,'N'),(489,'N'),(490,'N'),(491,'N'),(492,'N'),(493,'N'),(494,'N'),(495,'N'),(496,'N'),(497,'N'),(498,'N'),(499,'N'),(500,'N'),(501,'N'),(502,'N'),(503,'N'),(504,'N'),(505,'N'),(506,'N'),(507,'N'),(508,'N'),(509,'N'),(510,'N'),(511,'N'),(512,'N'),(513,'N'),(514,'N'),(515,'N'),(516,'N'),(517,'N'),(518,'N'),(519,'N'),(520,'N'),(521,'N'),(522,'N'),(523,'N'),(524,'N'),(525,'N'),(526,'N'),(527,'N'),(528,'N'),(529,'N'),(530,'N'),(531,'N'),(532,'N'),(533,'N'),(534,'N'),(535,'N'),(536,'N'),(537,'N'),(538,'N'),(539,'N'),(540,'N'),(541,'N'),(542,'N'),(543,'N'),(544,'N'),(545,'N'),(546,'N'),(547,'N'),(548,'N'),(549,'N'),(550,'N'),(551,'N'),(552,'N'),(553,'N'),(554,'N'),(555,'N'),(556,'N'),(557,'N'),(558,'N'),(559,'N'),(560,'N'),(561,'N'),(562,'N'),(563,'N'),(564,'N'),(565,'N'),(566,'N'),(567,'N'),(568,'N'),(569,'N'),(570,'N'),(571,'N'),(572,'N'),(573,'N'),(574,'N'),(575,'N'),(576,'N'),(577,'N'),(578,'N'),(579,'N'),(580,'N'),(581,'N'),(582,'N'),(583,'N'),(584,'N'),(585,'N'),(586,'N'),(587,'N'),(588,'N'),(589,'N'),(590,'N'),(591,'N'),(592,'N'),(593,'N'),(594,'N'),(595,'N'),(596,'N'),(597,'N'),(598,'N'),(599,'N'),(600,'N'),(601,'N'),(602,'N'),(603,'N'),(604,'N'),(605,'N'),(606,'N'),(607,'N'),(608,'N'),(609,'N'),(610,'N'),(611,'N'),(612,'N'),(613,'N'),(614,'N'),(615,'N'),(616,'N'),(617,'N'),(618,'N'),(619,'N'),(620,'N'),(621,'N'),(622,'N'),(623,'N'),(624,'N'),(625,'N'),(626,'N'),(627,'N'),(628,'N'),(629,'N'),(630,'N'),(631,'N'),(632,'N'),(633,'N'),(634,'N'),(635,'N'),(636,'N'),(637,'N'),(638,'N'),(639,'N'),(640,'N'),(641,'N'),(642,'N'),(643,'N'),(644,'N'),(645,'N'),(646,'N'),(647,'N'),(648,'N'),(649,'N'),(650,'N'),(651,'N'),(652,'N'),(653,'N'),(654,'N'),(655,'N'),(656,'N'),(657,'N'),(658,'N'),(659,'N'),(660,'N'),(661,'N'),(662,'N'),(663,'N'),(664,'N'),(665,'N'),(666,'N'),(667,'N'),(668,'N'),(669,'N'),(670,'N'),(671,'N'),(672,'N'),(673,'N'),(674,'N'),(675,'N'),(676,'N'),(677,'N'),(678,'N'),(679,'N'),(680,'N'),(681,'N'),(682,'N'),(683,'N'),(684,'N'),(685,'N'),(686,'N'),(687,'N'),(688,'N'),(689,'N'),(690,'N'),(691,'N'),(692,'N'),(693,'N'),(694,'N'),(695,'N'),(696,'N'),(697,'N'),(698,'N'),(699,'N'),(700,'N'),(701,'N'),(702,'N'),(703,'N'),(704,'N'),(705,'N'),(706,'N'),(707,'N'),(708,'N'),(709,'N'),(710,'N'),(711,'N'),(712,'N'),(713,'N'),(714,'N'),(715,'N'),(716,'N'),(717,'N'),(718,'N'),(719,'N'),(720,'N'),(721,'N'),(722,'N'),(723,'N'),(724,'N'),(725,'N'),(726,'N'),(727,'N'),(728,'N'),(729,'N'),(730,'N'),(731,'N'),(732,'N'),(733,'N'),(734,'N'),(735,'N'),(736,'N'),(737,'N'),(738,'N'),(739,'N'),(740,'N'),(741,'N'),(742,'N'),(743,'N'),(744,'N'),(745,'N'),(746,'N'),(747,'N'),(748,'N'),(749,'N'),(750,'N'),(751,'N'),(752,'N'),(753,'N'),(754,'N'),(755,'N'),(756,'N'),(757,'N'),(758,'N'),(759,'N'),(760,'N'),(761,'N'),(762,'N'),(763,'N'),(764,'N'),(765,'N'),(766,'N'),(767,'N'),(768,'N'),(769,'N'),(770,'N'),(771,'N'),(772,'N'),(773,'N'),(774,'N'),(775,'N'),(776,'N'),(777,'N'),(778,'N'),(779,'N'),(780,'N'),(781,'N'),(782,'N'),(783,'N'),(784,'N'),(785,'N'),(786,'N'),(787,'N'),(788,'N'),(789,'N'),(790,'N'),(791,'N'),(792,'N'),(793,'N'),(794,'N'),(795,'N'),(796,'N'),(797,'N'),(798,'N'),(799,'N'),(800,'N'),(801,'N'),(802,'N'),(803,'N'),(804,'N'),(805,'N'),(806,'N'),(807,'N'),(808,'N'),(809,'N'),(810,'N'),(811,'N'),(812,'N'),(813,'N'),(814,'N'),(815,'N'),(816,'N'),(817,'N'),(818,'N'),(819,'N'),(820,'N'),(821,'N'),(822,'N'),(823,'N'),(824,'N'),(825,'N'),(826,'N'),(827,'N'),(828,'N'),(829,'N'),(830,'N'),(831,'N'),(832,'N'),(833,'N'),(834,'N'),(835,'N'),(836,'N'),(837,'N'),(838,'N'),(839,'N'),(840,'N'),(841,'N'),(842,'N'),(843,'N'),(844,'N'),(845,'N'),(846,'N'),(847,'N'),(848,'N'),(849,'N'),(850,'N'),(851,'N'),(852,'N'),(853,'N'),(854,'N'),(855,'N'),(856,'N'),(857,'N'),(858,'N'),(859,'N'),(860,'N'),(861,'N'),(862,'N'),(863,'N'),(864,'N'),(865,'N'),(866,'N'),(867,'N'),(868,'N'),(869,'N'),(870,'N'),(871,'N'),(872,'N'),(873,'N'),(874,'N'),(875,'N'),(876,'N'),(877,'N'),(878,'N'),(879,'N'),(880,'N'),(881,'N'),(882,'N'),(883,'N'),(884,'N'),(885,'N'),(886,'N'),(887,'N'),(888,'N'),(889,'N'),(890,'N'),(891,'N'),(892,'N'),(893,'N'),(894,'N'),(895,'N'),(896,'N'),(897,'N'),(898,'N'),(899,'N'),(900,'N'),(901,'N'),(902,'N'),(903,'N'),(904,'N'),(905,'N'),(906,'N'),(907,'N'),(908,'N'),(909,'N'),(910,'N'),(911,'N'),(912,'N'),(913,'N'),(914,'N'),(915,'N'),(916,'N'),(917,'N'),(918,'N'),(919,'N'),(920,'N'),(921,'N'),(922,'N'),(923,'N'),(924,'N'),(925,'N'),(926,'N'),(927,'N'),(928,'N'),(929,'N'),(930,'N'),(931,'N'),(932,'N'),(933,'N'),(934,'N'),(935,'N'),(936,'N'),(937,'N'),(938,'N'),(939,'N'),(940,'N'),(941,'N'),(942,'N'),(943,'N'),(944,'N'),(945,'N'),(946,'N'),(947,'N'),(948,'N'),(949,'N'),(950,'N'),(951,'N'),(952,'N'),(953,'N'),(954,'N'),(955,'N'),(956,'N'),(957,'N'),(958,'N'),(959,'N'),(960,'N'),(961,'N'),(962,'N'),(963,'N'),(964,'N'),(965,'N'),(966,'N'),(967,'N'),(968,'N'),(969,'N'),(970,'N'),(971,'N'),(972,'N'),(973,'N'),(974,'N'),(975,'N'),(976,'N'),(977,'N'),(978,'N'),(979,'N'),(980,'N'),(981,'N'),(982,'N'),(983,'N'),(984,'N'),(985,'N'),(986,'N'),(987,'N'),(988,'N'),(989,'N'),(990,'N'),(991,'N'),(992,'N'),(993,'N'),(994,'N'),(995,'N'),(996,'N'),(997,'N'),(998,'N'),(999,'N'),(1000,'N'),(1001,'N'),(1002,'N'),(1003,'N'),(1004,'N'),(1005,'N'),(1006,'N'),(1007,'N'),(1008,'N'),(1009,'N'),(1010,'N'),(1011,'N'),(1012,'N'),(1013,'N'),(1014,'N'),(1015,'N'),(1016,'N'),(1017,'N'),(1018,'N'),(1019,'N'),(1020,'N'),(1021,'N'),(1022,'N'),(1023,'N'),(1024,'N'),(1025,'N'),(1026,'N'),(1027,'N'),(1028,'N'),(1029,'N'),(1030,'N'),(1031,'N'),(1032,'N'),(1033,'N'),(1034,'N'),(1035,'N'),(1036,'N'),(1037,'N'),(1038,'N'),(1039,'N'),(1040,'N'),(1041,'N'),(1042,'N'),(1043,'N'),(1044,'N'),(1045,'N'),(1046,'N'),(1047,'N'),(1048,'N'),(1049,'N'),(1050,'N'),(1051,'N'),(1052,'N'),(1053,'N'),(1054,'N'),(1055,'N'),(1056,'N'),(1057,'N'),(1058,'N'),(1059,'N'),(1060,'N'),(1061,'N'),(1062,'N'),(1063,'N'),(1064,'N'),(1065,'N'),(1066,'N'),(1067,'N'),(1068,'N'),(1069,'N'),(1070,'N'),(1071,'N'),(1072,'N'),(1073,'N'),(1074,'N'),(1075,'N'),(1076,'N'),(1077,'N'),(1078,'N'),(1079,'N'),(1080,'N'),(1081,'N'),(1082,'N'),(1083,'N'),(1084,'N'),(1085,'N'),(1086,'N'),(1087,'N'),(1088,'N'),(1089,'N'),(1090,'N'),(1091,'N'),(1092,'N'),(1093,'N'),(1094,'N'),(1095,'N'),(1096,'N'),(1097,'N'),(1098,'N'),(1099,'N'),(1100,'N'),(1101,'N'),(1102,'N'),(1103,'N'),(1104,'N'),(1105,'N'),(1106,'N'),(1107,'N'),(1108,'N'),(1109,'N'),(1110,'N'),(1111,'N'),(1112,'N'),(1113,'N'),(1114,'N'),(1115,'N'),(1116,'N'),(1117,'N'),(1118,'N'),(1119,'N'),(1120,'N'),(1121,'N'),(1122,'N'),(1123,'N'),(1124,'N'),(1125,'N'),(1126,'N'),(1127,'N'),(1128,'N'),(1129,'N'),(1130,'N'),(1131,'N'),(1132,'N'),(1133,'N'),(1134,'N'),(1135,'N'),(1136,'N'),(1137,'N'),(1138,'N'),(1139,'N'),(1140,'N'),(1141,'N'),(1142,'N'),(1143,'N'),(1144,'N'),(1145,'N'),(1146,'N'),(1147,'N'),(1148,'N'),(1149,'N'),(1150,'N'),(1151,'N'),(1152,'N'),(1153,'N'),(1154,'N'),(1155,'N'),(1156,'N'),(1157,'N'),(1158,'N'),(1159,'N'),(1160,'N'),(1161,'N'),(1162,'N'),(1163,'N'),(1164,'N'),(1165,'N'),(1166,'N'),(1167,'N'),(1168,'N'),(1169,'N'),(1170,'N'),(1171,'N'),(1172,'N'),(1173,'N'),(1174,'N'),(1175,'N'),(1176,'N'),(1177,'N'),(1178,'N'),(1179,'N'),(1180,'N'),(1181,'N'),(1182,'N'),(1183,'N'),(1184,'N'),(1185,'N'),(1186,'N'),(1187,'N'),(1188,'N'),(1189,'N'),(1190,'N'),(1191,'N'),(1192,'N'),(1193,'Y'),(1194,'Y'),(1195,'Y'),(1196,'Y'),(1197,'Y'),(1198,'Y'),(1199,'Y'),(1200,'Y'),(1201,'Y'),(1202,'Y'),(1203,'Y'),(1204,'Y'),(1205,'Y'),(1206,'Y'),(1207,'Y'),(1208,'Y'),(1209,'Y'),(1210,'Y'),(1211,'Y'),(1212,'Y'),(1213,'Y'),(1214,'Y'),(1215,'Y'),(1216,'Y'),(1217,'Y'),(1218,'Y'),(1219,'Y'),(1220,'Y'),(1221,'Y'),(1222,'Y'),(1223,'Y'),(1224,'Y'),(1225,'Y'),(1226,'Y'),(1227,'Y'),(1228,'Y'),(1229,'Y'),(1230,'Y'),(1231,'Y'),(1232,'Y'),(1233,'Y'),(1234,'Y'),(1235,'Y'),(1236,'Y'),(1237,'Y'),(1238,'Y'),(1239,'Y'),(1240,'Y'),(1241,'Y'),(1242,'Y'),(1243,'Y'),(1244,'Y'),(1245,'Y'),(1246,'Y'),(1247,'Y'),(1248,'Y'),(1249,'Y'),(1250,'Y'),(1251,'Y'),(1252,'Y'),(1253,'Y'),(1254,'Y'),(1255,'Y'),(1256,'Y'),(1257,'Y'),(1258,'Y'),(1259,'Y'),(1260,'Y'),(1261,'Y'),(1262,'Y'),(1263,'Y'),(1264,'Y'),(1265,'Y'),(1266,'Y'),(1267,'Y'),(1268,'Y'),(1269,'Y'),(1270,'Y'),(1271,'Y'),(1272,'Y'),(1273,'Y'),(1274,'Y'),(1275,'Y'),(1276,'Y'),(1277,'Y'),(1278,'Y'),(1279,'Y'),(1280,'Y'),(1281,'Y'),(1282,'Y'),(1283,'Y'),(1284,'Y'),(1285,'Y'),(1286,'Y'),(1287,'Y'),(1288,'Y'),(1289,'Y'),(1290,'Y'),(1291,'Y'),(1292,'Y'),(1293,'Y'),(1294,'Y'),(1295,'Y'),(1296,'Y'),(1297,'Y'),(1298,'Y'),(1299,'Y'),(1300,'Y'),(1301,'Y'),(1302,'Y'),(1303,'Y'),(1304,'Y'),(1305,'Y'),(1306,'Y'),(1307,'Y'),(1308,'Y'),(1309,'Y'),(1310,'Y'),(1311,'Y'),(1312,'Y'),(1313,'Y'),(1314,'Y'),(1315,'Y'),(1316,'Y'),(1317,'Y'),(1318,'Y'),(1319,'Y'),(1320,'Y'),(1321,'Y'),(1322,'Y'),(1323,'Y'),(1324,'Y'),(1325,'Y'),(1326,'Y'),(1327,'Y'),(1328,'Y'),(1329,'Y'),(1330,'Y'),(1331,'Y'),(1332,'Y'),(1333,'Y'),(1334,'Y'),(1335,'Y'),(1336,'Y'),(1337,'Y'),(1338,'Y'),(1339,'Y'),(1340,'Y'),(1341,'Y'),(1342,'Y'),(1343,'Y'),(1344,'Y'),(1345,'Y'),(1346,'Y'),(1347,'Y'),(1348,'Y'),(1349,'Y'),(1350,'Y'),(1351,'Y'),(1352,'Y'),(1353,'Y'),(1354,'Y'),(1355,'Y'),(1356,'Y'),(1357,'Y'),(1358,'Y'),(1359,'Y'),(1360,'Y'),(1361,'Y'),(1362,'Y'),(1363,'Y'),(1364,'Y'),(1365,'Y'),(1366,'Y'),(1367,'Y'),(1368,'Y'),(1369,'Y'),(1370,'Y'),(1371,'Y'),(1372,'Y'),(1373,'Y'),(1374,'Y'),(1375,'Y'),(1376,'Y'),(1377,'Y'),(1378,'Y'),(1379,'Y'),(1380,'Y'),(1381,'Y'),(1382,'Y'),(1383,'Y'),(1384,'Y'),(1385,'Y'),(1386,'Y'),(1387,'Y'),(1388,'Y'),(1389,'Y'),(1390,'Y'),(1391,'Y'),(1392,'Y'),(1393,'Y'),(1394,'Y'),(1395,'Y'),(1396,'Y'),(1397,'Y'),(1398,'Y'),(1399,'Y'),(1400,'Y'),(1401,'Y'),(1402,'Y'),(1403,'Y'),(1404,'Y'),(1405,'Y'),(1406,'Y'),(1407,'Y'),(1408,'Y'),(1409,'Y'),(1410,'Y'),(1411,'Y'),(1412,'Y'),(1413,'Y'),(1414,'Y'),(1415,'Y'),(1416,'Y'),(1417,'Y'),(1418,'Y'),(1419,'Y'),(1420,'Y'),(1421,'Y'),(1422,'Y'),(1423,'Y'),(1424,'Y'),(1425,'Y'),(1426,'Y'),(1427,'Y'),(1428,'Y'),(1429,'Y'),(1430,'Y'),(1431,'Y'),(1432,'Y'),(1433,'Y'),(1434,'Y'),(1435,'Y'),(1436,'Y'),(1437,'Y'),(1438,'Y'),(1439,'Y'),(1440,'Y'),(1441,'Y'),(1442,'Y'),(1443,'Y'),(1444,'Y'),(1445,'Y'),(1446,'Y'),(1447,'Y'),(1448,'Y'),(1449,'Y'),(1450,'Y'),(1451,'Y'),(1452,'Y'),(1453,'Y'),(1454,'Y'),(1455,'Y'),(1456,'Y'),(1457,'Y'),(1458,'Y'),(1459,'Y'),(1460,'Y'),(1461,'Y'),(1462,'Y'),(1463,'Y'),(1464,'Y'),(1465,'Y'),(1466,'Y'),(1467,'Y'),(1468,'Y'),(1469,'Y'),(1470,'Y'),(1471,'Y'),(1472,'Y'),(1473,'Y'),(1474,'Y'),(1475,'Y'),(1476,'Y'),(1477,'Y'),(1478,'Y'),(1479,'Y'),(1480,'Y'),(1481,'Y'),(1482,'Y'),(1483,'Y'),(1484,'Y'),(1485,'Y'),(1486,'Y'),(1487,'Y'),(1488,'Y'),(1489,'Y'),(1490,'Y'),(1491,'Y'),(1492,'Y'),(1493,'Y'),(1494,'Y'),(1495,'Y'),(1496,'Y'),(1497,'Y'),(1498,'Y'),(1499,'Y'),(1500,'Y'),(1501,'Y'),(1502,'Y'),(1503,'Y'),(1504,'Y'),(1505,'Y'),(1506,'Y'),(1507,'Y'),(1508,'Y'),(1509,'Y'),(1510,'Y'),(1511,'Y'),(1512,'Y'),(1513,'Y'),(1514,'Y'),(1515,'Y'),(1516,'Y'),(1517,'Y'),(1518,'Y'),(1519,'Y'),(1520,'Y'),(1521,'Y'),(1522,'Y'),(1523,'Y'),(1524,'Y'),(1525,'Y'),(1526,'Y'),(1527,'Y'),(1528,'Y'),(1529,'Y'),(1530,'Y'),(1531,'Y'),(1532,'Y'),(1533,'Y'),(1534,'Y'),(1535,'Y'),(1536,'Y'),(1537,'Y'),(1538,'Y'),(1539,'Y'),(1540,'Y'),(1541,'Y'),(1542,'Y'),(1543,'Y'),(1544,'Y'),(1545,'Y'),(1546,'Y'),(1547,'Y'),(1548,'Y'),(1549,'Y'),(1550,'Y'),(1551,'Y'),(1552,'Y'),(1553,'Y'),(1554,'Y'),(1555,'Y'),(1556,'Y'),(1557,'Y'),(1558,'Y'),(1559,'Y'),(1560,'Y'),(1561,'Y'),(1562,'Y'),(1563,'Y'),(1564,'Y'),(1565,'Y'),(1566,'Y'),(1567,'Y'),(1568,'Y'),(1569,'Y'),(1570,'Y'),(1571,'Y'),(1572,'Y'),(1573,'Y'),(1574,'Y'),(1575,'Y'),(1576,'Y'),(1577,'Y'),(1578,'Y'),(1579,'Y'),(1580,'Y'),(1581,'Y'),(1582,'Y'),(1583,'Y'),(1584,'Y'),(1585,'Y'),(1586,'Y'),(1587,'Y'),(1588,'Y'),(1589,'Y'),(1590,'Y'),(1591,'Y'),(1592,'Y'),(1593,'Y'),(1594,'Y'),(1595,'Y'),(1596,'Y'),(1597,'Y'),(1598,'Y'),(1599,'Y'),(1600,'Y'),(1601,'Y'),(1602,'Y'),(1603,'Y'),(1604,'Y'),(1605,'Y'),(1606,'Y'),(1607,'Y'),(1608,'Y'),(1609,'Y'),(1610,'Y'),(1611,'Y'),(1612,'Y'),(1613,'Y'),(1614,'Y'),(1615,'Y'),(1616,'Y'),(1617,'Y'),(1618,'Y'),(1619,'Y'),(1620,'Y'),(1621,'Y'),(1622,'Y'),(1623,'Y'),(1624,'Y'),(1625,'Y'),(1626,'Y'),(1627,'Y'),(1628,'Y'),(1629,'Y'),(1630,'Y'),(1631,'Y'),(1632,'Y'),(1633,'Y'),(1634,'Y'),(1635,'Y'),(1636,'Y'),(1637,'Y'),(1638,'Y'),(1639,'Y'),(1640,'Y'),(1641,'Y'),(1642,'Y'),(1643,'Y'),(1644,'Y'),(1645,'Y'),(1646,'Y'),(1647,'Y'),(1648,'Y'),(1649,'Y'),(1650,'Y'),(1651,'Y'),(1652,'Y'),(1653,'Y'),(1654,'Y'),(1655,'Y'),(1656,'Y'),(1657,'Y'),(1658,'Y'),(1659,'Y'),(1660,'Y'),(1661,'Y'),(1662,'Y'),(1663,'Y'),(1664,'Y'),(1665,'Y'),(1666,'Y'),(1667,'Y'),(1668,'Y'),(1669,'Y'),(1670,'Y'),(1671,'Y'),(1672,'Y'),(1673,'Y'),(1674,'Y'),(1675,'Y'),(1676,'Y'),(1677,'Y'),(1678,'Y'),(1679,'Y'),(1680,'Y'),(1681,'Y'),(1682,'Y'),(1683,'Y'),(1684,'Y'),(1685,'Y'),(1686,'Y'),(1687,'Y'),(1688,'Y'),(1689,'Y'),(1690,'Y'),(1691,'Y'),(1692,'Y'),(1693,'Y'),(1694,'Y'),(1695,'Y'),(1696,'Y'),(1697,'Y'),(1698,'Y'),(1699,'Y'),(1700,'Y'),(1701,'Y'),(1702,'Y'),(1703,'Y'),(1704,'Y'),(1705,'Y'),(1706,'Y'),(1707,'Y'),(1708,'Y'),(1709,'Y'),(1710,'Y'),(1711,'Y'),(1712,'Y'),(1713,'Y'),(1714,'Y'),(1715,'Y'),(1716,'Y'),(1717,'Y'),(1718,'Y'),(1719,'Y'),(1720,'Y'),(1721,'Y'),(1722,'Y'),(1723,'Y'),(1724,'Y'),(1725,'Y'),(1726,'Y'),(1727,'Y'),(1728,'Y'),(1729,'Y'),(1730,'Y'),(1731,'Y'),(1732,'Y'),(1733,'Y'),(1734,'Y'),(1735,'Y'),(1736,'Y'),(1737,'Y'),(1738,'Y'),(1739,'Y'),(1740,'Y'),(1741,'Y'),(1742,'Y'),(1743,'Y'),(1744,'Y'),(1745,'Y'),(1746,'Y'),(1747,'Y'),(1748,'Y'),(1749,'Y'),(1750,'Y'),(1751,'Y'),(1752,'Y'),(1753,'Y'),(1754,'Y'),(1755,'Y'),(1756,'Y'),(1757,'Y'),(1758,'Y'),(1759,'Y'),(1760,'Y'),(1761,'Y'),(1762,'Y'),(1763,'Y'),(1764,'Y'),(1765,'Y'),(1766,'Y'),(1767,'Y'),(1768,'Y'),(1769,'Y'),(1770,'Y'),(1771,'Y'),(1772,'Y'),(1773,'Y'),(1774,'Y'),(1775,'Y'),(1776,'Y'),(1777,'Y'),(1778,'Y'),(1779,'Y'),(1780,'Y'),(1781,'Y'),(1782,'Y'),(1783,'Y'),(1784,'Y'),(1785,'Y'),(1786,'Y'),(1787,'Y');
/*!40000 ALTER TABLE `time_zone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_leap_second`
--

DROP TABLE IF EXISTS `time_zone_leap_second`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_leap_second` (
  `Transition_time` bigint(20) NOT NULL,
  `Correction` int(11) NOT NULL,
  PRIMARY KEY (`Transition_time`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Leap seconds information for time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_leap_second`
--

LOCK TABLES `time_zone_leap_second` WRITE;
/*!40000 ALTER TABLE `time_zone_leap_second` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_leap_second` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_name`
--

DROP TABLE IF EXISTS `time_zone_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_name` (
  `Name` char(64) NOT NULL,
  `Time_zone_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Name`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Time zone names';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_name`
--

LOCK TABLES `time_zone_name` WRITE;
/*!40000 ALTER TABLE `time_zone_name` DISABLE KEYS */;
INSERT INTO `time_zone_name` VALUES ('Africa/Abidjan',1),('Africa/Accra',2),('Africa/Addis_Ababa',3),('Africa/Algiers',4),('Africa/Asmara',5),('Africa/Asmera',6),('Africa/Bamako',7),('Africa/Bangui',8),('Africa/Banjul',9),('Africa/Bissau',10),('Africa/Blantyre',11),('Africa/Brazzaville',12),('Africa/Bujumbura',13),('Africa/Cairo',14),('Africa/Casablanca',15),('Africa/Ceuta',16),('Africa/Conakry',17),('Africa/Dakar',18),('Africa/Dar_es_Salaam',19),('Africa/Djibouti',20),('Africa/Douala',21),('Africa/El_Aaiun',22),('Africa/Freetown',23),('Africa/Gaborone',24),('Africa/Harare',25),('Africa/Johannesburg',26),('Africa/Juba',27),('Africa/Kampala',28),('Africa/Khartoum',29),('Africa/Kigali',30),('Africa/Kinshasa',31),('Africa/Lagos',32),('Africa/Libreville',33),('Africa/Lome',34),('Africa/Luanda',35),('Africa/Lubumbashi',36),('Africa/Lusaka',37),('Africa/Malabo',38),('Africa/Maputo',39),('Africa/Maseru',40),('Africa/Mbabane',41),('Africa/Mogadishu',42),('Africa/Monrovia',43),('Africa/Nairobi',44),('Africa/Ndjamena',45),('Africa/Niamey',46),('Africa/Nouakchott',47),('Africa/Ouagadougou',48),('Africa/Porto-Novo',49),('Africa/Sao_Tome',50),('Africa/Timbuktu',51),('Africa/Tripoli',52),('Africa/Tunis',53),('Africa/Windhoek',54),('America/Adak',55),('America/Anchorage',56),('America/Anguilla',57),('America/Antigua',58),('America/Araguaina',59),('America/Argentina/Buenos_Aires',60),('America/Argentina/Catamarca',61),('America/Argentina/ComodRivadavia',62),('America/Argentina/Cordoba',63),('America/Argentina/Jujuy',64),('America/Argentina/La_Rioja',65),('America/Argentina/Mendoza',66),('America/Argentina/Rio_Gallegos',67),('America/Argentina/Salta',68),('America/Argentina/San_Juan',69),('America/Argentina/San_Luis',70),('America/Argentina/Tucuman',71),('America/Argentina/Ushuaia',72),('America/Aruba',73),('America/Asuncion',74),('America/Atikokan',75),('America/Atka',76),('America/Bahia',77),('America/Bahia_Banderas',78),('America/Barbados',79),('America/Belem',80),('America/Belize',81),('America/Blanc-Sablon',82),('America/Boa_Vista',83),('America/Bogota',84),('America/Boise',85),('America/Buenos_Aires',86),('America/Cambridge_Bay',87),('America/Campo_Grande',88),('America/Cancun',89),('America/Caracas',90),('America/Catamarca',91),('America/Cayenne',92),('America/Cayman',93),('America/Chicago',94),('America/Chihuahua',95),('America/Coral_Harbour',96),('America/Cordoba',97),('America/Costa_Rica',98),('America/Creston',99),('America/Cuiaba',100),('America/Curacao',101),('America/Danmarkshavn',102),('America/Dawson',103),('America/Dawson_Creek',104),('America/Denver',105),('America/Detroit',106),('America/Dominica',107),('America/Edmonton',108),('America/Eirunepe',109),('America/El_Salvador',110),('America/Ensenada',111),('America/Fort_Nelson',112),('America/Fort_Wayne',113),('America/Fortaleza',114),('America/Glace_Bay',115),('America/Godthab',116),('America/Goose_Bay',117),('America/Grand_Turk',118),('America/Grenada',119),('America/Guadeloupe',120),('America/Guatemala',121),('America/Guayaquil',122),('America/Guyana',123),('America/Halifax',124),('America/Havana',125),('America/Hermosillo',126),('America/Indiana/Indianapolis',127),('America/Indiana/Knox',128),('America/Indiana/Marengo',129),('America/Indiana/Petersburg',130),('America/Indiana/Tell_City',131),('America/Indiana/Vevay',132),('America/Indiana/Vincennes',133),('America/Indiana/Winamac',134),('America/Indianapolis',135),('America/Inuvik',136),('America/Iqaluit',137),('America/Jamaica',138),('America/Jujuy',139),('America/Juneau',140),('America/Kentucky/Louisville',141),('America/Kentucky/Monticello',142),('America/Knox_IN',143),('America/Kralendijk',144),('America/La_Paz',145),('America/Lima',146),('America/Los_Angeles',147),('America/Louisville',148),('America/Lower_Princes',149),('America/Maceio',150),('America/Managua',151),('America/Manaus',152),('America/Marigot',153),('America/Martinique',154),('America/Matamoros',155),('America/Mazatlan',156),('America/Mendoza',157),('America/Menominee',158),('America/Merida',159),('America/Metlakatla',160),('America/Mexico_City',161),('America/Miquelon',162),('America/Moncton',163),('America/Monterrey',164),('America/Montevideo',165),('America/Montreal',166),('America/Montserrat',167),('America/Nassau',168),('America/New_York',169),('America/Nipigon',170),('America/Nome',171),('America/Noronha',172),('America/North_Dakota/Beulah',173),('America/North_Dakota/Center',174),('America/North_Dakota/New_Salem',175),('America/Nuuk',176),('America/Ojinaga',177),('America/Panama',178),('America/Pangnirtung',179),('America/Paramaribo',180),('America/Phoenix',181),('America/Port-au-Prince',182),('America/Port_of_Spain',183),('America/Porto_Acre',184),('America/Porto_Velho',185),('America/Puerto_Rico',186),('America/Punta_Arenas',187),('America/Rainy_River',188),('America/Rankin_Inlet',189),('America/Recife',190),('America/Regina',191),('America/Resolute',192),('America/Rio_Branco',193),('America/Rosario',194),('America/Santa_Isabel',195),('America/Santarem',196),('America/Santiago',197),('America/Santo_Domingo',198),('America/Sao_Paulo',199),('America/Scoresbysund',200),('America/Shiprock',201),('America/Sitka',202),('America/St_Barthelemy',203),('America/St_Johns',204),('America/St_Kitts',205),('America/St_Lucia',206),('America/St_Thomas',207),('America/St_Vincent',208),('America/Swift_Current',209),('America/Tegucigalpa',210),('America/Thule',211),('America/Thunder_Bay',212),('America/Tijuana',213),('America/Toronto',214),('America/Tortola',215),('America/Vancouver',216),('America/Virgin',217),('America/Whitehorse',218),('America/Winnipeg',219),('America/Yakutat',220),('America/Yellowknife',221),('Antarctica/Casey',222),('Antarctica/Davis',223),('Antarctica/DumontDUrville',224),('Antarctica/Macquarie',225),('Antarctica/Mawson',226),('Antarctica/McMurdo',227),('Antarctica/Palmer',228),('Antarctica/Rothera',229),('Antarctica/South_Pole',230),('Antarctica/Syowa',231),('Antarctica/Troll',232),('Antarctica/Vostok',233),('Arctic/Longyearbyen',234),('Asia/Aden',235),('Asia/Almaty',236),('Asia/Amman',237),('Asia/Anadyr',238),('Asia/Aqtau',239),('Asia/Aqtobe',240),('Asia/Ashgabat',241),('Asia/Ashkhabad',242),('Asia/Atyrau',243),('Asia/Baghdad',244),('Asia/Bahrain',245),('Asia/Baku',246),('Asia/Bangkok',247),('Asia/Barnaul',248),('Asia/Beirut',249),('Asia/Bishkek',250),('Asia/Brunei',251),('Asia/Calcutta',252),('Asia/Chita',253),('Asia/Choibalsan',254),('Asia/Chongqing',255),('Asia/Chungking',256),('Asia/Colombo',257),('Asia/Dacca',258),('Asia/Damascus',259),('Asia/Dhaka',260),('Asia/Dili',261),('Asia/Dubai',262),('Asia/Dushanbe',263),('Asia/Famagusta',264),('Asia/Gaza',265),('Asia/Harbin',266),('Asia/Hebron',267),('Asia/Ho_Chi_Minh',268),('Asia/Hong_Kong',269),('Asia/Hovd',270),('Asia/Irkutsk',271),('Asia/Istanbul',272),('Asia/Jakarta',273),('Asia/Jayapura',274),('Asia/Jerusalem',275),('Asia/Kabul',276),('Asia/Kamchatka',277),('Asia/Karachi',278),('Asia/Kashgar',279),('Asia/Kathmandu',280),('Asia/Katmandu',281),('Asia/Khandyga',282),('Asia/Kolkata',283),('Asia/Krasnoyarsk',284),('Asia/Kuala_Lumpur',285),('Asia/Kuching',286),('Asia/Kuwait',287),('Asia/Macao',288),('Asia/Macau',289),('Asia/Magadan',290),('Asia/Makassar',291),('Asia/Manila',292),('Asia/Muscat',293),('Asia/Nicosia',294),('Asia/Novokuznetsk',295),('Asia/Novosibirsk',296),('Asia/Omsk',297),('Asia/Oral',298),('Asia/Phnom_Penh',299),('Asia/Pontianak',300),('Asia/Pyongyang',301),('Asia/Qatar',302),('Asia/Qostanay',303),('Asia/Qyzylorda',304),('Asia/Rangoon',305),('Asia/Riyadh',306),('Asia/Saigon',307),('Asia/Sakhalin',308),('Asia/Samarkand',309),('Asia/Seoul',310),('Asia/Shanghai',311),('Asia/Singapore',312),('Asia/Srednekolymsk',313),('Asia/Taipei',314),('Asia/Tashkent',315),('Asia/Tbilisi',316),('Asia/Tehran',317),('Asia/Tel_Aviv',318),('Asia/Thimbu',319),('Asia/Thimphu',320),('Asia/Tokyo',321),('Asia/Tomsk',322),('Asia/Ujung_Pandang',323),('Asia/Ulaanbaatar',324),('Asia/Ulan_Bator',325),('Asia/Urumqi',326),('Asia/Ust-Nera',327),('Asia/Vientiane',328),('Asia/Vladivostok',329),('Asia/Yakutsk',330),('Asia/Yangon',331),('Asia/Yekaterinburg',332),('Asia/Yerevan',333),('Atlantic/Azores',334),('Atlantic/Bermuda',335),('Atlantic/Canary',336),('Atlantic/Cape_Verde',337),('Atlantic/Faeroe',338),('Atlantic/Faroe',339),('Atlantic/Jan_Mayen',340),('Atlantic/Madeira',341),('Atlantic/Reykjavik',342),('Atlantic/South_Georgia',343),('Atlantic/St_Helena',344),('Atlantic/Stanley',345),('Australia/ACT',346),('Australia/Adelaide',347),('Australia/Brisbane',348),('Australia/Broken_Hill',349),('Australia/Canberra',350),('Australia/Currie',351),('Australia/Darwin',352),('Australia/Eucla',353),('Australia/Hobart',354),('Australia/LHI',355),('Australia/Lindeman',356),('Australia/Lord_Howe',357),('Australia/Melbourne',358),('Australia/NSW',359),('Australia/North',360),('Australia/Perth',361),('Australia/Queensland',362),('Australia/South',363),('Australia/Sydney',364),('Australia/Tasmania',365),('Australia/Victoria',366),('Australia/West',367),('Australia/Yancowinna',368),('Brazil/Acre',369),('Brazil/DeNoronha',370),('Brazil/East',371),('Brazil/West',372),('CET',373),('CST6CDT',374),('Canada/Atlantic',375),('Canada/Central',376),('Canada/Eastern',377),('Canada/Mountain',378),('Canada/Newfoundland',379),('Canada/Pacific',380),('Canada/Saskatchewan',381),('Canada/Yukon',382),('Chile/Continental',383),('Chile/EasterIsland',384),('Cuba',385),('EET',386),('EST',387),('EST5EDT',388),('Egypt',389),('Eire',390),('Etc/GMT',391),('Etc/GMT+0',392),('Etc/GMT+1',393),('Etc/GMT+10',394),('Etc/GMT+11',395),('Etc/GMT+12',396),('Etc/GMT+2',397),('Etc/GMT+3',398),('Etc/GMT+4',399),('Etc/GMT+5',400),('Etc/GMT+6',401),('Etc/GMT+7',402),('Etc/GMT+8',403),('Etc/GMT+9',404),('Etc/GMT-0',405),('Etc/GMT-1',406),('Etc/GMT-10',407),('Etc/GMT-11',408),('Etc/GMT-12',409),('Etc/GMT-13',410),('Etc/GMT-14',411),('Etc/GMT-2',412),('Etc/GMT-3',413),('Etc/GMT-4',414),('Etc/GMT-5',415),('Etc/GMT-6',416),('Etc/GMT-7',417),('Etc/GMT-8',418),('Etc/GMT-9',419),('Etc/GMT0',420),('Etc/Greenwich',421),('Etc/UCT',422),('Etc/UTC',423),('Etc/Universal',424),('Etc/Zulu',425),('Europe/Amsterdam',426),('Europe/Andorra',427),('Europe/Astrakhan',428),('Europe/Athens',429),('Europe/Belfast',430),('Europe/Belgrade',431),('Europe/Berlin',432),('Europe/Bratislava',433),('Europe/Brussels',434),('Europe/Bucharest',435),('Europe/Budapest',436),('Europe/Busingen',437),('Europe/Chisinau',438),('Europe/Copenhagen',439),('Europe/Dublin',440),('Europe/Gibraltar',441),('Europe/Guernsey',442),('Europe/Helsinki',443),('Europe/Isle_of_Man',444),('Europe/Istanbul',445),('Europe/Jersey',446),('Europe/Kaliningrad',447),('Europe/Kiev',448),('Europe/Kirov',449),('Europe/Kyiv',450),('Europe/Lisbon',451),('Europe/Ljubljana',452),('Europe/London',453),('Europe/Luxembourg',454),('Europe/Madrid',455),('Europe/Malta',456),('Europe/Mariehamn',457),('Europe/Minsk',458),('Europe/Monaco',459),('Europe/Moscow',460),('Europe/Nicosia',461),('Europe/Oslo',462),('Europe/Paris',463),('Europe/Podgorica',464),('Europe/Prague',465),('Europe/Riga',466),('Europe/Rome',467),('Europe/Samara',468),('Europe/San_Marino',469),('Europe/Sarajevo',470),('Europe/Saratov',471),('Europe/Simferopol',472),('Europe/Skopje',473),('Europe/Sofia',474),('Europe/Stockholm',475),('Europe/Tallinn',476),('Europe/Tirane',477),('Europe/Tiraspol',478),('Europe/Ulyanovsk',479),('Europe/Uzhgorod',480),('Europe/Vaduz',481),('Europe/Vatican',482),('Europe/Vienna',483),('Europe/Vilnius',484),('Europe/Volgograd',485),('Europe/Warsaw',486),('Europe/Zagreb',487),('Europe/Zaporozhye',488),('Europe/Zurich',489),('GB',490),('GB-Eire',491),('GMT',492),('GMT+0',493),('GMT-0',494),('GMT0',495),('Greenwich',496),('HST',497),('Hongkong',498),('Iceland',499),('Indian/Antananarivo',500),('Indian/Chagos',501),('Indian/Christmas',502),('Indian/Cocos',503),('Indian/Comoro',504),('Indian/Kerguelen',505),('Indian/Mahe',506),('Indian/Maldives',507),('Indian/Mauritius',508),('Indian/Mayotte',509),('Indian/Reunion',510),('Iran',511),('Israel',512),('Jamaica',513),('Japan',514),('Kwajalein',515),('Libya',516),('MET',517),('MST',518),('MST7MDT',519),('Mexico/BajaNorte',520),('Mexico/BajaSur',521),('Mexico/General',522),('NZ',523),('NZ-CHAT',524),('Navajo',525),('PRC',526),('PST8PDT',527),('Pacific/Apia',528),('Pacific/Auckland',529),('Pacific/Bougainville',530),('Pacific/Chatham',531),('Pacific/Chuuk',532),('Pacific/Easter',533),('Pacific/Efate',534),('Pacific/Enderbury',535),('Pacific/Fakaofo',536),('Pacific/Fiji',537),('Pacific/Funafuti',538),('Pacific/Galapagos',539),('Pacific/Gambier',540),('Pacific/Guadalcanal',541),('Pacific/Guam',542),('Pacific/Honolulu',543),('Pacific/Johnston',544),('Pacific/Kanton',545),('Pacific/Kiritimati',546),('Pacific/Kosrae',547),('Pacific/Kwajalein',548),('Pacific/Majuro',549),('Pacific/Marquesas',550),('Pacific/Midway',551),('Pacific/Nauru',552),('Pacific/Niue',553),('Pacific/Norfolk',554),('Pacific/Noumea',555),('Pacific/Pago_Pago',556),('Pacific/Palau',557),('Pacific/Pitcairn',558),('Pacific/Pohnpei',559),('Pacific/Ponape',560),('Pacific/Port_Moresby',561),('Pacific/Rarotonga',562),('Pacific/Saipan',563),('Pacific/Samoa',564),('Pacific/Tahiti',565),('Pacific/Tarawa',566),('Pacific/Tongatapu',567),('Pacific/Truk',568),('Pacific/Wake',569),('Pacific/Wallis',570),('Pacific/Yap',571),('Poland',572),('Portugal',573),('ROC',574),('ROK',575),('Singapore',576),('Turkey',577),('UCT',578),('US/Alaska',579),('US/Aleutian',580),('US/Arizona',581),('US/Central',582),('US/East-Indiana',583),('US/Eastern',584),('US/Hawaii',585),('US/Indiana-Starke',586),('US/Michigan',587),('US/Mountain',588),('US/Pacific',589),('US/Samoa',590),('UTC',591),('Universal',592),('W-SU',593),('WET',594),('Zulu',595),('localtime',596),('posix/Africa/Abidjan',597),('posix/Africa/Accra',598),('posix/Africa/Addis_Ababa',599),('posix/Africa/Algiers',600),('posix/Africa/Asmara',601),('posix/Africa/Asmera',602),('posix/Africa/Bamako',603),('posix/Africa/Bangui',604),('posix/Africa/Banjul',605),('posix/Africa/Bissau',606),('posix/Africa/Blantyre',607),('posix/Africa/Brazzaville',608),('posix/Africa/Bujumbura',609),('posix/Africa/Cairo',610),('posix/Africa/Casablanca',611),('posix/Africa/Ceuta',612),('posix/Africa/Conakry',613),('posix/Africa/Dakar',614),('posix/Africa/Dar_es_Salaam',615),('posix/Africa/Djibouti',616),('posix/Africa/Douala',617),('posix/Africa/El_Aaiun',618),('posix/Africa/Freetown',619),('posix/Africa/Gaborone',620),('posix/Africa/Harare',621),('posix/Africa/Johannesburg',622),('posix/Africa/Juba',623),('posix/Africa/Kampala',624),('posix/Africa/Khartoum',625),('posix/Africa/Kigali',626),('posix/Africa/Kinshasa',627),('posix/Africa/Lagos',628),('posix/Africa/Libreville',629),('posix/Africa/Lome',630),('posix/Africa/Luanda',631),('posix/Africa/Lubumbashi',632),('posix/Africa/Lusaka',633),('posix/Africa/Malabo',634),('posix/Africa/Maputo',635),('posix/Africa/Maseru',636),('posix/Africa/Mbabane',637),('posix/Africa/Mogadishu',638),('posix/Africa/Monrovia',639),('posix/Africa/Nairobi',640),('posix/Africa/Ndjamena',641),('posix/Africa/Niamey',642),('posix/Africa/Nouakchott',643),('posix/Africa/Ouagadougou',644),('posix/Africa/Porto-Novo',645),('posix/Africa/Sao_Tome',646),('posix/Africa/Timbuktu',647),('posix/Africa/Tripoli',648),('posix/Africa/Tunis',649),('posix/Africa/Windhoek',650),('posix/America/Adak',651),('posix/America/Anchorage',652),('posix/America/Anguilla',653),('posix/America/Antigua',654),('posix/America/Araguaina',655),('posix/America/Argentina/Buenos_Aires',656),('posix/America/Argentina/Catamarca',657),('posix/America/Argentina/ComodRivadavia',658),('posix/America/Argentina/Cordoba',659),('posix/America/Argentina/Jujuy',660),('posix/America/Argentina/La_Rioja',661),('posix/America/Argentina/Mendoza',662),('posix/America/Argentina/Rio_Gallegos',663),('posix/America/Argentina/Salta',664),('posix/America/Argentina/San_Juan',665),('posix/America/Argentina/San_Luis',666),('posix/America/Argentina/Tucuman',667),('posix/America/Argentina/Ushuaia',668),('posix/America/Aruba',669),('posix/America/Asuncion',670),('posix/America/Atikokan',671),('posix/America/Atka',672),('posix/America/Bahia',673),('posix/America/Bahia_Banderas',674),('posix/America/Barbados',675),('posix/America/Belem',676),('posix/America/Belize',677),('posix/America/Blanc-Sablon',678),('posix/America/Boa_Vista',679),('posix/America/Bogota',680),('posix/America/Boise',681),('posix/America/Buenos_Aires',682),('posix/America/Cambridge_Bay',683),('posix/America/Campo_Grande',684),('posix/America/Cancun',685),('posix/America/Caracas',686),('posix/America/Catamarca',687),('posix/America/Cayenne',688),('posix/America/Cayman',689),('posix/America/Chicago',690),('posix/America/Chihuahua',691),('posix/America/Coral_Harbour',692),('posix/America/Cordoba',693),('posix/America/Costa_Rica',694),('posix/America/Creston',695),('posix/America/Cuiaba',696),('posix/America/Curacao',697),('posix/America/Danmarkshavn',698),('posix/America/Dawson',699),('posix/America/Dawson_Creek',700),('posix/America/Denver',701),('posix/America/Detroit',702),('posix/America/Dominica',703),('posix/America/Edmonton',704),('posix/America/Eirunepe',705),('posix/America/El_Salvador',706),('posix/America/Ensenada',707),('posix/America/Fort_Nelson',708),('posix/America/Fort_Wayne',709),('posix/America/Fortaleza',710),('posix/America/Glace_Bay',711),('posix/America/Godthab',712),('posix/America/Goose_Bay',713),('posix/America/Grand_Turk',714),('posix/America/Grenada',715),('posix/America/Guadeloupe',716),('posix/America/Guatemala',717),('posix/America/Guayaquil',718),('posix/America/Guyana',719),('posix/America/Halifax',720),('posix/America/Havana',721),('posix/America/Hermosillo',722),('posix/America/Indiana/Indianapolis',723),('posix/America/Indiana/Knox',724),('posix/America/Indiana/Marengo',725),('posix/America/Indiana/Petersburg',726),('posix/America/Indiana/Tell_City',727),('posix/America/Indiana/Vevay',728),('posix/America/Indiana/Vincennes',729),('posix/America/Indiana/Winamac',730),('posix/America/Indianapolis',731),('posix/America/Inuvik',732),('posix/America/Iqaluit',733),('posix/America/Jamaica',734),('posix/America/Jujuy',735),('posix/America/Juneau',736),('posix/America/Kentucky/Louisville',737),('posix/America/Kentucky/Monticello',738),('posix/America/Knox_IN',739),('posix/America/Kralendijk',740),('posix/America/La_Paz',741),('posix/America/Lima',742),('posix/America/Los_Angeles',743),('posix/America/Louisville',744),('posix/America/Lower_Princes',745),('posix/America/Maceio',746),('posix/America/Managua',747),('posix/America/Manaus',748),('posix/America/Marigot',749),('posix/America/Martinique',750),('posix/America/Matamoros',751),('posix/America/Mazatlan',752),('posix/America/Mendoza',753),('posix/America/Menominee',754),('posix/America/Merida',755),('posix/America/Metlakatla',756),('posix/America/Mexico_City',757),('posix/America/Miquelon',758),('posix/America/Moncton',759),('posix/America/Monterrey',760),('posix/America/Montevideo',761),('posix/America/Montreal',762),('posix/America/Montserrat',763),('posix/America/Nassau',764),('posix/America/New_York',765),('posix/America/Nipigon',766),('posix/America/Nome',767),('posix/America/Noronha',768),('posix/America/North_Dakota/Beulah',769),('posix/America/North_Dakota/Center',770),('posix/America/North_Dakota/New_Salem',771),('posix/America/Nuuk',772),('posix/America/Ojinaga',773),('posix/America/Panama',774),('posix/America/Pangnirtung',775),('posix/America/Paramaribo',776),('posix/America/Phoenix',777),('posix/America/Port-au-Prince',778),('posix/America/Port_of_Spain',779),('posix/America/Porto_Acre',780),('posix/America/Porto_Velho',781),('posix/America/Puerto_Rico',782),('posix/America/Punta_Arenas',783),('posix/America/Rainy_River',784),('posix/America/Rankin_Inlet',785),('posix/America/Recife',786),('posix/America/Regina',787),('posix/America/Resolute',788),('posix/America/Rio_Branco',789),('posix/America/Rosario',790),('posix/America/Santa_Isabel',791),('posix/America/Santarem',792),('posix/America/Santiago',793),('posix/America/Santo_Domingo',794),('posix/America/Sao_Paulo',795),('posix/America/Scoresbysund',796),('posix/America/Shiprock',797),('posix/America/Sitka',798),('posix/America/St_Barthelemy',799),('posix/America/St_Johns',800),('posix/America/St_Kitts',801),('posix/America/St_Lucia',802),('posix/America/St_Thomas',803),('posix/America/St_Vincent',804),('posix/America/Swift_Current',805),('posix/America/Tegucigalpa',806),('posix/America/Thule',807),('posix/America/Thunder_Bay',808),('posix/America/Tijuana',809),('posix/America/Toronto',810),('posix/America/Tortola',811),('posix/America/Vancouver',812),('posix/America/Virgin',813),('posix/America/Whitehorse',814),('posix/America/Winnipeg',815),('posix/America/Yakutat',816),('posix/America/Yellowknife',817),('posix/Antarctica/Casey',818),('posix/Antarctica/Davis',819),('posix/Antarctica/DumontDUrville',820),('posix/Antarctica/Macquarie',821),('posix/Antarctica/Mawson',822),('posix/Antarctica/McMurdo',823),('posix/Antarctica/Palmer',824),('posix/Antarctica/Rothera',825),('posix/Antarctica/South_Pole',826),('posix/Antarctica/Syowa',827),('posix/Antarctica/Troll',828),('posix/Antarctica/Vostok',829),('posix/Arctic/Longyearbyen',830),('posix/Asia/Aden',831),('posix/Asia/Almaty',832),('posix/Asia/Amman',833),('posix/Asia/Anadyr',834),('posix/Asia/Aqtau',835),('posix/Asia/Aqtobe',836),('posix/Asia/Ashgabat',837),('posix/Asia/Ashkhabad',838),('posix/Asia/Atyrau',839),('posix/Asia/Baghdad',840),('posix/Asia/Bahrain',841),('posix/Asia/Baku',842),('posix/Asia/Bangkok',843),('posix/Asia/Barnaul',844),('posix/Asia/Beirut',845),('posix/Asia/Bishkek',846),('posix/Asia/Brunei',847),('posix/Asia/Calcutta',848),('posix/Asia/Chita',849),('posix/Asia/Choibalsan',850),('posix/Asia/Chongqing',851),('posix/Asia/Chungking',852),('posix/Asia/Colombo',853),('posix/Asia/Dacca',854),('posix/Asia/Damascus',855),('posix/Asia/Dhaka',856),('posix/Asia/Dili',857),('posix/Asia/Dubai',858),('posix/Asia/Dushanbe',859),('posix/Asia/Famagusta',860),('posix/Asia/Gaza',861),('posix/Asia/Harbin',862),('posix/Asia/Hebron',863),('posix/Asia/Ho_Chi_Minh',864),('posix/Asia/Hong_Kong',865),('posix/Asia/Hovd',866),('posix/Asia/Irkutsk',867),('posix/Asia/Istanbul',868),('posix/Asia/Jakarta',869),('posix/Asia/Jayapura',870),('posix/Asia/Jerusalem',871),('posix/Asia/Kabul',872),('posix/Asia/Kamchatka',873),('posix/Asia/Karachi',874),('posix/Asia/Kashgar',875),('posix/Asia/Kathmandu',876),('posix/Asia/Katmandu',877),('posix/Asia/Khandyga',878),('posix/Asia/Kolkata',879),('posix/Asia/Krasnoyarsk',880),('posix/Asia/Kuala_Lumpur',881),('posix/Asia/Kuching',882),('posix/Asia/Kuwait',883),('posix/Asia/Macao',884),('posix/Asia/Macau',885),('posix/Asia/Magadan',886),('posix/Asia/Makassar',887),('posix/Asia/Manila',888),('posix/Asia/Muscat',889),('posix/Asia/Nicosia',890),('posix/Asia/Novokuznetsk',891),('posix/Asia/Novosibirsk',892),('posix/Asia/Omsk',893),('posix/Asia/Oral',894),('posix/Asia/Phnom_Penh',895),('posix/Asia/Pontianak',896),('posix/Asia/Pyongyang',897),('posix/Asia/Qatar',898),('posix/Asia/Qostanay',899),('posix/Asia/Qyzylorda',900),('posix/Asia/Rangoon',901),('posix/Asia/Riyadh',902),('posix/Asia/Saigon',903),('posix/Asia/Sakhalin',904),('posix/Asia/Samarkand',905),('posix/Asia/Seoul',906),('posix/Asia/Shanghai',907),('posix/Asia/Singapore',908),('posix/Asia/Srednekolymsk',909),('posix/Asia/Taipei',910),('posix/Asia/Tashkent',911),('posix/Asia/Tbilisi',912),('posix/Asia/Tehran',913),('posix/Asia/Tel_Aviv',914),('posix/Asia/Thimbu',915),('posix/Asia/Thimphu',916),('posix/Asia/Tokyo',917),('posix/Asia/Tomsk',918),('posix/Asia/Ujung_Pandang',919),('posix/Asia/Ulaanbaatar',920),('posix/Asia/Ulan_Bator',921),('posix/Asia/Urumqi',922),('posix/Asia/Ust-Nera',923),('posix/Asia/Vientiane',924),('posix/Asia/Vladivostok',925),('posix/Asia/Yakutsk',926),('posix/Asia/Yangon',927),('posix/Asia/Yekaterinburg',928),('posix/Asia/Yerevan',929),('posix/Atlantic/Azores',930),('posix/Atlantic/Bermuda',931),('posix/Atlantic/Canary',932),('posix/Atlantic/Cape_Verde',933),('posix/Atlantic/Faeroe',934),('posix/Atlantic/Faroe',935),('posix/Atlantic/Jan_Mayen',936),('posix/Atlantic/Madeira',937),('posix/Atlantic/Reykjavik',938),('posix/Atlantic/South_Georgia',939),('posix/Atlantic/St_Helena',940),('posix/Atlantic/Stanley',941),('posix/Australia/ACT',942),('posix/Australia/Adelaide',943),('posix/Australia/Brisbane',944),('posix/Australia/Broken_Hill',945),('posix/Australia/Canberra',946),('posix/Australia/Currie',947),('posix/Australia/Darwin',948),('posix/Australia/Eucla',949),('posix/Australia/Hobart',950),('posix/Australia/LHI',951),('posix/Australia/Lindeman',952),('posix/Australia/Lord_Howe',953),('posix/Australia/Melbourne',954),('posix/Australia/NSW',955),('posix/Australia/North',956),('posix/Australia/Perth',957),('posix/Australia/Queensland',958),('posix/Australia/South',959),('posix/Australia/Sydney',960),('posix/Australia/Tasmania',961),('posix/Australia/Victoria',962),('posix/Australia/West',963),('posix/Australia/Yancowinna',964),('posix/Brazil/Acre',965),('posix/Brazil/DeNoronha',966),('posix/Brazil/East',967),('posix/Brazil/West',968),('posix/CET',969),('posix/CST6CDT',970),('posix/Canada/Atlantic',971),('posix/Canada/Central',972),('posix/Canada/Eastern',973),('posix/Canada/Mountain',974),('posix/Canada/Newfoundland',975),('posix/Canada/Pacific',976),('posix/Canada/Saskatchewan',977),('posix/Canada/Yukon',978),('posix/Chile/Continental',979),('posix/Chile/EasterIsland',980),('posix/Cuba',981),('posix/EET',982),('posix/EST',983),('posix/EST5EDT',984),('posix/Egypt',985),('posix/Eire',986),('posix/Etc/GMT',987),('posix/Etc/GMT+0',988),('posix/Etc/GMT+1',989),('posix/Etc/GMT+10',990),('posix/Etc/GMT+11',991),('posix/Etc/GMT+12',992),('posix/Etc/GMT+2',993),('posix/Etc/GMT+3',994),('posix/Etc/GMT+4',995),('posix/Etc/GMT+5',996),('posix/Etc/GMT+6',997),('posix/Etc/GMT+7',998),('posix/Etc/GMT+8',999),('posix/Etc/GMT+9',1000),('posix/Etc/GMT-0',1001),('posix/Etc/GMT-1',1002),('posix/Etc/GMT-10',1003),('posix/Etc/GMT-11',1004),('posix/Etc/GMT-12',1005),('posix/Etc/GMT-13',1006),('posix/Etc/GMT-14',1007),('posix/Etc/GMT-2',1008),('posix/Etc/GMT-3',1009),('posix/Etc/GMT-4',1010),('posix/Etc/GMT-5',1011),('posix/Etc/GMT-6',1012),('posix/Etc/GMT-7',1013),('posix/Etc/GMT-8',1014),('posix/Etc/GMT-9',1015),('posix/Etc/GMT0',1016),('posix/Etc/Greenwich',1017),('posix/Etc/UCT',1018),('posix/Etc/UTC',1019),('posix/Etc/Universal',1020),('posix/Etc/Zulu',1021),('posix/Europe/Amsterdam',1022),('posix/Europe/Andorra',1023),('posix/Europe/Astrakhan',1024),('posix/Europe/Athens',1025),('posix/Europe/Belfast',1026),('posix/Europe/Belgrade',1027),('posix/Europe/Berlin',1028),('posix/Europe/Bratislava',1029),('posix/Europe/Brussels',1030),('posix/Europe/Bucharest',1031),('posix/Europe/Budapest',1032),('posix/Europe/Busingen',1033),('posix/Europe/Chisinau',1034),('posix/Europe/Copenhagen',1035),('posix/Europe/Dublin',1036),('posix/Europe/Gibraltar',1037),('posix/Europe/Guernsey',1038),('posix/Europe/Helsinki',1039),('posix/Europe/Isle_of_Man',1040),('posix/Europe/Istanbul',1041),('posix/Europe/Jersey',1042),('posix/Europe/Kaliningrad',1043),('posix/Europe/Kiev',1044),('posix/Europe/Kirov',1045),('posix/Europe/Kyiv',1046),('posix/Europe/Lisbon',1047),('posix/Europe/Ljubljana',1048),('posix/Europe/London',1049),('posix/Europe/Luxembourg',1050),('posix/Europe/Madrid',1051),('posix/Europe/Malta',1052),('posix/Europe/Mariehamn',1053),('posix/Europe/Minsk',1054),('posix/Europe/Monaco',1055),('posix/Europe/Moscow',1056),('posix/Europe/Nicosia',1057),('posix/Europe/Oslo',1058),('posix/Europe/Paris',1059),('posix/Europe/Podgorica',1060),('posix/Europe/Prague',1061),('posix/Europe/Riga',1062),('posix/Europe/Rome',1063),('posix/Europe/Samara',1064),('posix/Europe/San_Marino',1065),('posix/Europe/Sarajevo',1066),('posix/Europe/Saratov',1067),('posix/Europe/Simferopol',1068),('posix/Europe/Skopje',1069),('posix/Europe/Sofia',1070),('posix/Europe/Stockholm',1071),('posix/Europe/Tallinn',1072),('posix/Europe/Tirane',1073),('posix/Europe/Tiraspol',1074),('posix/Europe/Ulyanovsk',1075),('posix/Europe/Uzhgorod',1076),('posix/Europe/Vaduz',1077),('posix/Europe/Vatican',1078),('posix/Europe/Vienna',1079),('posix/Europe/Vilnius',1080),('posix/Europe/Volgograd',1081),('posix/Europe/Warsaw',1082),('posix/Europe/Zagreb',1083),('posix/Europe/Zaporozhye',1084),('posix/Europe/Zurich',1085),('posix/GB',1086),('posix/GB-Eire',1087),('posix/GMT',1088),('posix/GMT+0',1089),('posix/GMT-0',1090),('posix/GMT0',1091),('posix/Greenwich',1092),('posix/HST',1093),('posix/Hongkong',1094),('posix/Iceland',1095),('posix/Indian/Antananarivo',1096),('posix/Indian/Chagos',1097),('posix/Indian/Christmas',1098),('posix/Indian/Cocos',1099),('posix/Indian/Comoro',1100),('posix/Indian/Kerguelen',1101),('posix/Indian/Mahe',1102),('posix/Indian/Maldives',1103),('posix/Indian/Mauritius',1104),('posix/Indian/Mayotte',1105),('posix/Indian/Reunion',1106),('posix/Iran',1107),('posix/Israel',1108),('posix/Jamaica',1109),('posix/Japan',1110),('posix/Kwajalein',1111),('posix/Libya',1112),('posix/MET',1113),('posix/MST',1114),('posix/MST7MDT',1115),('posix/Mexico/BajaNorte',1116),('posix/Mexico/BajaSur',1117),('posix/Mexico/General',1118),('posix/NZ',1119),('posix/NZ-CHAT',1120),('posix/Navajo',1121),('posix/PRC',1122),('posix/PST8PDT',1123),('posix/Pacific/Apia',1124),('posix/Pacific/Auckland',1125),('posix/Pacific/Bougainville',1126),('posix/Pacific/Chatham',1127),('posix/Pacific/Chuuk',1128),('posix/Pacific/Easter',1129),('posix/Pacific/Efate',1130),('posix/Pacific/Enderbury',1131),('posix/Pacific/Fakaofo',1132),('posix/Pacific/Fiji',1133),('posix/Pacific/Funafuti',1134),('posix/Pacific/Galapagos',1135),('posix/Pacific/Gambier',1136),('posix/Pacific/Guadalcanal',1137),('posix/Pacific/Guam',1138),('posix/Pacific/Honolulu',1139),('posix/Pacific/Johnston',1140),('posix/Pacific/Kanton',1141),('posix/Pacific/Kiritimati',1142),('posix/Pacific/Kosrae',1143),('posix/Pacific/Kwajalein',1144),('posix/Pacific/Majuro',1145),('posix/Pacific/Marquesas',1146),('posix/Pacific/Midway',1147),('posix/Pacific/Nauru',1148),('posix/Pacific/Niue',1149),('posix/Pacific/Norfolk',1150),('posix/Pacific/Noumea',1151),('posix/Pacific/Pago_Pago',1152),('posix/Pacific/Palau',1153),('posix/Pacific/Pitcairn',1154),('posix/Pacific/Pohnpei',1155),('posix/Pacific/Ponape',1156),('posix/Pacific/Port_Moresby',1157),('posix/Pacific/Rarotonga',1158),('posix/Pacific/Saipan',1159),('posix/Pacific/Samoa',1160),('posix/Pacific/Tahiti',1161),('posix/Pacific/Tarawa',1162),('posix/Pacific/Tongatapu',1163),('posix/Pacific/Truk',1164),('posix/Pacific/Wake',1165),('posix/Pacific/Wallis',1166),('posix/Pacific/Yap',1167),('posix/Poland',1168),('posix/Portugal',1169),('posix/ROC',1170),('posix/ROK',1171),('posix/Singapore',1172),('posix/Turkey',1173),('posix/UCT',1174),('posix/US/Alaska',1175),('posix/US/Aleutian',1176),('posix/US/Arizona',1177),('posix/US/Central',1178),('posix/US/East-Indiana',1179),('posix/US/Eastern',1180),('posix/US/Hawaii',1181),('posix/US/Indiana-Starke',1182),('posix/US/Michigan',1183),('posix/US/Mountain',1184),('posix/US/Pacific',1185),('posix/US/Samoa',1186),('posix/UTC',1187),('posix/Universal',1188),('posix/W-SU',1189),('posix/WET',1190),('posix/Zulu',1191),('posixrules',1192),('right/Africa/Abidjan',1193),('right/Africa/Accra',1194),('right/Africa/Addis_Ababa',1195),('right/Africa/Algiers',1196),('right/Africa/Asmara',1197),('right/Africa/Asmera',1198),('right/Africa/Bamako',1199),('right/Africa/Bangui',1200),('right/Africa/Banjul',1201),('right/Africa/Bissau',1202),('right/Africa/Blantyre',1203),('right/Africa/Brazzaville',1204),('right/Africa/Bujumbura',1205),('right/Africa/Cairo',1206),('right/Africa/Casablanca',1207),('right/Africa/Ceuta',1208),('right/Africa/Conakry',1209),('right/Africa/Dakar',1210),('right/Africa/Dar_es_Salaam',1211),('right/Africa/Djibouti',1212),('right/Africa/Douala',1213),('right/Africa/El_Aaiun',1214),('right/Africa/Freetown',1215),('right/Africa/Gaborone',1216),('right/Africa/Harare',1217),('right/Africa/Johannesburg',1218),('right/Africa/Juba',1219),('right/Africa/Kampala',1220),('right/Africa/Khartoum',1221),('right/Africa/Kigali',1222),('right/Africa/Kinshasa',1223),('right/Africa/Lagos',1224),('right/Africa/Libreville',1225),('right/Africa/Lome',1226),('right/Africa/Luanda',1227),('right/Africa/Lubumbashi',1228),('right/Africa/Lusaka',1229),('right/Africa/Malabo',1230),('right/Africa/Maputo',1231),('right/Africa/Maseru',1232),('right/Africa/Mbabane',1233),('right/Africa/Mogadishu',1234),('right/Africa/Monrovia',1235),('right/Africa/Nairobi',1236),('right/Africa/Ndjamena',1237),('right/Africa/Niamey',1238),('right/Africa/Nouakchott',1239),('right/Africa/Ouagadougou',1240),('right/Africa/Porto-Novo',1241),('right/Africa/Sao_Tome',1242),('right/Africa/Timbuktu',1243),('right/Africa/Tripoli',1244),('right/Africa/Tunis',1245),('right/Africa/Windhoek',1246),('right/America/Adak',1247),('right/America/Anchorage',1248),('right/America/Anguilla',1249),('right/America/Antigua',1250),('right/America/Araguaina',1251),('right/America/Argentina/Buenos_Aires',1252),('right/America/Argentina/Catamarca',1253),('right/America/Argentina/ComodRivadavia',1254),('right/America/Argentina/Cordoba',1255),('right/America/Argentina/Jujuy',1256),('right/America/Argentina/La_Rioja',1257),('right/America/Argentina/Mendoza',1258),('right/America/Argentina/Rio_Gallegos',1259),('right/America/Argentina/Salta',1260),('right/America/Argentina/San_Juan',1261),('right/America/Argentina/San_Luis',1262),('right/America/Argentina/Tucuman',1263),('right/America/Argentina/Ushuaia',1264),('right/America/Aruba',1265),('right/America/Asuncion',1266),('right/America/Atikokan',1267),('right/America/Atka',1268),('right/America/Bahia',1269),('right/America/Bahia_Banderas',1270),('right/America/Barbados',1271),('right/America/Belem',1272),('right/America/Belize',1273),('right/America/Blanc-Sablon',1274),('right/America/Boa_Vista',1275),('right/America/Bogota',1276),('right/America/Boise',1277),('right/America/Buenos_Aires',1278),('right/America/Cambridge_Bay',1279),('right/America/Campo_Grande',1280),('right/America/Cancun',1281),('right/America/Caracas',1282),('right/America/Catamarca',1283),('right/America/Cayenne',1284),('right/America/Cayman',1285),('right/America/Chicago',1286),('right/America/Chihuahua',1287),('right/America/Coral_Harbour',1288),('right/America/Cordoba',1289),('right/America/Costa_Rica',1290),('right/America/Creston',1291),('right/America/Cuiaba',1292),('right/America/Curacao',1293),('right/America/Danmarkshavn',1294),('right/America/Dawson',1295),('right/America/Dawson_Creek',1296),('right/America/Denver',1297),('right/America/Detroit',1298),('right/America/Dominica',1299),('right/America/Edmonton',1300),('right/America/Eirunepe',1301),('right/America/El_Salvador',1302),('right/America/Ensenada',1303),('right/America/Fort_Nelson',1304),('right/America/Fort_Wayne',1305),('right/America/Fortaleza',1306),('right/America/Glace_Bay',1307),('right/America/Godthab',1308),('right/America/Goose_Bay',1309),('right/America/Grand_Turk',1310),('right/America/Grenada',1311),('right/America/Guadeloupe',1312),('right/America/Guatemala',1313),('right/America/Guayaquil',1314),('right/America/Guyana',1315),('right/America/Halifax',1316),('right/America/Havana',1317),('right/America/Hermosillo',1318),('right/America/Indiana/Indianapolis',1319),('right/America/Indiana/Knox',1320),('right/America/Indiana/Marengo',1321),('right/America/Indiana/Petersburg',1322),('right/America/Indiana/Tell_City',1323),('right/America/Indiana/Vevay',1324),('right/America/Indiana/Vincennes',1325),('right/America/Indiana/Winamac',1326),('right/America/Indianapolis',1327),('right/America/Inuvik',1328),('right/America/Iqaluit',1329),('right/America/Jamaica',1330),('right/America/Jujuy',1331),('right/America/Juneau',1332),('right/America/Kentucky/Louisville',1333),('right/America/Kentucky/Monticello',1334),('right/America/Knox_IN',1335),('right/America/Kralendijk',1336),('right/America/La_Paz',1337),('right/America/Lima',1338),('right/America/Los_Angeles',1339),('right/America/Louisville',1340),('right/America/Lower_Princes',1341),('right/America/Maceio',1342),('right/America/Managua',1343),('right/America/Manaus',1344),('right/America/Marigot',1345),('right/America/Martinique',1346),('right/America/Matamoros',1347),('right/America/Mazatlan',1348),('right/America/Mendoza',1349),('right/America/Menominee',1350),('right/America/Merida',1351),('right/America/Metlakatla',1352),('right/America/Mexico_City',1353),('right/America/Miquelon',1354),('right/America/Moncton',1355),('right/America/Monterrey',1356),('right/America/Montevideo',1357),('right/America/Montreal',1358),('right/America/Montserrat',1359),('right/America/Nassau',1360),('right/America/New_York',1361),('right/America/Nipigon',1362),('right/America/Nome',1363),('right/America/Noronha',1364),('right/America/North_Dakota/Beulah',1365),('right/America/North_Dakota/Center',1366),('right/America/North_Dakota/New_Salem',1367),('right/America/Nuuk',1368),('right/America/Ojinaga',1369),('right/America/Panama',1370),('right/America/Pangnirtung',1371),('right/America/Paramaribo',1372),('right/America/Phoenix',1373),('right/America/Port-au-Prince',1374),('right/America/Port_of_Spain',1375),('right/America/Porto_Acre',1376),('right/America/Porto_Velho',1377),('right/America/Puerto_Rico',1378),('right/America/Punta_Arenas',1379),('right/America/Rainy_River',1380),('right/America/Rankin_Inlet',1381),('right/America/Recife',1382),('right/America/Regina',1383),('right/America/Resolute',1384),('right/America/Rio_Branco',1385),('right/America/Rosario',1386),('right/America/Santa_Isabel',1387),('right/America/Santarem',1388),('right/America/Santiago',1389),('right/America/Santo_Domingo',1390),('right/America/Sao_Paulo',1391),('right/America/Scoresbysund',1392),('right/America/Shiprock',1393),('right/America/Sitka',1394),('right/America/St_Barthelemy',1395),('right/America/St_Johns',1396),('right/America/St_Kitts',1397),('right/America/St_Lucia',1398),('right/America/St_Thomas',1399),('right/America/St_Vincent',1400),('right/America/Swift_Current',1401),('right/America/Tegucigalpa',1402),('right/America/Thule',1403),('right/America/Thunder_Bay',1404),('right/America/Tijuana',1405),('right/America/Toronto',1406),('right/America/Tortola',1407),('right/America/Vancouver',1408),('right/America/Virgin',1409),('right/America/Whitehorse',1410),('right/America/Winnipeg',1411),('right/America/Yakutat',1412),('right/America/Yellowknife',1413),('right/Antarctica/Casey',1414),('right/Antarctica/Davis',1415),('right/Antarctica/DumontDUrville',1416),('right/Antarctica/Macquarie',1417),('right/Antarctica/Mawson',1418),('right/Antarctica/McMurdo',1419),('right/Antarctica/Palmer',1420),('right/Antarctica/Rothera',1421),('right/Antarctica/South_Pole',1422),('right/Antarctica/Syowa',1423),('right/Antarctica/Troll',1424),('right/Antarctica/Vostok',1425),('right/Arctic/Longyearbyen',1426),('right/Asia/Aden',1427),('right/Asia/Almaty',1428),('right/Asia/Amman',1429),('right/Asia/Anadyr',1430),('right/Asia/Aqtau',1431),('right/Asia/Aqtobe',1432),('right/Asia/Ashgabat',1433),('right/Asia/Ashkhabad',1434),('right/Asia/Atyrau',1435),('right/Asia/Baghdad',1436),('right/Asia/Bahrain',1437),('right/Asia/Baku',1438),('right/Asia/Bangkok',1439),('right/Asia/Barnaul',1440),('right/Asia/Beirut',1441),('right/Asia/Bishkek',1442),('right/Asia/Brunei',1443),('right/Asia/Calcutta',1444),('right/Asia/Chita',1445),('right/Asia/Choibalsan',1446),('right/Asia/Chongqing',1447),('right/Asia/Chungking',1448),('right/Asia/Colombo',1449),('right/Asia/Dacca',1450),('right/Asia/Damascus',1451),('right/Asia/Dhaka',1452),('right/Asia/Dili',1453),('right/Asia/Dubai',1454),('right/Asia/Dushanbe',1455),('right/Asia/Famagusta',1456),('right/Asia/Gaza',1457),('right/Asia/Harbin',1458),('right/Asia/Hebron',1459),('right/Asia/Ho_Chi_Minh',1460),('right/Asia/Hong_Kong',1461),('right/Asia/Hovd',1462),('right/Asia/Irkutsk',1463),('right/Asia/Istanbul',1464),('right/Asia/Jakarta',1465),('right/Asia/Jayapura',1466),('right/Asia/Jerusalem',1467),('right/Asia/Kabul',1468),('right/Asia/Kamchatka',1469),('right/Asia/Karachi',1470),('right/Asia/Kashgar',1471),('right/Asia/Kathmandu',1472),('right/Asia/Katmandu',1473),('right/Asia/Khandyga',1474),('right/Asia/Kolkata',1475),('right/Asia/Krasnoyarsk',1476),('right/Asia/Kuala_Lumpur',1477),('right/Asia/Kuching',1478),('right/Asia/Kuwait',1479),('right/Asia/Macao',1480),('right/Asia/Macau',1481),('right/Asia/Magadan',1482),('right/Asia/Makassar',1483),('right/Asia/Manila',1484),('right/Asia/Muscat',1485),('right/Asia/Nicosia',1486),('right/Asia/Novokuznetsk',1487),('right/Asia/Novosibirsk',1488),('right/Asia/Omsk',1489),('right/Asia/Oral',1490),('right/Asia/Phnom_Penh',1491),('right/Asia/Pontianak',1492),('right/Asia/Pyongyang',1493),('right/Asia/Qatar',1494),('right/Asia/Qostanay',1495),('right/Asia/Qyzylorda',1496),('right/Asia/Rangoon',1497),('right/Asia/Riyadh',1498),('right/Asia/Saigon',1499),('right/Asia/Sakhalin',1500),('right/Asia/Samarkand',1501),('right/Asia/Seoul',1502),('right/Asia/Shanghai',1503),('right/Asia/Singapore',1504),('right/Asia/Srednekolymsk',1505),('right/Asia/Taipei',1506),('right/Asia/Tashkent',1507),('right/Asia/Tbilisi',1508),('right/Asia/Tehran',1509),('right/Asia/Tel_Aviv',1510),('right/Asia/Thimbu',1511),('right/Asia/Thimphu',1512),('right/Asia/Tokyo',1513),('right/Asia/Tomsk',1514),('right/Asia/Ujung_Pandang',1515),('right/Asia/Ulaanbaatar',1516),('right/Asia/Ulan_Bator',1517),('right/Asia/Urumqi',1518),('right/Asia/Ust-Nera',1519),('right/Asia/Vientiane',1520),('right/Asia/Vladivostok',1521),('right/Asia/Yakutsk',1522),('right/Asia/Yangon',1523),('right/Asia/Yekaterinburg',1524),('right/Asia/Yerevan',1525),('right/Atlantic/Azores',1526),('right/Atlantic/Bermuda',1527),('right/Atlantic/Canary',1528),('right/Atlantic/Cape_Verde',1529),('right/Atlantic/Faeroe',1530),('right/Atlantic/Faroe',1531),('right/Atlantic/Jan_Mayen',1532),('right/Atlantic/Madeira',1533),('right/Atlantic/Reykjavik',1534),('right/Atlantic/South_Georgia',1535),('right/Atlantic/St_Helena',1536),('right/Atlantic/Stanley',1537),('right/Australia/ACT',1538),('right/Australia/Adelaide',1539),('right/Australia/Brisbane',1540),('right/Australia/Broken_Hill',1541),('right/Australia/Canberra',1542),('right/Australia/Currie',1543),('right/Australia/Darwin',1544),('right/Australia/Eucla',1545),('right/Australia/Hobart',1546),('right/Australia/LHI',1547),('right/Australia/Lindeman',1548),('right/Australia/Lord_Howe',1549),('right/Australia/Melbourne',1550),('right/Australia/NSW',1551),('right/Australia/North',1552),('right/Australia/Perth',1553),('right/Australia/Queensland',1554),('right/Australia/South',1555),('right/Australia/Sydney',1556),('right/Australia/Tasmania',1557),('right/Australia/Victoria',1558),('right/Australia/West',1559),('right/Australia/Yancowinna',1560),('right/Brazil/Acre',1561),('right/Brazil/DeNoronha',1562),('right/Brazil/East',1563),('right/Brazil/West',1564),('right/CET',1565),('right/CST6CDT',1566),('right/Canada/Atlantic',1567),('right/Canada/Central',1568),('right/Canada/Eastern',1569),('right/Canada/Mountain',1570),('right/Canada/Newfoundland',1571),('right/Canada/Pacific',1572),('right/Canada/Saskatchewan',1573),('right/Canada/Yukon',1574),('right/Chile/Continental',1575),('right/Chile/EasterIsland',1576),('right/Cuba',1577),('right/EET',1578),('right/EST',1579),('right/EST5EDT',1580),('right/Egypt',1581),('right/Eire',1582),('right/Etc/GMT',1583),('right/Etc/GMT+0',1584),('right/Etc/GMT+1',1585),('right/Etc/GMT+10',1586),('right/Etc/GMT+11',1587),('right/Etc/GMT+12',1588),('right/Etc/GMT+2',1589),('right/Etc/GMT+3',1590),('right/Etc/GMT+4',1591),('right/Etc/GMT+5',1592),('right/Etc/GMT+6',1593),('right/Etc/GMT+7',1594),('right/Etc/GMT+8',1595),('right/Etc/GMT+9',1596),('right/Etc/GMT-0',1597),('right/Etc/GMT-1',1598),('right/Etc/GMT-10',1599),('right/Etc/GMT-11',1600),('right/Etc/GMT-12',1601),('right/Etc/GMT-13',1602),('right/Etc/GMT-14',1603),('right/Etc/GMT-2',1604),('right/Etc/GMT-3',1605),('right/Etc/GMT-4',1606),('right/Etc/GMT-5',1607),('right/Etc/GMT-6',1608),('right/Etc/GMT-7',1609),('right/Etc/GMT-8',1610),('right/Etc/GMT-9',1611),('right/Etc/GMT0',1612),('right/Etc/Greenwich',1613),('right/Etc/UCT',1614),('right/Etc/UTC',1615),('right/Etc/Universal',1616),('right/Etc/Zulu',1617),('right/Europe/Amsterdam',1618),('right/Europe/Andorra',1619),('right/Europe/Astrakhan',1620),('right/Europe/Athens',1621),('right/Europe/Belfast',1622),('right/Europe/Belgrade',1623),('right/Europe/Berlin',1624),('right/Europe/Bratislava',1625),('right/Europe/Brussels',1626),('right/Europe/Bucharest',1627),('right/Europe/Budapest',1628),('right/Europe/Busingen',1629),('right/Europe/Chisinau',1630),('right/Europe/Copenhagen',1631),('right/Europe/Dublin',1632),('right/Europe/Gibraltar',1633),('right/Europe/Guernsey',1634),('right/Europe/Helsinki',1635),('right/Europe/Isle_of_Man',1636),('right/Europe/Istanbul',1637),('right/Europe/Jersey',1638),('right/Europe/Kaliningrad',1639),('right/Europe/Kiev',1640),('right/Europe/Kirov',1641),('right/Europe/Kyiv',1642),('right/Europe/Lisbon',1643),('right/Europe/Ljubljana',1644),('right/Europe/London',1645),('right/Europe/Luxembourg',1646),('right/Europe/Madrid',1647),('right/Europe/Malta',1648),('right/Europe/Mariehamn',1649),('right/Europe/Minsk',1650),('right/Europe/Monaco',1651),('right/Europe/Moscow',1652),('right/Europe/Nicosia',1653),('right/Europe/Oslo',1654),('right/Europe/Paris',1655),('right/Europe/Podgorica',1656),('right/Europe/Prague',1657),('right/Europe/Riga',1658),('right/Europe/Rome',1659),('right/Europe/Samara',1660),('right/Europe/San_Marino',1661),('right/Europe/Sarajevo',1662),('right/Europe/Saratov',1663),('right/Europe/Simferopol',1664),('right/Europe/Skopje',1665),('right/Europe/Sofia',1666),('right/Europe/Stockholm',1667),('right/Europe/Tallinn',1668),('right/Europe/Tirane',1669),('right/Europe/Tiraspol',1670),('right/Europe/Ulyanovsk',1671),('right/Europe/Uzhgorod',1672),('right/Europe/Vaduz',1673),('right/Europe/Vatican',1674),('right/Europe/Vienna',1675),('right/Europe/Vilnius',1676),('right/Europe/Volgograd',1677),('right/Europe/Warsaw',1678),('right/Europe/Zagreb',1679),('right/Europe/Zaporozhye',1680),('right/Europe/Zurich',1681),('right/GB',1682),('right/GB-Eire',1683),('right/GMT',1684),('right/GMT+0',1685),('right/GMT-0',1686),('right/GMT0',1687),('right/Greenwich',1688),('right/HST',1689),('right/Hongkong',1690),('right/Iceland',1691),('right/Indian/Antananarivo',1692),('right/Indian/Chagos',1693),('right/Indian/Christmas',1694),('right/Indian/Cocos',1695),('right/Indian/Comoro',1696),('right/Indian/Kerguelen',1697),('right/Indian/Mahe',1698),('right/Indian/Maldives',1699),('right/Indian/Mauritius',1700),('right/Indian/Mayotte',1701),('right/Indian/Reunion',1702),('right/Iran',1703),('right/Israel',1704),('right/Jamaica',1705),('right/Japan',1706),('right/Kwajalein',1707),('right/Libya',1708),('right/MET',1709),('right/MST',1710),('right/MST7MDT',1711),('right/Mexico/BajaNorte',1712),('right/Mexico/BajaSur',1713),('right/Mexico/General',1714),('right/NZ',1715),('right/NZ-CHAT',1716),('right/Navajo',1717),('right/PRC',1718),('right/PST8PDT',1719),('right/Pacific/Apia',1720),('right/Pacific/Auckland',1721),('right/Pacific/Bougainville',1722),('right/Pacific/Chatham',1723),('right/Pacific/Chuuk',1724),('right/Pacific/Easter',1725),('right/Pacific/Efate',1726),('right/Pacific/Enderbury',1727),('right/Pacific/Fakaofo',1728),('right/Pacific/Fiji',1729),('right/Pacific/Funafuti',1730),('right/Pacific/Galapagos',1731),('right/Pacific/Gambier',1732),('right/Pacific/Guadalcanal',1733),('right/Pacific/Guam',1734),('right/Pacific/Honolulu',1735),('right/Pacific/Johnston',1736),('right/Pacific/Kanton',1737),('right/Pacific/Kiritimati',1738),('right/Pacific/Kosrae',1739),('right/Pacific/Kwajalein',1740),('right/Pacific/Majuro',1741),('right/Pacific/Marquesas',1742),('right/Pacific/Midway',1743),('right/Pacific/Nauru',1744),('right/Pacific/Niue',1745),('right/Pacific/Norfolk',1746),('right/Pacific/Noumea',1747),('right/Pacific/Pago_Pago',1748),('right/Pacific/Palau',1749),('right/Pacific/Pitcairn',1750),('right/Pacific/Pohnpei',1751),('right/Pacific/Ponape',1752),('right/Pacific/Port_Moresby',1753),('right/Pacific/Rarotonga',1754),('right/Pacific/Saipan',1755),('right/Pacific/Samoa',1756),('right/Pacific/Tahiti',1757),('right/Pacific/Tarawa',1758),('right/Pacific/Tongatapu',1759),('right/Pacific/Truk',1760),('right/Pacific/Wake',1761),('right/Pacific/Wallis',1762),('right/Pacific/Yap',1763),('right/Poland',1764),('right/Portugal',1765),('right/ROC',1766),('right/ROK',1767),('right/Singapore',1768),('right/Turkey',1769),('right/UCT',1770),('right/US/Alaska',1771),('right/US/Aleutian',1772),('right/US/Arizona',1773),('right/US/Central',1774),('right/US/East-Indiana',1775),('right/US/Eastern',1776),('right/US/Hawaii',1777),('right/US/Indiana-Starke',1778),('right/US/Michigan',1779),('right/US/Mountain',1780),('right/US/Pacific',1781),('right/US/Samoa',1782),('right/UTC',1783),('right/Universal',1784),('right/W-SU',1785),('right/WET',1786),('right/Zulu',1787);
/*!40000 ALTER TABLE `time_zone_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition`
--

DROP TABLE IF EXISTS `time_zone_transition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_time` bigint(20) NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Time zone transitions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition`
--

LOCK TABLES `time_zone_transition` WRITE;
/*!40000 ALTER TABLE `time_zone_transition` DISABLE KEYS */;
INSERT INTO `time_zone_transition` VALUES (1,-1830383032,1),(2,-1830383032,1),(3,-1946168836,1),(3,-1309746600,2),(3,-1261969200,1),(3,-1041388200,3),(3,-865305900,2),(4,-2147483648,1),(4,-1855958961,4),(4,-1689814800,2),(4,-1680397200,3),(4,-1665363600,2),(4,-1648342800,3),(4,-1635123600,2),(4,-1616893200,3),(4,-1604278800,2),(4,-1585443600,3),(4,-1574038800,2),(4,-1552266000,3),(4,-1539997200,2),(4,-1531443600,3),(4,-956365200,2),(4,-950486400,4),(4,-942012000,6),(4,-812502000,5),(4,-796262400,6),(4,-781052400,5),(4,-766630800,6),(4,-733280400,4),(4,-439430400,6),(4,-212029200,4),(4,41468400,2),(4,54774000,3),(4,231724800,7),(4,246236400,6),(4,259545600,5),(4,275274000,6),(4,309740400,4),(4,325468800,7),(4,341802000,4),(4,357523200,6),(5,-1946168836,1),(5,-1309746600,2),(5,-1261969200,1),(5,-1041388200,3),(5,-865305900,2),(6,-1946168836,1),(6,-1309746600,2),(6,-1261969200,1),(6,-1041388200,3),(6,-865305900,2),(7,-1830383032,1),(8,-2035584815,1),(8,-1940889600,0),(8,-1767226415,2),(8,-1588465800,3),(9,-1830383032,1),(10,-1830380400,1),(10,157770000,2),(11,-2109291020,1),(12,-2035584815,1),(12,-1940889600,0),(12,-1767226415,2),(12,-1588465800,3),(13,-2109291020,1),(14,-2147483648,2),(14,-929844000,1),(14,-923108400,2),(14,-906170400,1),(14,-892868400,2),(14,-875844000,1),(14,-857790000,2),(14,-844308000,1),(14,-825822000,2),(14,-812685600,1),(14,-794199600,2),(14,-779853600,1),(14,-762663600,2),(14,-399088800,1),(14,-386650800,2),(14,-368330400,1),(14,-355114800,2),(14,-336790800,1),(14,-323654400,2),(14,-305168400,1),(14,-292032000,2),(14,-273632400,1),(14,-260496000,2),(14,-242096400,1),(14,-228960000,2),(14,-210560400,1),(14,-197424000,2),(14,-178938000,1),(14,-165801600,2),(14,-147402000,1),(14,-134265600,2),(14,-115866000,1),(14,-102643200,2),(14,-84330000,1),(14,-71107200,2),(14,-52707600,1),(14,-39484800,2),(14,-21171600,1),(14,-7948800,2),(14,10364400,1),(14,23587200,2),(14,41900400,1),(14,55123200,2),(14,73522800,1),(14,86745600,2),(14,105058800,1),(14,118281600,2),(14,136594800,1),(14,149817600,2),(14,168130800,1),(14,181353600,2),(14,199753200,1),(14,212976000,2),(14,231289200,1),(14,244512000,2),(14,262825200,1),(14,276048000,2),(14,294361200,1),(14,307584000,2),(14,325983600,1),(14,339206400,2),(14,357519600,1),(14,370742400,2),(14,396399600,1),(14,402278400,2),(14,426812400,1),(14,433814400,2),(14,452214000,1),(14,465436800,2),(14,483750000,1),(14,496972800,2),(14,515286000,1),(14,528508800,2),(14,546822000,1),(14,560044800,2),(14,578444400,1),(14,591667200,2),(14,610412400,1),(14,623203200,2),(14,641516400,1),(14,654739200,2),(14,673052400,1),(14,686275200,2),(14,704674800,1),(14,717897600,2),(14,736210800,1),(14,749433600,2),(14,767746800,1),(14,780969600,2),(14,799020000,3),(14,812322000,2),(14,830469600,3),(14,843771600,2),(14,861919200,3),(14,875221200,2),(14,893368800,3),(14,906670800,2),(14,925423200,3),(14,938725200,2),(14,956872800,3),(14,970174800,2),(14,988322400,3),(14,1001624400,2),(14,1019772000,3),(14,1033074000,2),(14,1051221600,3),(14,1064523600,2),(14,1083276000,3),(14,1096578000,2),(14,1114725600,3),(14,1128027600,2),(14,1146175200,3),(14,1158872400,2),(14,1177624800,3),(14,1189112400,2),(14,1209074400,3),(14,1219957200,2),(14,1240524000,3),(14,1250802000,2),(14,1272578400,3),(14,1281474000,2),(14,1284069600,1),(14,1285880400,2),(14,1400191200,1),(14,1403816400,2),(14,1406844000,1),(14,1411678800,2),(15,-1773012580,2),(15,-956361600,1),(15,-950490000,2),(15,-942019200,1),(15,-761187600,2),(15,-617241600,1),(15,-605149200,2),(15,-81432000,1),(15,-71110800,2),(15,141264000,1),(15,147222000,2),(15,199756800,1),(15,207702000,2),(15,231292800,1),(15,244249200,2),(15,265507200,1),(15,271033200,2),(15,448243200,3),(15,504918000,2),(15,1212278400,1),(15,1220223600,2),(15,1243814400,1),(15,1250809200,2),(15,1272758400,1),(15,1281222000,2),(15,1301788800,1),(15,1312066800,2),(15,1335664800,1),(15,1342749600,2),(15,1345428000,1),(15,1348970400,2),(15,1367114400,1),(15,1373162400,2),(15,1376100000,1),(15,1382839200,2),(15,1396144800,1),(15,1403920800,2),(15,1406944800,1),(15,1414288800,2),(15,1427594400,1),(15,1434247200,2),(15,1437271200,1),(15,1445738400,2),(15,1459044000,1),(15,1465092000,2),(15,1468116000,1),(15,1477792800,2),(15,1490493600,1),(15,1495332000,2),(15,1498960800,1),(15,1509242400,2),(15,1521943200,1),(15,1526176800,2),(15,1529200800,1),(15,1540692000,3),(15,1557021600,4),(15,1560045600,3),(15,1587261600,4),(15,1590890400,3),(15,1618106400,4),(15,1621130400,3),(15,1648346400,4),(15,1651975200,3),(15,1679191200,4),(15,1682820000,3),(15,1710036000,4),(15,1713060000,3),(15,1740276000,4),(15,1743904800,3),(15,1771120800,4),(15,1774144800,3),(15,1801965600,4),(15,1804989600,3),(15,1832205600,4),(15,1835834400,3),(15,1863050400,4),(15,1866074400,3),(15,1893290400,4),(15,1896919200,3),(15,1924135200,4),(15,1927764000,3),(15,1954980000,4),(15,1958004000,3),(15,1985220000,4),(15,1988848800,3),(15,2016064800,4),(15,2019088800,3),(15,2046304800,4),(15,2049933600,3),(15,2077149600,4),(15,2080778400,3),(15,2107994400,4),(15,2111018400,3),(15,2138234400,4),(15,2141863200,3),(16,-2147483648,1),(16,-1630112400,2),(16,-1616810400,1),(16,-1442451600,2),(16,-1427673600,3),(16,-1379293200,2),(16,-1364774400,3),(16,-1348448400,2),(16,-1333324800,3),(16,-1316390400,2),(16,-1301270400,3),(16,-81432000,2),(16,-71110800,1),(16,141264000,2),(16,147222000,1),(16,199756800,2),(16,207702000,1),(16,231292800,2),(16,244249200,1),(16,265507200,2),(16,271033200,1),(16,448243200,4),(16,512528400,5),(16,528253200,6),(16,543978000,5),(16,559702800,6),(16,575427600,5),(16,591152400,6),(16,606877200,5),(16,622602000,6),(16,638326800,5),(16,654656400,6),(16,670381200,5),(16,686106000,6),(16,701830800,5),(16,717555600,6),(16,733280400,5),(16,749005200,6),(16,764730000,5),(16,780454800,6),(16,796179600,5),(16,811904400,6),(16,828234000,5),(16,846378000,6),(16,859683600,5),(16,877827600,6),(16,891133200,5),(16,909277200,6),(16,922582800,5),(16,941331600,6),(16,954032400,5),(16,972781200,6),(16,985482000,5),(16,1004230800,6),(16,1017536400,5),(16,1035680400,6),(16,1048986000,5),(16,1067130000,6),(16,1080435600,5),(16,1099184400,6),(16,1111885200,5),(16,1130634000,6),(16,1143334800,5),(16,1162083600,6),(16,1174784400,5),(16,1193533200,6),(16,1206838800,5),(16,1224982800,6),(16,1238288400,5),(16,1256432400,6),(16,1269738000,5),(16,1288486800,6),(16,1301187600,5),(16,1319936400,6),(16,1332637200,5),(16,1351386000,6),(16,1364691600,5),(16,1382835600,6),(16,1396141200,5),(16,1414285200,6),(16,1427590800,5),(16,1445734800,6),(16,1459040400,5),(16,1477789200,6),(16,1490490000,5),(16,1509238800,6),(16,1521939600,5),(16,1540688400,6),(16,1553994000,5),(16,1572138000,6),(16,1585443600,5),(16,1603587600,6),(16,1616893200,5),(16,1635642000,6),(16,1648342800,5),(16,1667091600,6),(16,1679792400,5),(16,1698541200,6),(16,1711846800,5),(16,1729990800,6),(16,1743296400,5),(16,1761440400,6),(16,1774746000,5),(16,1792890000,6),(16,1806195600,5),(16,1824944400,6),(16,1837645200,5),(16,1856394000,6),(16,1869094800,5),(16,1887843600,6),(16,1901149200,5),(16,1919293200,6),(16,1932598800,5),(16,1950742800,6),(16,1964048400,5),(16,1982797200,6),(16,1995498000,5),(16,2014246800,6),(16,2026947600,5),(16,2045696400,6),(16,2058397200,5),(16,2077146000,6),(16,2090451600,5),(16,2108595600,6),(16,2121901200,5),(16,2140045200,6),(17,-1830383032,1),(18,-1830383032,1),(19,-1946168836,1),(19,-1309746600,2),(19,-1261969200,1),(19,-1041388200,3),(19,-865305900,2),(20,-1946168836,1),(20,-1309746600,2),(20,-1261969200,1),(20,-1041388200,3),(20,-865305900,2),(21,-2035584815,1),(21,-1940889600,0),(21,-1767226415,2),(21,-1588465800,3),(22,-1136070432,1),(22,198291600,3),(22,199756800,2),(22,207702000,3),(22,231292800,2),(22,244249200,3),(22,265507200,2),(22,271033200,3),(22,1212278400,2),(22,1220223600,3),(22,1243814400,2),(22,1250809200,3),(22,1272758400,2),(22,1281222000,3),(22,1301788800,2),(22,1312066800,3),(22,1335664800,2),(22,1342749600,3),(22,1345428000,2),(22,1348970400,3),(22,1367114400,2),(22,1373162400,3),(22,1376100000,2),(22,1382839200,3),(22,1396144800,2),(22,1403920800,3),(22,1406944800,2),(22,1414288800,3),(22,1427594400,2),(22,1434247200,3),(22,1437271200,2),(22,1445738400,3),(22,1459044000,2),(22,1465092000,3),(22,1468116000,2),(22,1477792800,3),(22,1490493600,2),(22,1495332000,3),(22,1498960800,2),(22,1509242400,3),(22,1521943200,2),(22,1526176800,3),(22,1529200800,2),(22,1540692000,5),(22,1557021600,4),(22,1560045600,5),(22,1587261600,4),(22,1590890400,5),(22,1618106400,4),(22,1621130400,5),(22,1648346400,4),(22,1651975200,5),(22,1679191200,4),(22,1682820000,5),(22,1710036000,4),(22,1713060000,5),(22,1740276000,4),(22,1743904800,5),(22,1771120800,4),(22,1774144800,5),(22,1801965600,4),(22,1804989600,5),(22,1832205600,4),(22,1835834400,5),(22,1863050400,4),(22,1866074400,5),(22,1893290400,4),(22,1896919200,5),(22,1924135200,4),(22,1927764000,5),(22,1954980000,4),(22,1958004000,5),(22,1985220000,4),(22,1988848800,5),(22,2016064800,4),(22,2019088800,5),(22,2046304800,4),(22,2049933600,5),(22,2077149600,4),(22,2080778400,5),(22,2107994400,4),(22,2111018400,5),(22,2138234400,4),(22,2141863200,5),(23,-1830383032,1),(24,-2109291020,1),(25,-2109291020,1),(26,-2147483648,1),(26,-2109288600,3),(26,-860976000,2),(26,-845254800,3),(26,-829526400,2),(26,-813805200,3),(27,-1230775588,2),(27,10360800,1),(27,24786000,2),(27,41810400,1),(27,56322000,2),(27,73432800,1),(27,87944400,2),(27,104882400,1),(27,119480400,2),(27,136332000,1),(27,151016400,2),(27,167781600,1),(27,182552400,2),(27,199231200,1),(27,214174800,2),(27,230680800,1),(27,245710800,2),(27,262735200,1),(27,277246800,2),(27,294184800,1),(27,308782800,2),(27,325634400,1),(27,340405200,2),(27,357084000,1),(27,371941200,2),(27,388533600,1),(27,403477200,2),(27,419983200,1),(27,435013200,2),(27,452037600,1),(27,466635600,2),(27,483487200,1),(27,498171600,2),(27,947930400,3),(27,1612126800,2),(28,-1946168836,1),(28,-1309746600,2),(28,-1261969200,1),(28,-1041388200,3),(28,-865305900,2),(29,-1230775808,2),(29,10360800,1),(29,24786000,2),(29,41810400,1),(29,56322000,2),(29,73432800,1),(29,87944400,2),(29,104882400,1),(29,119480400,2),(29,136332000,1),(29,151016400,2),(29,167781600,1),(29,182552400,2),(29,199231200,1),(29,214174800,2),(29,230680800,1),(29,245710800,2),(29,262735200,1),(29,277246800,2),(29,294184800,1),(29,308782800,2),(29,325634400,1),(29,340405200,2),(29,357084000,1),(29,371941200,2),(29,388533600,1),(29,403477200,2),(29,419983200,1),(29,435013200,2),(29,452037600,1),(29,466635600,2),(29,483487200,1),(29,498171600,2),(29,947930400,3),(29,1509483600,2),(30,-2109291020,1),(31,-2035584815,1),(31,-1940889600,0),(31,-1767226415,2),(31,-1588465800,3),(32,-2035584815,1),(32,-1940889600,0),(32,-1767226415,2),(32,-1588465800,3),(33,-2035584815,1),(33,-1940889600,0),(33,-1767226415,2),(33,-1588465800,3),(34,-1830383032,1),(35,-2035584815,1),(35,-1940889600,0),(35,-1767226415,2),(35,-1588465800,3),(36,-2109291020,1),(37,-2109291020,1),(38,-2035584815,1),(38,-1940889600,0),(38,-1767226415,2),(38,-1588465800,3),(39,-2109291020,1),(40,-2147483648,1),(40,-2109288600,3),(40,-860976000,2),(40,-845254800,3),(40,-829526400,2),(40,-813805200,3),(41,-2147483648,1),(41,-2109288600,3),(41,-860976000,2),(41,-845254800,3),(41,-829526400,2),(41,-813805200,3),(42,-1946168836,1),(42,-1309746600,2),(42,-1261969200,1),(42,-1041388200,3),(42,-865305900,2),(43,-2147483648,1),(43,-1604359012,2),(43,63593070,3),(44,-1946168836,1),(44,-1309746600,2),(44,-1261969200,1),(44,-1041388200,3),(44,-865305900,2),(45,-1830387612,1),(45,308703600,2),(45,321314400,1),(46,-2035584815,1),(46,-1940889600,0),(46,-1767226415,2),(46,-1588465800,3),(47,-1830383032,1),(48,-1830383032,1),(49,-2035584815,1),(49,-1940889600,0),(49,-1767226415,2),(49,-1588465800,3),(50,-2147483648,1),(50,-1830384000,2),(50,1514768400,3),(50,1546304400,4),(51,-1830383032,1),(52,-1577926364,2),(52,-574902000,1),(52,-568087200,2),(52,-512175600,1),(52,-504928800,2),(52,-449888400,1),(52,-441856800,2),(52,-347158800,3),(52,378684000,2),(52,386463600,1),(52,402271200,2),(52,417999600,1),(52,433807200,2),(52,449622000,1),(52,465429600,2),(52,481590000,1),(52,496965600,2),(52,512953200,1),(52,528674400,2),(52,544230000,1),(52,560037600,2),(52,575852400,1),(52,591660000,2),(52,607388400,1),(52,623196000,2),(52,641775600,3),(52,844034400,2),(52,860108400,1),(52,875916000,3),(52,1352505600,2),(52,1364515200,1),(52,1382659200,3),(53,-2147483648,1),(53,-1855958961,4),(53,-969242400,2),(53,-950493600,3),(53,-941940000,2),(53,-891136800,4),(53,-877827600,5),(53,-857257200,4),(53,-844556400,5),(53,-842918400,4),(53,-842223600,5),(53,-828230400,4),(53,-812502000,5),(53,-796269600,4),(53,-781052400,5),(53,-766634400,4),(53,231202800,2),(53,243903600,3),(53,262825200,2),(53,276044400,3),(53,581122800,2),(53,591145200,3),(53,606870000,2),(53,622594800,3),(53,641516400,2),(53,654649200,3),(53,1114902000,2),(53,1128038400,3),(53,1143334800,2),(53,1162083600,3),(53,1174784400,2),(53,1193533200,3),(53,1206838800,2),(53,1224982800,3),(54,-2147483648,1),(54,-2109288600,2),(54,-860976000,3),(54,-845254800,2),(54,637970400,5),(54,764200800,4),(54,778640400,5),(54,796780800,4),(54,810090000,5),(54,828835200,4),(54,841539600,5),(54,860284800,4),(54,873594000,5),(54,891734400,4),(54,905043600,5),(54,923184000,4),(54,936493200,5),(54,954633600,4),(54,967942800,5),(54,986083200,4),(54,999392400,5),(54,1018137600,4),(54,1030842000,5),(54,1049587200,4),(54,1062896400,5),(54,1081036800,4),(54,1094346000,5),(54,1112486400,4),(54,1125795600,5),(54,1143936000,4),(54,1157245200,5),(54,1175385600,4),(54,1188694800,5),(54,1207440000,4),(54,1220749200,5),(54,1238889600,4),(54,1252198800,5),(54,1270339200,4),(54,1283648400,5),(54,1301788800,4),(54,1315098000,5),(54,1333238400,4),(54,1346547600,5),(54,1365292800,4),(54,1377997200,5),(54,1396742400,4),(54,1410051600,5),(54,1428192000,4),(54,1441501200,5),(54,1459641600,4),(54,1472950800,5),(54,1491091200,4),(54,1504400400,5),(55,-2147483648,1),(55,-880196400,2),(55,-769395600,3),(55,-765374400,1),(55,-86878800,4),(55,-21466800,5),(55,-5745600,4),(55,9982800,5),(55,25704000,4),(55,41432400,5),(55,57758400,4),(55,73486800,5),(55,89208000,4),(55,104936400,5),(55,120657600,4),(55,126709200,5),(55,152107200,4),(55,162392400,5),(55,183556800,4),(55,199285200,5),(55,215611200,4),(55,230734800,5),(55,247060800,4),(55,262789200,5),(55,278510400,4),(55,294238800,5),(55,309960000,4),(55,325688400,5),(55,341409600,4),(55,357138000,5),(55,372859200,4),(55,388587600,5),(55,404913600,4),(55,420037200,5),(55,436363200,6),(55,439034400,8),(55,452088000,7),(55,467809200,8),(55,483537600,7),(55,499258800,8),(55,514987200,7),(55,530708400,8),(55,544622400,7),(55,562158000,8),(55,576072000,7),(55,594212400,8),(55,607521600,7),(55,625662000,8),(55,638971200,7),(55,657111600,8),(55,671025600,7),(55,688561200,8),(55,702475200,7),(55,720010800,8),(55,733924800,7),(55,752065200,8),(55,765374400,7),(55,783514800,8),(55,796824000,7),(55,814964400,8),(55,828878400,7),(55,846414000,8),(55,860328000,7),(55,877863600,8),(55,891777600,7),(55,909313200,8),(55,923227200,7),(55,941367600,8),(55,954676800,7),(55,972817200,8),(55,986126400,7),(55,1004266800,8),(55,1018180800,7),(55,1035716400,8),(55,1049630400,7),(55,1067166000,8),(55,1081080000,7),(55,1099220400,8),(55,1112529600,7),(55,1130670000,8),(55,1143979200,7),(55,1162119600,8),(55,1173614400,7),(55,1194174000,8),(55,1205064000,7),(55,1225623600,8),(55,1236513600,7),(55,1257073200,8),(55,1268568000,7),(55,1289127600,8),(55,1300017600,7),(55,1320577200,8),(55,1331467200,7),(55,1352026800,8),(55,1362916800,7),(55,1383476400,8),(55,1394366400,7),(55,1414926000,8),(55,1425816000,7),(55,1446375600,8),(55,1457870400,7),(55,1478430000,8),(55,1489320000,7),(55,1509879600,8),(55,1520769600,7),(55,1541329200,8),(55,1552219200,7),(55,1572778800,8),(55,1583668800,7),(55,1604228400,8),(55,1615723200,7),(55,1636282800,8),(55,1647172800,7),(55,1667732400,8),(55,1678622400,7),(55,1699182000,8),(55,1710072000,7),(55,1730631600,8),(55,1741521600,7),(55,1762081200,8),(55,1772971200,7),(55,1793530800,8),(55,1805025600,7),(55,1825585200,8),(55,1836475200,7),(55,1857034800,8),(55,1867924800,7),(55,1888484400,8),(55,1899374400,7),(55,1919934000,8),(55,1930824000,7),(55,1951383600,8),(55,1962878400,7),(55,1983438000,8),(55,1994328000,7),(55,2014887600,8),(55,2025777600,7),(55,2046337200,8),(55,2057227200,7),(55,2077786800,8),(55,2088676800,7),(55,2109236400,8),(55,2120126400,7),(55,2140686000,8),(56,-2147483648,1),(56,-880200000,2),(56,-769395600,3),(56,-765378000,1),(56,-86882400,4),(56,-21470400,5),(56,-5749200,4),(56,9979200,5),(56,25700400,4),(56,41428800,5),(56,57754800,4),(56,73483200,5),(56,89204400,4),(56,104932800,5),(56,120654000,4),(56,126705600,5),(56,152103600,4),(56,162388800,5),(56,183553200,4),(56,199281600,5),(56,215607600,4),(56,230731200,5),(56,247057200,4),(56,262785600,5),(56,278506800,4),(56,294235200,5),(56,309956400,4),(56,325684800,5),(56,341406000,4),(56,357134400,5),(56,372855600,4),(56,388584000,5),(56,404910000,4),(56,420033600,5),(56,436359600,6),(56,439030800,8),(56,452084400,7),(56,467805600,8),(56,483534000,7),(56,499255200,8),(56,514983600,7),(56,530704800,8),(56,544618800,7),(56,562154400,8),(56,576068400,7),(56,594208800,8),(56,607518000,7),(56,625658400,8),(56,638967600,7),(56,657108000,8),(56,671022000,7),(56,688557600,8),(56,702471600,7),(56,720007200,8),(56,733921200,7),(56,752061600,8),(56,765370800,7),(56,783511200,8),(56,796820400,7),(56,814960800,8),(56,828874800,7),(56,846410400,8),(56,860324400,7),(56,877860000,8),(56,891774000,7),(56,909309600,8),(56,923223600,7),(56,941364000,8),(56,954673200,7),(56,972813600,8),(56,986122800,7),(56,1004263200,8),(56,1018177200,7),(56,1035712800,8),(56,1049626800,7),(56,1067162400,8),(56,1081076400,7),(56,1099216800,8),(56,1112526000,7),(56,1130666400,8),(56,1143975600,7),(56,1162116000,8),(56,1173610800,7),(56,1194170400,8),(56,1205060400,7),(56,1225620000,8),(56,1236510000,7),(56,1257069600,8),(56,1268564400,7),(56,1289124000,8),(56,1300014000,7),(56,1320573600,8),(56,1331463600,7),(56,1352023200,8),(56,1362913200,7),(56,1383472800,8),(56,1394362800,7),(56,1414922400,8),(56,1425812400,7),(56,1446372000,8),(56,1457866800,7),(56,1478426400,8),(56,1489316400,7),(56,1509876000,8),(56,1520766000,7),(56,1541325600,8),(56,1552215600,7),(56,1572775200,8),(56,1583665200,7),(56,1604224800,8),(56,1615719600,7),(56,1636279200,8),(56,1647169200,7),(56,1667728800,8),(56,1678618800,7),(56,1699178400,8),(56,1710068400,7),(56,1730628000,8),(56,1741518000,7),(56,1762077600,8),(56,1772967600,7),(56,1793527200,8),(56,1805022000,7),(56,1825581600,8),(56,1836471600,7),(56,1857031200,8),(56,1867921200,7),(56,1888480800,8),(56,1899370800,7),(56,1919930400,8),(56,1930820400,7),(56,1951380000,8),(56,1962874800,7),(56,1983434400,8),(56,1994324400,7),(56,2014884000,8),(56,2025774000,7),(56,2046333600,8),(56,2057223600,7),(56,2077783200,8),(56,2088673200,7),(56,2109232800,8),(56,2120122800,7),(56,2140682400,8),(57,-2147483648,1),(57,-873057600,3),(57,-769395600,2),(57,-765399600,1),(58,-2147483648,1),(58,-873057600,3),(58,-769395600,2),(58,-765399600,1),(59,-1767214032,2),(59,-1206957600,1),(59,-1191362400,2),(59,-1175374800,1),(59,-1159826400,2),(59,-633819600,1),(59,-622069200,2),(59,-602283600,1),(59,-591832800,2),(59,-570747600,1),(59,-560210400,2),(59,-539125200,1),(59,-531352800,2),(59,-191365200,1),(59,-184197600,2),(59,-155163600,1),(59,-150069600,2),(59,-128898000,1),(59,-121125600,2),(59,-99954000,1),(59,-89589600,2),(59,-68418000,1),(59,-57967200,2),(59,499748400,1),(59,511236000,2),(59,530593200,1),(59,540266400,2),(59,562129200,1),(59,571197600,2),(59,592974000,1),(59,602042400,2),(59,624423600,1),(59,634701600,2),(59,813726000,1),(59,824004000,2),(59,844570800,1),(59,856058400,2),(59,876106800,1),(59,888717600,2),(59,908074800,1),(59,919562400,2),(59,938919600,1),(59,951616800,2),(59,970974000,1),(59,982461600,2),(59,1003028400,1),(59,1013911200,2),(59,1036292400,1),(59,1045360800,2),(59,1350788400,1),(59,1361066400,2),(59,2147483647,2),(60,-2147483648,1),(60,-1567453392,2),(60,-1233432000,3),(60,-1222981200,2),(60,-1205956800,3),(60,-1194037200,2),(60,-1172865600,3),(60,-1162501200,2),(60,-1141329600,3),(60,-1130965200,2),(60,-1109793600,3),(60,-1099429200,2),(60,-1078257600,3),(60,-1067806800,2),(60,-1046635200,3),(60,-1036270800,2),(60,-1015099200,3),(60,-1004734800,2),(60,-983563200,3),(60,-973198800,2),(60,-952027200,3),(60,-941576400,2),(60,-931032000,3),(60,-900882000,2),(60,-890337600,3),(60,-833749200,2),(60,-827265600,3),(60,-752274000,2),(60,-733780800,3),(60,-197326800,2),(60,-190843200,3),(60,-184194000,2),(60,-164491200,3),(60,-152658000,2),(60,-132955200,3),(60,-121122000,2),(60,-101419200,3),(60,-86821200,2),(60,-71092800,3),(60,-54766800,2),(60,-39038400,3),(60,-23317200,2),(60,-7588800,5),(60,128142000,4),(60,136605600,5),(60,596948400,4),(60,605066400,5),(60,624423600,4),(60,636516000,5),(60,656478000,4),(60,667965600,5),(60,687927600,4),(60,699415200,5),(60,719377200,4),(60,731469600,5),(60,938919600,3),(60,952052400,5),(60,1198983600,4),(60,1205632800,5),(60,1224385200,4),(60,1237082400,5),(60,2147483647,5),(61,-2147483648,1),(61,-1567453392,2),(61,-1233432000,3),(61,-1222981200,2),(61,-1205956800,3),(61,-1194037200,2),(61,-1172865600,3),(61,-1162501200,2),(61,-1141329600,3),(61,-1130965200,2),(61,-1109793600,3),(61,-1099429200,2),(61,-1078257600,3),(61,-1067806800,2),(61,-1046635200,3),(61,-1036270800,2),(61,-1015099200,3),(61,-1004734800,2),(61,-983563200,3),(61,-973198800,2),(61,-952027200,3),(61,-941576400,2),(61,-931032000,3),(61,-900882000,2),(61,-890337600,3),(61,-833749200,2),(61,-827265600,3),(61,-752274000,2),(61,-733780800,3),(61,-197326800,2),(61,-190843200,3),(61,-184194000,2),(61,-164491200,3),(61,-152658000,2),(61,-132955200,3),(61,-121122000,2),(61,-101419200,3),(61,-86821200,2),(61,-71092800,3),(61,-54766800,2),(61,-39038400,3),(61,-23317200,2),(61,-7588800,5),(61,128142000,4),(61,136605600,5),(61,596948400,4),(61,605066400,5),(61,624423600,4),(61,636516000,5),(61,656478000,4),(61,667965600,2),(61,687931200,4),(61,699415200,5),(61,719377200,4),(61,731469600,5),(61,938919600,3),(61,952052400,5),(61,1086058800,2),(61,1087704000,5),(61,1198983600,4),(61,1205632800,5),(61,2147483647,5),(62,-2147483648,1),(62,-1567453392,2),(62,-1233432000,3),(62,-1222981200,2),(62,-1205956800,3),(62,-1194037200,2),(62,-1172865600,3),(62,-1162501200,2),(62,-1141329600,3),(62,-1130965200,2),(62,-1109793600,3),(62,-1099429200,2),(62,-1078257600,3),(62,-1067806800,2),(62,-1046635200,3),(62,-1036270800,2),(62,-1015099200,3),(62,-1004734800,2),(62,-983563200,3),(62,-973198800,2),(62,-952027200,3),(62,-941576400,2),(62,-931032000,3),(62,-900882000,2),(62,-890337600,3),(62,-833749200,2),(62,-827265600,3),(62,-752274000,2),(62,-733780800,3),(62,-197326800,2),(62,-190843200,3),(62,-184194000,2),(62,-164491200,3),(62,-152658000,2),(62,-132955200,3),(62,-121122000,2),(62,-101419200,3),(62,-86821200,2),(62,-71092800,3),(62,-54766800,2),(62,-39038400,3),(62,-23317200,2),(62,-7588800,5),(62,128142000,4),(62,136605600,5),(62,596948400,4),(62,605066400,5),(62,624423600,4),(62,636516000,5),(62,656478000,4),(62,667965600,2),(62,687931200,4),(62,699415200,5),(62,719377200,4),(62,731469600,5),(62,938919600,3),(62,952052400,5),(62,1086058800,2),(62,1087704000,5),(62,1198983600,4),(62,1205632800,5),(62,2147483647,5),(63,-2147483648,1),(63,-1567453392,2),(63,-1233432000,3),(63,-1222981200,2),(63,-1205956800,3),(63,-1194037200,2),(63,-1172865600,3),(63,-1162501200,2),(63,-1141329600,3),(63,-1130965200,2),(63,-1109793600,3),(63,-1099429200,2),(63,-1078257600,3),(63,-1067806800,2),(63,-1046635200,3),(63,-1036270800,2),(63,-1015099200,3),(63,-1004734800,2),(63,-983563200,3),(63,-973198800,2),(63,-952027200,3),(63,-941576400,2),(63,-931032000,3),(63,-900882000,2),(63,-890337600,3),(63,-833749200,2),(63,-827265600,3),(63,-752274000,2),(63,-733780800,3),(63,-197326800,2),(63,-190843200,3),(63,-184194000,2),(63,-164491200,3),(63,-152658000,2),(63,-132955200,3),(63,-121122000,2),(63,-101419200,3),(63,-86821200,2),(63,-71092800,3),(63,-54766800,2),(63,-39038400,3),(63,-23317200,2),(63,-7588800,5),(63,128142000,4),(63,136605600,5),(63,596948400,4),(63,605066400,5),(63,624423600,4),(63,636516000,5),(63,656478000,4),(63,667965600,2),(63,687931200,4),(63,699415200,5),(63,719377200,4),(63,731469600,5),(63,938919600,3),(63,952052400,5),(63,1198983600,4),(63,1205632800,5),(63,1224385200,4),(63,1237082400,5),(63,2147483647,5),(64,-2147483648,1),(64,-1567453392,2),(64,-1233432000,3),(64,-1222981200,2),(64,-1205956800,3),(64,-1194037200,2),(64,-1172865600,3),(64,-1162501200,2),(64,-1141329600,3),(64,-1130965200,2),(64,-1109793600,3),(64,-1099429200,2),(64,-1078257600,3),(64,-1067806800,2),(64,-1046635200,3),(64,-1036270800,2),(64,-1015099200,3),(64,-1004734800,2),(64,-983563200,3),(64,-973198800,2),(64,-952027200,3),(64,-941576400,2),(64,-931032000,3),(64,-900882000,2),(64,-890337600,3),(64,-833749200,2),(64,-827265600,3),(64,-752274000,2),(64,-733780800,3),(64,-197326800,2),(64,-190843200,3),(64,-184194000,2),(64,-164491200,3),(64,-152658000,2),(64,-132955200,3),(64,-121122000,2),(64,-101419200,3),(64,-86821200,2),(64,-71092800,3),(64,-54766800,2),(64,-39038400,3),(64,-23317200,2),(64,-7588800,5),(64,128142000,4),(64,136605600,5),(64,596948400,4),(64,605066400,5),(64,624423600,4),(64,636516000,2),(64,657086400,3),(64,669178800,2),(64,686721600,4),(64,699415200,5),(64,719377200,4),(64,731469600,5),(64,938919600,3),(64,952052400,5),(64,1198983600,4),(64,1205632800,5),(64,2147483647,5),(65,-2147483648,1),(65,-1567453392,2),(65,-1233432000,3),(65,-1222981200,2),(65,-1205956800,3),(65,-1194037200,2),(65,-1172865600,3),(65,-1162501200,2),(65,-1141329600,3),(65,-1130965200,2),(65,-1109793600,3),(65,-1099429200,2),(65,-1078257600,3),(65,-1067806800,2),(65,-1046635200,3),(65,-1036270800,2),(65,-1015099200,3),(65,-1004734800,2),(65,-983563200,3),(65,-973198800,2),(65,-952027200,3),(65,-941576400,2),(65,-931032000,3),(65,-900882000,2),(65,-890337600,3),(65,-833749200,2),(65,-827265600,3),(65,-752274000,2),(65,-733780800,3),(65,-197326800,2),(65,-190843200,3),(65,-184194000,2),(65,-164491200,3),(65,-152658000,2),(65,-132955200,3),(65,-121122000,2),(65,-101419200,3),(65,-86821200,2),(65,-71092800,3),(65,-54766800,2),(65,-39038400,3),(65,-23317200,2),(65,-7588800,5),(65,128142000,4),(65,136605600,5),(65,596948400,4),(65,605066400,5),(65,624423600,4),(65,636516000,5),(65,656478000,4),(65,667792800,2),(65,673588800,5),(65,687927600,4),(65,699415200,5),(65,719377200,4),(65,731469600,5),(65,938919600,3),(65,952052400,5),(65,1086058800,2),(65,1087704000,5),(65,1198983600,4),(65,1205632800,5),(65,2147483647,5),(66,-2147483648,1),(66,-1567453392,2),(66,-1233432000,3),(66,-1222981200,2),(66,-1205956800,3),(66,-1194037200,2),(66,-1172865600,3),(66,-1162501200,2),(66,-1141329600,3),(66,-1130965200,2),(66,-1109793600,3),(66,-1099429200,2),(66,-1078257600,3),(66,-1067806800,2),(66,-1046635200,3),(66,-1036270800,2),(66,-1015099200,3),(66,-1004734800,2),(66,-983563200,3),(66,-973198800,2),(66,-952027200,3),(66,-941576400,2),(66,-931032000,3),(66,-900882000,2),(66,-890337600,3),(66,-833749200,2),(66,-827265600,3),(66,-752274000,2),(66,-733780800,3),(66,-197326800,2),(66,-190843200,3),(66,-184194000,2),(66,-164491200,3),(66,-152658000,2),(66,-132955200,3),(66,-121122000,2),(66,-101419200,3),(66,-86821200,2),(66,-71092800,3),(66,-54766800,2),(66,-39038400,3),(66,-23317200,2),(66,-7588800,5),(66,128142000,4),(66,136605600,5),(66,596948400,4),(66,605066400,5),(66,624423600,4),(66,636516000,2),(66,655963200,3),(66,667796400,2),(66,687499200,3),(66,699418800,2),(66,719380800,4),(66,731469600,5),(66,938919600,3),(66,952052400,5),(66,1085281200,2),(66,1096171200,5),(66,1198983600,4),(66,1205632800,5),(66,2147483647,5),(67,-2147483648,1),(67,-1567453392,2),(67,-1233432000,3),(67,-1222981200,2),(67,-1205956800,3),(67,-1194037200,2),(67,-1172865600,3),(67,-1162501200,2),(67,-1141329600,3),(67,-1130965200,2),(67,-1109793600,3),(67,-1099429200,2),(67,-1078257600,3),(67,-1067806800,2),(67,-1046635200,3),(67,-1036270800,2),(67,-1015099200,3),(67,-1004734800,2),(67,-983563200,3),(67,-973198800,2),(67,-952027200,3),(67,-941576400,2),(67,-931032000,3),(67,-900882000,2),(67,-890337600,3),(67,-833749200,2),(67,-827265600,3),(67,-752274000,2),(67,-733780800,3),(67,-197326800,2),(67,-190843200,3),(67,-184194000,2),(67,-164491200,3),(67,-152658000,2),(67,-132955200,3),(67,-121122000,2),(67,-101419200,3),(67,-86821200,2),(67,-71092800,3),(67,-54766800,2),(67,-39038400,3),(67,-23317200,2),(67,-7588800,5),(67,128142000,4),(67,136605600,5),(67,596948400,4),(67,605066400,5),(67,624423600,4),(67,636516000,5),(67,656478000,4),(67,667965600,5),(67,687927600,4),(67,699415200,5),(67,719377200,4),(67,731469600,5),(67,938919600,3),(67,952052400,5),(67,1086058800,2),(67,1087704000,5),(67,1198983600,4),(67,1205632800,5),(67,2147483647,5),(68,-2147483648,1),(68,-1567453392,2),(68,-1233432000,3),(68,-1222981200,2),(68,-1205956800,3),(68,-1194037200,2),(68,-1172865600,3),(68,-1162501200,2),(68,-1141329600,3),(68,-1130965200,2),(68,-1109793600,3),(68,-1099429200,2),(68,-1078257600,3),(68,-1067806800,2),(68,-1046635200,3),(68,-1036270800,2),(68,-1015099200,3),(68,-1004734800,2),(68,-983563200,3),(68,-973198800,2),(68,-952027200,3),(68,-941576400,2),(68,-931032000,3),(68,-900882000,2),(68,-890337600,3),(68,-833749200,2),(68,-827265600,3),(68,-752274000,2),(68,-733780800,3),(68,-197326800,2),(68,-190843200,3),(68,-184194000,2),(68,-164491200,3),(68,-152658000,2),(68,-132955200,3),(68,-121122000,2),(68,-101419200,3),(68,-86821200,2),(68,-71092800,3),(68,-54766800,2),(68,-39038400,3),(68,-23317200,2),(68,-7588800,5),(68,128142000,4),(68,136605600,5),(68,596948400,4),(68,605066400,5),(68,624423600,4),(68,636516000,5),(68,656478000,4),(68,667965600,2),(68,687931200,4),(68,699415200,5),(68,719377200,4),(68,731469600,5),(68,938919600,3),(68,952052400,5),(68,1198983600,4),(68,1205632800,5),(68,2147483647,5),(69,-2147483648,1),(69,-1567453392,2),(69,-1233432000,3),(69,-1222981200,2),(69,-1205956800,3),(69,-1194037200,2),(69,-1172865600,3),(69,-1162501200,2),(69,-1141329600,3),(69,-1130965200,2),(69,-1109793600,3),(69,-1099429200,2),(69,-1078257600,3),(69,-1067806800,2),(69,-1046635200,3),(69,-1036270800,2),(69,-1015099200,3),(69,-1004734800,2),(69,-983563200,3),(69,-973198800,2),(69,-952027200,3),(69,-941576400,2),(69,-931032000,3),(69,-900882000,2),(69,-890337600,3),(69,-833749200,2),(69,-827265600,3),(69,-752274000,2),(69,-733780800,3),(69,-197326800,2),(69,-190843200,3),(69,-184194000,2),(69,-164491200,3),(69,-152658000,2),(69,-132955200,3),(69,-121122000,2),(69,-101419200,3),(69,-86821200,2),(69,-71092800,3),(69,-54766800,2),(69,-39038400,3),(69,-23317200,2),(69,-7588800,5),(69,128142000,4),(69,136605600,5),(69,596948400,4),(69,605066400,5),(69,624423600,4),(69,636516000,5),(69,656478000,4),(69,667792800,2),(69,673588800,5),(69,687927600,4),(69,699415200,5),(69,719377200,4),(69,731469600,5),(69,938919600,3),(69,952052400,5),(69,1085972400,2),(69,1090728000,5),(69,1198983600,4),(69,1205632800,5),(69,2147483647,5),(70,-2147483648,1),(70,-1567453392,2),(70,-1233432000,3),(70,-1222981200,2),(70,-1205956800,3),(70,-1194037200,2),(70,-1172865600,3),(70,-1162501200,2),(70,-1141329600,3),(70,-1130965200,2),(70,-1109793600,3),(70,-1099429200,2),(70,-1078257600,3),(70,-1067806800,2),(70,-1046635200,3),(70,-1036270800,2),(70,-1015099200,3),(70,-1004734800,2),(70,-983563200,3),(70,-973198800,2),(70,-952027200,3),(70,-941576400,2),(70,-931032000,3),(70,-900882000,2),(70,-890337600,3),(70,-833749200,2),(70,-827265600,3),(70,-752274000,2),(70,-733780800,3),(70,-197326800,2),(70,-190843200,3),(70,-184194000,2),(70,-164491200,3),(70,-152658000,2),(70,-132955200,3),(70,-121122000,2),(70,-101419200,3),(70,-86821200,2),(70,-71092800,3),(70,-54766800,2),(70,-39038400,3),(70,-23317200,2),(70,-7588800,5),(70,128142000,4),(70,136605600,5),(70,596948400,4),(70,605066400,5),(70,624423600,4),(70,637380000,2),(70,655963200,3),(70,667796400,2),(70,675748800,5),(70,938919600,3),(70,952052400,5),(70,1085972400,2),(70,1090728000,5),(70,1198983600,4),(70,1200880800,3),(70,1205031600,2),(70,1223784000,3),(70,1236481200,2),(70,1255233600,5),(70,2147483647,5),(71,-2147483648,1),(71,-1567453392,2),(71,-1233432000,3),(71,-1222981200,2),(71,-1205956800,3),(71,-1194037200,2),(71,-1172865600,3),(71,-1162501200,2),(71,-1141329600,3),(71,-1130965200,2),(71,-1109793600,3),(71,-1099429200,2),(71,-1078257600,3),(71,-1067806800,2),(71,-1046635200,3),(71,-1036270800,2),(71,-1015099200,3),(71,-1004734800,2),(71,-983563200,3),(71,-973198800,2),(71,-952027200,3),(71,-941576400,2),(71,-931032000,3),(71,-900882000,2),(71,-890337600,3),(71,-833749200,2),(71,-827265600,3),(71,-752274000,2),(71,-733780800,3),(71,-197326800,2),(71,-190843200,3),(71,-184194000,2),(71,-164491200,3),(71,-152658000,2),(71,-132955200,3),(71,-121122000,2),(71,-101419200,3),(71,-86821200,2),(71,-71092800,3),(71,-54766800,2),(71,-39038400,3),(71,-23317200,2),(71,-7588800,5),(71,128142000,4),(71,136605600,5),(71,596948400,4),(71,605066400,5),(71,624423600,4),(71,636516000,5),(71,656478000,4),(71,667965600,2),(71,687931200,4),(71,699415200,5),(71,719377200,4),(71,731469600,5),(71,938919600,3),(71,952052400,5),(71,1086058800,2),(71,1087099200,5),(71,1198983600,4),(71,1205632800,5),(71,1224385200,4),(71,1237082400,5),(71,2147483647,5),(72,-2147483648,1),(72,-1567453392,2),(72,-1233432000,3),(72,-1222981200,2),(72,-1205956800,3),(72,-1194037200,2),(72,-1172865600,3),(72,-1162501200,2),(72,-1141329600,3),(72,-1130965200,2),(72,-1109793600,3),(72,-1099429200,2),(72,-1078257600,3),(72,-1067806800,2),(72,-1046635200,3),(72,-1036270800,2),(72,-1015099200,3),(72,-1004734800,2),(72,-983563200,3),(72,-973198800,2),(72,-952027200,3),(72,-941576400,2),(72,-931032000,3),(72,-900882000,2),(72,-890337600,3),(72,-833749200,2),(72,-827265600,3),(72,-752274000,2),(72,-733780800,3),(72,-197326800,2),(72,-190843200,3),(72,-184194000,2),(72,-164491200,3),(72,-152658000,2),(72,-132955200,3),(72,-121122000,2),(72,-101419200,3),(72,-86821200,2),(72,-71092800,3),(72,-54766800,2),(72,-39038400,3),(72,-23317200,2),(72,-7588800,5),(72,128142000,4),(72,136605600,5),(72,596948400,4),(72,605066400,5),(72,624423600,4),(72,636516000,5),(72,656478000,4),(72,667965600,5),(72,687927600,4),(72,699415200,5),(72,719377200,4),(72,731469600,5),(72,938919600,3),(72,952052400,5),(72,1085886000,2),(72,1087704000,5),(72,1198983600,4),(72,1205632800,5),(72,2147483647,5),(73,-2147483648,1),(73,-873057600,3),(73,-769395600,2),(73,-765399600,1),(74,-2147483648,1),(74,-1206389360,2),(74,86760000,3),(74,134017200,2),(74,181368000,4),(74,194497200,2),(74,212990400,4),(74,226033200,2),(74,244526400,4),(74,257569200,2),(74,276062400,4),(74,291783600,2),(74,307598400,4),(74,323406000,2),(74,339220800,4),(74,354942000,2),(74,370756800,4),(74,386478000,2),(74,402292800,4),(74,418014000,2),(74,433828800,4),(74,449636400,2),(74,465451200,4),(74,481172400,2),(74,496987200,4),(74,512708400,2),(74,528523200,4),(74,544244400,2),(74,560059200,4),(74,575866800,2),(74,591681600,4),(74,607402800,2),(74,625032000,4),(74,638938800,2),(74,654753600,4),(74,670474800,2),(74,686721600,4),(74,699418800,2),(74,718257600,4),(74,733546800,2),(74,749448000,4),(74,762318000,2),(74,780984000,4),(74,793767600,2),(74,812520000,4),(74,825649200,2),(74,844574400,4),(74,856666800,2),(74,876024000,4),(74,888721200,2),(74,907473600,4),(74,920775600,2),(74,938923200,4),(74,952225200,2),(74,970372800,4),(74,983674800,2),(74,1002427200,4),(74,1018148400,2),(74,1030852800,4),(74,1049598000,2),(74,1062907200,4),(74,1081047600,2),(74,1097985600,4),(74,1110682800,2),(74,1129435200,4),(74,1142132400,2),(74,1160884800,4),(74,1173582000,2),(74,1192939200,4),(74,1205031600,2),(74,1224388800,4),(74,1236481200,2),(74,1255838400,4),(74,1270954800,2),(74,1286078400,4),(74,1302404400,2),(74,1317528000,4),(74,1333854000,2),(74,1349582400,4),(74,1364094000,2),(74,1381032000,4),(74,1395543600,2),(74,1412481600,4),(74,1426993200,2),(74,1443931200,4),(74,1459047600,2),(74,1475380800,4),(74,1490497200,2),(74,1506830400,4),(74,1521946800,2),(74,1538884800,4),(74,1553396400,2),(74,1570334400,4),(74,1584846000,2),(74,1601784000,4),(74,1616900400,2),(74,1633233600,4),(74,1648350000,2),(74,1664683200,4),(74,1679799600,2),(74,1696132800,4),(74,1711249200,2),(74,1728187200,4),(74,1742698800,2),(74,1759636800,4),(74,1774148400,2),(74,1791086400,4),(74,1806202800,2),(74,1822536000,4),(74,1837652400,2),(74,1853985600,4),(74,1869102000,2),(74,1886040000,4),(74,1900551600,2),(74,1917489600,4),(74,1932001200,2),(74,1948939200,4),(74,1964055600,2),(74,1980388800,4),(74,1995505200,2),(74,2011838400,4),(74,2026954800,2),(74,2043288000,4),(74,2058404400,2),(74,2075342400,4),(74,2089854000,2),(74,2106792000,4),(74,2121303600,2),(74,2138241600,4),(74,2147483647,4),(75,-2147483648,1),(75,-1946918424,2),(76,-2147483648,1),(76,-880196400,2),(76,-769395600,3),(76,-765374400,1),(76,-86878800,4),(76,-21466800,5),(76,-5745600,4),(76,9982800,5),(76,25704000,4),(76,41432400,5),(76,57758400,4),(76,73486800,5),(76,89208000,4),(76,104936400,5),(76,120657600,4),(76,126709200,5),(76,152107200,4),(76,162392400,5),(76,183556800,4),(76,199285200,5),(76,215611200,4),(76,230734800,5),(76,247060800,4),(76,262789200,5),(76,278510400,4),(76,294238800,5),(76,309960000,4),(76,325688400,5),(76,341409600,4),(76,357138000,5),(76,372859200,4),(76,388587600,5),(76,404913600,4),(76,420037200,5),(76,436363200,6),(76,439034400,8),(76,452088000,7),(76,467809200,8),(76,483537600,7),(76,499258800,8),(76,514987200,7),(76,530708400,8),(76,544622400,7),(76,562158000,8),(76,576072000,7),(76,594212400,8),(76,607521600,7),(76,625662000,8),(76,638971200,7),(76,657111600,8),(76,671025600,7),(76,688561200,8),(76,702475200,7),(76,720010800,8),(76,733924800,7),(76,752065200,8),(76,765374400,7),(76,783514800,8),(76,796824000,7),(76,814964400,8),(76,828878400,7),(76,846414000,8),(76,860328000,7),(76,877863600,8),(76,891777600,7),(76,909313200,8),(76,923227200,7),(76,941367600,8),(76,954676800,7),(76,972817200,8),(76,986126400,7),(76,1004266800,8),(76,1018180800,7),(76,1035716400,8),(76,1049630400,7),(76,1067166000,8),(76,1081080000,7),(76,1099220400,8),(76,1112529600,7),(76,1130670000,8),(76,1143979200,7),(76,1162119600,8),(76,1173614400,7),(76,1194174000,8),(76,1205064000,7),(76,1225623600,8),(76,1236513600,7),(76,1257073200,8),(76,1268568000,7),(76,1289127600,8),(76,1300017600,7),(76,1320577200,8),(76,1331467200,7),(76,1352026800,8),(76,1362916800,7),(76,1383476400,8),(76,1394366400,7),(76,1414926000,8),(76,1425816000,7),(76,1446375600,8),(76,1457870400,7),(76,1478430000,8),(76,1489320000,7),(76,1509879600,8),(76,1520769600,7),(76,1541329200,8),(76,1552219200,7),(76,1572778800,8),(76,1583668800,7),(76,1604228400,8),(76,1615723200,7),(76,1636282800,8),(76,1647172800,7),(76,1667732400,8),(76,1678622400,7),(76,1699182000,8),(76,1710072000,7),(76,1730631600,8),(76,1741521600,7),(76,1762081200,8),(76,1772971200,7),(76,1793530800,8),(76,1805025600,7),(76,1825585200,8),(76,1836475200,7),(76,1857034800,8),(76,1867924800,7),(76,1888484400,8),(76,1899374400,7),(76,1919934000,8),(76,1930824000,7),(76,1951383600,8),(76,1962878400,7),(76,1983438000,8),(76,1994328000,7),(76,2014887600,8),(76,2025777600,7),(76,2046337200,8),(76,2057227200,7),(76,2077786800,8),(76,2088676800,7),(76,2109236400,8),(76,2120126400,7),(76,2140686000,8),(77,-1767216356,2),(77,-1206957600,1),(77,-1191362400,2),(77,-1175374800,1),(77,-1159826400,2),(77,-633819600,1),(77,-622069200,2),(77,-602283600,1),(77,-591832800,2),(77,-570747600,1),(77,-560210400,2),(77,-539125200,1),(77,-531352800,2),(77,-191365200,1),(77,-184197600,2),(77,-155163600,1),(77,-150069600,2),(77,-128898000,1),(77,-121125600,2),(77,-99954000,1),(77,-89589600,2),(77,-68418000,1),(77,-57967200,2),(77,499748400,1),(77,511236000,2),(77,530593200,1),(77,540266400,2),(77,562129200,1),(77,571197600,2),(77,592974000,1),(77,602042400,2),(77,624423600,1),(77,634701600,2),(77,656478000,1),(77,666756000,2),(77,687927600,1),(77,697600800,2),(77,719982000,1),(77,728445600,2),(77,750826800,1),(77,761709600,2),(77,782276400,1),(77,793159200,2),(77,813726000,1),(77,824004000,2),(77,844570800,1),(77,856058400,2),(77,876106800,1),(77,888717600,2),(77,908074800,1),(77,919562400,2),(77,938919600,1),(77,951616800,2),(77,970974000,1),(77,982461600,2),(77,1003028400,1),(77,1013911200,2),(77,1036292400,1),(77,1045360800,2),(77,1318734000,1),(77,1330221600,2),(77,2147483647,2),(78,-1514739600,1),(78,-1343066400,2),(78,-1234807200,1),(78,-1220292000,2),(78,-1207159200,1),(78,-1191344400,2),(78,-873828000,1),(78,-661539600,3),(78,28800,1),(78,828867600,4),(78,846403200,1),(78,860317200,4),(78,877852800,1),(78,891766800,4),(78,909302400,1),(78,923216400,4),(78,941356800,1),(78,954666000,4),(78,972806400,1),(78,989139600,4),(78,1001836800,1),(78,1018170000,4),(78,1035705600,1),(78,1049619600,4),(78,1067155200,1),(78,1081069200,4),(78,1099209600,1),(78,1112518800,4),(78,1130659200,1),(78,1143968400,4),(78,1162108800,1),(78,1175418000,4),(78,1193558400,1),(78,1207472400,4),(78,1225008000,1),(78,1238922000,4),(78,1256457600,1),(78,1270371600,5),(78,1288508400,2),(78,1301817600,5),(78,1319958000,2),(78,1333267200,5),(78,1351407600,2),(78,1365321600,5),(78,1382857200,2),(78,1396771200,5),(78,1414306800,2),(78,1428220800,5),(78,1445756400,2),(78,1459670400,5),(78,1477810800,2),(78,1491120000,5),(78,1509260400,2),(78,1522569600,5),(78,1540710000,2),(78,1554624000,5),(78,1572159600,2),(78,1586073600,5),(78,1603609200,2),(78,1617523200,5),(78,1635663600,2),(78,1648972800,5),(78,1667113200,2),(78,1680422400,5),(78,1698562800,2),(78,1712476800,5),(78,1730012400,2),(78,1743926400,5),(78,1761462000,2),(78,1775376000,5),(78,1792911600,2),(78,1806825600,5),(78,1824966000,2),(78,1838275200,5),(78,1856415600,2),(78,1869724800,5),(78,1887865200,2),(78,1901779200,5),(78,1919314800,2),(78,1933228800,5),(78,1950764400,2),(78,1964678400,5),(78,1982818800,2),(78,1996128000,5),(78,2014268400,2),(78,2027577600,5),(78,2045718000,2),(78,2059027200,5),(78,2077167600,2),(78,2091081600,5),(78,2108617200,2),(78,2122531200,5),(78,2140066800,2),(79,-1841256091,3),(79,-874263600,1),(79,-862682400,2),(79,-841604400,1),(79,-830714400,2),(79,-811882800,4),(79,-798660000,2),(79,234943200,5),(79,244616400,3),(79,261554400,5),(79,276066000,3),(79,293004000,5),(79,307515600,3),(79,325058400,5),(79,338706000,3),(80,-1767213964,2),(80,-1206957600,1),(80,-1191362400,2),(80,-1175374800,1),(80,-1159826400,2),(80,-633819600,1),(80,-622069200,2),(80,-602283600,1),(80,-591832800,2),(80,-570747600,1),(80,-560210400,2),(80,-539125200,1),(80,-531352800,2),(80,-191365200,1),(80,-184197600,2),(80,-155163600,1),(80,-150069600,2),(80,-128898000,1),(80,-121125600,2),(80,-99954000,1),(80,-89589600,2),(80,-68418000,1),(80,-57967200,2),(80,499748400,1),(80,511236000,2),(80,530593200,1),(80,540266400,2),(80,562129200,1),(80,571197600,2),(80,2147483647,2),(81,-1822500432,2),(81,-1616954400,1),(81,-1606069800,2),(81,-1585504800,1),(81,-1574015400,2),(81,-1554055200,1),(81,-1542565800,2),(81,-1522605600,1),(81,-1511116200,2),(81,-1490551200,1),(81,-1479666600,2),(81,-1459101600,1),(81,-1448217000,2),(81,-1427652000,1),(81,-1416162600,2),(81,-1396202400,1),(81,-1384713000,2),(81,-1364752800,1),(81,-1353263400,2),(81,-1333303200,1),(81,-1321813800,2),(81,-1301248800,1),(81,-1290364200,2),(81,-1269799200,1),(81,-1258914600,2),(81,-1238349600,1),(81,-1226860200,2),(81,-1206900000,1),(81,-1195410600,2),(81,-1175450400,1),(81,-1163961000,2),(81,-1143396000,1),(81,-1132511400,2),(81,-1111946400,1),(81,-1101061800,2),(81,-1080496800,1),(81,-1069612200,2),(81,-1049047200,1),(81,-1037557800,2),(81,-1017597600,1),(81,-1006108200,2),(81,-986148000,1),(81,-974658600,2),(81,-954093600,1),(81,-943209000,2),(81,-922644000,1),(81,-911759400,2),(81,-891194400,1),(81,-879705000,2),(81,-868212000,3),(81,-769395600,4),(81,-758746800,2),(81,-701892000,1),(81,-690402600,2),(81,-670442400,1),(81,-658953000,2),(81,-638992800,1),(81,-627503400,2),(81,-606938400,1),(81,-596053800,2),(81,-575488800,1),(81,-564604200,2),(81,-544039200,1),(81,-532549800,2),(81,-512589600,1),(81,-501100200,2),(81,-481140000,1),(81,-469650600,2),(81,-449690400,1),(81,-438201000,2),(81,-417636000,1),(81,-406751400,2),(81,-386186400,1),(81,-375301800,2),(81,-354736800,1),(81,-343247400,2),(81,-323287200,1),(81,-311797800,2),(81,-291837600,1),(81,-280348200,2),(81,-259783200,1),(81,-248898600,2),(81,-228333600,1),(81,-217449000,2),(81,-196884000,1),(81,-185999400,2),(81,-165434400,1),(81,-153945000,2),(81,-133984800,1),(81,-122495400,2),(81,-102535200,1),(81,-91045800,2),(81,-70480800,1),(81,-59596200,2),(81,123919200,5),(81,129618000,2),(81,409039200,5),(81,413874000,2),(82,-2147483648,1),(82,-873057600,3),(82,-769395600,2),(82,-765399600,1),(83,-1767211040,2),(83,-1206954000,1),(83,-1191358800,2),(83,-1175371200,1),(83,-1159822800,2),(83,-633816000,1),(83,-622065600,2),(83,-602280000,1),(83,-591829200,2),(83,-570744000,1),(83,-560206800,2),(83,-539121600,1),(83,-531349200,2),(83,-191361600,1),(83,-184194000,2),(83,-155160000,1),(83,-150066000,2),(83,-128894400,1),(83,-121122000,2),(83,-99950400,1),(83,-89586000,2),(83,-68414400,1),(83,-57963600,2),(83,499752000,1),(83,511239600,2),(83,530596800,1),(83,540270000,2),(83,562132800,1),(83,571201200,2),(83,938923200,1),(83,951620400,2),(83,970977600,1),(83,971578800,2),(83,2147483647,2),(84,-2147483648,1),(84,-1739041424,3),(84,704869200,2),(84,733896000,3),(84,2147483647,3),(85,-2147483648,2),(85,-1633269600,1),(85,-1615129200,2),(85,-1601820000,1),(85,-1583679600,2),(85,-1471788000,5),(85,-880210800,3),(85,-769395600,4),(85,-765388800,5),(85,-84380400,6),(85,-68659200,5),(85,-52930800,6),(85,-37209600,5),(85,-21481200,6),(85,-5760000,5),(85,9968400,6),(85,25689600,5),(85,41418000,6),(85,57744000,5),(85,73472400,6),(85,89193600,5),(85,104922000,6),(85,120643200,5),(85,129114000,6),(85,152092800,5),(85,162378000,6),(85,183542400,5),(85,199270800,6),(85,215596800,5),(85,230720400,6),(85,247046400,5),(85,262774800,6),(85,278496000,5),(85,294224400,6),(85,309945600,5),(85,325674000,6),(85,341395200,5),(85,357123600,6),(85,372844800,5),(85,388573200,6),(85,404899200,5),(85,420022800,6),(85,436348800,5),(85,452077200,6),(85,467798400,5),(85,483526800,6),(85,499248000,5),(85,514976400,6),(85,530697600,5),(85,544611600,6),(85,562147200,5),(85,576061200,6),(85,594201600,5),(85,607510800,6),(85,625651200,5),(85,638960400,6),(85,657100800,5),(85,671014800,6),(85,688550400,5),(85,702464400,6),(85,720000000,5),(85,733914000,6),(85,752054400,5),(85,765363600,6),(85,783504000,5),(85,796813200,6),(85,814953600,5),(85,828867600,6),(85,846403200,5),(85,860317200,6),(85,877852800,5),(85,891766800,6),(85,909302400,5),(85,923216400,6),(85,941356800,5),(85,954666000,6),(85,972806400,5),(85,986115600,6),(85,1004256000,5),(85,1018170000,6),(85,1035705600,5),(85,1049619600,6),(85,1067155200,5),(85,1081069200,6),(85,1099209600,5),(85,1112518800,6),(85,1130659200,5),(85,1143968400,6),(85,1162108800,5),(85,1173603600,6),(85,1194163200,5),(85,1205053200,6),(85,1225612800,5),(85,1236502800,6),(85,1257062400,5),(85,1268557200,6),(85,1289116800,5),(85,1300006800,6),(85,1320566400,5),(85,1331456400,6),(85,1352016000,5),(85,1362906000,6),(85,1383465600,5),(85,1394355600,6),(85,1414915200,5),(85,1425805200,6),(85,1446364800,5),(85,1457859600,6),(85,1478419200,5),(85,1489309200,6),(85,1509868800,5),(85,1520758800,6),(85,1541318400,5),(85,1552208400,6),(85,1572768000,5),(85,1583658000,6),(85,1604217600,5),(85,1615712400,6),(85,1636272000,5),(85,1647162000,6),(85,1667721600,5),(85,1678611600,6),(85,1699171200,5),(85,1710061200,6),(85,1730620800,5),(85,1741510800,6),(85,1762070400,5),(85,1772960400,6),(85,1793520000,5),(85,1805014800,6),(85,1825574400,5),(85,1836464400,6),(85,1857024000,5),(85,1867914000,6),(85,1888473600,5),(85,1899363600,6),(85,1919923200,5),(85,1930813200,6),(85,1951372800,5),(85,1962867600,6),(85,1983427200,5),(85,1994317200,6),(85,2014876800,5),(85,2025766800,6),(85,2046326400,5),(85,2057216400,6),(85,2077776000,5),(85,2088666000,6),(85,2109225600,5),(85,2120115600,6),(85,2140675200,5),(86,-2147483648,1),(86,-1567453392,2),(86,-1233432000,3),(86,-1222981200,2),(86,-1205956800,3),(86,-1194037200,2),(86,-1172865600,3),(86,-1162501200,2),(86,-1141329600,3),(86,-1130965200,2),(86,-1109793600,3),(86,-1099429200,2),(86,-1078257600,3),(86,-1067806800,2),(86,-1046635200,3),(86,-1036270800,2),(86,-1015099200,3),(86,-1004734800,2),(86,-983563200,3),(86,-973198800,2),(86,-952027200,3),(86,-941576400,2),(86,-931032000,3),(86,-900882000,2),(86,-890337600,3),(86,-833749200,2),(86,-827265600,3),(86,-752274000,2),(86,-733780800,3),(86,-197326800,2),(86,-190843200,3),(86,-184194000,2),(86,-164491200,3),(86,-152658000,2),(86,-132955200,3),(86,-121122000,2),(86,-101419200,3),(86,-86821200,2),(86,-71092800,3),(86,-54766800,2),(86,-39038400,3),(86,-23317200,2),(86,-7588800,5),(86,128142000,4),(86,136605600,5),(86,596948400,4),(86,605066400,5),(86,624423600,4),(86,636516000,5),(86,656478000,4),(86,667965600,5),(86,687927600,4),(86,699415200,5),(86,719377200,4),(86,731469600,5),(86,938919600,3),(86,952052400,5),(86,1198983600,4),(86,1205632800,5),(86,1224385200,4),(86,1237082400,5),(86,2147483647,5),(87,-1577923200,3),(87,-880210800,1),(87,-769395600,2),(87,-765388800,3),(87,-147891600,4),(87,-131562000,3),(87,325674000,5),(87,341395200,3),(87,357123600,5),(87,372844800,3),(87,388573200,5),(87,404899200,3),(87,420022800,5),(87,436348800,3),(87,452077200,5),(87,467798400,3),(87,483526800,5),(87,499248000,3),(87,514976400,5),(87,530697600,3),(87,544611600,5),(87,562147200,3),(87,576061200,5),(87,594201600,3),(87,607510800,5),(87,625651200,3),(87,638960400,5),(87,657100800,3),(87,671014800,5),(87,688550400,3),(87,702464400,5),(87,720000000,3),(87,733914000,5),(87,752054400,3),(87,765363600,5),(87,783504000,3),(87,796813200,5),(87,814953600,3),(87,828867600,5),(87,846403200,3),(87,860317200,5),(87,877852800,3),(87,891766800,5),(87,909302400,3),(87,923216400,5),(87,941356800,7),(87,954662400,6),(87,972802800,8),(87,973400400,7),(87,986115600,5),(87,1004256000,3),(87,1018170000,5),(87,1035705600,3),(87,1049619600,5),(87,1067155200,3),(87,1081069200,5),(87,1099209600,3),(87,1112518800,5),(87,1130659200,3),(87,1143968400,5),(87,1162108800,3),(87,1173603600,5),(87,1194163200,3),(87,1205053200,5),(87,1225612800,3),(87,1236502800,5),(87,1257062400,3),(87,1268557200,5),(87,1289116800,3),(87,1300006800,5),(87,1320566400,3),(87,1331456400,5),(87,1352016000,3),(87,1362906000,5),(87,1383465600,3),(87,1394355600,5),(87,1414915200,3),(87,1425805200,5),(87,1446364800,3),(87,1457859600,5),(87,1478419200,3),(87,1489309200,5),(87,1509868800,3),(87,1520758800,5),(87,1541318400,3),(87,1552208400,5),(87,1572768000,3),(87,1583658000,5),(87,1604217600,3),(87,1615712400,5),(87,1636272000,3),(87,1647162000,5),(87,1667721600,3),(87,1678611600,5),(87,1699171200,3),(87,1710061200,5),(87,1730620800,3),(87,1741510800,5),(87,1762070400,3),(87,1772960400,5),(87,1793520000,3),(87,1805014800,5),(87,1825574400,3),(87,1836464400,5),(87,1857024000,3),(87,1867914000,5),(87,1888473600,3),(87,1899363600,5),(87,1919923200,3),(87,1930813200,5),(87,1951372800,3),(87,1962867600,5),(87,1983427200,3),(87,1994317200,5),(87,2014876800,3),(87,2025766800,5),(87,2046326400,3),(87,2057216400,5),(87,2077776000,3),(87,2088666000,5),(87,2109225600,3),(87,2120115600,5),(87,2140675200,3),(88,-1767212492,2),(88,-1206954000,1),(88,-1191358800,2),(88,-1175371200,1),(88,-1159822800,2),(88,-633816000,1),(88,-622065600,2),(88,-602280000,1),(88,-591829200,2),(88,-570744000,1),(88,-560206800,2),(88,-539121600,1),(88,-531349200,2),(88,-191361600,1),(88,-184194000,2),(88,-155160000,1),(88,-150066000,2),(88,-128894400,1),(88,-121122000,2),(88,-99950400,1),(88,-89586000,2),(88,-68414400,1),(88,-57963600,2),(88,499752000,1),(88,511239600,2),(88,530596800,1),(88,540270000,2),(88,562132800,1),(88,571201200,2),(88,592977600,1),(88,602046000,2),(88,624427200,1),(88,634705200,2),(88,656481600,1),(88,666759600,2),(88,687931200,1),(88,697604400,2),(88,719985600,1),(88,728449200,2),(88,750830400,1),(88,761713200,2),(88,782280000,1),(88,793162800,2),(88,813729600,1),(88,824007600,2),(88,844574400,1),(88,856062000,2),(88,876110400,1),(88,888721200,2),(88,908078400,1),(88,919566000,2),(88,938923200,1),(88,951620400,2),(88,970977600,1),(88,982465200,2),(88,1003032000,1),(88,1013914800,2),(88,1036296000,1),(88,1045364400,2),(88,1066536000,1),(88,1076814000,2),(88,1099368000,1),(88,1108868400,2),(88,1129435200,1),(88,1140318000,2),(88,1162699200,1),(88,1172372400,2),(88,1192334400,1),(88,1203217200,2),(88,1224388800,1),(88,1234666800,2),(88,1255838400,1),(88,1266721200,2),(88,1287288000,1),(88,1298170800,2),(88,1318737600,1),(88,1330225200,2),(88,1350792000,1),(88,1361070000,2),(88,1382241600,1),(88,1392519600,2),(88,1413691200,1),(88,1424574000,2),(88,1445140800,1),(88,1456023600,2),(88,1476590400,1),(88,1487473200,2),(88,1508040000,1),(88,1518922800,2),(88,1541304000,1),(88,1550372400,2),(88,2147483647,2),(89,-1514743200,1),(89,377935200,3),(89,828860400,2),(89,846396000,3),(89,860310000,2),(89,877845600,3),(89,891759600,2),(89,902037600,4),(89,909298800,1),(89,923212800,4),(89,941353200,1),(89,954662400,4),(89,972802800,1),(89,989136000,4),(89,1001833200,1),(89,1018166400,4),(89,1035702000,1),(89,1049616000,4),(89,1067151600,1),(89,1081065600,4),(89,1099206000,1),(89,1112515200,4),(89,1130655600,1),(89,1143964800,4),(89,1162105200,1),(89,1175414400,4),(89,1193554800,1),(89,1207468800,4),(89,1225004400,1),(89,1238918400,4),(89,1256454000,1),(89,1270368000,4),(89,1288508400,1),(89,1301817600,4),(89,1319958000,1),(89,1333267200,4),(89,1351407600,1),(89,1365321600,4),(89,1382857200,1),(89,1396771200,4),(89,1414306800,1),(89,1422777600,3),(90,-2147483648,1),(90,-1826739140,2),(90,-157750200,3),(90,1197183600,2),(90,1462086000,3),(90,2147483647,3),(91,-2147483648,1),(91,-1567453392,2),(91,-1233432000,3),(91,-1222981200,2),(91,-1205956800,3),(91,-1194037200,2),(91,-1172865600,3),(91,-1162501200,2),(91,-1141329600,3),(91,-1130965200,2),(91,-1109793600,3),(91,-1099429200,2),(91,-1078257600,3),(91,-1067806800,2),(91,-1046635200,3),(91,-1036270800,2),(91,-1015099200,3),(91,-1004734800,2),(91,-983563200,3),(91,-973198800,2),(91,-952027200,3),(91,-941576400,2),(91,-931032000,3),(91,-900882000,2),(91,-890337600,3),(91,-833749200,2),(91,-827265600,3),(91,-752274000,2),(91,-733780800,3),(91,-197326800,2),(91,-190843200,3),(91,-184194000,2),(91,-164491200,3),(91,-152658000,2),(91,-132955200,3),(91,-121122000,2),(91,-101419200,3),(91,-86821200,2),(91,-71092800,3),(91,-54766800,2),(91,-39038400,3),(91,-23317200,2),(91,-7588800,5),(91,128142000,4),(91,136605600,5),(91,596948400,4),(91,605066400,5),(91,624423600,4),(91,636516000,5),(91,656478000,4),(91,667965600,2),(91,687931200,4),(91,699415200,5),(91,719377200,4),(91,731469600,5),(91,938919600,3),(91,952052400,5),(91,1086058800,2),(91,1087704000,5),(91,1198983600,4),(91,1205632800,5),(91,2147483647,5),(92,-1846269040,1),(92,-71092800,2),(92,2147483647,2),(93,-2147483648,1),(93,-1946918424,2),(94,-2147483648,2),(94,-1633276800,1),(94,-1615136400,2),(94,-1601827200,1),(94,-1583686800,2),(94,-1563724800,1),(94,-1551632400,2),(94,-1538928000,1),(94,-1520182800,2),(94,-1504454400,1),(94,-1491757200,2),(94,-1473004800,1),(94,-1459702800,2),(94,-1441555200,1),(94,-1428253200,2),(94,-1410105600,1),(94,-1396803600,2),(94,-1378656000,1),(94,-1365354000,2),(94,-1347206400,1),(94,-1333904400,2),(94,-1315152000,1),(94,-1301850000,2),(94,-1283702400,1),(94,-1270400400,2),(94,-1252252800,1),(94,-1238950800,2),(94,-1220803200,1),(94,-1207501200,2),(94,-1189353600,1),(94,-1176051600,2),(94,-1157299200,1),(94,-1144602000,2),(94,-1125849600,1),(94,-1112547600,2),(94,-1094400000,1),(94,-1081098000,2),(94,-1067788800,3),(94,-1045414800,2),(94,-1031500800,1),(94,-1018198800,2),(94,-1000051200,1),(94,-986749200,2),(94,-967996800,1),(94,-955299600,2),(94,-936547200,1),(94,-923245200,2),(94,-905097600,1),(94,-891795600,2),(94,-880214400,4),(94,-769395600,5),(94,-765392400,2),(94,-747244800,1),(94,-733942800,2),(94,-715795200,1),(94,-702493200,2),(94,-684345600,1),(94,-671043600,2),(94,-652896000,1),(94,-639594000,2),(94,-620841600,1),(94,-608144400,2),(94,-589392000,1),(94,-576090000,2),(94,-557942400,1),(94,-544640400,2),(94,-526492800,1),(94,-513190800,2),(94,-495043200,1),(94,-481741200,2),(94,-463593600,1),(94,-447267600,2),(94,-431539200,1),(94,-415818000,2),(94,-400089600,1),(94,-384368400,2),(94,-368640000,1),(94,-352918800,2),(94,-337190400,1),(94,-321469200,2),(94,-305740800,1),(94,-289414800,2),(94,-273686400,1),(94,-257965200,2),(94,-242236800,1),(94,-226515600,2),(94,-210787200,1),(94,-195066000,2),(94,-179337600,1),(94,-163616400,2),(94,-147888000,1),(94,-131562000,2),(94,-116438400,1),(94,-100112400,2),(94,-84384000,1),(94,-68662800,2),(94,-52934400,1),(94,-37213200,2),(94,-21484800,1),(94,-5763600,2),(94,9964800,1),(94,25686000,2),(94,41414400,1),(94,57740400,2),(94,73468800,1),(94,89190000,2),(94,104918400,1),(94,120639600,2),(94,126691200,1),(94,152089200,2),(94,162374400,1),(94,183538800,2),(94,199267200,1),(94,215593200,2),(94,230716800,1),(94,247042800,2),(94,262771200,1),(94,278492400,2),(94,294220800,1),(94,309942000,2),(94,325670400,1),(94,341391600,2),(94,357120000,1),(94,372841200,2),(94,388569600,1),(94,404895600,2),(94,420019200,1),(94,436345200,2),(94,452073600,1),(94,467794800,2),(94,483523200,1),(94,499244400,2),(94,514972800,1),(94,530694000,2),(94,544608000,1),(94,562143600,2),(94,576057600,1),(94,594198000,2),(94,607507200,1),(94,625647600,2),(94,638956800,1),(94,657097200,2),(94,671011200,1),(94,688546800,2),(94,702460800,1),(94,719996400,2),(94,733910400,1),(94,752050800,2),(94,765360000,1),(94,783500400,2),(94,796809600,1),(94,814950000,2),(94,828864000,1),(94,846399600,2),(94,860313600,1),(94,877849200,2),(94,891763200,1),(94,909298800,2),(94,923212800,1),(94,941353200,2),(94,954662400,1),(94,972802800,2),(94,986112000,1),(94,1004252400,2),(94,1018166400,1),(94,1035702000,2),(94,1049616000,1),(94,1067151600,2),(94,1081065600,1),(94,1099206000,2),(94,1112515200,1),(94,1130655600,2),(94,1143964800,1),(94,1162105200,2),(94,1173600000,1),(94,1194159600,2),(94,1205049600,1),(94,1225609200,2),(94,1236499200,1),(94,1257058800,2),(94,1268553600,1),(94,1289113200,2),(94,1300003200,1),(94,1320562800,2),(94,1331452800,1),(94,1352012400,2),(94,1362902400,1),(94,1383462000,2),(94,1394352000,1),(94,1414911600,2),(94,1425801600,1),(94,1446361200,2),(94,1457856000,1),(94,1478415600,2),(94,1489305600,1),(94,1509865200,2),(94,1520755200,1),(94,1541314800,2),(94,1552204800,1),(94,1572764400,2),(94,1583654400,1),(94,1604214000,2),(94,1615708800,1),(94,1636268400,2),(94,1647158400,1),(94,1667718000,2),(94,1678608000,1),(94,1699167600,2),(94,1710057600,1),(94,1730617200,2),(94,1741507200,1),(94,1762066800,2),(94,1772956800,1),(94,1793516400,2),(94,1805011200,1),(94,1825570800,2),(94,1836460800,1),(94,1857020400,2),(94,1867910400,1),(94,1888470000,2),(94,1899360000,1),(94,1919919600,2),(94,1930809600,1),(94,1951369200,2),(94,1962864000,1),(94,1983423600,2),(94,1994313600,1),(94,2014873200,2),(94,2025763200,1),(94,2046322800,2),(94,2057212800,1),(94,2077772400,2),(94,2088662400,1),(94,2109222000,2),(94,2120112000,1),(94,2140671600,2),(95,-1514739600,1),(95,-1343066400,2),(95,-1234807200,1),(95,-1220292000,2),(95,-1207159200,1),(95,-1191344400,2),(95,828864000,3),(95,846399600,2),(95,860313600,3),(95,877849200,2),(95,891766800,4),(95,909302400,1),(95,923216400,4),(95,941356800,1),(95,954666000,4),(95,972806400,1),(95,989139600,4),(95,1001836800,1),(95,1018170000,4),(95,1035705600,1),(95,1049619600,4),(95,1067155200,1),(95,1081069200,4),(95,1099209600,1),(95,1112518800,4),(95,1130659200,1),(95,1143968400,4),(95,1162108800,1),(95,1175418000,4),(95,1193558400,1),(95,1207472400,4),(95,1225008000,1),(95,1238922000,4),(95,1256457600,1),(95,1270371600,4),(95,1288512000,1),(95,1301821200,4),(95,1319961600,1),(95,1333270800,4),(95,1351411200,1),(95,1365325200,4),(95,1382860800,1),(95,1396774800,4),(95,1414310400,1),(95,1428224400,4),(95,1445760000,1),(95,1459674000,4),(95,1477814400,1),(95,1491123600,4),(95,1509264000,1),(95,1522573200,4),(95,1540713600,1),(95,1554627600,4),(95,1572163200,1),(95,1586077200,4),(95,1603612800,1),(95,1617526800,4),(95,1635667200,1),(95,1648976400,4),(95,1667116800,1),(95,1680426000,4),(95,1698566400,1),(95,1712480400,4),(95,1730016000,1),(95,1743930000,4),(95,1761465600,1),(95,1775379600,4),(95,1792915200,1),(95,1806829200,4),(95,1824969600,1),(95,1838278800,4),(95,1856419200,1),(95,1869728400,4),(95,1887868800,1),(95,1901782800,4),(95,1919318400,1),(95,1933232400,4),(95,1950768000,1),(95,1964682000,4),(95,1982822400,1),(95,1996131600,4),(95,2014272000,1),(95,2027581200,4),(95,2045721600,1),(95,2059030800,4),(95,2077171200,1),(95,2091085200,4),(95,2108620800,1),(95,2122534800,4),(95,2140070400,1),(96,-2147483648,1),(96,-1946918424,2),(97,-2147483648,1),(97,-1567453392,2),(97,-1233432000,3),(97,-1222981200,2),(97,-1205956800,3),(97,-1194037200,2),(97,-1172865600,3),(97,-1162501200,2),(97,-1141329600,3),(97,-1130965200,2),(97,-1109793600,3),(97,-1099429200,2),(97,-1078257600,3),(97,-1067806800,2),(97,-1046635200,3),(97,-1036270800,2),(97,-1015099200,3),(97,-1004734800,2),(97,-983563200,3),(97,-973198800,2),(97,-952027200,3),(97,-941576400,2),(97,-931032000,3),(97,-900882000,2),(97,-890337600,3),(97,-833749200,2),(97,-827265600,3),(97,-752274000,2),(97,-733780800,3),(97,-197326800,2),(97,-190843200,3),(97,-184194000,2),(97,-164491200,3),(97,-152658000,2),(97,-132955200,3),(97,-121122000,2),(97,-101419200,3),(97,-86821200,2),(97,-71092800,3),(97,-54766800,2),(97,-39038400,3),(97,-23317200,2),(97,-7588800,5),(97,128142000,4),(97,136605600,5),(97,596948400,4),(97,605066400,5),(97,624423600,4),(97,636516000,5),(97,656478000,4),(97,667965600,2),(97,687931200,4),(97,699415200,5),(97,719377200,4),(97,731469600,5),(97,938919600,3),(97,952052400,5),(97,1198983600,4),(97,1205632800,5),(97,1224385200,4),(97,1237082400,5),(97,2147483647,5),(98,-2147483648,1),(98,-1545071027,3),(98,288770400,2),(98,297234000,3),(98,320220000,2),(98,328683600,3),(98,664264800,2),(98,678344400,3),(98,695714400,2),(98,700635600,3),(99,-2147483648,2),(99,-1633273200,1),(99,-1615132800,2),(99,-1601823600,1),(99,-1583683200,2),(99,-880210800,3),(99,-820519140,2),(99,-812653140,3),(99,-796845540,2),(99,-84380400,1),(99,-68659200,2),(100,-1767212140,2),(100,-1206954000,1),(100,-1191358800,2),(100,-1175371200,1),(100,-1159822800,2),(100,-633816000,1),(100,-622065600,2),(100,-602280000,1),(100,-591829200,2),(100,-570744000,1),(100,-560206800,2),(100,-539121600,1),(100,-531349200,2),(100,-191361600,1),(100,-184194000,2),(100,-155160000,1),(100,-150066000,2),(100,-128894400,1),(100,-121122000,2),(100,-99950400,1),(100,-89586000,2),(100,-68414400,1),(100,-57963600,2),(100,499752000,1),(100,511239600,2),(100,530596800,1),(100,540270000,2),(100,562132800,1),(100,571201200,2),(100,592977600,1),(100,602046000,2),(100,624427200,1),(100,634705200,2),(100,656481600,1),(100,666759600,2),(100,687931200,1),(100,697604400,2),(100,719985600,1),(100,728449200,2),(100,750830400,1),(100,761713200,2),(100,782280000,1),(100,793162800,2),(100,813729600,1),(100,824007600,2),(100,844574400,1),(100,856062000,2),(100,876110400,1),(100,888721200,2),(100,908078400,1),(100,919566000,2),(100,938923200,1),(100,951620400,2),(100,970977600,1),(100,982465200,2),(100,1003032000,1),(100,1013914800,2),(100,1036296000,1),(100,1045364400,2),(100,1099368000,1),(100,1108868400,2),(100,1129435200,1),(100,1140318000,2),(100,1162699200,1),(100,1172372400,2),(100,1192334400,1),(100,1203217200,2),(100,1224388800,1),(100,1234666800,2),(100,1255838400,1),(100,1266721200,2),(100,1287288000,1),(100,1298170800,2),(100,1318737600,1),(100,1330225200,2),(100,1350792000,1),(100,1361070000,2),(100,1382241600,1),(100,1392519600,2),(100,1413691200,1),(100,1424574000,2),(100,1445140800,1),(100,1456023600,2),(100,1476590400,1),(100,1487473200,2),(100,1508040000,1),(100,1518922800,2),(100,1541304000,1),(100,1550372400,2),(100,2147483647,2),(101,-2147483648,1),(101,-873057600,3),(101,-769395600,2),(101,-765399600,1),(102,-1686091520,1),(102,323845200,4),(102,338950800,2),(102,354675600,3),(102,370400400,2),(102,386125200,3),(102,401850000,2),(102,417574800,3),(102,433299600,2),(102,449024400,3),(102,465354000,2),(102,481078800,3),(102,496803600,2),(102,512528400,3),(102,528253200,2),(102,543978000,3),(102,559702800,2),(102,575427600,3),(102,591152400,2),(102,606877200,3),(102,622602000,2),(102,638326800,3),(102,654656400,2),(102,670381200,3),(102,686106000,2),(102,701830800,3),(102,717555600,2),(102,733280400,3),(102,749005200,2),(102,764730000,3),(102,780454800,2),(102,796179600,3),(102,811904400,2),(102,820465200,5),(103,-2147483648,2),(103,-1632056400,1),(103,-1615125600,2),(103,-1596978000,1),(103,-1583164800,2),(103,-880203600,3),(103,-769395600,4),(103,-765381600,2),(103,-147884400,5),(103,-131554800,2),(103,120646800,6),(103,325677600,7),(103,341398800,6),(103,357127200,7),(103,372848400,6),(103,388576800,7),(103,404902800,6),(103,420026400,7),(103,436352400,6),(103,452080800,7),(103,467802000,6),(103,483530400,7),(103,499251600,6),(103,514980000,7),(103,530701200,6),(103,544615200,7),(103,562150800,6),(103,576064800,7),(103,594205200,6),(103,607514400,7),(103,625654800,6),(103,638964000,7),(103,657104400,6),(103,671018400,7),(103,688554000,6),(103,702468000,7),(103,720003600,6),(103,733917600,7),(103,752058000,6),(103,765367200,7),(103,783507600,6),(103,796816800,7),(103,814957200,6),(103,828871200,7),(103,846406800,6),(103,860320800,7),(103,877856400,6),(103,891770400,7),(103,909306000,6),(103,923220000,7),(103,941360400,6),(103,954669600,7),(103,972810000,6),(103,986119200,7),(103,1004259600,6),(103,1018173600,7),(103,1035709200,6),(103,1049623200,7),(103,1067158800,6),(103,1081072800,7),(103,1099213200,6),(103,1112522400,7),(103,1130662800,6),(103,1143972000,7),(103,1162112400,6),(103,1173607200,7),(103,1194166800,6),(103,1205056800,7),(103,1225616400,6),(103,1236506400,7),(103,1257066000,6),(103,1268560800,7),(103,1289120400,6),(103,1300010400,7),(103,1320570000,6),(103,1331460000,7),(103,1352019600,6),(103,1362909600,7),(103,1383469200,6),(103,1394359200,7),(103,1414918800,6),(103,1425808800,7),(103,1446368400,6),(103,1457863200,7),(103,1478422800,6),(103,1489312800,7),(103,1509872400,6),(103,1520762400,7),(103,1541322000,6),(103,1552212000,7),(103,1572771600,6),(103,1583661600,7),(103,1604214000,8),(104,-2147483648,2),(104,-1632060000,1),(104,-1615129200,2),(104,-880207200,3),(104,-769395600,4),(104,-765385200,2),(104,-715788000,1),(104,-702486000,2),(104,-684338400,1),(104,-671036400,2),(104,-652888800,1),(104,-639586800,2),(104,-620834400,1),(104,-608137200,2),(104,-589384800,1),(104,-576082800,2),(104,-557935200,1),(104,-544633200,2),(104,-526485600,1),(104,-513183600,2),(104,-495036000,1),(104,-481734000,2),(104,-463586400,1),(104,-450284400,2),(104,-431532000,1),(104,-418230000,2),(104,-400082400,1),(104,-386780400,2),(104,-368632800,1),(104,-355330800,2),(104,-337183200,1),(104,-323881200,2),(104,-305733600,1),(104,-292431600,2),(104,-273679200,1),(104,-260982000,2),(104,-242229600,1),(104,-226508400,2),(104,-210780000,1),(104,-195058800,2),(104,-179330400,1),(104,-163609200,2),(104,-147880800,1),(104,-131554800,2),(104,-116431200,1),(104,-100105200,2),(104,-84376800,1),(104,-68655600,2),(104,-52927200,1),(104,-37206000,2),(104,-21477600,1),(104,-5756400,2),(104,9972000,1),(104,25693200,2),(104,41421600,1),(104,57747600,2),(104,73476000,1),(104,84013200,5),(105,-2147483648,2),(105,-1633273200,1),(105,-1615132800,2),(105,-1601823600,1),(105,-1583683200,2),(105,-1570374000,1),(105,-1551628800,2),(105,-1538924400,1),(105,-1534089600,2),(105,-880210800,3),(105,-769395600,4),(105,-765388800,2),(105,-147884400,1),(105,-131558400,2),(105,-116434800,1),(105,-100108800,2),(105,-84380400,1),(105,-68659200,2),(105,-52930800,1),(105,-37209600,2),(105,-21481200,1),(105,-5760000,2),(105,9968400,1),(105,25689600,2),(105,41418000,1),(105,57744000,2),(105,73472400,1),(105,89193600,2),(105,104922000,1),(105,120643200,2),(105,126694800,1),(105,152092800,2),(105,162378000,1),(105,183542400,2),(105,199270800,1),(105,215596800,2),(105,230720400,1),(105,247046400,2),(105,262774800,1),(105,278496000,2),(105,294224400,1),(105,309945600,2),(105,325674000,1),(105,341395200,2),(105,357123600,1),(105,372844800,2),(105,388573200,1),(105,404899200,2),(105,420022800,1),(105,436348800,2),(105,452077200,1),(105,467798400,2),(105,483526800,1),(105,499248000,2),(105,514976400,1),(105,530697600,2),(105,544611600,1),(105,562147200,2),(105,576061200,1),(105,594201600,2),(105,607510800,1),(105,625651200,2),(105,638960400,1),(105,657100800,2),(105,671014800,1),(105,688550400,2),(105,702464400,1),(105,720000000,2),(105,733914000,1),(105,752054400,2),(105,765363600,1),(105,783504000,2),(105,796813200,1),(105,814953600,2),(105,828867600,1),(105,846403200,2),(105,860317200,1),(105,877852800,2),(105,891766800,1),(105,909302400,2),(105,923216400,1),(105,941356800,2),(105,954666000,1),(105,972806400,2),(105,986115600,1),(105,1004256000,2),(105,1018170000,1),(105,1035705600,2),(105,1049619600,1),(105,1067155200,2),(105,1081069200,1),(105,1099209600,2),(105,1112518800,1),(105,1130659200,2),(105,1143968400,1),(105,1162108800,2),(105,1173603600,1),(105,1194163200,2),(105,1205053200,1),(105,1225612800,2),(105,1236502800,1),(105,1257062400,2),(105,1268557200,1),(105,1289116800,2),(105,1300006800,1),(105,1320566400,2),(105,1331456400,1),(105,1352016000,2),(105,1362906000,1),(105,1383465600,2),(105,1394355600,1),(105,1414915200,2),(105,1425805200,1),(105,1446364800,2),(105,1457859600,1),(105,1478419200,2),(105,1489309200,1),(105,1509868800,2),(105,1520758800,1),(105,1541318400,2),(105,1552208400,1),(105,1572768000,2),(105,1583658000,1),(105,1604217600,2),(105,1615712400,1),(105,1636272000,2),(105,1647162000,1),(105,1667721600,2),(105,1678611600,1),(105,1699171200,2),(105,1710061200,1),(105,1730620800,2),(105,1741510800,1),(105,1762070400,2),(105,1772960400,1),(105,1793520000,2),(105,1805014800,1),(105,1825574400,2),(105,1836464400,1),(105,1857024000,2),(105,1867914000,1),(105,1888473600,2),(105,1899363600,1),(105,1919923200,2),(105,1930813200,1),(105,1951372800,2),(105,1962867600,1),(105,1983427200,2),(105,1994317200,1),(105,2014876800,2),(105,2025766800,1),(105,2046326400,2),(105,2057216400,1),(105,2077776000,2),(105,2088666000,1),(105,2109225600,2),(105,2120115600,1),(105,2140675200,2),(106,-2051202469,1),(106,-1724083200,2),(106,-880218000,3),(106,-769395600,4),(106,-765396000,2),(106,-684349200,5),(106,-671047200,2),(106,-80506740,5),(106,-68666400,2),(106,-52938000,5),(106,-37216800,2),(106,104914800,5),(106,120636000,2),(106,126687600,5),(106,152085600,2),(106,167814000,5),(106,183535200,2),(106,199263600,5),(106,215589600,2),(106,230713200,5),(106,247039200,2),(106,262767600,5),(106,278488800,2),(106,294217200,5),(106,309938400,2),(106,325666800,5),(106,341388000,2),(106,357116400,5),(106,372837600,2),(106,388566000,5),(106,404892000,2),(106,420015600,5),(106,436341600,2),(106,452070000,5),(106,467791200,2),(106,483519600,5),(106,499240800,2),(106,514969200,5),(106,530690400,2),(106,544604400,5),(106,562140000,2),(106,576054000,5),(106,594194400,2),(106,607503600,5),(106,625644000,2),(106,638953200,5),(106,657093600,2),(106,671007600,5),(106,688543200,2),(106,702457200,5),(106,719992800,2),(106,733906800,5),(106,752047200,2),(106,765356400,5),(106,783496800,2),(106,796806000,5),(106,814946400,2),(106,828860400,5),(106,846396000,2),(106,860310000,5),(106,877845600,2),(106,891759600,5),(106,909295200,2),(106,923209200,5),(106,941349600,2),(106,954658800,5),(106,972799200,2),(106,986108400,5),(106,1004248800,2),(106,1018162800,5),(106,1035698400,2),(106,1049612400,5),(106,1067148000,2),(106,1081062000,5),(106,1099202400,2),(106,1112511600,5),(106,1130652000,2),(106,1143961200,5),(106,1162101600,2),(106,1173596400,5),(106,1194156000,2),(106,1205046000,5),(106,1225605600,2),(106,1236495600,5),(106,1257055200,2),(106,1268550000,5),(106,1289109600,2),(106,1299999600,5),(106,1320559200,2),(106,1331449200,5),(106,1352008800,2),(106,1362898800,5),(106,1383458400,2),(106,1394348400,5),(106,1414908000,2),(106,1425798000,5),(106,1446357600,2),(106,1457852400,5),(106,1478412000,2),(106,1489302000,5),(106,1509861600,2),(106,1520751600,5),(106,1541311200,2),(106,1552201200,5),(106,1572760800,2),(106,1583650800,5),(106,1604210400,2),(106,1615705200,5),(106,1636264800,2),(106,1647154800,5),(106,1667714400,2),(106,1678604400,5),(106,1699164000,2),(106,1710054000,5),(106,1730613600,2),(106,1741503600,5),(106,1762063200,2),(106,1772953200,5),(106,1793512800,2),(106,1805007600,5),(106,1825567200,2),(106,1836457200,5),(106,1857016800,2),(106,1867906800,5),(106,1888466400,2),(106,1899356400,5),(106,1919916000,2),(106,1930806000,5),(106,1951365600,2),(106,1962860400,5),(106,1983420000,2),(106,1994310000,5),(106,2014869600,2),(106,2025759600,5),(106,2046319200,2),(106,2057209200,5),(106,2077768800,2),(106,2088658800,5),(106,2109218400,2),(106,2120108400,5),(106,2140668000,2),(107,-2147483648,1),(107,-873057600,3),(107,-769395600,2),(107,-765399600,1),(108,-1998663968,2),(108,-1632063600,1),(108,-1615132800,2),(108,-1600614000,1),(108,-1596816000,2),(108,-1567954800,1),(108,-1551628800,2),(108,-1536505200,1),(108,-1523203200,2),(108,-1504450800,1),(108,-1491753600,2),(108,-1473001200,1),(108,-1459699200,2),(108,-880210800,3),(108,-769395600,4),(108,-765388800,2),(108,-715791600,1),(108,-702489600,2),(108,73472400,1),(108,89193600,2),(108,104922000,1),(108,120643200,2),(108,136371600,1),(108,152092800,2),(108,167821200,1),(108,183542400,2),(108,199270800,1),(108,215596800,2),(108,230720400,1),(108,247046400,2),(108,262774800,1),(108,278496000,2),(108,294224400,1),(108,309945600,2),(108,325674000,1),(108,341395200,2),(108,357123600,1),(108,372844800,2),(108,388573200,1),(108,404899200,2),(108,420022800,1),(108,436348800,2),(108,452077200,1),(108,467798400,2),(108,483526800,1),(108,499248000,2),(108,514976400,1),(108,530697600,2),(108,544611600,1),(108,562147200,2),(108,576061200,1),(108,594201600,2),(108,607510800,1),(108,625651200,2),(108,638960400,1),(108,657100800,2),(108,671014800,1),(108,688550400,2),(108,702464400,1),(108,720000000,2),(108,733914000,1),(108,752054400,2),(108,765363600,1),(108,783504000,2),(108,796813200,1),(108,814953600,2),(108,828867600,1),(108,846403200,2),(108,860317200,1),(108,877852800,2),(108,891766800,1),(108,909302400,2),(108,923216400,1),(108,941356800,2),(108,954666000,1),(108,972806400,2),(108,986115600,1),(108,1004256000,2),(108,1018170000,1),(108,1035705600,2),(108,1049619600,1),(108,1067155200,2),(108,1081069200,1),(108,1099209600,2),(108,1112518800,1),(108,1130659200,2),(108,1143968400,1),(108,1162108800,2),(108,1173603600,1),(108,1194163200,2),(108,1205053200,1),(108,1225612800,2),(108,1236502800,1),(108,1257062400,2),(108,1268557200,1),(108,1289116800,2),(108,1300006800,1),(108,1320566400,2),(108,1331456400,1),(108,1352016000,2),(108,1362906000,1),(108,1383465600,2),(108,1394355600,1),(108,1414915200,2),(108,1425805200,1),(108,1446364800,2),(108,1457859600,1),(108,1478419200,2),(108,1489309200,1),(108,1509868800,2),(108,1520758800,1),(108,1541318400,2),(108,1552208400,1),(108,1572768000,2),(108,1583658000,1),(108,1604217600,2),(108,1615712400,1),(108,1636272000,2),(108,1647162000,1),(108,1667721600,2),(108,1678611600,1),(108,1699171200,2),(108,1710061200,1),(108,1730620800,2),(108,1741510800,1),(108,1762070400,2),(108,1772960400,1),(108,1793520000,2),(108,1805014800,1),(108,1825574400,2),(108,1836464400,1),(108,1857024000,2),(108,1867914000,1),(108,1888473600,2),(108,1899363600,1),(108,1919923200,2),(108,1930813200,1),(108,1951372800,2),(108,1962867600,1),(108,1983427200,2),(108,1994317200,1),(108,2014876800,2),(108,2025766800,1),(108,2046326400,2),(108,2057216400,1),(108,2077776000,2),(108,2088666000,1),(108,2109225600,2),(108,2120115600,1),(108,2140675200,2),(109,-1767208832,2),(109,-1206950400,1),(109,-1191355200,2),(109,-1175367600,1),(109,-1159819200,2),(109,-633812400,1),(109,-622062000,2),(109,-602276400,1),(109,-591825600,2),(109,-570740400,1),(109,-560203200,2),(109,-539118000,1),(109,-531345600,2),(109,-191358000,1),(109,-184190400,2),(109,-155156400,1),(109,-150062400,2),(109,-128890800,1),(109,-121118400,2),(109,-99946800,1),(109,-89582400,2),(109,-68410800,1),(109,-57960000,2),(109,499755600,1),(109,511243200,2),(109,530600400,1),(109,540273600,2),(109,562136400,1),(109,571204800,2),(109,750834000,1),(109,761716800,2),(109,1214283600,3),(109,1384056000,2),(109,2147483647,2),(110,-1546279392,2),(110,547020000,1),(110,559717200,2),(110,578469600,1),(110,591166800,2),(111,-1514736000,1),(111,-1451667600,2),(111,-1343062800,1),(111,-1234803600,2),(111,-1222963200,3),(111,-1207242000,2),(111,-873820800,4),(111,-769395600,5),(111,-761677200,2),(111,-686073600,3),(111,-661539600,2),(111,-495039600,3),(111,-481734000,2),(111,-463590000,3),(111,-450284400,2),(111,-431535600,3),(111,-418230000,2),(111,-400086000,3),(111,-386780400,2),(111,-368636400,3),(111,-355330800,2),(111,-337186800,3),(111,-323881200,2),(111,-305737200,3),(111,-292431600,2),(111,199274400,3),(111,215600400,2),(111,230724000,3),(111,247050000,2),(111,262778400,3),(111,278499600,2),(111,294228000,3),(111,309949200,2),(111,325677600,3),(111,341398800,2),(111,357127200,3),(111,372848400,2),(111,388576800,3),(111,404902800,2),(111,420026400,3),(111,436352400,2),(111,452080800,3),(111,467802000,2),(111,483530400,3),(111,499251600,2),(111,514980000,3),(111,530701200,2),(111,544615200,3),(111,562150800,2),(111,576064800,3),(111,594205200,2),(111,607514400,3),(111,625654800,2),(111,638964000,3),(111,657104400,2),(111,671018400,3),(111,688554000,2),(111,702468000,3),(111,720003600,2),(111,733917600,3),(111,752058000,2),(111,765367200,3),(111,783507600,2),(111,796816800,3),(111,814957200,2),(111,828871200,3),(111,846406800,2),(111,860320800,3),(111,877856400,2),(111,891770400,3),(111,909306000,2),(111,923220000,3),(111,941360400,2),(111,954669600,3),(111,972810000,2),(111,986119200,3),(111,1004259600,2),(111,1018173600,3),(111,1035709200,2),(111,1049623200,3),(111,1067158800,2),(111,1081072800,3),(111,1099213200,2),(111,1112522400,3),(111,1130662800,2),(111,1143972000,3),(111,1162112400,2),(111,1175421600,3),(111,1193562000,2),(111,1207476000,3),(111,1225011600,2),(111,1238925600,3),(111,1256461200,2),(111,1268560800,3),(111,1289120400,2),(111,1300010400,3),(111,1320570000,2),(111,1331460000,3),(111,1352019600,2),(111,1362909600,3),(111,1383469200,2),(111,1394359200,3),(111,1414918800,2),(111,1425808800,3),(111,1446368400,2),(111,1457863200,3),(111,1478422800,2),(111,1489312800,3),(111,1509872400,2),(111,1520762400,3),(111,1541322000,2),(111,1552212000,3),(111,1572771600,2),(111,1583661600,3),(111,1604221200,2),(111,1615716000,3),(111,1636275600,2),(111,1647165600,3),(111,1667725200,2),(111,1678615200,3),(111,1699174800,2),(111,1710064800,3),(111,1730624400,2),(111,1741514400,3),(111,1762074000,2),(111,1772964000,3),(111,1793523600,2),(111,1805018400,3),(111,1825578000,2),(111,1836468000,3),(111,1857027600,2),(111,1867917600,3),(111,1888477200,2),(111,1899367200,3),(111,1919926800,2),(111,1930816800,3),(111,1951376400,2),(111,1962871200,3),(111,1983430800,2),(111,1994320800,3),(111,2014880400,2),(111,2025770400,3),(111,2046330000,2),(111,2057220000,3),(111,2077779600,2),(111,2088669600,3),(111,2109229200,2),(111,2120119200,3),(111,2140678800,2),(112,-2147483648,2),(112,-1632060000,1),(112,-1615129200,2),(112,-880207200,3),(112,-769395600,4),(112,-765385200,2),(112,-715788000,1),(112,-702486000,2),(112,-684338400,1),(112,-671036400,2),(112,-652888800,1),(112,-639586800,2),(112,-620834400,1),(112,-608137200,2),(112,-589384800,1),(112,-576082800,2),(112,-557935200,1),(112,-544633200,2),(112,-526485600,1),(112,-513183600,2),(112,-495036000,1),(112,-481734000,2),(112,-463586400,1),(112,-450284400,2),(112,-431532000,1),(112,-418230000,2),(112,-400082400,1),(112,-386780400,2),(112,-368632800,1),(112,-355330800,2),(112,-337183200,1),(112,-323881200,2),(112,-305733600,1),(112,-292431600,2),(112,-273679200,1),(112,-260982000,2),(112,-242229600,1),(112,-226508400,2),(112,-210780000,1),(112,-195058800,2),(112,-179330400,1),(112,-163609200,2),(112,-147880800,1),(112,-131554800,2),(112,-116431200,1),(112,-100105200,2),(112,-84376800,1),(112,-68655600,2),(112,-52927200,1),(112,-37206000,2),(112,-21477600,1),(112,-5756400,2),(112,9972000,1),(112,25693200,2),(112,41421600,1),(112,57747600,2),(112,73476000,1),(112,89197200,2),(112,104925600,1),(112,120646800,2),(112,136375200,1),(112,152096400,2),(112,167824800,1),(112,183546000,2),(112,199274400,1),(112,215600400,2),(112,230724000,1),(112,247050000,2),(112,262778400,1),(112,278499600,2),(112,294228000,1),(112,309949200,2),(112,325677600,1),(112,341398800,2),(112,357127200,1),(112,372848400,2),(112,388576800,1),(112,404902800,2),(112,420026400,1),(112,436352400,2),(112,452080800,1),(112,467802000,2),(112,483530400,1),(112,499251600,2),(112,514980000,1),(112,530701200,2),(112,544615200,1),(112,562150800,2),(112,576064800,1),(112,594205200,2),(112,607514400,1),(112,625654800,2),(112,638964000,1),(112,657104400,2),(112,671018400,1),(112,688554000,2),(112,702468000,1),(112,720003600,2),(112,733917600,1),(112,752058000,2),(112,765367200,1),(112,783507600,2),(112,796816800,1),(112,814957200,2),(112,828871200,1),(112,846406800,2),(112,860320800,1),(112,877856400,2),(112,891770400,1),(112,909306000,2),(112,923220000,1),(112,941360400,2),(112,954669600,1),(112,972810000,2),(112,986119200,1),(112,1004259600,2),(112,1018173600,1),(112,1035709200,2),(112,1049623200,1),(112,1067158800,2),(112,1081072800,1),(112,1099213200,2),(112,1112522400,1),(112,1130662800,2),(112,1143972000,1),(112,1162112400,2),(112,1173607200,1),(112,1194166800,2),(112,1205056800,1),(112,1225616400,2),(112,1236506400,1),(112,1257066000,2),(112,1268560800,1),(112,1289120400,2),(112,1300010400,1),(112,1320570000,2),(112,1331460000,1),(112,1352019600,2),(112,1362909600,1),(112,1383469200,2),(112,1394359200,1),(112,1414918800,2),(112,1425808800,5),(113,-2147483648,2),(113,-1633276800,1),(113,-1615136400,2),(113,-1601827200,1),(113,-1583686800,2),(113,-900259200,1),(113,-891795600,2),(113,-880214400,3),(113,-769395600,4),(113,-765392400,2),(113,-747244800,1),(113,-733942800,2),(113,-715795200,1),(113,-702493200,2),(113,-684345600,1),(113,-671043600,2),(113,-652896000,1),(113,-639594000,2),(113,-620841600,1),(113,-608144400,2),(113,-589392000,1),(113,-576090000,2),(113,-557942400,1),(113,-544640400,2),(113,-526492800,1),(113,-513190800,2),(113,-495043200,1),(113,-481741200,2),(113,-463593600,5),(113,-386787600,2),(113,-368640000,5),(113,-21488400,6),(113,-5767200,5),(113,9961200,6),(113,25682400,5),(113,1143961200,6),(113,1162101600,5),(113,1173596400,6),(113,1194156000,5),(113,1205046000,6),(113,1225605600,5),(113,1236495600,6),(113,1257055200,5),(113,1268550000,6),(113,1289109600,5),(113,1299999600,6),(113,1320559200,5),(113,1331449200,6),(113,1352008800,5),(113,1362898800,6),(113,1383458400,5),(113,1394348400,6),(113,1414908000,5),(113,1425798000,6),(113,1446357600,5),(113,1457852400,6),(113,1478412000,5),(113,1489302000,6),(113,1509861600,5),(113,1520751600,6),(113,1541311200,5),(113,1552201200,6),(113,1572760800,5),(113,1583650800,6),(113,1604210400,5),(113,1615705200,6),(113,1636264800,5),(113,1647154800,6),(113,1667714400,5),(113,1678604400,6),(113,1699164000,5),(113,1710054000,6),(113,1730613600,5),(113,1741503600,6),(113,1762063200,5),(113,1772953200,6),(113,1793512800,5),(113,1805007600,6),(113,1825567200,5),(113,1836457200,6),(113,1857016800,5),(113,1867906800,6),(113,1888466400,5),(113,1899356400,6),(113,1919916000,5),(113,1930806000,6),(113,1951365600,5),(113,1962860400,6),(113,1983420000,5),(113,1994310000,6),(113,2014869600,5),(113,2025759600,6),(113,2046319200,5),(113,2057209200,6),(113,2077768800,5),(113,2088658800,6),(113,2109218400,5),(113,2120108400,6),(113,2140668000,5),(114,-1767216360,2),(114,-1206957600,1),(114,-1191362400,2),(114,-1175374800,1),(114,-1159826400,2),(114,-633819600,1),(114,-622069200,2),(114,-602283600,1),(114,-591832800,2),(114,-570747600,1),(114,-560210400,2),(114,-539125200,1),(114,-531352800,2),(114,-191365200,1),(114,-184197600,2),(114,-155163600,1),(114,-150069600,2),(114,-128898000,1),(114,-121125600,2),(114,-99954000,1),(114,-89589600,2),(114,-68418000,1),(114,-57967200,2),(114,499748400,1),(114,511236000,2),(114,530593200,1),(114,540266400,2),(114,562129200,1),(114,571197600,2),(114,592974000,1),(114,602042400,2),(114,624423600,1),(114,634701600,2),(114,938919600,1),(114,951616800,2),(114,970974000,1),(114,972180000,2),(114,1003028400,1),(114,1013911200,2),(114,2147483647,2),(115,-2131646412,2),(115,-1632074400,1),(115,-1615143600,2),(115,-880221600,3),(115,-769395600,4),(115,-765399600,2),(115,-526500000,1),(115,-513198000,2),(115,73461600,1),(115,89182800,2),(115,104911200,1),(115,120632400,2),(115,136360800,1),(115,152082000,2),(115,167810400,1),(115,183531600,2),(115,199260000,1),(115,215586000,2),(115,230709600,1),(115,247035600,2),(115,262764000,1),(115,278485200,2),(115,294213600,1),(115,309934800,2),(115,325663200,1),(115,341384400,2),(115,357112800,1),(115,372834000,2),(115,388562400,1),(115,404888400,2),(115,420012000,1),(115,436338000,2),(115,452066400,1),(115,467787600,2),(115,483516000,1),(115,499237200,2),(115,514965600,1),(115,530686800,2),(115,544600800,1),(115,562136400,2),(115,576050400,1),(115,594190800,2),(115,607500000,1),(115,625640400,2),(115,638949600,1),(115,657090000,2),(115,671004000,1),(115,688539600,2),(115,702453600,1),(115,719989200,2),(115,733903200,1),(115,752043600,2),(115,765352800,1),(115,783493200,2),(115,796802400,1),(115,814942800,2),(115,828856800,1),(115,846392400,2),(115,860306400,1),(115,877842000,2),(115,891756000,1),(115,909291600,2),(115,923205600,1),(115,941346000,2),(115,954655200,1),(115,972795600,2),(115,986104800,1),(115,1004245200,2),(115,1018159200,1),(115,1035694800,2),(115,1049608800,1),(115,1067144400,2),(115,1081058400,1),(115,1099198800,2),(115,1112508000,1),(115,1130648400,2),(115,1143957600,1),(115,1162098000,2),(115,1173592800,1),(115,1194152400,2),(115,1205042400,1),(115,1225602000,2),(115,1236492000,1),(115,1257051600,2),(115,1268546400,1),(115,1289106000,2),(115,1299996000,1),(115,1320555600,2),(115,1331445600,1),(115,1352005200,2),(115,1362895200,1),(115,1383454800,2),(115,1394344800,1),(115,1414904400,2),(115,1425794400,1),(115,1446354000,2),(115,1457848800,1),(115,1478408400,2),(115,1489298400,1),(115,1509858000,2),(115,1520748000,1),(115,1541307600,2),(115,1552197600,1),(115,1572757200,2),(115,1583647200,1),(115,1604206800,2),(115,1615701600,1),(115,1636261200,2),(115,1647151200,1),(115,1667710800,2),(115,1678600800,1),(115,1699160400,2),(115,1710050400,1),(115,1730610000,2),(115,1741500000,1),(115,1762059600,2),(115,1772949600,1),(115,1793509200,2),(115,1805004000,1),(115,1825563600,2),(115,1836453600,1),(115,1857013200,2),(115,1867903200,1),(115,1888462800,2),(115,1899352800,1),(115,1919912400,2),(115,1930802400,1),(115,1951362000,2),(115,1962856800,1),(115,1983416400,2),(115,1994306400,1),(115,2014866000,2),(115,2025756000,1),(115,2046315600,2),(115,2057205600,1),(115,2077765200,2),(115,2088655200,1),(115,2109214800,2),(115,2120104800,1),(115,2140664400,2),(116,-1686083584,1),(116,323845200,4),(116,338950800,2),(116,354675600,3),(116,370400400,2),(116,386125200,3),(116,401850000,2),(116,417574800,3),(116,433299600,2),(116,449024400,3),(116,465354000,2),(116,481078800,3),(116,496803600,2),(116,512528400,3),(116,528253200,2),(116,543978000,3),(116,559702800,2),(116,575427600,3),(116,591152400,2),(116,606877200,3),(116,622602000,2),(116,638326800,3),(116,654656400,2),(116,670381200,3),(116,686106000,2),(116,701830800,3),(116,717555600,2),(116,733280400,3),(116,749005200,2),(116,764730000,3),(116,780454800,2),(116,796179600,3),(116,811904400,2),(116,828234000,3),(116,846378000,2),(116,859683600,3),(116,877827600,2),(116,891133200,3),(116,909277200,2),(116,922582800,3),(116,941331600,2),(116,954032400,3),(116,972781200,2),(116,985482000,3),(116,1004230800,2),(116,1017536400,3),(116,1035680400,2),(116,1048986000,3),(116,1067130000,2),(116,1080435600,3),(116,1099184400,2),(116,1111885200,3),(116,1130634000,2),(116,1143334800,3),(116,1162083600,2),(116,1174784400,3),(116,1193533200,2),(116,1206838800,3),(116,1224982800,2),(116,1238288400,3),(116,1256432400,2),(116,1269738000,3),(116,1288486800,2),(116,1301187600,3),(116,1319936400,2),(116,1332637200,3),(116,1351386000,2),(116,1364691600,3),(116,1382835600,2),(116,1396141200,3),(116,1414285200,2),(116,1427590800,3),(116,1445734800,2),(116,1459040400,3),(116,1477789200,2),(116,1490490000,3),(116,1509238800,2),(116,1521939600,3),(116,1540688400,2),(116,1553994000,3),(116,1572138000,2),(116,1585443600,3),(116,1603587600,2),(116,1616893200,3),(116,1635642000,2),(116,1648342800,3),(116,1667091600,2),(116,1679792400,3),(116,1698541200,2),(116,1711846800,3),(116,1729990800,2),(116,1743296400,3),(116,1761440400,2),(116,1774746000,3),(116,1792890000,2),(116,1806195600,3),(116,1824944400,2),(116,1837645200,3),(116,1856394000,2),(116,1869094800,3),(116,1887843600,2),(116,1901149200,3),(116,1919293200,2),(116,1932598800,3),(116,1950742800,2),(116,1964048400,3),(116,1982797200,2),(116,1995498000,3),(116,2014246800,2),(116,2026947600,3),(116,2045696400,2),(116,2058397200,3),(116,2077146000,2),(116,2090451600,3),(116,2108595600,2),(116,2121901200,3),(116,2140045200,2),(116,2147483647,2),(117,-2147483648,1),(117,-1632076148,2),(117,-1615145348,1),(117,-1096921748,3),(117,-1061670600,4),(117,-1048973400,3),(117,-1030221000,4),(117,-1017523800,3),(117,-998771400,4),(117,-986074200,3),(117,-966717000,4),(117,-954624600,3),(117,-935267400,4),(117,-922570200,3),(117,-903817800,4),(117,-891120600,3),(117,-872368200,6),(117,-769395600,5),(117,-765401400,3),(117,-746044200,4),(117,-733347000,3),(117,-714594600,4),(117,-701897400,3),(117,-683145000,4),(117,-670447800,3),(117,-651695400,4),(117,-638998200,3),(117,-619641000,4),(117,-606943800,3),(117,-589401000,4),(117,-576099000,3),(117,-557951400,4),(117,-544649400,3),(117,-526501800,4),(117,-513199800,3),(117,-495052200,4),(117,-481750200,3),(117,-463602600,4),(117,-450300600,3),(117,-431548200,4),(117,-418246200,3),(117,-400098600,4),(117,-386796600,3),(117,-368649000,4),(117,-355347000,3),(117,-337199400,4),(117,-323897400,3),(117,-305749800,4),(117,-289423800,3),(117,-273695400,4),(117,-257974200,3),(117,-242245800,4),(117,-226524600,3),(117,-210796200,4),(117,-195075000,3),(117,-179346600,4),(117,-163625400,3),(117,-147897000,4),(117,-131571000,3),(117,-119903400,8),(117,-116445600,7),(117,-100119600,8),(117,-84391200,7),(117,-68670000,8),(117,-52941600,7),(117,-37220400,8),(117,-21492000,7),(117,-5770800,8),(117,9957600,7),(117,25678800,8),(117,41407200,7),(117,57733200,8),(117,73461600,7),(117,89182800,8),(117,104911200,7),(117,120632400,8),(117,136360800,7),(117,152082000,8),(117,167810400,7),(117,183531600,8),(117,199260000,7),(117,215586000,8),(117,230709600,7),(117,247035600,8),(117,262764000,7),(117,278485200,8),(117,294213600,7),(117,309934800,8),(117,325663200,7),(117,341384400,8),(117,357112800,7),(117,372834000,8),(117,388562400,7),(117,404888400,8),(117,420012000,7),(117,436338000,8),(117,452066400,7),(117,467787600,8),(117,483516000,7),(117,499237200,8),(117,514965600,7),(117,530686800,8),(117,544593660,7),(117,562129260,8),(117,576043260,9),(117,594180060,8),(117,607492860,7),(117,625633260,8),(117,638942460,7),(117,657082860,8),(117,670996860,7),(117,688532460,8),(117,702446460,7),(117,719982060,8),(117,733896060,7),(117,752036460,8),(117,765345660,7),(117,783486060,8),(117,796795260,7),(117,814935660,8),(117,828849660,7),(117,846385260,8),(117,860299260,7),(117,877834860,8),(117,891748860,7),(117,909284460,8),(117,923198460,7),(117,941338860,8),(117,954648060,7),(117,972788460,8),(117,986097660,7),(117,1004238060,8),(117,1018152060,7),(117,1035687660,8),(117,1049601660,7),(117,1067137260,8),(117,1081051260,7),(117,1099191660,8),(117,1112500860,7),(117,1130641260,8),(117,1143950460,7),(117,1162090860,8),(117,1173585660,7),(117,1194145260,8),(117,1205035260,7),(117,1225594860,8),(117,1236484860,7),(117,1257044460,8),(117,1268539260,7),(117,1289098860,8),(117,1299988860,7),(117,1320555600,8),(117,1331445600,7),(117,1352005200,8),(117,1362895200,7),(117,1383454800,8),(117,1394344800,7),(117,1414904400,8),(117,1425794400,7),(117,1446354000,8),(117,1457848800,7),(117,1478408400,8),(117,1489298400,7),(117,1509858000,8),(117,1520748000,7),(117,1541307600,8),(117,1552197600,7),(117,1572757200,8),(117,1583647200,7),(117,1604206800,8),(117,1615701600,7),(117,1636261200,8),(117,1647151200,7),(117,1667710800,8),(117,1678600800,7),(117,1699160400,8),(117,1710050400,7),(117,1730610000,8),(117,1741500000,7),(117,1762059600,8),(117,1772949600,7),(117,1793509200,8),(117,1805004000,7),(117,1825563600,8),(117,1836453600,7),(117,1857013200,8),(117,1867903200,7),(117,1888462800,8),(117,1899352800,7),(117,1919912400,8),(117,1930802400,7),(117,1951362000,8),(117,1962856800,7),(117,1983416400,8),(117,1994306400,7),(117,2014866000,8),(117,2025756000,7),(117,2046315600,8),(117,2057205600,7),(117,2077765200,8),(117,2088655200,7),(117,2109214800,8),(117,2120104800,7),(117,2140664400,8),(118,-2147483648,1),(118,-1827687170,2),(118,294217200,3),(118,309938400,2),(118,325666800,3),(118,341388000,2),(118,357116400,3),(118,372837600,2),(118,388566000,3),(118,404892000,2),(118,420015600,3),(118,436341600,2),(118,452070000,3),(118,467791200,2),(118,483519600,3),(118,499240800,2),(118,514969200,3),(118,530690400,2),(118,544604400,3),(118,562140000,2),(118,576054000,3),(118,594194400,2),(118,607503600,3),(118,625644000,2),(118,638953200,3),(118,657093600,2),(118,671007600,3),(118,688543200,2),(118,702457200,3),(118,719992800,2),(118,733906800,3),(118,752047200,2),(118,765356400,3),(118,783496800,2),(118,796806000,3),(118,814946400,2),(118,828860400,3),(118,846396000,2),(118,860310000,3),(118,877845600,2),(118,891759600,3),(118,909295200,2),(118,923209200,3),(118,941349600,2),(118,954658800,3),(118,972799200,2),(118,986108400,3),(118,1004248800,2),(118,1018162800,3),(118,1035698400,2),(118,1049612400,3),(118,1067148000,2),(118,1081062000,3),(118,1099202400,2),(118,1112511600,3),(118,1130652000,2),(118,1143961200,3),(118,1162101600,2),(118,1173596400,3),(118,1194156000,2),(118,1205046000,3),(118,1225605600,2),(118,1236495600,3),(118,1257055200,2),(118,1268550000,3),(118,1289109600,2),(118,1299999600,3),(118,1320559200,2),(118,1331449200,3),(118,1352008800,2),(118,1362898800,3),(118,1383458400,2),(118,1394348400,3),(118,1414908000,2),(118,1425798000,4),(118,1520751600,3),(118,1541311200,2),(118,1552201200,3),(118,1572760800,2),(118,1583650800,3),(118,1604210400,2),(118,1615705200,3),(118,1636264800,2),(118,1647154800,3),(118,1667714400,2),(118,1678604400,3),(118,1699164000,2),(118,1710054000,3),(118,1730613600,2),(118,1741503600,3),(118,1762063200,2),(118,1772953200,3),(118,1793512800,2),(118,1805007600,3),(118,1825567200,2),(118,1836457200,3),(118,1857016800,2),(118,1867906800,3),(118,1888466400,2),(118,1899356400,3),(118,1919916000,2),(118,1930806000,3),(118,1951365600,2),(118,1962860400,3),(118,1983420000,2),(118,1994310000,3),(118,2014869600,2),(118,2025759600,3),(118,2046319200,2),(118,2057209200,3),(118,2077768800,2),(118,2088658800,3),(118,2109218400,2),(118,2120108400,3),(118,2140668000,2),(119,-2147483648,1),(119,-873057600,3),(119,-769395600,2),(119,-765399600,1),(120,-2147483648,1),(120,-873057600,3),(120,-769395600,2),(120,-765399600,1),(121,-1617040676,2),(121,123055200,1),(121,130914000,2),(121,422344800,1),(121,433054800,2),(121,669708000,1),(121,684219600,2),(121,1146376800,1),(121,1159678800,2),(122,-2147483648,1),(122,-1230749160,3),(122,722926800,2),(122,728884800,3),(122,2147483647,3),(123,-1843589241,1),(123,-1730577600,2),(123,176096700,3),(123,701841600,1),(123,2147483647,1),(124,-2131645536,2),(124,-1696276800,1),(124,-1680469200,2),(124,-1632074400,1),(124,-1615143600,2),(124,-1566763200,1),(124,-1557090000,2),(124,-1535486400,1),(124,-1524949200,2),(124,-1504468800,1),(124,-1493413200,2),(124,-1472414400,1),(124,-1461963600,2),(124,-1440964800,1),(124,-1429390800,2),(124,-1409515200,1),(124,-1396731600,2),(124,-1376856000,1),(124,-1366491600,2),(124,-1346616000,1),(124,-1333832400,2),(124,-1313956800,1),(124,-1303678800,2),(124,-1282507200,1),(124,-1272661200,2),(124,-1251057600,1),(124,-1240088400,2),(124,-1219608000,1),(124,-1207429200,2),(124,-1188763200,1),(124,-1175979600,2),(124,-1157313600,1),(124,-1143925200,2),(124,-1124049600,1),(124,-1113771600,2),(124,-1091390400,1),(124,-1081026000,2),(124,-1059854400,1),(124,-1050786000,2),(124,-1030910400,1),(124,-1018126800,2),(124,-999460800,1),(124,-986677200,2),(124,-965592000,1),(124,-955227600,2),(124,-935956800,1),(124,-923173200,2),(124,-904507200,1),(124,-891723600,2),(124,-880221600,3),(124,-769395600,4),(124,-765399600,2),(124,-747252000,1),(124,-733950000,2),(124,-715802400,1),(124,-702500400,2),(124,-684352800,1),(124,-671050800,2),(124,-652903200,1),(124,-639601200,2),(124,-589399200,1),(124,-576097200,2),(124,-557949600,1),(124,-544647600,2),(124,-526500000,1),(124,-513198000,2),(124,-495050400,1),(124,-481748400,2),(124,-431546400,1),(124,-418244400,2),(124,-400096800,1),(124,-386794800,2),(124,-368647200,1),(124,-355345200,2),(124,-337197600,1),(124,-323895600,2),(124,-242244000,1),(124,-226522800,2),(124,-210794400,1),(124,-195073200,2),(124,-179344800,1),(124,-163623600,2),(124,-147895200,1),(124,-131569200,2),(124,-116445600,1),(124,-100119600,2),(124,-84391200,1),(124,-68670000,2),(124,-52941600,1),(124,-37220400,2),(124,-21492000,1),(124,-5770800,2),(124,9957600,1),(124,25678800,2),(124,41407200,1),(124,57733200,2),(124,73461600,1),(124,89182800,2),(124,104911200,1),(124,120632400,2),(124,136360800,1),(124,152082000,2),(124,167810400,1),(124,183531600,2),(124,199260000,1),(124,215586000,2),(124,230709600,1),(124,247035600,2),(124,262764000,1),(124,278485200,2),(124,294213600,1),(124,309934800,2),(124,325663200,1),(124,341384400,2),(124,357112800,1),(124,372834000,2),(124,388562400,1),(124,404888400,2),(124,420012000,1),(124,436338000,2),(124,452066400,1),(124,467787600,2),(124,483516000,1),(124,499237200,2),(124,514965600,1),(124,530686800,2),(124,544600800,1),(124,562136400,2),(124,576050400,1),(124,594190800,2),(124,607500000,1),(124,625640400,2),(124,638949600,1),(124,657090000,2),(124,671004000,1),(124,688539600,2),(124,702453600,1),(124,719989200,2),(124,733903200,1),(124,752043600,2),(124,765352800,1),(124,783493200,2),(124,796802400,1),(124,814942800,2),(124,828856800,1),(124,846392400,2),(124,860306400,1),(124,877842000,2),(124,891756000,1),(124,909291600,2),(124,923205600,1),(124,941346000,2),(124,954655200,1),(124,972795600,2),(124,986104800,1),(124,1004245200,2),(124,1018159200,1),(124,1035694800,2),(124,1049608800,1),(124,1067144400,2),(124,1081058400,1),(124,1099198800,2),(124,1112508000,1),(124,1130648400,2),(124,1143957600,1),(124,1162098000,2),(124,1173592800,1),(124,1194152400,2),(124,1205042400,1),(124,1225602000,2),(124,1236492000,1),(124,1257051600,2),(124,1268546400,1),(124,1289106000,2),(124,1299996000,1),(124,1320555600,2),(124,1331445600,1),(124,1352005200,2),(124,1362895200,1),(124,1383454800,2),(124,1394344800,1),(124,1414904400,2),(124,1425794400,1),(124,1446354000,2),(124,1457848800,1),(124,1478408400,2),(124,1489298400,1),(124,1509858000,2),(124,1520748000,1),(124,1541307600,2),(124,1552197600,1),(124,1572757200,2),(124,1583647200,1),(124,1604206800,2),(124,1615701600,1),(124,1636261200,2),(124,1647151200,1),(124,1667710800,2),(124,1678600800,1),(124,1699160400,2),(124,1710050400,1),(124,1730610000,2),(124,1741500000,1),(124,1762059600,2),(124,1772949600,1),(124,1793509200,2),(124,1805004000,1),(124,1825563600,2),(124,1836453600,1),(124,1857013200,2),(124,1867903200,1),(124,1888462800,2),(124,1899352800,1),(124,1919912400,2),(124,1930802400,1),(124,1951362000,2),(124,1962856800,1),(124,1983416400,2),(124,1994306400,1),(124,2014866000,2),(124,2025756000,1),(124,2046315600,2),(124,2057205600,1),(124,2077765200,2),(124,2088655200,1),(124,2109214800,2),(124,2120104800,1),(124,2140664400,2),(125,-2147483648,1),(125,-1402813824,3),(125,-1311534000,2),(125,-1300996800,3),(125,-933534000,2),(125,-925675200,3),(125,-902084400,2),(125,-893620800,3),(125,-870030000,2),(125,-862171200,3),(125,-775681200,2),(125,-767822400,3),(125,-744231600,2),(125,-736372800,3),(125,-144702000,2),(125,-134251200,3),(125,-113425200,2),(125,-102542400,3),(125,-86295600,2),(125,-72907200,3),(125,-54154800,2),(125,-41457600,3),(125,-21495600,2),(125,-5774400,3),(125,9954000,2),(125,25675200,3),(125,41403600,2),(125,57729600,3),(125,73458000,2),(125,87364800,3),(125,104907600,2),(125,118900800,3),(125,136357200,2),(125,150436800,3),(125,167806800,2),(125,183528000,3),(125,199256400,2),(125,215582400,3),(125,230706000,2),(125,247032000,3),(125,263365200,2),(125,276667200,3),(125,290581200,2),(125,308721600,3),(125,322030800,2),(125,340171200,3),(125,358318800,2),(125,371620800,3),(125,389768400,2),(125,403070400,3),(125,421218000,2),(125,434520000,3),(125,452667600,2),(125,466574400,3),(125,484117200,2),(125,498024000,3),(125,511333200,2),(125,529473600,3),(125,542782800,2),(125,560923200,3),(125,574837200,2),(125,592372800,3),(125,606286800,2),(125,623822400,3),(125,638946000,2),(125,655876800,3),(125,671000400,2),(125,687330000,4),(125,702450000,2),(125,718779600,4),(125,733899600,2),(125,750229200,4),(125,765349200,2),(125,781678800,4),(125,796798800,2),(125,813128400,4),(125,828853200,2),(125,844578000,4),(125,860302800,2),(125,876632400,4),(125,891147600,5),(125,909291600,4),(125,922597200,5),(125,941346000,4),(125,954651600,5),(125,972795600,4),(125,986101200,5),(125,1004245200,4),(125,1018155600,5),(125,1035694800,4),(125,1049605200,5),(125,1067144400,4),(125,1080450000,5),(125,1162098000,4),(125,1173589200,5),(125,1193547600,4),(125,1205643600,5),(125,1224997200,4),(125,1236488400,5),(125,1256446800,4),(125,1268542800,5),(125,1288501200,4),(125,1300597200,5),(125,1321160400,4),(125,1333256400,5),(125,1352005200,4),(125,1362891600,5),(125,1383454800,4),(125,1394341200,5),(125,1414904400,4),(125,1425790800,5),(125,1446354000,4),(125,1457845200,5),(125,1478408400,4),(125,1489294800,5),(125,1509858000,4),(125,1520744400,5),(125,1541307600,4),(125,1552194000,5),(125,1572757200,4),(125,1583643600,5),(125,1604206800,4),(125,1615698000,5),(125,1636261200,4),(125,1647147600,5),(125,1667710800,4),(125,1678597200,5),(125,1699160400,4),(125,1710046800,5),(125,1730610000,4),(125,1741496400,5),(125,1762059600,4),(125,1772946000,5),(125,1793509200,4),(125,1805000400,5),(125,1825563600,4),(125,1836450000,5),(125,1857013200,4),(125,1867899600,5),(125,1888462800,4),(125,1899349200,5),(125,1919912400,4),(125,1930798800,5),(125,1951362000,4),(125,1962853200,5),(125,1983416400,4),(125,1994302800,5),(125,2014866000,4),(125,2025752400,5),(125,2046315600,4),(125,2057202000,5),(125,2077765200,4),(125,2088651600,5),(125,2109214800,4),(125,2120101200,5),(125,2140664400,4),(126,-1514739600,1),(126,-1343066400,2),(126,-1234807200,1),(126,-1220292000,2),(126,-1207159200,1),(126,-1191344400,2),(126,-873828000,1),(126,-661539600,3),(126,28800,1),(126,828867600,4),(126,846403200,1),(126,860317200,4),(126,877852800,1),(126,891766800,4),(126,909302400,1),(127,-2147483648,2),(127,-1633276800,1),(127,-1615136400,2),(127,-1601827200,1),(127,-1583686800,2),(127,-900259200,1),(127,-891795600,2),(127,-880214400,3),(127,-769395600,4),(127,-765392400,2),(127,-747244800,1),(127,-733942800,2),(127,-715795200,1),(127,-702493200,2),(127,-684345600,1),(127,-671043600,2),(127,-652896000,1),(127,-639594000,2),(127,-620841600,1),(127,-608144400,2),(127,-589392000,1),(127,-576090000,2),(127,-557942400,1),(127,-544640400,2),(127,-526492800,1),(127,-513190800,2),(127,-495043200,1),(127,-481741200,2),(127,-463593600,5),(127,-386787600,2),(127,-368640000,5),(127,-21488400,6),(127,-5767200,5),(127,9961200,6),(127,25682400,5),(127,1143961200,6),(127,1162101600,5),(127,1173596400,6),(127,1194156000,5),(127,1205046000,6),(127,1225605600,5),(127,1236495600,6),(127,1257055200,5),(127,1268550000,6),(127,1289109600,5),(127,1299999600,6),(127,1320559200,5),(127,1331449200,6),(127,1352008800,5),(127,1362898800,6),(127,1383458400,5),(127,1394348400,6),(127,1414908000,5),(127,1425798000,6),(127,1446357600,5),(127,1457852400,6),(127,1478412000,5),(127,1489302000,6),(127,1509861600,5),(127,1520751600,6),(127,1541311200,5),(127,1552201200,6),(127,1572760800,5),(127,1583650800,6),(127,1604210400,5),(127,1615705200,6),(127,1636264800,5),(127,1647154800,6),(127,1667714400,5),(127,1678604400,6),(127,1699164000,5),(127,1710054000,6),(127,1730613600,5),(127,1741503600,6),(127,1762063200,5),(127,1772953200,6),(127,1793512800,5),(127,1805007600,6),(127,1825567200,5),(127,1836457200,6),(127,1857016800,5),(127,1867906800,6),(127,1888466400,5),(127,1899356400,6),(127,1919916000,5),(127,1930806000,6),(127,1951365600,5),(127,1962860400,6),(127,1983420000,5),(127,1994310000,6),(127,2014869600,5),(127,2025759600,6),(127,2046319200,5),(127,2057209200,6),(127,2077768800,5),(127,2088658800,6),(127,2109218400,5),(127,2120108400,6),(127,2140668000,5),(128,-2147483648,2),(128,-1633276800,1),(128,-1615136400,2),(128,-1601827200,1),(128,-1583686800,2),(128,-880214400,3),(128,-769395600,4),(128,-765392400,2),(128,-715795200,1),(128,-702493200,2),(128,-684345600,1),(128,-671043600,2),(128,-652896000,1),(128,-639594000,2),(128,-620841600,1),(128,-608144400,2),(128,-589392000,1),(128,-576090000,2),(128,-557942400,1),(128,-544640400,2),(128,-526492800,1),(128,-513190800,2),(128,-495043200,1),(128,-481741200,2),(128,-463593600,1),(128,-447267600,2),(128,-431539200,1),(128,-415818000,2),(128,-400089600,1),(128,-386787600,2),(128,-368640000,1),(128,-355338000,2),(128,-337190400,1),(128,-321469200,2),(128,-305740800,1),(128,-289414800,2),(128,-273686400,1),(128,-257965200,2),(128,-242236800,5),(128,-195066000,2),(128,-84384000,1),(128,-68662800,2),(128,-52934400,1),(128,-37213200,2),(128,-21484800,1),(128,-5763600,2),(128,9964800,1),(128,25686000,2),(128,41414400,1),(128,57740400,2),(128,73468800,1),(128,89190000,2),(128,104918400,1),(128,120639600,2),(128,126691200,1),(128,152089200,2),(128,162374400,1),(128,183538800,2),(128,199267200,1),(128,215593200,2),(128,230716800,1),(128,247042800,2),(128,262771200,1),(128,278492400,2),(128,294220800,1),(128,309942000,2),(128,325670400,1),(128,341391600,2),(128,357120000,1),(128,372841200,2),(128,388569600,1),(128,404895600,2),(128,420019200,1),(128,436345200,2),(128,452073600,1),(128,467794800,2),(128,483523200,1),(128,499244400,2),(128,514972800,1),(128,530694000,2),(128,544608000,1),(128,562143600,2),(128,576057600,1),(128,594198000,2),(128,607507200,1),(128,625647600,2),(128,638956800,1),(128,657097200,2),(128,671011200,1),(128,688546800,5),(128,1143961200,1),(128,1162105200,2),(128,1173600000,1),(128,1194159600,2),(128,1205049600,1),(128,1225609200,2),(128,1236499200,1),(128,1257058800,2),(128,1268553600,1),(128,1289113200,2),(128,1300003200,1),(128,1320562800,2),(128,1331452800,1),(128,1352012400,2),(128,1362902400,1),(128,1383462000,2),(128,1394352000,1),(128,1414911600,2),(128,1425801600,1),(128,1446361200,2),(128,1457856000,1),(128,1478415600,2),(128,1489305600,1),(128,1509865200,2),(128,1520755200,1),(128,1541314800,2),(128,1552204800,1),(128,1572764400,2),(128,1583654400,1),(128,1604214000,2),(128,1615708800,1),(128,1636268400,2),(128,1647158400,1),(128,1667718000,2),(128,1678608000,1),(128,1699167600,2),(128,1710057600,1),(128,1730617200,2),(128,1741507200,1),(128,1762066800,2),(128,1772956800,1),(128,1793516400,2),(128,1805011200,1),(128,1825570800,2),(128,1836460800,1),(128,1857020400,2),(128,1867910400,1),(128,1888470000,2),(128,1899360000,1),(128,1919919600,2),(128,1930809600,1),(128,1951369200,2),(128,1962864000,1),(128,1983423600,2),(128,1994313600,1),(128,2014873200,2),(128,2025763200,1),(128,2046322800,2),(128,2057212800,1),(128,2077772400,2),(128,2088662400,1),(128,2109222000,2),(128,2120112000,1),(128,2140671600,2),(129,-2147483648,2),(129,-1633276800,1),(129,-1615136400,2),(129,-1601827200,1),(129,-1583686800,2),(129,-880214400,3),(129,-769395600,4),(129,-765392400,2),(129,-589392000,1),(129,-576090000,2),(129,-495043200,1),(129,-481741200,2),(129,-463593600,1),(129,-450291600,2),(129,-431539200,1),(129,-418237200,2),(129,-400089600,1),(129,-386787600,2),(129,-368640000,1),(129,-355338000,2),(129,-337190400,1),(129,-323888400,2),(129,-305740800,1),(129,-292438800,2),(129,-273686400,5),(129,-21488400,6),(129,-5767200,5),(129,9961200,6),(129,25682400,5),(129,41410800,6),(129,57736800,5),(129,73465200,6),(129,89186400,5),(129,104914800,6),(129,120636000,5),(129,126687600,1),(129,152089200,5),(129,162370800,6),(129,183535200,5),(129,1143961200,6),(129,1162101600,5),(129,1173596400,6),(129,1194156000,5),(129,1205046000,6),(129,1225605600,5),(129,1236495600,6),(129,1257055200,5),(129,1268550000,6),(129,1289109600,5),(129,1299999600,6),(129,1320559200,5),(129,1331449200,6),(129,1352008800,5),(129,1362898800,6),(129,1383458400,5),(129,1394348400,6),(129,1414908000,5),(129,1425798000,6),(129,1446357600,5),(129,1457852400,6),(129,1478412000,5),(129,1489302000,6),(129,1509861600,5),(129,1520751600,6),(129,1541311200,5),(129,1552201200,6),(129,1572760800,5),(129,1583650800,6),(129,1604210400,5),(129,1615705200,6),(129,1636264800,5),(129,1647154800,6),(129,1667714400,5),(129,1678604400,6),(129,1699164000,5),(129,1710054000,6),(129,1730613600,5),(129,1741503600,6),(129,1762063200,5),(129,1772953200,6),(129,1793512800,5),(129,1805007600,6),(129,1825567200,5),(129,1836457200,6),(129,1857016800,5),(129,1867906800,6),(129,1888466400,5),(129,1899356400,6),(129,1919916000,5),(129,1930806000,6),(129,1951365600,5),(129,1962860400,6),(129,1983420000,5),(129,1994310000,6),(129,2014869600,5),(129,2025759600,6),(129,2046319200,5),(129,2057209200,6),(129,2077768800,5),(129,2088658800,6),(129,2109218400,5),(129,2120108400,6),(129,2140668000,5),(130,-2147483648,2),(130,-1633276800,1),(130,-1615136400,2),(130,-1601827200,1),(130,-1583686800,2),(130,-880214400,3),(130,-769395600,4),(130,-765392400,2),(130,-462996000,1),(130,-450291600,2),(130,-431539200,1),(130,-418237200,2),(130,-400089600,1),(130,-386787600,2),(130,-368640000,1),(130,-355338000,2),(130,-337190400,1),(130,-323888400,2),(130,-305740800,1),(130,-292438800,2),(130,-273686400,1),(130,-257965200,2),(130,-242236800,1),(130,-226515600,2),(130,-210787200,1),(130,-195066000,2),(130,-179337600,1),(130,-163616400,2),(130,-147888000,5),(130,-100112400,2),(130,-84384000,1),(130,-68662800,2),(130,-52934400,1),(130,-37213200,2),(130,-21484800,1),(130,-5763600,2),(130,9964800,1),(130,25686000,2),(130,41414400,1),(130,57740400,2),(130,73468800,1),(130,89190000,2),(130,104918400,1),(130,120639600,2),(130,126691200,1),(130,152089200,2),(130,162374400,1),(130,183538800,2),(130,199267200,1),(130,215593200,2),(130,230716800,1),(130,247042800,5),(130,1143961200,1),(130,1162105200,2),(130,1173600000,1),(130,1194159600,5),(130,1205046000,6),(130,1225605600,5),(130,1236495600,6),(130,1257055200,5),(130,1268550000,6),(130,1289109600,5),(130,1299999600,6),(130,1320559200,5),(130,1331449200,6),(130,1352008800,5),(130,1362898800,6),(130,1383458400,5),(130,1394348400,6),(130,1414908000,5),(130,1425798000,6),(130,1446357600,5),(130,1457852400,6),(130,1478412000,5),(130,1489302000,6),(130,1509861600,5),(130,1520751600,6),(130,1541311200,5),(130,1552201200,6),(130,1572760800,5),(130,1583650800,6),(130,1604210400,5),(130,1615705200,6),(130,1636264800,5),(130,1647154800,6),(130,1667714400,5),(130,1678604400,6),(130,1699164000,5),(130,1710054000,6),(130,1730613600,5),(130,1741503600,6),(130,1762063200,5),(130,1772953200,6),(130,1793512800,5),(130,1805007600,6),(130,1825567200,5),(130,1836457200,6),(130,1857016800,5),(130,1867906800,6),(130,1888466400,5),(130,1899356400,6),(130,1919916000,5),(130,1930806000,6),(130,1951365600,5),(130,1962860400,6),(130,1983420000,5),(130,1994310000,6),(130,2014869600,5),(130,2025759600,6),(130,2046319200,5),(130,2057209200,6),(130,2077768800,5),(130,2088658800,6),(130,2109218400,5),(130,2120108400,6),(130,2140668000,5),(131,-2147483648,2),(131,-1633276800,1),(131,-1615136400,2),(131,-1601827200,1),(131,-1583686800,2),(131,-880214400,3),(131,-769395600,4),(131,-765392400,2),(131,-462996000,1),(131,-450291600,2),(131,-431539200,1),(131,-418237200,2),(131,-400089600,1),(131,-386787600,2),(131,-368640000,1),(131,-355338000,2),(131,-337190400,1),(131,-323888400,2),(131,-305740800,1),(131,-292438800,2),(131,-273686400,1),(131,-257965200,2),(131,-242236800,1),(131,-226515600,2),(131,-210787200,1),(131,-195066000,2),(131,-179337600,5),(131,-68662800,2),(131,-52934400,1),(131,-37213200,2),(131,-21484800,6),(131,-5767200,5),(131,9961200,6),(131,25682400,5),(131,1143961200,1),(131,1162105200,2),(131,1173600000,1),(131,1194159600,2),(131,1205049600,1),(131,1225609200,2),(131,1236499200,1),(131,1257058800,2),(131,1268553600,1),(131,1289113200,2),(131,1300003200,1),(131,1320562800,2),(131,1331452800,1),(131,1352012400,2),(131,1362902400,1),(131,1383462000,2),(131,1394352000,1),(131,1414911600,2),(131,1425801600,1),(131,1446361200,2),(131,1457856000,1),(131,1478415600,2),(131,1489305600,1),(131,1509865200,2),(131,1520755200,1),(131,1541314800,2),(131,1552204800,1),(131,1572764400,2),(131,1583654400,1),(131,1604214000,2),(131,1615708800,1),(131,1636268400,2),(131,1647158400,1),(131,1667718000,2),(131,1678608000,1),(131,1699167600,2),(131,1710057600,1),(131,1730617200,2),(131,1741507200,1),(131,1762066800,2),(131,1772956800,1),(131,1793516400,2),(131,1805011200,1),(131,1825570800,2),(131,1836460800,1),(131,1857020400,2),(131,1867910400,1),(131,1888470000,2),(131,1899360000,1),(131,1919919600,2),(131,1930809600,1),(131,1951369200,2),(131,1962864000,1),(131,1983423600,2),(131,1994313600,1),(131,2014873200,2),(131,2025763200,1),(131,2046322800,2),(131,2057212800,1),(131,2077772400,2),(131,2088662400,1),(131,2109222000,2),(131,2120112000,1),(131,2140671600,2),(132,-2147483648,2),(132,-1633276800,1),(132,-1615136400,2),(132,-1601827200,1),(132,-1583686800,2),(132,-880214400,3),(132,-769395600,4),(132,-765392400,2),(132,-495043200,5),(132,-21488400,6),(132,-5767200,5),(132,9961200,6),(132,25682400,5),(132,41410800,6),(132,57736800,5),(132,73465200,6),(132,89186400,5),(132,1143961200,6),(132,1162101600,5),(132,1173596400,6),(132,1194156000,5),(132,1205046000,6),(132,1225605600,5),(132,1236495600,6),(132,1257055200,5),(132,1268550000,6),(132,1289109600,5),(132,1299999600,6),(132,1320559200,5),(132,1331449200,6),(132,1352008800,5),(132,1362898800,6),(132,1383458400,5),(132,1394348400,6),(132,1414908000,5),(132,1425798000,6),(132,1446357600,5),(132,1457852400,6),(132,1478412000,5),(132,1489302000,6),(132,1509861600,5),(132,1520751600,6),(132,1541311200,5),(132,1552201200,6),(132,1572760800,5),(132,1583650800,6),(132,1604210400,5),(132,1615705200,6),(132,1636264800,5),(132,1647154800,6),(132,1667714400,5),(132,1678604400,6),(132,1699164000,5),(132,1710054000,6),(132,1730613600,5),(132,1741503600,6),(132,1762063200,5),(132,1772953200,6),(132,1793512800,5),(132,1805007600,6),(132,1825567200,5),(132,1836457200,6),(132,1857016800,5),(132,1867906800,6),(132,1888466400,5),(132,1899356400,6),(132,1919916000,5),(132,1930806000,6),(132,1951365600,5),(132,1962860400,6),(132,1983420000,5),(132,1994310000,6),(132,2014869600,5),(132,2025759600,6),(132,2046319200,5),(132,2057209200,6),(132,2077768800,5),(132,2088658800,6),(132,2109218400,5),(132,2120108400,6),(132,2140668000,5),(133,-2147483648,2),(133,-1633276800,1),(133,-1615136400,2),(133,-1601827200,1),(133,-1583686800,2),(133,-880214400,3),(133,-769395600,4),(133,-765392400,2),(133,-747244800,1),(133,-733942800,2),(133,-526492800,1),(133,-513190800,2),(133,-495043200,1),(133,-481741200,2),(133,-462996000,1),(133,-450291600,2),(133,-431539200,1),(133,-418237200,2),(133,-400089600,1),(133,-386787600,2),(133,-368640000,1),(133,-355338000,2),(133,-337190400,1),(133,-323888400,2),(133,-305740800,1),(133,-289414800,2),(133,-273686400,1),(133,-260989200,2),(133,-242236800,1),(133,-226515600,2),(133,-210787200,1),(133,-195066000,2),(133,-179337600,5),(133,-21488400,6),(133,-5767200,5),(133,9961200,6),(133,25682400,5),(133,1143961200,1),(133,1162105200,2),(133,1173600000,1),(133,1194159600,5),(133,1205046000,6),(133,1225605600,5),(133,1236495600,6),(133,1257055200,5),(133,1268550000,6),(133,1289109600,5),(133,1299999600,6),(133,1320559200,5),(133,1331449200,6),(133,1352008800,5),(133,1362898800,6),(133,1383458400,5),(133,1394348400,6),(133,1414908000,5),(133,1425798000,6),(133,1446357600,5),(133,1457852400,6),(133,1478412000,5),(133,1489302000,6),(133,1509861600,5),(133,1520751600,6),(133,1541311200,5),(133,1552201200,6),(133,1572760800,5),(133,1583650800,6),(133,1604210400,5),(133,1615705200,6),(133,1636264800,5),(133,1647154800,6),(133,1667714400,5),(133,1678604400,6),(133,1699164000,5),(133,1710054000,6),(133,1730613600,5),(133,1741503600,6),(133,1762063200,5),(133,1772953200,6),(133,1793512800,5),(133,1805007600,6),(133,1825567200,5),(133,1836457200,6),(133,1857016800,5),(133,1867906800,6),(133,1888466400,5),(133,1899356400,6),(133,1919916000,5),(133,1930806000,6),(133,1951365600,5),(133,1962860400,6),(133,1983420000,5),(133,1994310000,6),(133,2014869600,5),(133,2025759600,6),(133,2046319200,5),(133,2057209200,6),(133,2077768800,5),(133,2088658800,6),(133,2109218400,5),(133,2120108400,6),(133,2140668000,5),(134,-2147483648,2),(134,-1633276800,1),(134,-1615136400,2),(134,-1601827200,1),(134,-1583686800,2),(134,-880214400,3),(134,-769395600,4),(134,-765392400,2),(134,-747244800,1),(134,-733942800,2),(134,-715795200,1),(134,-702493200,2),(134,-684345600,1),(134,-671043600,2),(134,-652896000,1),(134,-639594000,2),(134,-620841600,1),(134,-608144400,2),(134,-589392000,1),(134,-576090000,2),(134,-557942400,1),(134,-544640400,2),(134,-526492800,1),(134,-513190800,2),(134,-495043200,1),(134,-481741200,2),(134,-463593600,1),(134,-447267600,2),(134,-431539200,1),(134,-415818000,2),(134,-400089600,1),(134,-386787600,2),(134,-368640000,1),(134,-355338000,2),(134,-337190400,1),(134,-323888400,2),(134,-305740800,1),(134,-292438800,2),(134,-273686400,5),(134,-21488400,6),(134,-5767200,5),(134,9961200,6),(134,25682400,5),(134,1143961200,1),(134,1162105200,2),(134,1173600000,6),(134,1194156000,5),(134,1205046000,6),(134,1225605600,5),(134,1236495600,6),(134,1257055200,5),(134,1268550000,6),(134,1289109600,5),(134,1299999600,6),(134,1320559200,5),(134,1331449200,6),(134,1352008800,5),(134,1362898800,6),(134,1383458400,5),(134,1394348400,6),(134,1414908000,5),(134,1425798000,6),(134,1446357600,5),(134,1457852400,6),(134,1478412000,5),(134,1489302000,6),(134,1509861600,5),(134,1520751600,6),(134,1541311200,5),(134,1552201200,6),(134,1572760800,5),(134,1583650800,6),(134,1604210400,5),(134,1615705200,6),(134,1636264800,5),(134,1647154800,6),(134,1667714400,5),(134,1678604400,6),(134,1699164000,5),(134,1710054000,6),(134,1730613600,5),(134,1741503600,6),(134,1762063200,5),(134,1772953200,6),(134,1793512800,5),(134,1805007600,6),(134,1825567200,5),(134,1836457200,6),(134,1857016800,5),(134,1867906800,6),(134,1888466400,5),(134,1899356400,6),(134,1919916000,5),(134,1930806000,6),(134,1951365600,5),(134,1962860400,6),(134,1983420000,5),(134,1994310000,6),(134,2014869600,5),(134,2025759600,6),(134,2046319200,5),(134,2057209200,6),(134,2077768800,5),(134,2088658800,6),(134,2109218400,5),(134,2120108400,6),(134,2140668000,5),(135,-2147483648,2),(135,-1633276800,1),(135,-1615136400,2),(135,-1601827200,1),(135,-1583686800,2),(135,-900259200,1),(135,-891795600,2),(135,-880214400,3),(135,-769395600,4),(135,-765392400,2),(135,-747244800,1),(135,-733942800,2),(135,-715795200,1),(135,-702493200,2),(135,-684345600,1),(135,-671043600,2),(135,-652896000,1),(135,-639594000,2),(135,-620841600,1),(135,-608144400,2),(135,-589392000,1),(135,-576090000,2),(135,-557942400,1),(135,-544640400,2),(135,-526492800,1),(135,-513190800,2),(135,-495043200,1),(135,-481741200,2),(135,-463593600,5),(135,-386787600,2),(135,-368640000,5),(135,-21488400,6),(135,-5767200,5),(135,9961200,6),(135,25682400,5),(135,1143961200,6),(135,1162101600,5),(135,1173596400,6),(135,1194156000,5),(135,1205046000,6),(135,1225605600,5),(135,1236495600,6),(135,1257055200,5),(135,1268550000,6),(135,1289109600,5),(135,1299999600,6),(135,1320559200,5),(135,1331449200,6),(135,1352008800,5),(135,1362898800,6),(135,1383458400,5),(135,1394348400,6),(135,1414908000,5),(135,1425798000,6),(135,1446357600,5),(135,1457852400,6),(135,1478412000,5),(135,1489302000,6),(135,1509861600,5),(135,1520751600,6),(135,1541311200,5),(135,1552201200,6),(135,1572760800,5),(135,1583650800,6),(135,1604210400,5),(135,1615705200,6),(135,1636264800,5),(135,1647154800,6),(135,1667714400,5),(135,1678604400,6),(135,1699164000,5),(135,1710054000,6),(135,1730613600,5),(135,1741503600,6),(135,1762063200,5),(135,1772953200,6),(135,1793512800,5),(135,1805007600,6),(135,1825567200,5),(135,1836457200,6),(135,1857016800,5),(135,1867906800,6),(135,1888466400,5),(135,1899356400,6),(135,1919916000,5),(135,1930806000,6),(135,1951365600,5),(135,1962860400,6),(135,1983420000,5),(135,1994310000,6),(135,2014869600,5),(135,2025759600,6),(135,2046319200,5),(135,2057209200,6),(135,2077768800,5),(135,2088658800,6),(135,2109218400,5),(135,2120108400,6),(135,2140668000,5),(136,-536457600,2),(136,-147888000,1),(136,-131558400,2),(136,294228000,3),(136,325674000,4),(136,341395200,3),(136,357123600,4),(136,372844800,3),(136,388573200,4),(136,404899200,3),(136,420022800,4),(136,436348800,3),(136,452077200,4),(136,467798400,3),(136,483526800,4),(136,499248000,3),(136,514976400,4),(136,530697600,3),(136,544611600,4),(136,562147200,3),(136,576061200,4),(136,594201600,3),(136,607510800,4),(136,625651200,3),(136,638960400,4),(136,657100800,3),(136,671014800,4),(136,688550400,3),(136,702464400,4),(136,720000000,3),(136,733914000,4),(136,752054400,3),(136,765363600,4),(136,783504000,3),(136,796813200,4),(136,814953600,3),(136,828867600,4),(136,846403200,3),(136,860317200,4),(136,877852800,3),(136,891766800,4),(136,909302400,3),(136,923216400,4),(136,941356800,3),(136,954666000,4),(136,972806400,3),(136,986115600,4),(136,1004256000,3),(136,1018170000,4),(136,1035705600,3),(136,1049619600,4),(136,1067155200,3),(136,1081069200,4),(136,1099209600,3),(136,1112518800,4),(136,1130659200,3),(136,1143968400,4),(136,1162108800,3),(136,1173603600,4),(136,1194163200,3),(136,1205053200,4),(136,1225612800,3),(136,1236502800,4),(136,1257062400,3),(136,1268557200,4),(136,1289116800,3),(136,1300006800,4),(136,1320566400,3),(136,1331456400,4),(136,1352016000,3),(136,1362906000,4),(136,1383465600,3),(136,1394355600,4),(136,1414915200,3),(136,1425805200,4),(136,1446364800,3),(136,1457859600,4),(136,1478419200,3),(136,1489309200,4),(136,1509868800,3),(136,1520758800,4),(136,1541318400,3),(136,1552208400,4),(136,1572768000,3),(136,1583658000,4),(136,1604217600,3),(136,1615712400,4),(136,1636272000,3),(136,1647162000,4),(136,1667721600,3),(136,1678611600,4),(136,1699171200,3),(136,1710061200,4),(136,1730620800,3),(136,1741510800,4),(136,1762070400,3),(136,1772960400,4),(136,1793520000,3),(136,1805014800,4),(136,1825574400,3),(136,1836464400,4),(136,1857024000,3),(136,1867914000,4),(136,1888473600,3),(136,1899363600,4),(136,1919923200,3),(136,1930813200,4),(136,1951372800,3),(136,1962867600,4),(136,1983427200,3),(136,1994317200,4),(136,2014876800,3),(136,2025766800,4),(136,2046326400,3),(136,2057216400,4),(136,2077776000,3),(136,2088666000,4),(136,2109225600,3),(136,2120115600,4),(136,2140675200,3),(137,-865296000,5),(137,-769395600,1),(137,-765396000,2),(137,-147898800,3),(137,-131569200,2),(137,325666800,4),(137,341388000,2),(137,357116400,4),(137,372837600,2),(137,388566000,4),(137,404892000,2),(137,420015600,4),(137,436341600,2),(137,452070000,4),(137,467791200,2),(137,483519600,4),(137,499240800,2),(137,514969200,4),(137,530690400,2),(137,544604400,4),(137,562140000,2),(137,576054000,4),(137,594194400,2),(137,607503600,4),(137,625644000,2),(137,638953200,4),(137,657093600,2),(137,671007600,4),(137,688543200,2),(137,702457200,4),(137,719992800,2),(137,733906800,4),(137,752047200,2),(137,765356400,4),(137,783496800,2),(137,796806000,4),(137,814946400,2),(137,828860400,4),(137,846396000,2),(137,860310000,4),(137,877845600,2),(137,891759600,4),(137,909295200,2),(137,923209200,4),(137,941349600,6),(137,954662400,7),(137,972802800,2),(137,986108400,4),(137,1004248800,2),(137,1018162800,4),(137,1035698400,2),(137,1049612400,4),(137,1067148000,2),(137,1081062000,4),(137,1099202400,2),(137,1112511600,4),(137,1130652000,2),(137,1143961200,4),(137,1162101600,2),(137,1173596400,4),(137,1194156000,2),(137,1205046000,4),(137,1225605600,2),(137,1236495600,4),(137,1257055200,2),(137,1268550000,4),(137,1289109600,2),(137,1299999600,4),(137,1320559200,2),(137,1331449200,4),(137,1352008800,2),(137,1362898800,4),(137,1383458400,2),(137,1394348400,4),(137,1414908000,2),(137,1425798000,4),(137,1446357600,2),(137,1457852400,4),(137,1478412000,2),(137,1489302000,4),(137,1509861600,2),(137,1520751600,4),(137,1541311200,2),(137,1552201200,4),(137,1572760800,2),(137,1583650800,4),(137,1604210400,2),(137,1615705200,4),(137,1636264800,2),(137,1647154800,4),(137,1667714400,2),(137,1678604400,4),(137,1699164000,2),(137,1710054000,4),(137,1730613600,2),(137,1741503600,4),(137,1762063200,2),(137,1772953200,4),(137,1793512800,2),(137,1805007600,4),(137,1825567200,2),(137,1836457200,4),(137,1857016800,2),(137,1867906800,4),(137,1888466400,2),(137,1899356400,4),(137,1919916000,2),(137,1930806000,4),(137,1951365600,2),(137,1962860400,4),(137,1983420000,2),(137,1994310000,4),(137,2014869600,2),(137,2025759600,4),(137,2046319200,2),(137,2057209200,4),(137,2077768800,2),(137,2088658800,4),(137,2109218400,2),(137,2120108400,4),(137,2140668000,2),(138,-2147483648,1),(138,-1827687170,2),(138,126687600,3),(138,152085600,2),(138,162370800,3),(138,183535200,2),(138,199263600,3),(138,215589600,2),(138,230713200,3),(138,247039200,2),(138,262767600,3),(138,278488800,2),(138,294217200,3),(138,309938400,2),(138,325666800,3),(138,341388000,2),(138,357116400,3),(138,372837600,2),(138,388566000,3),(138,404892000,2),(138,420015600,3),(138,436341600,2),(139,-2147483648,1),(139,-1567453392,2),(139,-1233432000,3),(139,-1222981200,2),(139,-1205956800,3),(139,-1194037200,2),(139,-1172865600,3),(139,-1162501200,2),(139,-1141329600,3),(139,-1130965200,2),(139,-1109793600,3),(139,-1099429200,2),(139,-1078257600,3),(139,-1067806800,2),(139,-1046635200,3),(139,-1036270800,2),(139,-1015099200,3),(139,-1004734800,2),(139,-983563200,3),(139,-973198800,2),(139,-952027200,3),(139,-941576400,2),(139,-931032000,3),(139,-900882000,2),(139,-890337600,3),(139,-833749200,2),(139,-827265600,3),(139,-752274000,2),(139,-733780800,3),(139,-197326800,2),(139,-190843200,3),(139,-184194000,2),(139,-164491200,3),(139,-152658000,2),(139,-132955200,3),(139,-121122000,2),(139,-101419200,3),(139,-86821200,2),(139,-71092800,3),(139,-54766800,2),(139,-39038400,3),(139,-23317200,2),(139,-7588800,5),(139,128142000,4),(139,136605600,5),(139,596948400,4),(139,605066400,5),(139,624423600,4),(139,636516000,2),(139,657086400,3),(139,669178800,2),(139,686721600,4),(139,699415200,5),(139,719377200,4),(139,731469600,5),(139,938919600,3),(139,952052400,5),(139,1198983600,4),(139,1205632800,5),(139,2147483647,5),(140,-2147483648,1),(140,-880207200,2),(140,-769395600,3),(140,-765385200,1),(140,-21477600,4),(140,-5756400,1),(140,9972000,4),(140,25693200,1),(140,41421600,4),(140,57747600,1),(140,73476000,4),(140,89197200,1),(140,104925600,4),(140,120646800,1),(140,126698400,4),(140,152096400,1),(140,162381600,4),(140,183546000,1),(140,199274400,4),(140,215600400,1),(140,230724000,4),(140,247050000,1),(140,262778400,4),(140,278499600,1),(140,294228000,4),(140,309949200,1),(140,325677600,5),(140,341402400,1),(140,357127200,4),(140,372848400,1),(140,388576800,4),(140,404902800,1),(140,420026400,4),(140,436352400,6),(140,439030800,8),(140,452084400,7),(140,467805600,8),(140,483534000,7),(140,499255200,8),(140,514983600,7),(140,530704800,8),(140,544618800,7),(140,562154400,8),(140,576068400,7),(140,594208800,8),(140,607518000,7),(140,625658400,8),(140,638967600,7),(140,657108000,8),(140,671022000,7),(140,688557600,8),(140,702471600,7),(140,720007200,8),(140,733921200,7),(140,752061600,8),(140,765370800,7),(140,783511200,8),(140,796820400,7),(140,814960800,8),(140,828874800,7),(140,846410400,8),(140,860324400,7),(140,877860000,8),(140,891774000,7),(140,909309600,8),(140,923223600,7),(140,941364000,8),(140,954673200,7),(140,972813600,8),(140,986122800,7),(140,1004263200,8),(140,1018177200,7),(140,1035712800,8),(140,1049626800,7),(140,1067162400,8),(140,1081076400,7),(140,1099216800,8),(140,1112526000,7),(140,1130666400,8),(140,1143975600,7),(140,1162116000,8),(140,1173610800,7),(140,1194170400,8),(140,1205060400,7),(140,1225620000,8),(140,1236510000,7),(140,1257069600,8),(140,1268564400,7),(140,1289124000,8),(140,1300014000,7),(140,1320573600,8),(140,1331463600,7),(140,1352023200,8),(140,1362913200,7),(140,1383472800,8),(140,1394362800,7),(140,1414922400,8),(140,1425812400,7),(140,1446372000,8),(140,1457866800,7),(140,1478426400,8),(140,1489316400,7),(140,1509876000,8),(140,1520766000,7),(140,1541325600,8),(140,1552215600,7),(140,1572775200,8),(140,1583665200,7),(140,1604224800,8),(140,1615719600,7),(140,1636279200,8),(140,1647169200,7),(140,1667728800,8),(140,1678618800,7),(140,1699178400,8),(140,1710068400,7),(140,1730628000,8),(140,1741518000,7),(140,1762077600,8),(140,1772967600,7),(140,1793527200,8),(140,1805022000,7),(140,1825581600,8),(140,1836471600,7),(140,1857031200,8),(140,1867921200,7),(140,1888480800,8),(140,1899370800,7),(140,1919930400,8),(140,1930820400,7),(140,1951380000,8),(140,1962874800,7),(140,1983434400,8),(140,1994324400,7),(140,2014884000,8),(140,2025774000,7),(140,2046333600,8),(140,2057223600,7),(140,2077783200,8),(140,2088673200,7),(140,2109232800,8),(140,2120122800,7),(140,2140682400,8),(141,-2147483648,2),(141,-1633276800,1),(141,-1615136400,2),(141,-1601827200,1),(141,-1583686800,2),(141,-1535904000,1),(141,-1525280400,2),(141,-905097600,1),(141,-891795600,2),(141,-880214400,3),(141,-769395600,4),(141,-765392400,2),(141,-747251940,1),(141,-744224400,2),(141,-620841600,1),(141,-608144400,2),(141,-589392000,1),(141,-576090000,2),(141,-557942400,1),(141,-544640400,2),(141,-526492800,1),(141,-513190800,2),(141,-495043200,1),(141,-481741200,2),(141,-463593600,1),(141,-450291600,2),(141,-431539200,1),(141,-415818000,2),(141,-400089600,1),(141,-384368400,2),(141,-368640000,1),(141,-352918800,2),(141,-337190400,1),(141,-321469200,2),(141,-305740800,1),(141,-289414800,2),(141,-273686400,1),(141,-266432400,5),(141,-52938000,6),(141,-37216800,5),(141,-21488400,6),(141,-5767200,5),(141,9961200,6),(141,25682400,5),(141,41410800,6),(141,57736800,5),(141,73465200,6),(141,89186400,5),(141,104914800,6),(141,120636000,5),(141,126687600,1),(141,152089200,5),(141,162370800,6),(141,183535200,5),(141,199263600,6),(141,215589600,5),(141,230713200,6),(141,247039200,5),(141,262767600,6),(141,278488800,5),(141,294217200,6),(141,309938400,5),(141,325666800,6),(141,341388000,5),(141,357116400,6),(141,372837600,5),(141,388566000,6),(141,404892000,5),(141,420015600,6),(141,436341600,5),(141,452070000,6),(141,467791200,5),(141,483519600,6),(141,499240800,5),(141,514969200,6),(141,530690400,5),(141,544604400,6),(141,562140000,5),(141,576054000,6),(141,594194400,5),(141,607503600,6),(141,625644000,5),(141,638953200,6),(141,657093600,5),(141,671007600,6),(141,688543200,5),(141,702457200,6),(141,719992800,5),(141,733906800,6),(141,752047200,5),(141,765356400,6),(141,783496800,5),(141,796806000,6),(141,814946400,5),(141,828860400,6),(141,846396000,5),(141,860310000,6),(141,877845600,5),(141,891759600,6),(141,909295200,5),(141,923209200,6),(141,941349600,5),(141,954658800,6),(141,972799200,5),(141,986108400,6),(141,1004248800,5),(141,1018162800,6),(141,1035698400,5),(141,1049612400,6),(141,1067148000,5),(141,1081062000,6),(141,1099202400,5),(141,1112511600,6),(141,1130652000,5),(141,1143961200,6),(141,1162101600,5),(141,1173596400,6),(141,1194156000,5),(141,1205046000,6),(141,1225605600,5),(141,1236495600,6),(141,1257055200,5),(141,1268550000,6),(141,1289109600,5),(141,1299999600,6),(141,1320559200,5),(141,1331449200,6),(141,1352008800,5),(141,1362898800,6),(141,1383458400,5),(141,1394348400,6),(141,1414908000,5),(141,1425798000,6),(141,1446357600,5),(141,1457852400,6),(141,1478412000,5),(141,1489302000,6),(141,1509861600,5),(141,1520751600,6),(141,1541311200,5),(141,1552201200,6),(141,1572760800,5),(141,1583650800,6),(141,1604210400,5),(141,1615705200,6),(141,1636264800,5),(141,1647154800,6),(141,1667714400,5),(141,1678604400,6),(141,1699164000,5),(141,1710054000,6),(141,1730613600,5),(141,1741503600,6),(141,1762063200,5),(141,1772953200,6),(141,1793512800,5),(141,1805007600,6),(141,1825567200,5),(141,1836457200,6),(141,1857016800,5),(141,1867906800,6),(141,1888466400,5),(141,1899356400,6),(141,1919916000,5),(141,1930806000,6),(141,1951365600,5),(141,1962860400,6),(141,1983420000,5),(141,1994310000,6),(141,2014869600,5),(141,2025759600,6),(141,2046319200,5),(141,2057209200,6),(141,2077768800,5),(141,2088658800,6),(141,2109218400,5),(141,2120108400,6),(141,2140668000,5),(142,-2147483648,2),(142,-1633276800,1),(142,-1615136400,2),(142,-1601827200,1),(142,-1583686800,2),(142,-880214400,3),(142,-769395600,4),(142,-765392400,2),(142,-52934400,1),(142,-37213200,2),(142,-21484800,1),(142,-5763600,2),(142,9964800,1),(142,25686000,2),(142,41414400,1),(142,57740400,2),(142,73468800,1),(142,89190000,2),(142,104918400,1),(142,120639600,2),(142,126691200,1),(142,152089200,2),(142,162374400,1),(142,183538800,2),(142,199267200,1),(142,215593200,2),(142,230716800,1),(142,247042800,2),(142,262771200,1),(142,278492400,2),(142,294220800,1),(142,309942000,2),(142,325670400,1),(142,341391600,2),(142,357120000,1),(142,372841200,2),(142,388569600,1),(142,404895600,2),(142,420019200,1),(142,436345200,2),(142,452073600,1),(142,467794800,2),(142,483523200,1),(142,499244400,2),(142,514972800,1),(142,530694000,2),(142,544608000,1),(142,562143600,2),(142,576057600,1),(142,594198000,2),(142,607507200,1),(142,625647600,2),(142,638956800,1),(142,657097200,2),(142,671011200,1),(142,688546800,2),(142,702460800,1),(142,719996400,2),(142,733910400,1),(142,752050800,2),(142,765360000,1),(142,783500400,2),(142,796809600,1),(142,814950000,2),(142,828864000,1),(142,846399600,2),(142,860313600,1),(142,877849200,2),(142,891763200,1),(142,909298800,2),(142,923212800,1),(142,941353200,2),(142,954662400,1),(142,972802800,6),(142,986108400,5),(142,1004248800,6),(142,1018162800,5),(142,1035698400,6),(142,1049612400,5),(142,1067148000,6),(142,1081062000,5),(142,1099202400,6),(142,1112511600,5),(142,1130652000,6),(142,1143961200,5),(142,1162101600,6),(142,1173596400,5),(142,1194156000,6),(142,1205046000,5),(142,1225605600,6),(142,1236495600,5),(142,1257055200,6),(142,1268550000,5),(142,1289109600,6),(142,1299999600,5),(142,1320559200,6),(142,1331449200,5),(142,1352008800,6),(142,1362898800,5),(142,1383458400,6),(142,1394348400,5),(142,1414908000,6),(142,1425798000,5),(142,1446357600,6),(142,1457852400,5),(142,1478412000,6),(142,1489302000,5),(142,1509861600,6),(142,1520751600,5),(142,1541311200,6),(142,1552201200,5),(142,1572760800,6),(142,1583650800,5),(142,1604210400,6),(142,1615705200,5),(142,1636264800,6),(142,1647154800,5),(142,1667714400,6),(142,1678604400,5),(142,1699164000,6),(142,1710054000,5),(142,1730613600,6),(142,1741503600,5),(142,1762063200,6),(142,1772953200,5),(142,1793512800,6),(142,1805007600,5),(142,1825567200,6),(142,1836457200,5),(142,1857016800,6),(142,1867906800,5),(142,1888466400,6),(142,1899356400,5),(142,1919916000,6),(142,1930806000,5),(142,1951365600,6),(142,1962860400,5),(142,1983420000,6),(142,1994310000,5),(142,2014869600,6),(142,2025759600,5),(142,2046319200,6),(142,2057209200,5),(142,2077768800,6),(142,2088658800,5),(142,2109218400,6),(142,2120108400,5),(142,2140668000,6),(143,-2147483648,2),(143,-1633276800,1),(143,-1615136400,2),(143,-1601827200,1),(143,-1583686800,2),(143,-880214400,3),(143,-769395600,4),(143,-765392400,2),(143,-715795200,1),(143,-702493200,2),(143,-684345600,1),(143,-671043600,2),(143,-652896000,1),(143,-639594000,2),(143,-620841600,1),(143,-608144400,2),(143,-589392000,1),(143,-576090000,2),(143,-557942400,1),(143,-544640400,2),(143,-526492800,1),(143,-513190800,2),(143,-495043200,1),(143,-481741200,2),(143,-463593600,1),(143,-447267600,2),(143,-431539200,1),(143,-415818000,2),(143,-400089600,1),(143,-386787600,2),(143,-368640000,1),(143,-355338000,2),(143,-337190400,1),(143,-321469200,2),(143,-305740800,1),(143,-289414800,2),(143,-273686400,1),(143,-257965200,2),(143,-242236800,5),(143,-195066000,2),(143,-84384000,1),(143,-68662800,2),(143,-52934400,1),(143,-37213200,2),(143,-21484800,1),(143,-5763600,2),(143,9964800,1),(143,25686000,2),(143,41414400,1),(143,57740400,2),(143,73468800,1),(143,89190000,2),(143,104918400,1),(143,120639600,2),(143,126691200,1),(143,152089200,2),(143,162374400,1),(143,183538800,2),(143,199267200,1),(143,215593200,2),(143,230716800,1),(143,247042800,2),(143,262771200,1),(143,278492400,2),(143,294220800,1),(143,309942000,2),(143,325670400,1),(143,341391600,2),(143,357120000,1),(143,372841200,2),(143,388569600,1),(143,404895600,2),(143,420019200,1),(143,436345200,2),(143,452073600,1),(143,467794800,2),(143,483523200,1),(143,499244400,2),(143,514972800,1),(143,530694000,2),(143,544608000,1),(143,562143600,2),(143,576057600,1),(143,594198000,2),(143,607507200,1),(143,625647600,2),(143,638956800,1),(143,657097200,2),(143,671011200,1),(143,688546800,5),(143,1143961200,1),(143,1162105200,2),(143,1173600000,1),(143,1194159600,2),(143,1205049600,1),(143,1225609200,2),(143,1236499200,1),(143,1257058800,2),(143,1268553600,1),(143,1289113200,2),(143,1300003200,1),(143,1320562800,2),(143,1331452800,1),(143,1352012400,2),(143,1362902400,1),(143,1383462000,2),(143,1394352000,1),(143,1414911600,2),(143,1425801600,1),(143,1446361200,2),(143,1457856000,1),(143,1478415600,2),(143,1489305600,1),(143,1509865200,2),(143,1520755200,1),(143,1541314800,2),(143,1552204800,1),(143,1572764400,2),(143,1583654400,1),(143,1604214000,2),(143,1615708800,1),(143,1636268400,2),(143,1647158400,1),(143,1667718000,2),(143,1678608000,1),(143,1699167600,2),(143,1710057600,1),(143,1730617200,2),(143,1741507200,1),(143,1762066800,2),(143,1772956800,1),(143,1793516400,2),(143,1805011200,1),(143,1825570800,2),(143,1836460800,1),(143,1857020400,2),(143,1867910400,1),(143,1888470000,2),(143,1899360000,1),(143,1919919600,2),(143,1930809600,1),(143,1951369200,2),(143,1962864000,1),(143,1983423600,2),(143,1994313600,1),(143,2014873200,2),(143,2025763200,1),(143,2046322800,2),(143,2057212800,1),(143,2077772400,2),(143,2088662400,1),(143,2109222000,2),(143,2120112000,1),(143,2140671600,2),(144,-2147483648,1),(144,-873057600,3),(144,-769395600,2),(144,-765399600,1),(145,-2147483648,1),(145,-1205954844,2),(145,-1192307244,3),(145,2147483647,3),(146,-2147483648,1),(146,-1938538284,3),(146,-1009825200,2),(146,-1002052800,3),(146,-986756400,2),(146,-971035200,3),(146,-955306800,2),(146,-939585600,3),(146,504939600,2),(146,512712000,3),(146,536475600,2),(146,544248000,3),(146,631170000,2),(146,638942400,3),(146,757400400,2),(146,765172800,3),(146,2147483647,3),(147,-2147483648,2),(147,-1633269600,1),(147,-1615129200,2),(147,-1601820000,1),(147,-1583679600,2),(147,-880207200,3),(147,-769395600,4),(147,-765385200,2),(147,-687967140,1),(147,-662655600,2),(147,-620838000,1),(147,-608137200,2),(147,-589388400,1),(147,-576082800,2),(147,-557938800,1),(147,-544633200,2),(147,-526489200,1),(147,-513183600,2),(147,-495039600,1),(147,-481734000,2),(147,-463590000,1),(147,-450284400,2),(147,-431535600,1),(147,-418230000,2),(147,-400086000,1),(147,-386780400,2),(147,-368636400,1),(147,-355330800,2),(147,-337186800,1),(147,-323881200,2),(147,-305737200,1),(147,-292431600,2),(147,-273682800,1),(147,-260982000,2),(147,-242233200,1),(147,-226508400,2),(147,-210783600,1),(147,-195058800,2),(147,-179334000,1),(147,-163609200,2),(147,-147884400,1),(147,-131554800,2),(147,-116434800,1),(147,-100105200,2),(147,-84376800,1),(147,-68655600,2),(147,-52927200,1),(147,-37206000,2),(147,-21477600,1),(147,-5756400,2),(147,9972000,1),(147,25693200,2),(147,41421600,1),(147,57747600,2),(147,73476000,1),(147,89197200,2),(147,104925600,1),(147,120646800,2),(147,126698400,1),(147,152096400,2),(147,162381600,1),(147,183546000,2),(147,199274400,1),(147,215600400,2),(147,230724000,1),(147,247050000,2),(147,262778400,1),(147,278499600,2),(147,294228000,1),(147,309949200,2),(147,325677600,1),(147,341398800,2),(147,357127200,1),(147,372848400,2),(147,388576800,1),(147,404902800,2),(147,420026400,1),(147,436352400,2),(147,452080800,1),(147,467802000,2),(147,483530400,1),(147,499251600,2),(147,514980000,1),(147,530701200,2),(147,544615200,1),(147,562150800,2),(147,576064800,1),(147,594205200,2),(147,607514400,1),(147,625654800,2),(147,638964000,1),(147,657104400,2),(147,671018400,1),(147,688554000,2),(147,702468000,1),(147,720003600,2),(147,733917600,1),(147,752058000,2),(147,765367200,1),(147,783507600,2),(147,796816800,1),(147,814957200,2),(147,828871200,1),(147,846406800,2),(147,860320800,1),(147,877856400,2),(147,891770400,1),(147,909306000,2),(147,923220000,1),(147,941360400,2),(147,954669600,1),(147,972810000,2),(147,986119200,1),(147,1004259600,2),(147,1018173600,1),(147,1035709200,2),(147,1049623200,1),(147,1067158800,2),(147,1081072800,1),(147,1099213200,2),(147,1112522400,1),(147,1130662800,2),(147,1143972000,1),(147,1162112400,2),(147,1173607200,1),(147,1194166800,2),(147,1205056800,1),(147,1225616400,2),(147,1236506400,1),(147,1257066000,2),(147,1268560800,1),(147,1289120400,2),(147,1300010400,1),(147,1320570000,2),(147,1331460000,1),(147,1352019600,2),(147,1362909600,1),(147,1383469200,2),(147,1394359200,1),(147,1414918800,2),(147,1425808800,1),(147,1446368400,2),(147,1457863200,1),(147,1478422800,2),(147,1489312800,1),(147,1509872400,2),(147,1520762400,1),(147,1541322000,2),(147,1552212000,1),(147,1572771600,2),(147,1583661600,1),(147,1604221200,2),(147,1615716000,1),(147,1636275600,2),(147,1647165600,1),(147,1667725200,2),(147,1678615200,1),(147,1699174800,2),(147,1710064800,1),(147,1730624400,2),(147,1741514400,1),(147,1762074000,2),(147,1772964000,1),(147,1793523600,2),(147,1805018400,1),(147,1825578000,2),(147,1836468000,1),(147,1857027600,2),(147,1867917600,1),(147,1888477200,2),(147,1899367200,1),(147,1919926800,2),(147,1930816800,1),(147,1951376400,2),(147,1962871200,1),(147,1983430800,2),(147,1994320800,1),(147,2014880400,2),(147,2025770400,1),(147,2046330000,2),(147,2057220000,1),(147,2077779600,2),(147,2088669600,1),(147,2109229200,2),(147,2120119200,1),(147,2140678800,2),(148,-2147483648,2),(148,-1633276800,1),(148,-1615136400,2),(148,-1601827200,1),(148,-1583686800,2),(148,-1535904000,1),(148,-1525280400,2),(148,-905097600,1),(148,-891795600,2),(148,-880214400,3),(148,-769395600,4),(148,-765392400,2),(148,-747251940,1),(148,-744224400,2),(148,-620841600,1),(148,-608144400,2),(148,-589392000,1),(148,-576090000,2),(148,-557942400,1),(148,-544640400,2),(148,-526492800,1),(148,-513190800,2),(148,-495043200,1),(148,-481741200,2),(148,-463593600,1),(148,-450291600,2),(148,-431539200,1),(148,-415818000,2),(148,-400089600,1),(148,-384368400,2),(148,-368640000,1),(148,-352918800,2),(148,-337190400,1),(148,-321469200,2),(148,-305740800,1),(148,-289414800,2),(148,-273686400,1),(148,-266432400,5),(148,-52938000,6),(148,-37216800,5),(148,-21488400,6),(148,-5767200,5),(148,9961200,6),(148,25682400,5),(148,41410800,6),(148,57736800,5),(148,73465200,6),(148,89186400,5),(148,104914800,6),(148,120636000,5),(148,126687600,1),(148,152089200,5),(148,162370800,6),(148,183535200,5),(148,199263600,6),(148,215589600,5),(148,230713200,6),(148,247039200,5),(148,262767600,6),(148,278488800,5),(148,294217200,6),(148,309938400,5),(148,325666800,6),(148,341388000,5),(148,357116400,6),(148,372837600,5),(148,388566000,6),(148,404892000,5),(148,420015600,6),(148,436341600,5),(148,452070000,6),(148,467791200,5),(148,483519600,6),(148,499240800,5),(148,514969200,6),(148,530690400,5),(148,544604400,6),(148,562140000,5),(148,576054000,6),(148,594194400,5),(148,607503600,6),(148,625644000,5),(148,638953200,6),(148,657093600,5),(148,671007600,6),(148,688543200,5),(148,702457200,6),(148,719992800,5),(148,733906800,6),(148,752047200,5),(148,765356400,6),(148,783496800,5),(148,796806000,6),(148,814946400,5),(148,828860400,6),(148,846396000,5),(148,860310000,6),(148,877845600,5),(148,891759600,6),(148,909295200,5),(148,923209200,6),(148,941349600,5),(148,954658800,6),(148,972799200,5),(148,986108400,6),(148,1004248800,5),(148,1018162800,6),(148,1035698400,5),(148,1049612400,6),(148,1067148000,5),(148,1081062000,6),(148,1099202400,5),(148,1112511600,6),(148,1130652000,5),(148,1143961200,6),(148,1162101600,5),(148,1173596400,6),(148,1194156000,5),(148,1205046000,6),(148,1225605600,5),(148,1236495600,6),(148,1257055200,5),(148,1268550000,6),(148,1289109600,5),(148,1299999600,6),(148,1320559200,5),(148,1331449200,6),(148,1352008800,5),(148,1362898800,6),(148,1383458400,5),(148,1394348400,6),(148,1414908000,5),(148,1425798000,6),(148,1446357600,5),(148,1457852400,6),(148,1478412000,5),(148,1489302000,6),(148,1509861600,5),(148,1520751600,6),(148,1541311200,5),(148,1552201200,6),(148,1572760800,5),(148,1583650800,6),(148,1604210400,5),(148,1615705200,6),(148,1636264800,5),(148,1647154800,6),(148,1667714400,5),(148,1678604400,6),(148,1699164000,5),(148,1710054000,6),(148,1730613600,5),(148,1741503600,6),(148,1762063200,5),(148,1772953200,6),(148,1793512800,5),(148,1805007600,6),(148,1825567200,5),(148,1836457200,6),(148,1857016800,5),(148,1867906800,6),(148,1888466400,5),(148,1899356400,6),(148,1919916000,5),(148,1930806000,6),(148,1951365600,5),(148,1962860400,6),(148,1983420000,5),(148,1994310000,6),(148,2014869600,5),(148,2025759600,6),(148,2046319200,5),(148,2057209200,6),(148,2077768800,5),(148,2088658800,6),(148,2109218400,5),(148,2120108400,6),(148,2140668000,5),(149,-2147483648,1),(149,-873057600,3),(149,-769395600,2),(149,-765399600,1),(150,-1767217028,2),(150,-1206957600,1),(150,-1191362400,2),(150,-1175374800,1),(150,-1159826400,2),(150,-633819600,1),(150,-622069200,2),(150,-602283600,1),(150,-591832800,2),(150,-570747600,1),(150,-560210400,2),(150,-539125200,1),(150,-531352800,2),(150,-191365200,1),(150,-184197600,2),(150,-155163600,1),(150,-150069600,2),(150,-128898000,1),(150,-121125600,2),(150,-99954000,1),(150,-89589600,2),(150,-68418000,1),(150,-57967200,2),(150,499748400,1),(150,511236000,2),(150,530593200,1),(150,540266400,2),(150,562129200,1),(150,571197600,2),(150,592974000,1),(150,602042400,2),(150,624423600,1),(150,634701600,2),(150,813726000,1),(150,824004000,2),(150,938919600,1),(150,951616800,2),(150,970974000,1),(150,972180000,2),(150,1003028400,1),(150,1013911200,2),(150,2147483647,2),(151,-2147483648,1),(151,-1121105688,2),(151,105084000,3),(151,161758800,2),(151,290584800,4),(151,299134800,2),(151,322034400,4),(151,330584400,2),(151,694260000,3),(151,717310800,2),(151,725868000,3),(151,852094800,2),(151,1113112800,4),(151,1128229200,2),(151,1146384000,4),(151,1159682400,2),(152,-1767211196,2),(152,-1206954000,1),(152,-1191358800,2),(152,-1175371200,1),(152,-1159822800,2),(152,-633816000,1),(152,-622065600,2),(152,-602280000,1),(152,-591829200,2),(152,-570744000,1),(152,-560206800,2),(152,-539121600,1),(152,-531349200,2),(152,-191361600,1),(152,-184194000,2),(152,-155160000,1),(152,-150066000,2),(152,-128894400,1),(152,-121122000,2),(152,-99950400,1),(152,-89586000,2),(152,-68414400,1),(152,-57963600,2),(152,499752000,1),(152,511239600,2),(152,530596800,1),(152,540270000,2),(152,562132800,1),(152,571201200,2),(152,750830400,1),(152,761713200,2),(152,2147483647,2),(153,-2147483648,1),(153,-873057600,3),(153,-769395600,2),(153,-765399600,1),(154,-2147483648,1),(154,-1851537340,2),(154,323841600,3),(154,338958000,2),(155,-1514743200,1),(155,576057600,2),(155,594198000,1),(155,828864000,2),(155,846399600,1),(155,860313600,2),(155,877849200,1),(155,891763200,2),(155,909298800,1),(155,923212800,2),(155,941353200,1),(155,954662400,2),(155,972802800,1),(155,989136000,2),(155,1001833200,1),(155,1018166400,2),(155,1035702000,1),(155,1049616000,2),(155,1067151600,1),(155,1081065600,2),(155,1099206000,1),(155,1112515200,2),(155,1130655600,1),(155,1143964800,2),(155,1162105200,1),(155,1175414400,2),(155,1193554800,1),(155,1207468800,2),(155,1225004400,1),(155,1238918400,2),(155,1256454000,1),(155,1268553600,2),(155,1289113200,1),(155,1300003200,2),(155,1320562800,1),(155,1331452800,2),(155,1352012400,1),(155,1362902400,2),(155,1383462000,1),(155,1394352000,2),(155,1414911600,1),(155,1425801600,2),(155,1446361200,1),(155,1457856000,2),(155,1478415600,1),(155,1489305600,2),(155,1509865200,1),(155,1520755200,2),(155,1541314800,1),(155,1552204800,2),(155,1572764400,1),(155,1583654400,2),(155,1604214000,1),(155,1615708800,2),(155,1636268400,1),(155,1647158400,2),(155,1667718000,1),(155,1678608000,2),(155,1699167600,1),(155,1710057600,2),(155,1730617200,1),(155,1741507200,2),(155,1762066800,1),(155,1772956800,2),(155,1793516400,1),(155,1805011200,2),(155,1825570800,1),(155,1836460800,2),(155,1857020400,1),(155,1867910400,2),(155,1888470000,1),(155,1899360000,2),(155,1919919600,1),(155,1930809600,2),(155,1951369200,1),(155,1962864000,2),(155,1983423600,1),(155,1994313600,2),(155,2014873200,1),(155,2025763200,2),(155,2046322800,1),(155,2057212800,2),(155,2077772400,1),(155,2088662400,2),(155,2109222000,1),(155,2120112000,2),(155,2140671600,1),(156,-1514739600,1),(156,-1343066400,2),(156,-1234807200,1),(156,-1220292000,2),(156,-1207159200,1),(156,-1191344400,2),(156,-873828000,1),(156,-661539600,3),(156,28800,1),(156,828867600,4),(156,846403200,1),(156,860317200,4),(156,877852800,1),(156,891766800,4),(156,909302400,1),(156,923216400,4),(156,941356800,1),(156,954666000,4),(156,972806400,1),(156,989139600,4),(156,1001836800,1),(156,1018170000,4),(156,1035705600,1),(156,1049619600,4),(156,1067155200,1),(156,1081069200,4),(156,1099209600,1),(156,1112518800,4),(156,1130659200,1),(156,1143968400,4),(156,1162108800,1),(156,1175418000,4),(156,1193558400,1),(156,1207472400,4),(156,1225008000,1),(156,1238922000,4),(156,1256457600,1),(156,1270371600,4),(156,1288512000,1),(156,1301821200,4),(156,1319961600,1),(156,1333270800,4),(156,1351411200,1),(156,1365325200,4),(156,1382860800,1),(156,1396774800,4),(156,1414310400,1),(156,1428224400,4),(156,1445760000,1),(156,1459674000,4),(156,1477814400,1),(156,1491123600,4),(156,1509264000,1),(156,1522573200,4),(156,1540713600,1),(156,1554627600,4),(156,1572163200,1),(156,1586077200,4),(156,1603612800,1),(156,1617526800,4),(156,1635667200,1),(156,1648976400,4),(156,1667116800,1),(156,1680426000,4),(156,1698566400,1),(156,1712480400,4),(156,1730016000,1),(156,1743930000,4),(156,1761465600,1),(156,1775379600,4),(156,1792915200,1),(156,1806829200,4),(156,1824969600,1),(156,1838278800,4),(156,1856419200,1),(156,1869728400,4),(156,1887868800,1),(156,1901782800,4),(156,1919318400,1),(156,1933232400,4),(156,1950768000,1),(156,1964682000,4),(156,1982822400,1),(156,1996131600,4),(156,2014272000,1),(156,2027581200,4),(156,2045721600,1),(156,2059030800,4),(156,2077171200,1),(156,2091085200,4),(156,2108620800,1),(156,2122534800,4),(156,2140070400,1),(157,-2147483648,1),(157,-1567453392,2),(157,-1233432000,3),(157,-1222981200,2),(157,-1205956800,3),(157,-1194037200,2),(157,-1172865600,3),(157,-1162501200,2),(157,-1141329600,3),(157,-1130965200,2),(157,-1109793600,3),(157,-1099429200,2),(157,-1078257600,3),(157,-1067806800,2),(157,-1046635200,3),(157,-1036270800,2),(157,-1015099200,3),(157,-1004734800,2),(157,-983563200,3),(157,-973198800,2),(157,-952027200,3),(157,-941576400,2),(157,-931032000,3),(157,-900882000,2),(157,-890337600,3),(157,-833749200,2),(157,-827265600,3),(157,-752274000,2),(157,-733780800,3),(157,-197326800,2),(157,-190843200,3),(157,-184194000,2),(157,-164491200,3),(157,-152658000,2),(157,-132955200,3),(157,-121122000,2),(157,-101419200,3),(157,-86821200,2),(157,-71092800,3),(157,-54766800,2),(157,-39038400,3),(157,-23317200,2),(157,-7588800,5),(157,128142000,4),(157,136605600,5),(157,596948400,4),(157,605066400,5),(157,624423600,4),(157,636516000,2),(157,655963200,3),(157,667796400,2),(157,687499200,3),(157,699418800,2),(157,719380800,4),(157,731469600,5),(157,938919600,3),(157,952052400,5),(157,1085281200,2),(157,1096171200,5),(157,1198983600,4),(157,1205632800,5),(157,2147483647,5),(158,-2147483648,2),(158,-1633276800,1),(158,-1615136400,2),(158,-1601827200,1),(158,-1583686800,2),(158,-880214400,3),(158,-769395600,4),(158,-765392400,2),(158,-747244800,1),(158,-733942800,2),(158,-116438400,1),(158,-100112400,2),(158,-21484800,5),(158,104914800,1),(158,120639600,2),(158,126691200,1),(158,152089200,2),(158,162374400,1),(158,183538800,2),(158,199267200,1),(158,215593200,2),(158,230716800,1),(158,247042800,2),(158,262771200,1),(158,278492400,2),(158,294220800,1),(158,309942000,2),(158,325670400,1),(158,341391600,2),(158,357120000,1),(158,372841200,2),(158,388569600,1),(158,404895600,2),(158,420019200,1),(158,436345200,2),(158,452073600,1),(158,467794800,2),(158,483523200,1),(158,499244400,2),(158,514972800,1),(158,530694000,2),(158,544608000,1),(158,562143600,2),(158,576057600,1),(158,594198000,2),(158,607507200,1),(158,625647600,2),(158,638956800,1),(158,657097200,2),(158,671011200,1),(158,688546800,2),(158,702460800,1),(158,719996400,2),(158,733910400,1),(158,752050800,2),(158,765360000,1),(158,783500400,2),(158,796809600,1),(158,814950000,2),(158,828864000,1),(158,846399600,2),(158,860313600,1),(158,877849200,2),(158,891763200,1),(158,909298800,2),(158,923212800,1),(158,941353200,2),(158,954662400,1),(158,972802800,2),(158,986112000,1),(158,1004252400,2),(158,1018166400,1),(158,1035702000,2),(158,1049616000,1),(158,1067151600,2),(158,1081065600,1),(158,1099206000,2),(158,1112515200,1),(158,1130655600,2),(158,1143964800,1),(158,1162105200,2),(158,1173600000,1),(158,1194159600,2),(158,1205049600,1),(158,1225609200,2),(158,1236499200,1),(158,1257058800,2),(158,1268553600,1),(158,1289113200,2),(158,1300003200,1),(158,1320562800,2),(158,1331452800,1),(158,1352012400,2),(158,1362902400,1),(158,1383462000,2),(158,1394352000,1),(158,1414911600,2),(158,1425801600,1),(158,1446361200,2),(158,1457856000,1),(158,1478415600,2),(158,1489305600,1),(158,1509865200,2),(158,1520755200,1),(158,1541314800,2),(158,1552204800,1),(158,1572764400,2),(158,1583654400,1),(158,1604214000,2),(158,1615708800,1),(158,1636268400,2),(158,1647158400,1),(158,1667718000,2),(158,1678608000,1),(158,1699167600,2),(158,1710057600,1),(158,1730617200,2),(158,1741507200,1),(158,1762066800,2),(158,1772956800,1),(158,1793516400,2),(158,1805011200,1),(158,1825570800,2),(158,1836460800,1),(158,1857020400,2),(158,1867910400,1),(158,1888470000,2),(158,1899360000,1),(158,1919919600,2),(158,1930809600,1),(158,1951369200,2),(158,1962864000,1),(158,1983423600,2),(158,1994313600,1),(158,2014873200,2),(158,2025763200,1),(158,2046322800,2),(158,2057212800,1),(158,2077772400,2),(158,2088662400,1),(158,2109222000,2),(158,2120112000,1),(158,2140671600,2),(159,-1514743200,1),(159,377935200,2),(159,407653200,1),(159,828864000,3),(159,846399600,1),(159,860313600,3),(159,877849200,1),(159,891763200,3),(159,909298800,1),(159,923212800,3),(159,941353200,1),(159,954662400,3),(159,972802800,1),(159,989136000,3),(159,1001833200,1),(159,1018166400,3),(159,1035702000,1),(159,1049616000,3),(159,1067151600,1),(159,1081065600,3),(159,1099206000,1),(159,1112515200,3),(159,1130655600,1),(159,1143964800,3),(159,1162105200,1),(159,1175414400,3),(159,1193554800,1),(159,1207468800,3),(159,1225004400,1),(159,1238918400,3),(159,1256454000,1),(159,1270368000,3),(159,1288508400,1),(159,1301817600,3),(159,1319958000,1),(159,1333267200,3),(159,1351407600,1),(159,1365321600,3),(159,1382857200,1),(159,1396771200,3),(159,1414306800,1),(159,1428220800,3),(159,1445756400,1),(159,1459670400,3),(159,1477810800,1),(159,1491120000,3),(159,1509260400,1),(159,1522569600,3),(159,1540710000,1),(159,1554624000,3),(159,1572159600,1),(159,1586073600,3),(159,1603609200,1),(159,1617523200,3),(159,1635663600,1),(159,1648972800,3),(159,1667113200,1),(159,1680422400,3),(159,1698562800,1),(159,1712476800,3),(159,1730012400,1),(159,1743926400,3),(159,1761462000,1),(159,1775376000,3),(159,1792911600,1),(159,1806825600,3),(159,1824966000,1),(159,1838275200,3),(159,1856415600,1),(159,1869724800,3),(159,1887865200,1),(159,1901779200,3),(159,1919314800,1),(159,1933228800,3),(159,1950764400,1),(159,1964678400,3),(159,1982818800,1),(159,1996128000,3),(159,2014268400,1),(159,2027577600,3),(159,2045718000,1),(159,2059027200,3),(159,2077167600,1),(159,2091081600,3),(159,2108617200,1),(159,2122531200,3),(159,2140066800,1),(160,-2147483648,1),(160,-880207200,2),(160,-769395600,3),(160,-765385200,1),(160,-21477600,4),(160,-5756400,1),(160,9972000,4),(160,25693200,1),(160,41421600,4),(160,57747600,1),(160,73476000,4),(160,89197200,1),(160,104925600,4),(160,120646800,1),(160,126698400,4),(160,152096400,1),(160,162381600,4),(160,183546000,1),(160,199274400,4),(160,215600400,1),(160,230724000,4),(160,247050000,1),(160,262778400,4),(160,278499600,1),(160,294228000,4),(160,309949200,1),(160,325677600,4),(160,341398800,1),(160,357127200,4),(160,372848400,1),(160,388576800,4),(160,404902800,1),(160,420026400,4),(160,436352400,1),(160,1446372000,5),(160,1457866800,6),(160,1478426400,5),(160,1489316400,6),(160,1509876000,5),(160,1520766000,6),(160,1541325600,1),(160,1547978400,5),(160,1552215600,6),(160,1572775200,5),(160,1583665200,6),(160,1604224800,5),(160,1615719600,6),(160,1636279200,5),(160,1647169200,6),(160,1667728800,5),(160,1678618800,6),(160,1699178400,5),(160,1710068400,6),(160,1730628000,5),(160,1741518000,6),(160,1762077600,5),(160,1772967600,6),(160,1793527200,5),(160,1805022000,6),(160,1825581600,5),(160,1836471600,6),(160,1857031200,5),(160,1867921200,6),(160,1888480800,5),(160,1899370800,6),(160,1919930400,5),(160,1930820400,6),(160,1951380000,5),(160,1962874800,6),(160,1983434400,5),(160,1994324400,6),(160,2014884000,5),(160,2025774000,6),(160,2046333600,5),(160,2057223600,6),(160,2077783200,5),(160,2088673200,6),(160,2109232800,5),(160,2120122800,6),(160,2140682400,5),(161,-1514739600,1),(161,-1343066400,2),(161,-1234807200,1),(161,-1220292000,2),(161,-1207159200,1),(161,-1191344400,2),(161,-975261600,3),(161,-963169200,2),(161,-917114400,3),(161,-907354800,2),(161,-821901600,4),(161,-810068400,2),(161,-627501600,3),(161,-612990000,2),(161,828864000,3),(161,846399600,2),(161,860313600,3),(161,877849200,2),(161,891763200,3),(161,909298800,2),(161,923212800,3),(161,941353200,2),(161,954662400,3),(161,972802800,2),(161,989136000,3),(161,1001833200,2),(161,1018166400,3),(161,1035702000,2),(161,1049616000,3),(161,1067151600,2),(161,1081065600,3),(161,1099206000,2),(161,1112515200,3),(161,1130655600,2),(161,1143964800,3),(161,1162105200,2),(161,1175414400,3),(161,1193554800,2),(161,1207468800,3),(161,1225004400,2),(161,1238918400,3),(161,1256454000,2),(161,1270368000,3),(161,1288508400,2),(161,1301817600,3),(161,1319958000,2),(161,1333267200,3),(161,1351407600,2),(161,1365321600,3),(161,1382857200,2),(161,1396771200,3),(161,1414306800,2),(161,1428220800,3),(161,1445756400,2),(161,1459670400,3),(161,1477810800,2),(161,1491120000,3),(161,1509260400,2),(161,1522569600,3),(161,1540710000,2),(161,1554624000,3),(161,1572159600,2),(161,1586073600,3),(161,1603609200,2),(161,1617523200,3),(161,1635663600,2),(161,1648972800,3),(161,1667113200,2),(161,1680422400,3),(161,1698562800,2),(161,1712476800,3),(161,1730012400,2),(161,1743926400,3),(161,1761462000,2),(161,1775376000,3),(161,1792911600,2),(161,1806825600,3),(161,1824966000,2),(161,1838275200,3),(161,1856415600,2),(161,1869724800,3),(161,1887865200,2),(161,1901779200,3),(161,1919314800,2),(161,1933228800,3),(161,1950764400,2),(161,1964678400,3),(161,1982818800,2),(161,1996128000,3),(161,2014268400,2),(161,2027577600,3),(161,2045718000,2),(161,2059027200,3),(161,2077167600,2),(161,2091081600,3),(161,2108617200,2),(161,2122531200,3),(161,2140066800,2),(162,-1850328920,1),(162,326001600,2),(162,544597200,3),(162,562132800,2),(162,576046800,3),(162,594187200,2),(162,607496400,3),(162,625636800,2),(162,638946000,3),(162,657086400,2),(162,671000400,3),(162,688536000,2),(162,702450000,3),(162,719985600,2),(162,733899600,3),(162,752040000,2),(162,765349200,3),(162,783489600,2),(162,796798800,3),(162,814939200,2),(162,828853200,3),(162,846388800,2),(162,860302800,3),(162,877838400,2),(162,891752400,3),(162,909288000,2),(162,923202000,3),(162,941342400,2),(162,954651600,3),(162,972792000,2),(162,986101200,3),(162,1004241600,2),(162,1018155600,3),(162,1035691200,2),(162,1049605200,3),(162,1067140800,2),(162,1081054800,3),(162,1099195200,2),(162,1112504400,3),(162,1130644800,2),(162,1143954000,3),(162,1162094400,2),(162,1173589200,3),(162,1194148800,2),(162,1205038800,3),(162,1225598400,2),(162,1236488400,3),(162,1257048000,2),(162,1268542800,3),(162,1289102400,2),(162,1299992400,3),(162,1320552000,2),(162,1331442000,3),(162,1352001600,2),(162,1362891600,3),(162,1383451200,2),(162,1394341200,3),(162,1414900800,2),(162,1425790800,3),(162,1446350400,2),(162,1457845200,3),(162,1478404800,2),(162,1489294800,3),(162,1509854400,2),(162,1520744400,3),(162,1541304000,2),(162,1552194000,3),(162,1572753600,2),(162,1583643600,3),(162,1604203200,2),(162,1615698000,3),(162,1636257600,2),(162,1647147600,3),(162,1667707200,2),(162,1678597200,3),(162,1699156800,2),(162,1710046800,3),(162,1730606400,2),(162,1741496400,3),(162,1762056000,2),(162,1772946000,3),(162,1793505600,2),(162,1805000400,3),(162,1825560000,2),(162,1836450000,3),(162,1857009600,2),(162,1867899600,3),(162,1888459200,2),(162,1899349200,3),(162,1919908800,2),(162,1930798800,3),(162,1951358400,2),(162,1962853200,3),(162,1983412800,2),(162,1994302800,3),(162,2014862400,2),(162,2025752400,3),(162,2046312000,2),(162,2057202000,3),(162,2077761600,2),(162,2088651600,3),(162,2109211200,2),(162,2120101200,3),(162,2140660800,2),(162,2147483647,2),(163,-2147483648,1),(163,-2131642800,3),(163,-1632074400,2),(163,-1615143600,3),(163,-1153681200,2),(163,-1145822400,3),(163,-1122231600,2),(163,-1114372800,3),(163,-1090782000,2),(163,-1082923200,3),(163,-1059332400,2),(163,-1051473600,3),(163,-1027882800,2),(163,-1020024000,3),(163,-996433200,2),(163,-988574400,3),(163,-965674800,2),(163,-955396800,3),(163,-934743600,2),(163,-923947200,3),(163,-904503600,2),(163,-891892800,3),(163,-880221600,4),(163,-769395600,5),(163,-765399600,3),(163,-747252000,2),(163,-733950000,3),(163,-715802400,2),(163,-702500400,3),(163,-684352800,2),(163,-671050800,3),(163,-652903200,2),(163,-639601200,3),(163,-620848800,2),(163,-608151600,3),(163,-589399200,2),(163,-576097200,3),(163,-557949600,2),(163,-544647600,3),(163,-526500000,2),(163,-513198000,3),(163,-495050400,2),(163,-481748400,3),(163,-463600800,2),(163,-450298800,3),(163,-431546400,2),(163,-418244400,3),(163,-400096800,2),(163,-384375600,3),(163,-368647200,2),(163,-352926000,3),(163,-337197600,2),(163,-321476400,3),(163,-305748000,2),(163,-289422000,3),(163,-273693600,2),(163,-257972400,3),(163,-242244000,2),(163,-226522800,3),(163,-210794400,2),(163,-195073200,3),(163,-179344800,2),(163,-163623600,3),(163,-147895200,2),(163,-131569200,3),(163,-116445600,2),(163,-100119600,3),(163,-84391200,2),(163,-68670000,3),(163,-52941600,2),(163,-37220400,3),(163,-21492000,2),(163,-5770800,3),(163,9957600,2),(163,25678800,3),(163,41407200,2),(163,57733200,3),(163,73461600,2),(163,89182800,3),(163,136360800,2),(163,152082000,3),(163,167810400,2),(163,183531600,3),(163,199260000,2),(163,215586000,3),(163,230709600,2),(163,247035600,3),(163,262764000,2),(163,278485200,3),(163,294213600,2),(163,309934800,3),(163,325663200,2),(163,341384400,3),(163,357112800,2),(163,372834000,3),(163,388562400,2),(163,404888400,3),(163,420012000,2),(163,436338000,3),(163,452066400,2),(163,467787600,3),(163,483516000,2),(163,499237200,3),(163,514965600,2),(163,530686800,3),(163,544600800,2),(163,562136400,3),(163,576050400,2),(163,594190800,3),(163,607500000,2),(163,625640400,3),(163,638949600,2),(163,657090000,3),(163,671004000,2),(163,688539600,3),(163,702453600,2),(163,719989200,3),(163,733896060,2),(163,752036460,3),(163,765345660,2),(163,783486060,3),(163,796795260,2),(163,814935660,3),(163,828849660,2),(163,846385260,3),(163,860299260,2),(163,877834860,3),(163,891748860,2),(163,909284460,3),(163,923198460,2),(163,941338860,3),(163,954648060,2),(163,972788460,3),(163,986097660,2),(163,1004238060,3),(163,1018152060,2),(163,1035687660,3),(163,1049601660,2),(163,1067137260,3),(163,1081051260,2),(163,1099191660,3),(163,1112500860,2),(163,1130641260,3),(163,1143950460,2),(163,1162090860,3),(163,1173592800,2),(163,1194152400,3),(163,1205042400,2),(163,1225602000,3),(163,1236492000,2),(163,1257051600,3),(163,1268546400,2),(163,1289106000,3),(163,1299996000,2),(163,1320555600,3),(163,1331445600,2),(163,1352005200,3),(163,1362895200,2),(163,1383454800,3),(163,1394344800,2),(163,1414904400,3),(163,1425794400,2),(163,1446354000,3),(163,1457848800,2),(163,1478408400,3),(163,1489298400,2),(163,1509858000,3),(163,1520748000,2),(163,1541307600,3),(163,1552197600,2),(163,1572757200,3),(163,1583647200,2),(163,1604206800,3),(163,1615701600,2),(163,1636261200,3),(163,1647151200,2),(163,1667710800,3),(163,1678600800,2),(163,1699160400,3),(163,1710050400,2),(163,1730610000,3),(163,1741500000,2),(163,1762059600,3),(163,1772949600,2),(163,1793509200,3),(163,1805004000,2),(163,1825563600,3),(163,1836453600,2),(163,1857013200,3),(163,1867903200,2),(163,1888462800,3),(163,1899352800,2),(163,1919912400,3),(163,1930802400,2),(163,1951362000,3),(163,1962856800,2),(163,1983416400,3),(163,1994306400,2),(163,2014866000,3),(163,2025756000,2),(163,2046315600,3),(163,2057205600,2),(163,2077765200,3),(163,2088655200,2),(163,2109214800,3),(163,2120104800,2),(163,2140664400,3),(164,-1514743200,1),(164,576057600,2),(164,594198000,1),(164,828864000,2),(164,846399600,1),(164,860313600,2),(164,877849200,1),(164,891763200,2),(164,909298800,1),(164,923212800,2),(164,941353200,1),(164,954662400,2),(164,972802800,1),(164,989136000,2),(164,1001833200,1),(164,1018166400,2),(164,1035702000,1),(164,1049616000,2),(164,1067151600,1),(164,1081065600,2),(164,1099206000,1),(164,1112515200,2),(164,1130655600,1),(164,1143964800,2),(164,1162105200,1),(164,1175414400,2),(164,1193554800,1),(164,1207468800,2),(164,1225004400,1),(164,1238918400,2),(164,1256454000,1),(164,1270368000,2),(164,1288508400,1),(164,1301817600,2),(164,1319958000,1),(164,1333267200,2),(164,1351407600,1),(164,1365321600,2),(164,1382857200,1),(164,1396771200,2),(164,1414306800,1),(164,1428220800,2),(164,1445756400,1),(164,1459670400,2),(164,1477810800,1),(164,1491120000,2),(164,1509260400,1),(164,1522569600,2),(164,1540710000,1),(164,1554624000,2),(164,1572159600,1),(164,1586073600,2),(164,1603609200,1),(164,1617523200,2),(164,1635663600,1),(164,1648972800,2),(164,1667113200,1),(164,1680422400,2),(164,1698562800,1),(164,1712476800,2),(164,1730012400,1),(164,1743926400,2),(164,1761462000,1),(164,1775376000,2),(164,1792911600,1),(164,1806825600,2),(164,1824966000,1),(164,1838275200,2),(164,1856415600,1),(164,1869724800,2),(164,1887865200,1),(164,1901779200,2),(164,1919314800,1),(164,1933228800,2),(164,1950764400,1),(164,1964678400,2),(164,1982818800,1),(164,1996128000,2),(164,2014268400,1),(164,2027577600,2),(164,2045718000,1),(164,2059027200,2),(164,2077167600,1),(164,2091081600,2),(164,2108617200,1),(164,2122531200,2),(164,2140066800,1),(165,-1942690509,1),(165,-1567455309,2),(165,-1459627200,4),(165,-1443819600,3),(165,-1428006600,4),(165,-1412283600,3),(165,-1396470600,4),(165,-1380747600,3),(165,-1141590600,4),(165,-1128286800,3),(165,-1110141000,4),(165,-1096837200,3),(165,-1078691400,4),(165,-1065387600,3),(165,-1047241800,4),(165,-1033938000,3),(165,-1015187400,4),(165,-1002488400,3),(165,-983737800,4),(165,-971038800,3),(165,-954707400,4),(165,-938984400,3),(165,-920838600,4),(165,-907534800,3),(165,-896819400,4),(165,-853621200,6),(165,-845847000,5),(165,-334789200,6),(165,-319671000,5),(165,-314226000,7),(165,-309996000,5),(165,-149720400,7),(165,-134604000,5),(165,-50446800,6),(165,-34205400,5),(165,9860400,7),(165,14176800,5),(165,72846000,7),(165,80100000,5),(165,127278000,8),(165,132111000,6),(165,147234600,5),(165,156913200,7),(165,165376800,5),(165,219812400,7),(165,226461600,5),(165,250052400,7),(165,257911200,5),(165,282711600,7),(165,289360800,5),(165,294202800,7),(165,322020000,5),(165,566449200,7),(165,573012000,5),(165,597812400,7),(165,605066400,5),(165,625633200,7),(165,635911200,5),(165,656478000,7),(165,667965600,5),(165,688532400,7),(165,699415200,5),(165,719377200,7),(165,730864800,5),(165,1095562800,7),(165,1111896000,5),(165,1128834000,7),(165,1142136000,5),(165,1159678800,7),(165,1173585600,5),(165,1191733200,7),(165,1205035200,5),(165,1223182800,7),(165,1236484800,5),(165,1254632400,7),(165,1268539200,5),(165,1286082000,7),(165,1299988800,5),(165,1317531600,7),(165,1331438400,5),(165,1349586000,7),(165,1362888000,5),(165,1381035600,7),(165,1394337600,5),(165,1412485200,7),(165,1425787200,5),(165,2147483647,5),(166,-2147483648,2),(166,-1632070800,1),(166,-1615140000,2),(166,-1601753400,1),(166,-1583697600,2),(166,-1567357200,1),(166,-1554667200,2),(166,-1534698000,1),(166,-1524074400,2),(166,-1503248400,1),(166,-1492365600,2),(166,-1471798800,1),(166,-1460916000,2),(166,-1440954000,1),(166,-1428861600,2),(166,-1409504400,1),(166,-1397412000,2),(166,-1378054800,1),(166,-1365962400,2),(166,-1346605200,1),(166,-1333908000,2),(166,-1315155600,1),(166,-1301853600,2),(166,-1283706000,1),(166,-1270404000,2),(166,-1252256400,1),(166,-1238954400,2),(166,-1220806800,1),(166,-1207504800,2),(166,-1188752400,1),(166,-1176055200,2),(166,-1157302800,1),(166,-1144000800,2),(166,-1125853200,1),(166,-1112551200,2),(166,-1094403600,1),(166,-1081101600,2),(166,-1062954000,1),(166,-1049652000,2),(166,-1031504400,1),(166,-1018202400,2),(166,-1000054800,1),(166,-986752800,2),(166,-968000400,1),(166,-955303200,2),(166,-936550800,1),(166,-880218000,3),(166,-769395600,4),(166,-765396000,2),(166,-747248400,1),(166,-733946400,2),(166,-715806000,1),(166,-702504000,2),(166,-684356400,1),(166,-671054400,2),(166,-652906800,1),(166,-634161600,2),(166,-620845200,1),(166,-602704800,2),(166,-589395600,1),(166,-576093600,2),(166,-557946000,1),(166,-544644000,2),(166,-526496400,1),(166,-513194400,2),(166,-495046800,1),(166,-481744800,2),(166,-463597200,1),(166,-450295200,2),(166,-431542800,1),(166,-418240800,2),(166,-400093200,1),(166,-384372000,2),(166,-368643600,1),(166,-352922400,2),(166,-337194000,1),(166,-321472800,2),(166,-305744400,1),(166,-289418400,2),(166,-273690000,1),(166,-257968800,2),(166,-242240400,1),(166,-226519200,2),(166,-210790800,1),(166,-195069600,2),(166,-179341200,1),(166,-163620000,2),(166,-147891600,1),(166,-131565600,2),(166,-116442000,1),(166,-100116000,2),(166,-84387600,1),(166,-68666400,2),(166,-52938000,1),(166,-37216800,2),(166,-21488400,1),(166,-5767200,2),(166,9961200,1),(166,25682400,2),(166,41410800,1),(166,57736800,2),(166,73465200,1),(166,89186400,2),(166,104914800,1),(166,120636000,2),(166,136364400,1),(166,152085600,2),(166,167814000,1),(166,183535200,2),(166,199263600,1),(166,215589600,2),(166,230713200,1),(166,247039200,2),(166,262767600,1),(166,278488800,2),(166,294217200,1),(166,309938400,2),(166,325666800,1),(166,341388000,2),(166,357116400,1),(166,372837600,2),(166,388566000,1),(166,404892000,2),(166,420015600,1),(166,436341600,2),(166,452070000,1),(166,467791200,2),(166,483519600,1),(166,499240800,2),(166,514969200,1),(166,530690400,2),(166,544604400,1),(166,562140000,2),(166,576054000,1),(166,594194400,2),(166,607503600,1),(166,625644000,2),(166,638953200,1),(166,657093600,2),(166,671007600,1),(166,688543200,2),(166,702457200,1),(166,719992800,2),(166,733906800,1),(166,752047200,2),(166,765356400,1),(166,783496800,2),(166,796806000,1),(166,814946400,2),(166,828860400,1),(166,846396000,2),(166,860310000,1),(166,877845600,2),(166,891759600,1),(166,909295200,2),(166,923209200,1),(166,941349600,2),(166,954658800,1),(166,972799200,2),(166,986108400,1),(166,1004248800,2),(166,1018162800,1),(166,1035698400,2),(166,1049612400,1),(166,1067148000,2),(166,1081062000,1),(166,1099202400,2),(166,1112511600,1),(166,1130652000,2),(166,1143961200,1),(166,1162101600,2),(166,1173596400,1),(166,1194156000,2),(166,1205046000,1),(166,1225605600,2),(166,1236495600,1),(166,1257055200,2),(166,1268550000,1),(166,1289109600,2),(166,1299999600,1),(166,1320559200,2),(166,1331449200,1),(166,1352008800,2),(166,1362898800,1),(166,1383458400,2),(166,1394348400,1),(166,1414908000,2),(166,1425798000,1),(166,1446357600,2),(166,1457852400,1),(166,1478412000,2),(166,1489302000,1),(166,1509861600,2),(166,1520751600,1),(166,1541311200,2),(166,1552201200,1),(166,1572760800,2),(166,1583650800,1),(166,1604210400,2),(166,1615705200,1),(166,1636264800,2),(166,1647154800,1),(166,1667714400,2),(166,1678604400,1),(166,1699164000,2),(166,1710054000,1),(166,1730613600,2),(166,1741503600,1),(166,1762063200,2),(166,1772953200,1),(166,1793512800,2),(166,1805007600,1),(166,1825567200,2),(166,1836457200,1),(166,1857016800,2),(166,1867906800,1),(166,1888466400,2),(166,1899356400,1),(166,1919916000,2),(166,1930806000,1),(166,1951365600,2),(166,1962860400,1),(166,1983420000,2),(166,1994310000,1),(166,2014869600,2),(166,2025759600,1),(166,2046319200,2),(166,2057209200,1),(166,2077768800,2),(166,2088658800,1),(166,2109218400,2),(166,2120108400,1),(166,2140668000,2),(167,-2147483648,1),(167,-873057600,3),(167,-769395600,2),(167,-765399600,1),(168,-2147483648,2),(168,-1632070800,1),(168,-1615140000,2),(168,-1601753400,1),(168,-1583697600,2),(168,-1567357200,1),(168,-1554667200,2),(168,-1534698000,1),(168,-1524074400,2),(168,-1503248400,1),(168,-1492365600,2),(168,-1471798800,1),(168,-1460916000,2),(168,-1440954000,1),(168,-1428861600,2),(168,-1409504400,1),(168,-1397412000,2),(168,-1378054800,1),(168,-1365962400,2),(168,-1346605200,1),(168,-1333908000,2),(168,-1315155600,1),(168,-1301853600,2),(168,-1283706000,1),(168,-1270404000,2),(168,-1252256400,1),(168,-1238954400,2),(168,-1220806800,1),(168,-1207504800,2),(168,-1188752400,1),(168,-1176055200,2),(168,-1157302800,1),(168,-1144000800,2),(168,-1125853200,1),(168,-1112551200,2),(168,-1094403600,1),(168,-1081101600,2),(168,-1062954000,1),(168,-1049652000,2),(168,-1031504400,1),(168,-1018202400,2),(168,-1000054800,1),(168,-986752800,2),(168,-968000400,1),(168,-955303200,2),(168,-936550800,1),(168,-880218000,3),(168,-769395600,4),(168,-765396000,2),(168,-747248400,1),(168,-733946400,2),(168,-715806000,1),(168,-702504000,2),(168,-684356400,1),(168,-671054400,2),(168,-652906800,1),(168,-634161600,2),(168,-620845200,1),(168,-602704800,2),(168,-589395600,1),(168,-576093600,2),(168,-557946000,1),(168,-544644000,2),(168,-526496400,1),(168,-513194400,2),(168,-495046800,1),(168,-481744800,2),(168,-463597200,1),(168,-450295200,2),(168,-431542800,1),(168,-418240800,2),(168,-400093200,1),(168,-384372000,2),(168,-368643600,1),(168,-352922400,2),(168,-337194000,1),(168,-321472800,2),(168,-305744400,1),(168,-289418400,2),(168,-273690000,1),(168,-257968800,2),(168,-242240400,1),(168,-226519200,2),(168,-210790800,1),(168,-195069600,2),(168,-179341200,1),(168,-163620000,2),(168,-147891600,1),(168,-131565600,2),(168,-116442000,1),(168,-100116000,2),(168,-84387600,1),(168,-68666400,2),(168,-52938000,1),(168,-37216800,2),(168,-21488400,1),(168,-5767200,2),(168,9961200,1),(168,25682400,2),(168,41410800,1),(168,57736800,2),(168,73465200,1),(168,89186400,2),(168,104914800,1),(168,120636000,2),(168,136364400,1),(168,152085600,2),(168,167814000,1),(168,183535200,2),(168,199263600,1),(168,215589600,2),(168,230713200,1),(168,247039200,2),(168,262767600,1),(168,278488800,2),(168,294217200,1),(168,309938400,2),(168,325666800,1),(168,341388000,2),(168,357116400,1),(168,372837600,2),(168,388566000,1),(168,404892000,2),(168,420015600,1),(168,436341600,2),(168,452070000,1),(168,467791200,2),(168,483519600,1),(168,499240800,2),(168,514969200,1),(168,530690400,2),(168,544604400,1),(168,562140000,2),(168,576054000,1),(168,594194400,2),(168,607503600,1),(168,625644000,2),(168,638953200,1),(168,657093600,2),(168,671007600,1),(168,688543200,2),(168,702457200,1),(168,719992800,2),(168,733906800,1),(168,752047200,2),(168,765356400,1),(168,783496800,2),(168,796806000,1),(168,814946400,2),(168,828860400,1),(168,846396000,2),(168,860310000,1),(168,877845600,2),(168,891759600,1),(168,909295200,2),(168,923209200,1),(168,941349600,2),(168,954658800,1),(168,972799200,2),(168,986108400,1),(168,1004248800,2),(168,1018162800,1),(168,1035698400,2),(168,1049612400,1),(168,1067148000,2),(168,1081062000,1),(168,1099202400,2),(168,1112511600,1),(168,1130652000,2),(168,1143961200,1),(168,1162101600,2),(168,1173596400,1),(168,1194156000,2),(168,1205046000,1),(168,1225605600,2),(168,1236495600,1),(168,1257055200,2),(168,1268550000,1),(168,1289109600,2),(168,1299999600,1),(168,1320559200,2),(168,1331449200,1),(168,1352008800,2),(168,1362898800,1),(168,1383458400,2),(168,1394348400,1),(168,1414908000,2),(168,1425798000,1),(168,1446357600,2),(168,1457852400,1),(168,1478412000,2),(168,1489302000,1),(168,1509861600,2),(168,1520751600,1),(168,1541311200,2),(168,1552201200,1),(168,1572760800,2),(168,1583650800,1),(168,1604210400,2),(168,1615705200,1),(168,1636264800,2),(168,1647154800,1),(168,1667714400,2),(168,1678604400,1),(168,1699164000,2),(168,1710054000,1),(168,1730613600,2),(168,1741503600,1),(168,1762063200,2),(168,1772953200,1),(168,1793512800,2),(168,1805007600,1),(168,1825567200,2),(168,1836457200,1),(168,1857016800,2),(168,1867906800,1),(168,1888466400,2),(168,1899356400,1),(168,1919916000,2),(168,1930806000,1),(168,1951365600,2),(168,1962860400,1),(168,1983420000,2),(168,1994310000,1),(168,2014869600,2),(168,2025759600,1),(168,2046319200,2),(168,2057209200,1),(168,2077768800,2),(168,2088658800,1),(168,2109218400,2),(168,2120108400,1),(168,2140668000,2),(169,-2147483648,3),(169,-1633280400,1),(169,-1615140000,2),(169,-1601830800,1),(169,-1583690400,2),(169,-1570381200,1),(169,-1551636000,2),(169,-1536512400,1),(169,-1523210400,2),(169,-1504458000,1),(169,-1491760800,2),(169,-1473008400,1),(169,-1459706400,2),(169,-1441558800,1),(169,-1428256800,2),(169,-1410109200,1),(169,-1396807200,2),(169,-1378659600,1),(169,-1365357600,2),(169,-1347210000,1),(169,-1333908000,2),(169,-1315155600,1),(169,-1301853600,2),(169,-1283706000,1),(169,-1270404000,2),(169,-1252256400,1),(169,-1238954400,2),(169,-1220806800,1),(169,-1207504800,2),(169,-1189357200,1),(169,-1176055200,2),(169,-1157302800,1),(169,-1144605600,2),(169,-1125853200,1),(169,-1112551200,2),(169,-1094403600,1),(169,-1081101600,2),(169,-1062954000,1),(169,-1049652000,2),(169,-1031504400,1),(169,-1018202400,2),(169,-1000054800,1),(169,-986752800,2),(169,-968000400,1),(169,-955303200,2),(169,-936550800,1),(169,-923248800,2),(169,-905101200,1),(169,-891799200,2),(169,-880218000,4),(169,-769395600,5),(169,-765396000,2),(169,-747248400,1),(169,-733946400,2),(169,-715798800,1),(169,-702496800,2),(169,-684349200,1),(169,-671047200,2),(169,-652899600,1),(169,-639597600,2),(169,-620845200,1),(169,-608148000,2),(169,-589395600,1),(169,-576093600,2),(169,-557946000,1),(169,-544644000,2),(169,-526496400,1),(169,-513194400,2),(169,-495046800,1),(169,-481744800,2),(169,-463597200,1),(169,-447271200,2),(169,-431542800,1),(169,-415821600,2),(169,-400093200,1),(169,-384372000,2),(169,-368643600,1),(169,-352922400,2),(169,-337194000,1),(169,-321472800,2),(169,-305744400,1),(169,-289418400,2),(169,-273690000,1),(169,-257968800,2),(169,-242240400,1),(169,-226519200,2),(169,-210790800,1),(169,-195069600,2),(169,-179341200,1),(169,-163620000,2),(169,-147891600,1),(169,-131565600,2),(169,-116442000,1),(169,-100116000,2),(169,-84387600,1),(169,-68666400,2),(169,-52938000,1),(169,-37216800,2),(169,-21488400,1),(169,-5767200,2),(169,9961200,1),(169,25682400,2),(169,41410800,1),(169,57736800,2),(169,73465200,1),(169,89186400,2),(169,104914800,1),(169,120636000,2),(169,126687600,1),(169,152085600,2),(169,162370800,1),(169,183535200,2),(169,199263600,1),(169,215589600,2),(169,230713200,1),(169,247039200,2),(169,262767600,1),(169,278488800,2),(169,294217200,1),(169,309938400,2),(169,325666800,1),(169,341388000,2),(169,357116400,1),(169,372837600,2),(169,388566000,1),(169,404892000,2),(169,420015600,1),(169,436341600,2),(169,452070000,1),(169,467791200,2),(169,483519600,1),(169,499240800,2),(169,514969200,1),(169,530690400,2),(169,544604400,1),(169,562140000,2),(169,576054000,1),(169,594194400,2),(169,607503600,1),(169,625644000,2),(169,638953200,1),(169,657093600,2),(169,671007600,1),(169,688543200,2),(169,702457200,1),(169,719992800,2),(169,733906800,1),(169,752047200,2),(169,765356400,1),(169,783496800,2),(169,796806000,1),(169,814946400,2),(169,828860400,1),(169,846396000,2),(169,860310000,1),(169,877845600,2),(169,891759600,1),(169,909295200,2),(169,923209200,1),(169,941349600,2),(169,954658800,1),(169,972799200,2),(169,986108400,1),(169,1004248800,2),(169,1018162800,1),(169,1035698400,2),(169,1049612400,1),(169,1067148000,2),(169,1081062000,1),(169,1099202400,2),(169,1112511600,1),(169,1130652000,2),(169,1143961200,1),(169,1162101600,2),(169,1173596400,1),(169,1194156000,2),(169,1205046000,1),(169,1225605600,2),(169,1236495600,1),(169,1257055200,2),(169,1268550000,1),(169,1289109600,2),(169,1299999600,1),(169,1320559200,2),(169,1331449200,1),(169,1352008800,2),(169,1362898800,1),(169,1383458400,2),(169,1394348400,1),(169,1414908000,2),(169,1425798000,1),(169,1446357600,2),(169,1457852400,1),(169,1478412000,2),(169,1489302000,1),(169,1509861600,2),(169,1520751600,1),(169,1541311200,2),(169,1552201200,1),(169,1572760800,2),(169,1583650800,1),(169,1604210400,2),(169,1615705200,1),(169,1636264800,2),(169,1647154800,1),(169,1667714400,2),(169,1678604400,1),(169,1699164000,2),(169,1710054000,1),(169,1730613600,2),(169,1741503600,1),(169,1762063200,2),(169,1772953200,1),(169,1793512800,2),(169,1805007600,1),(169,1825567200,2),(169,1836457200,1),(169,1857016800,2),(169,1867906800,1),(169,1888466400,2),(169,1899356400,1),(169,1919916000,2),(169,1930806000,1),(169,1951365600,2),(169,1962860400,1),(169,1983420000,2),(169,1994310000,1),(169,2014869600,2),(169,2025759600,1),(169,2046319200,2),(169,2057209200,1),(169,2077768800,2),(169,2088658800,1),(169,2109218400,2),(169,2120108400,1),(169,2140668000,2),(170,-2147483648,2),(170,-1632070800,1),(170,-1615140000,2),(170,-923252400,1),(170,-880218000,3),(170,-769395600,4),(170,-765396000,2),(170,136364400,1),(170,152085600,2),(170,167814000,1),(170,183535200,2),(170,199263600,1),(170,215589600,2),(170,230713200,1),(170,247039200,2),(170,262767600,1),(170,278488800,2),(170,294217200,1),(170,309938400,2),(170,325666800,1),(170,341388000,2),(170,357116400,1),(170,372837600,2),(170,388566000,1),(170,404892000,2),(170,420015600,1),(170,436341600,2),(170,452070000,1),(170,467791200,2),(170,483519600,1),(170,499240800,2),(170,514969200,1),(170,530690400,2),(170,544604400,1),(170,562140000,2),(170,576054000,1),(170,594194400,2),(170,607503600,1),(170,625644000,2),(170,638953200,1),(170,657093600,2),(170,671007600,1),(170,688543200,2),(170,702457200,1),(170,719992800,2),(170,733906800,1),(170,752047200,2),(170,765356400,1),(170,783496800,2),(170,796806000,1),(170,814946400,2),(170,828860400,1),(170,846396000,2),(170,860310000,1),(170,877845600,2),(170,891759600,1),(170,909295200,2),(170,923209200,1),(170,941349600,2),(170,954658800,1),(170,972799200,2),(170,986108400,1),(170,1004248800,2),(170,1018162800,1),(170,1035698400,2),(170,1049612400,1),(170,1067148000,2),(170,1081062000,1),(170,1099202400,2),(170,1112511600,1),(170,1130652000,2),(170,1143961200,1),(170,1162101600,2),(170,1173596400,1),(170,1194156000,2),(170,1205046000,1),(170,1225605600,2),(170,1236495600,1),(170,1257055200,2),(170,1268550000,1),(170,1289109600,2),(170,1299999600,1),(170,1320559200,2),(170,1331449200,1),(170,1352008800,2),(170,1362898800,1),(170,1383458400,2),(170,1394348400,1),(170,1414908000,2),(170,1425798000,1),(170,1446357600,2),(170,1457852400,1),(170,1478412000,2),(170,1489302000,1),(170,1509861600,2),(170,1520751600,1),(170,1541311200,2),(170,1552201200,1),(170,1572760800,2),(170,1583650800,1),(170,1604210400,2),(170,1615705200,1),(170,1636264800,2),(170,1647154800,1),(170,1667714400,2),(170,1678604400,1),(170,1699164000,2),(170,1710054000,1),(170,1730613600,2),(170,1741503600,1),(170,1762063200,2),(170,1772953200,1),(170,1793512800,2),(170,1805007600,1),(170,1825567200,2),(170,1836457200,1),(170,1857016800,2),(170,1867906800,1),(170,1888466400,2),(170,1899356400,1),(170,1919916000,2),(170,1930806000,1),(170,1951365600,2),(170,1962860400,1),(170,1983420000,2),(170,1994310000,1),(170,2014869600,2),(170,2025759600,1),(170,2046319200,2),(170,2057209200,1),(170,2077768800,2),(170,2088658800,1),(170,2109218400,2),(170,2120108400,1),(170,2140668000,2),(171,-2147483648,1),(171,-880196400,2),(171,-769395600,3),(171,-765374400,1),(171,-86878800,4),(171,-21466800,5),(171,-5745600,4),(171,9982800,5),(171,25704000,4),(171,41432400,5),(171,57758400,4),(171,73486800,5),(171,89208000,4),(171,104936400,5),(171,120657600,4),(171,126709200,5),(171,152107200,4),(171,162392400,5),(171,183556800,4),(171,199285200,5),(171,215611200,4),(171,230734800,5),(171,247060800,4),(171,262789200,5),(171,278510400,4),(171,294238800,5),(171,309960000,4),(171,325688400,5),(171,341409600,4),(171,357138000,5),(171,372859200,4),(171,388587600,5),(171,404913600,4),(171,420037200,5),(171,436363200,6),(171,439030800,8),(171,452084400,7),(171,467805600,8),(171,483534000,7),(171,499255200,8),(171,514983600,7),(171,530704800,8),(171,544618800,7),(171,562154400,8),(171,576068400,7),(171,594208800,8),(171,607518000,7),(171,625658400,8),(171,638967600,7),(171,657108000,8),(171,671022000,7),(171,688557600,8),(171,702471600,7),(171,720007200,8),(171,733921200,7),(171,752061600,8),(171,765370800,7),(171,783511200,8),(171,796820400,7),(171,814960800,8),(171,828874800,7),(171,846410400,8),(171,860324400,7),(171,877860000,8),(171,891774000,7),(171,909309600,8),(171,923223600,7),(171,941364000,8),(171,954673200,7),(171,972813600,8),(171,986122800,7),(171,1004263200,8),(171,1018177200,7),(171,1035712800,8),(171,1049626800,7),(171,1067162400,8),(171,1081076400,7),(171,1099216800,8),(171,1112526000,7),(171,1130666400,8),(171,1143975600,7),(171,1162116000,8),(171,1173610800,7),(171,1194170400,8),(171,1205060400,7),(171,1225620000,8),(171,1236510000,7),(171,1257069600,8),(171,1268564400,7),(171,1289124000,8),(171,1300014000,7),(171,1320573600,8),(171,1331463600,7),(171,1352023200,8),(171,1362913200,7),(171,1383472800,8),(171,1394362800,7),(171,1414922400,8),(171,1425812400,7),(171,1446372000,8),(171,1457866800,7),(171,1478426400,8),(171,1489316400,7),(171,1509876000,8),(171,1520766000,7),(171,1541325600,8),(171,1552215600,7),(171,1572775200,8),(171,1583665200,7),(171,1604224800,8),(171,1615719600,7),(171,1636279200,8),(171,1647169200,7),(171,1667728800,8),(171,1678618800,7),(171,1699178400,8),(171,1710068400,7),(171,1730628000,8),(171,1741518000,7),(171,1762077600,8),(171,1772967600,7),(171,1793527200,8),(171,1805022000,7),(171,1825581600,8),(171,1836471600,7),(171,1857031200,8),(171,1867921200,7),(171,1888480800,8),(171,1899370800,7),(171,1919930400,8),(171,1930820400,7),(171,1951380000,8),(171,1962874800,7),(171,1983434400,8),(171,1994324400,7),(171,2014884000,8),(171,2025774000,7),(171,2046333600,8),(171,2057223600,7),(171,2077783200,8),(171,2088673200,7),(171,2109232800,8),(171,2120122800,7),(171,2140682400,8),(172,-1767217820,2),(172,-1206961200,1),(172,-1191366000,2),(172,-1175378400,1),(172,-1159830000,2),(172,-633823200,1),(172,-622072800,2),(172,-602287200,1),(172,-591836400,2),(172,-570751200,1),(172,-560214000,2),(172,-539128800,1),(172,-531356400,2),(172,-191368800,1),(172,-184201200,2),(172,-155167200,1),(172,-150073200,2),(172,-128901600,1),(172,-121129200,2),(172,-99957600,1),(172,-89593200,2),(172,-68421600,1),(172,-57970800,2),(172,499744800,1),(172,511232400,2),(172,530589600,1),(172,540262800,2),(172,562125600,1),(172,571194000,2),(172,592970400,1),(172,602038800,2),(172,624420000,1),(172,634698000,2),(172,938916000,1),(172,951613200,2),(172,970970400,1),(172,971571600,2),(172,1003024800,1),(172,1013907600,2),(172,2147483647,2),(173,-2147483648,2),(173,-1633273200,1),(173,-1615132800,2),(173,-1601823600,1),(173,-1583683200,2),(173,-880210800,3),(173,-769395600,4),(173,-765388800,2),(173,-84380400,1),(173,-68659200,2),(173,-52930800,1),(173,-37209600,2),(173,-21481200,1),(173,-5760000,2),(173,9968400,1),(173,25689600,2),(173,41418000,1),(173,57744000,2),(173,73472400,1),(173,89193600,2),(173,104922000,1),(173,120643200,2),(173,126694800,1),(173,152092800,2),(173,162378000,1),(173,183542400,2),(173,199270800,1),(173,215596800,2),(173,230720400,1),(173,247046400,2),(173,262774800,1),(173,278496000,2),(173,294224400,1),(173,309945600,2),(173,325674000,1),(173,341395200,2),(173,357123600,1),(173,372844800,2),(173,388573200,1),(173,404899200,2),(173,420022800,1),(173,436348800,2),(173,452077200,1),(173,467798400,2),(173,483526800,1),(173,499248000,2),(173,514976400,1),(173,530697600,2),(173,544611600,1),(173,562147200,2),(173,576061200,1),(173,594201600,2),(173,607510800,1),(173,625651200,2),(173,638960400,1),(173,657100800,2),(173,671014800,1),(173,688550400,2),(173,702464400,1),(173,720000000,2),(173,733914000,1),(173,752054400,2),(173,765363600,1),(173,783504000,2),(173,796813200,1),(173,814953600,2),(173,828867600,1),(173,846403200,2),(173,860317200,1),(173,877852800,2),(173,891766800,1),(173,909302400,2),(173,923216400,1),(173,941356800,2),(173,954666000,1),(173,972806400,2),(173,986115600,1),(173,1004256000,2),(173,1018170000,1),(173,1035705600,2),(173,1049619600,1),(173,1067155200,2),(173,1081069200,1),(173,1099209600,2),(173,1112518800,1),(173,1130659200,2),(173,1143968400,1),(173,1162108800,2),(173,1173603600,1),(173,1194163200,2),(173,1205053200,1),(173,1225612800,2),(173,1236502800,1),(173,1257062400,2),(173,1268557200,1),(173,1289116800,6),(173,1300003200,5),(173,1320562800,6),(173,1331452800,5),(173,1352012400,6),(173,1362902400,5),(173,1383462000,6),(173,1394352000,5),(173,1414911600,6),(173,1425801600,5),(173,1446361200,6),(173,1457856000,5),(173,1478415600,6),(173,1489305600,5),(173,1509865200,6),(173,1520755200,5),(173,1541314800,6),(173,1552204800,5),(173,1572764400,6),(173,1583654400,5),(173,1604214000,6),(173,1615708800,5),(173,1636268400,6),(173,1647158400,5),(173,1667718000,6),(173,1678608000,5),(173,1699167600,6),(173,1710057600,5),(173,1730617200,6),(173,1741507200,5),(173,1762066800,6),(173,1772956800,5),(173,1793516400,6),(173,1805011200,5),(173,1825570800,6),(173,1836460800,5),(173,1857020400,6),(173,1867910400,5),(173,1888470000,6),(173,1899360000,5),(173,1919919600,6),(173,1930809600,5),(173,1951369200,6),(173,1962864000,5),(173,1983423600,6),(173,1994313600,5),(173,2014873200,6),(173,2025763200,5),(173,2046322800,6),(173,2057212800,5),(173,2077772400,6),(173,2088662400,5),(173,2109222000,6),(173,2120112000,5),(173,2140671600,6),(174,-2147483648,2),(174,-1633273200,1),(174,-1615132800,2),(174,-1601823600,1),(174,-1583683200,2),(174,-880210800,3),(174,-769395600,4),(174,-765388800,2),(174,-84380400,1),(174,-68659200,2),(174,-52930800,1),(174,-37209600,2),(174,-21481200,1),(174,-5760000,2),(174,9968400,1),(174,25689600,2),(174,41418000,1),(174,57744000,2),(174,73472400,1),(174,89193600,2),(174,104922000,1),(174,120643200,2),(174,126694800,1),(174,152092800,2),(174,162378000,1),(174,183542400,2),(174,199270800,1),(174,215596800,2),(174,230720400,1),(174,247046400,2),(174,262774800,1),(174,278496000,2),(174,294224400,1),(174,309945600,2),(174,325674000,1),(174,341395200,2),(174,357123600,1),(174,372844800,2),(174,388573200,1),(174,404899200,2),(174,420022800,1),(174,436348800,2),(174,452077200,1),(174,467798400,2),(174,483526800,1),(174,499248000,2),(174,514976400,1),(174,530697600,2),(174,544611600,1),(174,562147200,2),(174,576061200,1),(174,594201600,2),(174,607510800,1),(174,625651200,2),(174,638960400,1),(174,657100800,2),(174,671014800,1),(174,688550400,2),(174,702464400,1),(174,720000000,6),(174,733910400,5),(174,752050800,6),(174,765360000,5),(174,783500400,6),(174,796809600,5),(174,814950000,6),(174,828864000,5),(174,846399600,6),(174,860313600,5),(174,877849200,6),(174,891763200,5),(174,909298800,6),(174,923212800,5),(174,941353200,6),(174,954662400,5),(174,972802800,6),(174,986112000,5),(174,1004252400,6),(174,1018166400,5),(174,1035702000,6),(174,1049616000,5),(174,1067151600,6),(174,1081065600,5),(174,1099206000,6),(174,1112515200,5),(174,1130655600,6),(174,1143964800,5),(174,1162105200,6),(174,1173600000,5),(174,1194159600,6),(174,1205049600,5),(174,1225609200,6),(174,1236499200,5),(174,1257058800,6),(174,1268553600,5),(174,1289113200,6),(174,1300003200,5),(174,1320562800,6),(174,1331452800,5),(174,1352012400,6),(174,1362902400,5),(174,1383462000,6),(174,1394352000,5),(174,1414911600,6),(174,1425801600,5),(174,1446361200,6),(174,1457856000,5),(174,1478415600,6),(174,1489305600,5),(174,1509865200,6),(174,1520755200,5),(174,1541314800,6),(174,1552204800,5),(174,1572764400,6),(174,1583654400,5),(174,1604214000,6),(174,1615708800,5),(174,1636268400,6),(174,1647158400,5),(174,1667718000,6),(174,1678608000,5),(174,1699167600,6),(174,1710057600,5),(174,1730617200,6),(174,1741507200,5),(174,1762066800,6),(174,1772956800,5),(174,1793516400,6),(174,1805011200,5),(174,1825570800,6),(174,1836460800,5),(174,1857020400,6),(174,1867910400,5),(174,1888470000,6),(174,1899360000,5),(174,1919919600,6),(174,1930809600,5),(174,1951369200,6),(174,1962864000,5),(174,1983423600,6),(174,1994313600,5),(174,2014873200,6),(174,2025763200,5),(174,2046322800,6),(174,2057212800,5),(174,2077772400,6),(174,2088662400,5),(174,2109222000,6),(174,2120112000,5),(174,2140671600,6),(175,-2147483648,2),(175,-1633273200,1),(175,-1615132800,2),(175,-1601823600,1),(175,-1583683200,2),(175,-880210800,3),(175,-769395600,4),(175,-765388800,2),(175,-84380400,1),(175,-68659200,2),(175,-52930800,1),(175,-37209600,2),(175,-21481200,1),(175,-5760000,2),(175,9968400,1),(175,25689600,2),(175,41418000,1),(175,57744000,2),(175,73472400,1),(175,89193600,2),(175,104922000,1),(175,120643200,2),(175,126694800,1),(175,152092800,2),(175,162378000,1),(175,183542400,2),(175,199270800,1),(175,215596800,2),(175,230720400,1),(175,247046400,2),(175,262774800,1),(175,278496000,2),(175,294224400,1),(175,309945600,2),(175,325674000,1),(175,341395200,2),(175,357123600,1),(175,372844800,2),(175,388573200,1),(175,404899200,2),(175,420022800,1),(175,436348800,2),(175,452077200,1),(175,467798400,2),(175,483526800,1),(175,499248000,2),(175,514976400,1),(175,530697600,2),(175,544611600,1),(175,562147200,2),(175,576061200,1),(175,594201600,2),(175,607510800,1),(175,625651200,2),(175,638960400,1),(175,657100800,2),(175,671014800,1),(175,688550400,2),(175,702464400,1),(175,720000000,2),(175,733914000,1),(175,752054400,2),(175,765363600,1),(175,783504000,2),(175,796813200,1),(175,814953600,2),(175,828867600,1),(175,846403200,2),(175,860317200,1),(175,877852800,2),(175,891766800,1),(175,909302400,2),(175,923216400,1),(175,941356800,2),(175,954666000,1),(175,972806400,2),(175,986115600,1),(175,1004256000,2),(175,1018170000,1),(175,1035705600,2),(175,1049619600,1),(175,1067155200,6),(175,1081065600,5),(175,1099206000,6),(175,1112515200,5),(175,1130655600,6),(175,1143964800,5),(175,1162105200,6),(175,1173600000,5),(175,1194159600,6),(175,1205049600,5),(175,1225609200,6),(175,1236499200,5),(175,1257058800,6),(175,1268553600,5),(175,1289113200,6),(175,1300003200,5),(175,1320562800,6),(175,1331452800,5),(175,1352012400,6),(175,1362902400,5),(175,1383462000,6),(175,1394352000,5),(175,1414911600,6),(175,1425801600,5),(175,1446361200,6),(175,1457856000,5),(175,1478415600,6),(175,1489305600,5),(175,1509865200,6),(175,1520755200,5),(175,1541314800,6),(175,1552204800,5),(175,1572764400,6),(175,1583654400,5),(175,1604214000,6),(175,1615708800,5),(175,1636268400,6),(175,1647158400,5),(175,1667718000,6),(175,1678608000,5),(175,1699167600,6),(175,1710057600,5),(175,1730617200,6),(175,1741507200,5),(175,1762066800,6),(175,1772956800,5),(175,1793516400,6),(175,1805011200,5),(175,1825570800,6),(175,1836460800,5),(175,1857020400,6),(175,1867910400,5),(175,1888470000,6),(175,1899360000,5),(175,1919919600,6),(175,1930809600,5),(175,1951369200,6),(175,1962864000,5),(175,1983423600,6),(175,1994313600,5),(175,2014873200,6),(175,2025763200,5),(175,2046322800,6),(175,2057212800,5),(175,2077772400,6),(175,2088662400,5),(175,2109222000,6),(175,2120112000,5),(175,2140671600,6),(176,-1686083584,1),(176,323845200,4),(176,338950800,2),(176,354675600,3),(176,370400400,2),(176,386125200,3),(176,401850000,2),(176,417574800,3),(176,433299600,2),(176,449024400,3),(176,465354000,2),(176,481078800,3),(176,496803600,2),(176,512528400,3),(176,528253200,2),(176,543978000,3),(176,559702800,2),(176,575427600,3),(176,591152400,2),(176,606877200,3),(176,622602000,2),(176,638326800,3),(176,654656400,2),(176,670381200,3),(176,686106000,2),(176,701830800,3),(176,717555600,2),(176,733280400,3),(176,749005200,2),(176,764730000,3),(176,780454800,2),(176,796179600,3),(176,811904400,2),(176,828234000,3),(176,846378000,2),(176,859683600,3),(176,877827600,2),(176,891133200,3),(176,909277200,2),(176,922582800,3),(176,941331600,2),(176,954032400,3),(176,972781200,2),(176,985482000,3),(176,1004230800,2),(176,1017536400,3),(176,1035680400,2),(176,1048986000,3),(176,1067130000,2),(176,1080435600,3),(176,1099184400,2),(176,1111885200,3),(176,1130634000,2),(176,1143334800,3),(176,1162083600,2),(176,1174784400,3),(176,1193533200,2),(176,1206838800,3),(176,1224982800,2),(176,1238288400,3),(176,1256432400,2),(176,1269738000,3),(176,1288486800,2),(176,1301187600,3),(176,1319936400,2),(176,1332637200,3),(176,1351386000,2),(176,1364691600,3),(176,1382835600,2),(176,1396141200,3),(176,1414285200,2),(176,1427590800,3),(176,1445734800,2),(176,1459040400,3),(176,1477789200,2),(176,1490490000,3),(176,1509238800,2),(176,1521939600,3),(176,1540688400,2),(176,1553994000,3),(176,1572138000,2),(176,1585443600,3),(176,1603587600,2),(176,1616893200,3),(176,1635642000,2),(176,1648342800,3),(176,1667091600,2),(176,1679792400,3),(176,1698541200,2),(176,1711846800,3),(176,1729990800,2),(176,1743296400,3),(176,1761440400,2),(176,1774746000,3),(176,1792890000,2),(176,1806195600,3),(176,1824944400,2),(176,1837645200,3),(176,1856394000,2),(176,1869094800,3),(176,1887843600,2),(176,1901149200,3),(176,1919293200,2),(176,1932598800,3),(176,1950742800,2),(176,1964048400,3),(176,1982797200,2),(176,1995498000,3),(176,2014246800,2),(176,2026947600,3),(176,2045696400,2),(176,2058397200,3),(176,2077146000,2),(176,2090451600,3),(176,2108595600,2),(176,2121901200,3),(176,2140045200,2),(176,2147483647,2),(177,-1514739600,1),(177,-1343066400,2),(177,-1234807200,1),(177,-1220292000,2),(177,-1207159200,1),(177,-1191344400,2),(177,828864000,3),(177,846399600,2),(177,860313600,3),(177,877849200,2),(177,891766800,4),(177,909302400,1),(177,923216400,4),(177,941356800,1),(177,954666000,4),(177,972806400,1),(177,989139600,4),(177,1001836800,1),(177,1018170000,4),(177,1035705600,1),(177,1049619600,4),(177,1067155200,1),(177,1081069200,4),(177,1099209600,1),(177,1112518800,4),(177,1130659200,1),(177,1143968400,4),(177,1162108800,1),(177,1175418000,4),(177,1193558400,1),(177,1207472400,4),(177,1225008000,1),(177,1238922000,4),(177,1256457600,1),(177,1268557200,4),(177,1289116800,1),(177,1300006800,4),(177,1320566400,1),(177,1331456400,4),(177,1352016000,1),(177,1362906000,4),(177,1383465600,1),(177,1394355600,4),(177,1414915200,1),(177,1425805200,4),(177,1446364800,1),(177,1457859600,4),(177,1478419200,1),(177,1489309200,4),(177,1509868800,1),(177,1520758800,4),(177,1541318400,1),(177,1552208400,4),(177,1572768000,1),(177,1583658000,4),(177,1604217600,1),(177,1615712400,4),(177,1636272000,1),(177,1647162000,4),(177,1667721600,1),(177,1678611600,4),(177,1699171200,1),(177,1710061200,4),(177,1730620800,1),(177,1741510800,4),(177,1762070400,1),(177,1772960400,4),(177,1793520000,1),(177,1805014800,4),(177,1825574400,1),(177,1836464400,4),(177,1857024000,1),(177,1867914000,4),(177,1888473600,1),(177,1899363600,4),(177,1919923200,1),(177,1930813200,4),(177,1951372800,1),(177,1962867600,4),(177,1983427200,1),(177,1994317200,4),(177,2014876800,1),(177,2025766800,4),(177,2046326400,1),(177,2057216400,4),(177,2077776000,1),(177,2088666000,4),(177,2109225600,1),(177,2120115600,4),(177,2140675200,1),(178,-2147483648,1),(178,-1946918424,2),(179,-1546300800,3),(179,-880221600,1),(179,-769395600,2),(179,-765399600,3),(179,-147902400,4),(179,-131572800,3),(179,325663200,5),(179,341384400,3),(179,357112800,5),(179,372834000,3),(179,388562400,5),(179,404888400,3),(179,420012000,5),(179,436338000,3),(179,452066400,5),(179,467787600,3),(179,483516000,5),(179,499237200,3),(179,514965600,5),(179,530686800,3),(179,544600800,5),(179,562136400,3),(179,576050400,5),(179,594190800,3),(179,607500000,5),(179,625640400,3),(179,638949600,5),(179,657090000,3),(179,671004000,5),(179,688539600,3),(179,702453600,5),(179,719989200,3),(179,733903200,5),(179,752043600,3),(179,765352800,5),(179,783493200,3),(179,796802400,6),(179,814946400,7),(179,828860400,6),(179,846396000,7),(179,860310000,6),(179,877845600,7),(179,891759600,6),(179,909295200,7),(179,923209200,6),(179,941349600,8),(179,954662400,9),(179,972802800,7),(179,986108400,6),(179,1004248800,7),(179,1018162800,6),(179,1035698400,7),(179,1049612400,6),(179,1067148000,7),(179,1081062000,6),(179,1099202400,7),(179,1112511600,6),(179,1130652000,7),(179,1143961200,6),(179,1162101600,7),(179,1173596400,6),(179,1194156000,7),(179,1205046000,6),(179,1225605600,7),(179,1236495600,6),(179,1257055200,7),(179,1268550000,6),(179,1289109600,7),(179,1299999600,6),(179,1320559200,7),(179,1331449200,6),(179,1352008800,7),(179,1362898800,6),(179,1383458400,7),(179,1394348400,6),(179,1414908000,7),(179,1425798000,6),(179,1446357600,7),(179,1457852400,6),(179,1478412000,7),(179,1489302000,6),(179,1509861600,7),(179,1520751600,6),(179,1541311200,7),(179,1552201200,6),(179,1572760800,7),(179,1583650800,6),(179,1604210400,7),(179,1615705200,6),(179,1636264800,7),(179,1647154800,6),(179,1667714400,7),(179,1678604400,6),(179,1699164000,7),(179,1710054000,6),(179,1730613600,7),(179,1741503600,6),(179,1762063200,7),(179,1772953200,6),(179,1793512800,7),(179,1805007600,6),(179,1825567200,7),(179,1836457200,6),(179,1857016800,7),(179,1867906800,6),(179,1888466400,7),(179,1899356400,6),(179,1919916000,7),(179,1930806000,6),(179,1951365600,7),(179,1962860400,6),(179,1983420000,7),(179,1994310000,6),(179,2014869600,7),(179,2025759600,6),(179,2046319200,7),(179,2057209200,6),(179,2077768800,7),(179,2088658800,6),(179,2109218400,7),(179,2120108400,6),(179,2140668000,7),(180,-1861906760,1),(180,-1104524348,2),(180,-765317964,3),(180,465449400,4),(180,2147483647,4),(181,-2147483648,2),(181,-1633273200,1),(181,-1615132800,2),(181,-1601823600,1),(181,-1583683200,2),(181,-880210800,3),(181,-820519140,2),(181,-812653140,3),(181,-796845540,2),(181,-84380400,1),(181,-68659200,2),(182,-2147483648,1),(182,-1670483460,3),(182,421218000,2),(182,436334400,3),(182,452062800,2),(182,467784000,3),(182,483512400,2),(182,499233600,3),(182,514962000,2),(182,530683200,3),(182,546411600,2),(182,562132800,3),(182,576050400,4),(182,594194400,5),(182,607500000,4),(182,625644000,5),(182,638949600,4),(182,657093600,5),(182,671004000,4),(182,688543200,5),(182,702453600,4),(182,719992800,5),(182,733903200,4),(182,752047200,5),(182,765352800,4),(182,783496800,5),(182,796802400,4),(182,814946400,5),(182,828856800,4),(182,846396000,5),(182,860306400,4),(182,877845600,5),(182,1112504400,2),(182,1130644800,3),(182,1143954000,2),(182,1162094400,3),(182,1331449200,2),(182,1352008800,3),(182,1362898800,2),(182,1383458400,3),(182,1394348400,2),(182,1414908000,3),(182,1425798000,2),(182,1446357600,3),(182,1489302000,2),(182,1509861600,3),(182,1520751600,2),(182,1541311200,3),(182,1552201200,2),(182,1572760800,3),(182,1583650800,2),(182,1604210400,3),(182,1615705200,2),(182,1636264800,3),(182,1647154800,2),(182,1667714400,3),(182,1678604400,2),(182,1699164000,3),(182,1710054000,2),(182,1730613600,3),(182,1741503600,2),(182,1762063200,3),(182,1772953200,2),(182,1793512800,3),(182,1805007600,2),(182,1825567200,3),(182,1836457200,2),(182,1857016800,3),(182,1867906800,2),(182,1888466400,3),(182,1899356400,2),(182,1919916000,3),(182,1930806000,2),(182,1951365600,3),(182,1962860400,2),(182,1983420000,3),(182,1994310000,2),(182,2014869600,3),(182,2025759600,2),(182,2046319200,3),(182,2057209200,2),(182,2077768800,3),(182,2088658800,2),(182,2109218400,3),(182,2120108400,2),(182,2140668000,3),(183,-2147483648,1),(183,-873057600,3),(183,-769395600,2),(183,-765399600,1),(184,-1767209328,2),(184,-1206950400,1),(184,-1191355200,2),(184,-1175367600,1),(184,-1159819200,2),(184,-633812400,1),(184,-622062000,2),(184,-602276400,1),(184,-591825600,2),(184,-570740400,1),(184,-560203200,2),(184,-539118000,1),(184,-531345600,2),(184,-191358000,1),(184,-184190400,2),(184,-155156400,1),(184,-150062400,2),(184,-128890800,1),(184,-121118400,2),(184,-99946800,1),(184,-89582400,2),(184,-68410800,1),(184,-57960000,2),(184,499755600,1),(184,511243200,2),(184,530600400,1),(184,540273600,2),(184,562136400,1),(184,571204800,2),(184,1214283600,3),(184,1384056000,2),(184,2147483647,2),(185,-1767210264,2),(185,-1206954000,1),(185,-1191358800,2),(185,-1175371200,1),(185,-1159822800,2),(185,-633816000,1),(185,-622065600,2),(185,-602280000,1),(185,-591829200,2),(185,-570744000,1),(185,-560206800,2),(185,-539121600,1),(185,-531349200,2),(185,-191361600,1),(185,-184194000,2),(185,-155160000,1),(185,-150066000,2),(185,-128894400,1),(185,-121122000,2),(185,-99950400,1),(185,-89586000,2),(185,-68414400,1),(185,-57963600,2),(185,499752000,1),(185,511239600,2),(185,530596800,1),(185,540270000,2),(185,562132800,1),(185,571201200,2),(185,2147483647,2),(186,-2147483648,1),(186,-873057600,3),(186,-769395600,2),(186,-765399600,1),(187,-2147483648,1),(187,-1892661435,2),(187,-1688410800,1),(187,-1619205435,3),(187,-1593806400,1),(187,-1335986235,4),(187,-1317585600,2),(187,-1304362800,4),(187,-1286049600,2),(187,-1272826800,4),(187,-1254513600,2),(187,-1241290800,4),(187,-1222977600,2),(187,-1209754800,4),(187,-1191355200,2),(187,-1178132400,3),(187,-870552000,2),(187,-865278000,3),(187,-736632000,4),(187,-718056000,2),(187,-713649600,3),(187,-36619200,5),(187,-23922000,6),(187,-3355200,5),(187,7527600,6),(187,24465600,5),(187,37767600,6),(187,55915200,5),(187,69217200,6),(187,87969600,5),(187,100666800,6),(187,118209600,5),(187,132116400,6),(187,150868800,5),(187,163566000,6),(187,182318400,5),(187,195620400,6),(187,213768000,5),(187,227070000,6),(187,245217600,5),(187,258519600,6),(187,277272000,5),(187,289969200,6),(187,308721600,5),(187,321418800,6),(187,340171200,5),(187,353473200,6),(187,371620800,5),(187,384922800,6),(187,403070400,5),(187,416372400,6),(187,434520000,5),(187,447822000,6),(187,466574400,5),(187,479271600,6),(187,498024000,5),(187,510721200,6),(187,529473600,5),(187,545194800,6),(187,560923200,5),(187,574225200,6),(187,592372800,5),(187,605674800,6),(187,624427200,5),(187,637124400,6),(187,653457600,5),(187,668574000,6),(187,687326400,5),(187,700628400,6),(187,718776000,5),(187,732078000,6),(187,750225600,5),(187,763527600,6),(187,781675200,5),(187,794977200,6),(187,813729600,5),(187,826426800,6),(187,845179200,5),(187,859690800,6),(187,876628800,5),(187,889930800,6),(187,906868800,5),(187,923194800,6),(187,939528000,5),(187,952830000,6),(187,971582400,5),(187,984279600,6),(187,1003032000,5),(187,1015729200,6),(187,1034481600,5),(187,1047178800,6),(187,1065931200,5),(187,1079233200,6),(187,1097380800,5),(187,1110682800,6),(187,1128830400,5),(187,1142132400,6),(187,1160884800,5),(187,1173582000,6),(187,1192334400,5),(187,1206846000,6),(187,1223784000,5),(187,1237086000,6),(187,1255233600,5),(187,1270350000,6),(187,1286683200,5),(187,1304823600,6),(187,1313899200,5),(187,1335668400,6),(187,1346558400,5),(187,1367118000,6),(187,1378612800,5),(187,1398567600,6),(187,1410062400,5),(187,1463281200,6),(187,1471147200,5),(187,1480820400,7),(187,2147483647,7),(188,-2147483648,2),(188,-1632067200,1),(188,-1615136400,2),(188,-923248800,1),(188,-880214400,3),(188,-769395600,4),(188,-765392400,2),(188,136368000,1),(188,152089200,2),(188,167817600,1),(188,183538800,2),(188,199267200,1),(188,215593200,2),(188,230716800,1),(188,247042800,2),(188,262771200,1),(188,278492400,2),(188,294220800,1),(188,309942000,2),(188,325670400,1),(188,341391600,2),(188,357120000,1),(188,372841200,2),(188,388569600,1),(188,404895600,2),(188,420019200,1),(188,436345200,2),(188,452073600,1),(188,467794800,2),(188,483523200,1),(188,499244400,2),(188,514972800,1),(188,530694000,2),(188,544608000,1),(188,562143600,2),(188,576057600,1),(188,594198000,2),(188,607507200,1),(188,625647600,2),(188,638956800,1),(188,657097200,2),(188,671011200,1),(188,688546800,2),(188,702460800,1),(188,719996400,2),(188,733910400,1),(188,752050800,2),(188,765360000,1),(188,783500400,2),(188,796809600,1),(188,814950000,2),(188,828864000,1),(188,846399600,2),(188,860313600,1),(188,877849200,2),(188,891763200,1),(188,909298800,2),(188,923212800,1),(188,941353200,2),(188,954662400,1),(188,972802800,2),(188,986112000,1),(188,1004252400,2),(188,1018166400,1),(188,1035702000,2),(188,1049616000,1),(188,1067151600,2),(188,1081065600,1),(188,1099206000,2),(188,1112515200,1),(188,1130655600,2),(188,1143964800,1),(188,1162105200,2),(188,1173600000,1),(188,1194159600,2),(188,1205049600,1),(188,1225609200,2),(188,1236499200,1),(188,1257058800,2),(188,1268553600,1),(188,1289113200,2),(188,1300003200,1),(188,1320562800,2),(188,1331452800,1),(188,1352012400,2),(188,1362902400,1),(188,1383462000,2),(188,1394352000,1),(188,1414911600,2),(188,1425801600,1),(188,1446361200,2),(188,1457856000,1),(188,1478415600,2),(188,1489305600,1),(188,1509865200,2),(188,1520755200,1),(188,1541314800,2),(188,1552204800,1),(188,1572764400,2),(188,1583654400,1),(188,1604214000,2),(188,1615708800,1),(188,1636268400,2),(188,1647158400,1),(188,1667718000,2),(188,1678608000,1),(188,1699167600,2),(188,1710057600,1),(188,1730617200,2),(188,1741507200,1),(188,1762066800,2),(188,1772956800,1),(188,1793516400,2),(188,1805011200,1),(188,1825570800,2),(188,1836460800,1),(188,1857020400,2),(188,1867910400,1),(188,1888470000,2),(188,1899360000,1),(188,1919919600,2),(188,1930809600,1),(188,1951369200,2),(188,1962864000,1),(188,1983423600,2),(188,1994313600,1),(188,2014873200,2),(188,2025763200,1),(188,2046322800,2),(188,2057212800,1),(188,2077772400,2),(188,2088662400,1),(188,2109222000,2),(188,2120112000,1),(188,2140671600,2),(189,-410227200,2),(189,-147895200,1),(189,-131565600,2),(189,325670400,3),(189,341391600,2),(189,357120000,3),(189,372841200,2),(189,388569600,3),(189,404895600,2),(189,420019200,3),(189,436345200,2),(189,452073600,3),(189,467794800,2),(189,483523200,3),(189,499244400,2),(189,514972800,3),(189,530694000,2),(189,544608000,3),(189,562143600,2),(189,576057600,3),(189,594198000,2),(189,607507200,3),(189,625647600,2),(189,638956800,3),(189,657097200,2),(189,671011200,3),(189,688546800,2),(189,702460800,3),(189,719996400,2),(189,733910400,3),(189,752050800,2),(189,765360000,3),(189,783500400,2),(189,796809600,3),(189,814950000,2),(189,828864000,3),(189,846399600,2),(189,860313600,3),(189,877849200,2),(189,891763200,3),(189,909298800,2),(189,923212800,3),(189,941353200,2),(189,954662400,3),(189,972802800,4),(189,986112000,3),(189,1004252400,2),(189,1018166400,3),(189,1035702000,2),(189,1049616000,3),(189,1067151600,2),(189,1081065600,3),(189,1099206000,2),(189,1112515200,3),(189,1130655600,2),(189,1143964800,3),(189,1162105200,2),(189,1173600000,3),(189,1194159600,2),(189,1205049600,3),(189,1225609200,2),(189,1236499200,3),(189,1257058800,2),(189,1268553600,3),(189,1289113200,2),(189,1300003200,3),(189,1320562800,2),(189,1331452800,3),(189,1352012400,2),(189,1362902400,3),(189,1383462000,2),(189,1394352000,3),(189,1414911600,2),(189,1425801600,3),(189,1446361200,2),(189,1457856000,3),(189,1478415600,2),(189,1489305600,3),(189,1509865200,2),(189,1520755200,3),(189,1541314800,2),(189,1552204800,3),(189,1572764400,2),(189,1583654400,3),(189,1604214000,2),(189,1615708800,3),(189,1636268400,2),(189,1647158400,3),(189,1667718000,2),(189,1678608000,3),(189,1699167600,2),(189,1710057600,3),(189,1730617200,2),(189,1741507200,3),(189,1762066800,2),(189,1772956800,3),(189,1793516400,2),(189,1805011200,3),(189,1825570800,2),(189,1836460800,3),(189,1857020400,2),(189,1867910400,3),(189,1888470000,2),(189,1899360000,3),(189,1919919600,2),(189,1930809600,3),(189,1951369200,2),(189,1962864000,3),(189,1983423600,2),(189,1994313600,3),(189,2014873200,2),(189,2025763200,3),(189,2046322800,2),(189,2057212800,3),(189,2077772400,2),(189,2088662400,3),(189,2109222000,2),(189,2120112000,3),(189,2140671600,2),(190,-1767217224,2),(190,-1206957600,1),(190,-1191362400,2),(190,-1175374800,1),(190,-1159826400,2),(190,-633819600,1),(190,-622069200,2),(190,-602283600,1),(190,-591832800,2),(190,-570747600,1),(190,-560210400,2),(190,-539125200,1),(190,-531352800,2),(190,-191365200,1),(190,-184197600,2),(190,-155163600,1),(190,-150069600,2),(190,-128898000,1),(190,-121125600,2),(190,-99954000,1),(190,-89589600,2),(190,-68418000,1),(190,-57967200,2),(190,499748400,1),(190,511236000,2),(190,530593200,1),(190,540266400,2),(190,562129200,1),(190,571197600,2),(190,592974000,1),(190,602042400,2),(190,624423600,1),(190,634701600,2),(190,938919600,1),(190,951616800,2),(190,970974000,1),(190,971575200,2),(190,1003028400,1),(190,1013911200,2),(190,2147483647,2),(191,-2030202084,2),(191,-1632063600,1),(191,-1615132800,2),(191,-1251651600,1),(191,-1238349600,2),(191,-1220202000,1),(191,-1206900000,2),(191,-1188752400,1),(191,-1175450400,2),(191,-1156698000,1),(191,-1144000800,2),(191,-1125248400,1),(191,-1111946400,2),(191,-1032714000,1),(191,-1016992800,2),(191,-1001264400,1),(191,-986148000,2),(191,-969814800,1),(191,-954093600,2),(191,-937760400,1),(191,-922039200,2),(191,-906310800,1),(191,-890589600,2),(191,-880210800,3),(191,-769395600,4),(191,-765388800,2),(191,-748450800,1),(191,-732729600,2),(191,-715791600,1),(191,-702489600,2),(191,-684342000,1),(191,-671040000,2),(191,-652892400,1),(191,-639590400,2),(191,-620838000,1),(191,-608140800,2),(191,-589388400,1),(191,-576086400,2),(191,-557938800,1),(191,-544636800,2),(191,-526489200,1),(191,-513187200,2),(191,-495039600,1),(191,-481737600,2),(191,-463590000,1),(191,-450288000,2),(191,-431535600,1),(191,-418233600,2),(191,-400086000,1),(191,-386784000,2),(191,-337186800,1),(191,-321465600,2),(191,-305737200,5),(192,-704937600,2),(192,-147895200,1),(192,-131565600,2),(192,325670400,3),(192,341391600,2),(192,357120000,3),(192,372841200,2),(192,388569600,3),(192,404895600,2),(192,420019200,3),(192,436345200,2),(192,452073600,3),(192,467794800,2),(192,483523200,3),(192,499244400,2),(192,514972800,3),(192,530694000,2),(192,544608000,3),(192,562143600,2),(192,576057600,3),(192,594198000,2),(192,607507200,3),(192,625647600,2),(192,638956800,3),(192,657097200,2),(192,671011200,3),(192,688546800,2),(192,702460800,3),(192,719996400,2),(192,733910400,3),(192,752050800,2),(192,765360000,3),(192,783500400,2),(192,796809600,3),(192,814950000,2),(192,828864000,3),(192,846399600,2),(192,860313600,3),(192,877849200,2),(192,891763200,3),(192,909298800,2),(192,923212800,3),(192,941353200,2),(192,954662400,3),(192,972802800,4),(192,986112000,3),(192,1004252400,2),(192,1018166400,3),(192,1035702000,2),(192,1049616000,3),(192,1067151600,2),(192,1081065600,3),(192,1099206000,2),(192,1112515200,3),(192,1130655600,2),(192,1143964800,3),(192,1162105200,4),(192,1173600000,3),(192,1194159600,2),(192,1205049600,3),(192,1225609200,2),(192,1236499200,3),(192,1257058800,2),(192,1268553600,3),(192,1289113200,2),(192,1300003200,3),(192,1320562800,2),(192,1331452800,3),(192,1352012400,2),(192,1362902400,3),(192,1383462000,2),(192,1394352000,3),(192,1414911600,2),(192,1425801600,3),(192,1446361200,2),(192,1457856000,3),(192,1478415600,2),(192,1489305600,3),(192,1509865200,2),(192,1520755200,3),(192,1541314800,2),(192,1552204800,3),(192,1572764400,2),(192,1583654400,3),(192,1604214000,2),(192,1615708800,3),(192,1636268400,2),(192,1647158400,3),(192,1667718000,2),(192,1678608000,3),(192,1699167600,2),(192,1710057600,3),(192,1730617200,2),(192,1741507200,3),(192,1762066800,2),(192,1772956800,3),(192,1793516400,2),(192,1805011200,3),(192,1825570800,2),(192,1836460800,3),(192,1857020400,2),(192,1867910400,3),(192,1888470000,2),(192,1899360000,3),(192,1919919600,2),(192,1930809600,3),(192,1951369200,2),(192,1962864000,3),(192,1983423600,2),(192,1994313600,3),(192,2014873200,2),(192,2025763200,3),(192,2046322800,2),(192,2057212800,3),(192,2077772400,2),(192,2088662400,3),(192,2109222000,2),(192,2120112000,3),(192,2140671600,2),(193,-1767209328,2),(193,-1206950400,1),(193,-1191355200,2),(193,-1175367600,1),(193,-1159819200,2),(193,-633812400,1),(193,-622062000,2),(193,-602276400,1),(193,-591825600,2),(193,-570740400,1),(193,-560203200,2),(193,-539118000,1),(193,-531345600,2),(193,-191358000,1),(193,-184190400,2),(193,-155156400,1),(193,-150062400,2),(193,-128890800,1),(193,-121118400,2),(193,-99946800,1),(193,-89582400,2),(193,-68410800,1),(193,-57960000,2),(193,499755600,1),(193,511243200,2),(193,530600400,1),(193,540273600,2),(193,562136400,1),(193,571204800,2),(193,1214283600,3),(193,1384056000,2),(193,2147483647,2),(194,-2147483648,1),(194,-1567453392,2),(194,-1233432000,3),(194,-1222981200,2),(194,-1205956800,3),(194,-1194037200,2),(194,-1172865600,3),(194,-1162501200,2),(194,-1141329600,3),(194,-1130965200,2),(194,-1109793600,3),(194,-1099429200,2),(194,-1078257600,3),(194,-1067806800,2),(194,-1046635200,3),(194,-1036270800,2),(194,-1015099200,3),(194,-1004734800,2),(194,-983563200,3),(194,-973198800,2),(194,-952027200,3),(194,-941576400,2),(194,-931032000,3),(194,-900882000,2),(194,-890337600,3),(194,-833749200,2),(194,-827265600,3),(194,-752274000,2),(194,-733780800,3),(194,-197326800,2),(194,-190843200,3),(194,-184194000,2),(194,-164491200,3),(194,-152658000,2),(194,-132955200,3),(194,-121122000,2),(194,-101419200,3),(194,-86821200,2),(194,-71092800,3),(194,-54766800,2),(194,-39038400,3),(194,-23317200,2),(194,-7588800,5),(194,128142000,4),(194,136605600,5),(194,596948400,4),(194,605066400,5),(194,624423600,4),(194,636516000,5),(194,656478000,4),(194,667965600,2),(194,687931200,4),(194,699415200,5),(194,719377200,4),(194,731469600,5),(194,938919600,3),(194,952052400,5),(194,1198983600,4),(194,1205632800,5),(194,1224385200,4),(194,1237082400,5),(194,2147483647,5),(195,-1514736000,1),(195,-1451667600,2),(195,-1343062800,1),(195,-1234803600,2),(195,-1222963200,3),(195,-1207242000,2),(195,-873820800,4),(195,-769395600,5),(195,-761677200,2),(195,-686073600,3),(195,-661539600,2),(195,-495039600,3),(195,-481734000,2),(195,-463590000,3),(195,-450284400,2),(195,-431535600,3),(195,-418230000,2),(195,-400086000,3),(195,-386780400,2),(195,-368636400,3),(195,-355330800,2),(195,-337186800,3),(195,-323881200,2),(195,-305737200,3),(195,-292431600,2),(195,199274400,3),(195,215600400,2),(195,230724000,3),(195,247050000,2),(195,262778400,3),(195,278499600,2),(195,294228000,3),(195,309949200,2),(195,325677600,3),(195,341398800,2),(195,357127200,3),(195,372848400,2),(195,388576800,3),(195,404902800,2),(195,420026400,3),(195,436352400,2),(195,452080800,3),(195,467802000,2),(195,483530400,3),(195,499251600,2),(195,514980000,3),(195,530701200,2),(195,544615200,3),(195,562150800,2),(195,576064800,3),(195,594205200,2),(195,607514400,3),(195,625654800,2),(195,638964000,3),(195,657104400,2),(195,671018400,3),(195,688554000,2),(195,702468000,3),(195,720003600,2),(195,733917600,3),(195,752058000,2),(195,765367200,3),(195,783507600,2),(195,796816800,3),(195,814957200,2),(195,828871200,3),(195,846406800,2),(195,860320800,3),(195,877856400,2),(195,891770400,3),(195,909306000,2),(195,923220000,3),(195,941360400,2),(195,954669600,3),(195,972810000,2),(195,986119200,3),(195,1004259600,2),(195,1018173600,3),(195,1035709200,2),(195,1049623200,3),(195,1067158800,2),(195,1081072800,3),(195,1099213200,2),(195,1112522400,3),(195,1130662800,2),(195,1143972000,3),(195,1162112400,2),(195,1175421600,3),(195,1193562000,2),(195,1207476000,3),(195,1225011600,2),(195,1238925600,3),(195,1256461200,2),(195,1268560800,3),(195,1289120400,2),(195,1300010400,3),(195,1320570000,2),(195,1331460000,3),(195,1352019600,2),(195,1362909600,3),(195,1383469200,2),(195,1394359200,3),(195,1414918800,2),(195,1425808800,3),(195,1446368400,2),(195,1457863200,3),(195,1478422800,2),(195,1489312800,3),(195,1509872400,2),(195,1520762400,3),(195,1541322000,2),(195,1552212000,3),(195,1572771600,2),(195,1583661600,3),(195,1604221200,2),(195,1615716000,3),(195,1636275600,2),(195,1647165600,3),(195,1667725200,2),(195,1678615200,3),(195,1699174800,2),(195,1710064800,3),(195,1730624400,2),(195,1741514400,3),(195,1762074000,2),(195,1772964000,3),(195,1793523600,2),(195,1805018400,3),(195,1825578000,2),(195,1836468000,3),(195,1857027600,2),(195,1867917600,3),(195,1888477200,2),(195,1899367200,3),(195,1919926800,2),(195,1930816800,3),(195,1951376400,2),(195,1962871200,3),(195,1983430800,2),(195,1994320800,3),(195,2014880400,2),(195,2025770400,3),(195,2046330000,2),(195,2057220000,3),(195,2077779600,2),(195,2088669600,3),(195,2109229200,2),(195,2120119200,3),(195,2140678800,2),(196,-1767212472,2),(196,-1206954000,1),(196,-1191358800,2),(196,-1175371200,1),(196,-1159822800,2),(196,-633816000,1),(196,-622065600,2),(196,-602280000,1),(196,-591829200,2),(196,-570744000,1),(196,-560206800,2),(196,-539121600,1),(196,-531349200,2),(196,-191361600,1),(196,-184194000,2),(196,-155160000,1),(196,-150066000,2),(196,-128894400,1),(196,-121122000,2),(196,-99950400,1),(196,-89586000,2),(196,-68414400,1),(196,-57963600,2),(196,499752000,1),(196,511239600,2),(196,530596800,1),(196,540270000,2),(196,562132800,1),(196,571201200,2),(196,1214280000,3),(196,2147483647,3),(197,-2147483648,1),(197,-1892661435,2),(197,-1688410800,1),(197,-1619205435,3),(197,-1593806400,1),(197,-1335986235,4),(197,-1317585600,2),(197,-1304362800,4),(197,-1286049600,2),(197,-1272826800,4),(197,-1254513600,2),(197,-1241290800,4),(197,-1222977600,2),(197,-1209754800,4),(197,-1191355200,2),(197,-1178132400,3),(197,-870552000,2),(197,-865278000,3),(197,-740520000,5),(197,-736635600,4),(197,-718056000,2),(197,-713649600,3),(197,-36619200,6),(197,-23922000,7),(197,-3355200,6),(197,7527600,7),(197,24465600,6),(197,37767600,7),(197,55915200,6),(197,69217200,7),(197,87969600,6),(197,100666800,7),(197,118209600,6),(197,132116400,7),(197,150868800,6),(197,163566000,7),(197,182318400,6),(197,195620400,7),(197,213768000,6),(197,227070000,7),(197,245217600,6),(197,258519600,7),(197,277272000,6),(197,289969200,7),(197,308721600,6),(197,321418800,7),(197,340171200,6),(197,353473200,7),(197,371620800,6),(197,384922800,7),(197,403070400,6),(197,416372400,7),(197,434520000,6),(197,447822000,7),(197,466574400,6),(197,479271600,7),(197,498024000,6),(197,510721200,7),(197,529473600,6),(197,545194800,7),(197,560923200,6),(197,574225200,7),(197,592372800,6),(197,605674800,7),(197,624427200,6),(197,637124400,7),(197,653457600,6),(197,668574000,7),(197,687326400,6),(197,700628400,7),(197,718776000,6),(197,732078000,7),(197,750225600,6),(197,763527600,7),(197,781675200,6),(197,794977200,7),(197,813729600,6),(197,826426800,7),(197,845179200,6),(197,859690800,7),(197,876628800,6),(197,889930800,7),(197,906868800,6),(197,923194800,7),(197,939528000,6),(197,952830000,7),(197,971582400,6),(197,984279600,7),(197,1003032000,6),(197,1015729200,7),(197,1034481600,6),(197,1047178800,7),(197,1065931200,6),(197,1079233200,7),(197,1097380800,6),(197,1110682800,7),(197,1128830400,6),(197,1142132400,7),(197,1160884800,6),(197,1173582000,7),(197,1192334400,6),(197,1206846000,7),(197,1223784000,6),(197,1237086000,7),(197,1255233600,6),(197,1270350000,7),(197,1286683200,6),(197,1304823600,7),(197,1313899200,6),(197,1335668400,7),(197,1346558400,6),(197,1367118000,7),(197,1378612800,6),(197,1398567600,7),(197,1410062400,6),(197,1463281200,7),(197,1471147200,6),(197,1494730800,7),(197,1502596800,6),(197,1526180400,7),(197,1534046400,6),(197,1554606000,7),(197,1567915200,6),(197,1586055600,7),(197,1599364800,6),(197,1617505200,7),(197,1630814400,6),(197,1648954800,7),(197,1662868800,6),(197,1680404400,7),(197,1693713600,6),(197,1712458800,7),(197,1725768000,6),(197,1743908400,7),(197,1757217600,6),(197,1775358000,7),(197,1788667200,6),(197,1806807600,7),(197,1820116800,6),(197,1838257200,7),(197,1851566400,6),(197,1870311600,7),(197,1883016000,6),(197,1901761200,7),(197,1915070400,6),(197,1933210800,7),(197,1946520000,6),(197,1964660400,7),(197,1977969600,6),(197,1996110000,7),(197,2009419200,6),(197,2027559600,7),(197,2040868800,6),(197,2059614000,7),(197,2072318400,6),(197,2091063600,7),(197,2104372800,6),(197,2122513200,7),(197,2135822400,6),(197,2147483647,6),(198,-2147483648,1),(198,-1159773600,3),(198,-100119600,2),(198,-89668800,3),(198,-5770800,4),(198,4422600,3),(198,25678800,4),(198,33193800,3),(198,57733200,4),(198,64816200,3),(198,89182800,4),(198,96438600,3),(198,120632400,4),(198,127974600,3),(198,152082000,5),(198,972799200,3),(198,975823200,5),(199,-1767214412,2),(199,-1206957600,1),(199,-1191362400,2),(199,-1175374800,1),(199,-1159826400,2),(199,-633819600,1),(199,-622069200,2),(199,-602283600,1),(199,-591832800,2),(199,-570747600,1),(199,-560210400,2),(199,-539125200,1),(199,-531352800,2),(199,-195426000,1),(199,-184197600,2),(199,-155163600,1),(199,-150069600,2),(199,-128898000,1),(199,-121125600,2),(199,-99954000,1),(199,-89589600,2),(199,-68418000,1),(199,-57967200,2),(199,499748400,1),(199,511236000,2),(199,530593200,1),(199,540266400,2),(199,562129200,1),(199,571197600,2),(199,592974000,1),(199,602042400,2),(199,624423600,1),(199,634701600,2),(199,656478000,1),(199,666756000,2),(199,687927600,1),(199,697600800,2),(199,719982000,1),(199,728445600,2),(199,750826800,1),(199,761709600,2),(199,782276400,1),(199,793159200,2),(199,813726000,1),(199,824004000,2),(199,844570800,1),(199,856058400,2),(199,876106800,1),(199,888717600,2),(199,908074800,1),(199,919562400,2),(199,938919600,1),(199,951616800,2),(199,970974000,1),(199,982461600,2),(199,1003028400,1),(199,1013911200,2),(199,1036292400,1),(199,1045360800,2),(199,1066532400,1),(199,1076810400,2),(199,1099364400,1),(199,1108864800,2),(199,1129431600,1),(199,1140314400,2),(199,1162695600,1),(199,1172368800,2),(199,1192330800,1),(199,1203213600,2),(199,1224385200,1),(199,1234663200,2),(199,1255834800,1),(199,1266717600,2),(199,1287284400,1),(199,1298167200,2),(199,1318734000,1),(199,1330221600,2),(199,1350788400,1),(199,1361066400,2),(199,1382238000,1),(199,1392516000,2),(199,1413687600,1),(199,1424570400,2),(199,1445137200,1),(199,1456020000,2),(199,1476586800,1),(199,1487469600,2),(199,1508036400,1),(199,1518919200,2),(199,1541300400,1),(199,1550368800,2),(199,2147483647,2),(200,-1686090728,1),(200,323841600,2),(200,338961600,3),(200,354679200,6),(200,370400400,4),(200,386125200,5),(200,401850000,4),(200,417574800,5),(200,433299600,4),(200,449024400,5),(200,465354000,4),(200,481078800,5),(200,496803600,4),(200,512528400,5),(200,528253200,4),(200,543978000,5),(200,559702800,4),(200,575427600,5),(200,591152400,4),(200,606877200,5),(200,622602000,4),(200,638326800,5),(200,654656400,4),(200,670381200,5),(200,686106000,4),(200,701830800,5),(200,717555600,4),(200,733280400,5),(200,749005200,4),(200,764730000,5),(200,780454800,4),(200,796179600,5),(200,811904400,4),(200,828234000,5),(200,846378000,4),(200,859683600,5),(200,877827600,4),(200,891133200,5),(200,909277200,4),(200,922582800,5),(200,941331600,4),(200,954032400,5),(200,972781200,4),(200,985482000,5),(200,1004230800,4),(200,1017536400,5),(200,1035680400,4),(200,1048986000,5),(200,1067130000,4),(200,1080435600,5),(200,1099184400,4),(200,1111885200,5),(200,1130634000,4),(200,1143334800,5),(200,1162083600,4),(200,1174784400,5),(200,1193533200,4),(200,1206838800,5),(200,1224982800,4),(200,1238288400,5),(200,1256432400,4),(200,1269738000,5),(200,1288486800,4),(200,1301187600,5),(200,1319936400,4),(200,1332637200,5),(200,1351386000,4),(200,1364691600,5),(200,1382835600,4),(200,1396141200,5),(200,1414285200,4),(200,1427590800,5),(200,1445734800,4),(200,1459040400,5),(200,1477789200,4),(200,1490490000,5),(200,1509238800,4),(200,1521939600,5),(200,1540688400,4),(200,1553994000,5),(200,1572138000,4),(200,1585443600,5),(200,1603587600,4),(200,1616893200,5),(200,1635642000,4),(200,1648342800,5),(200,1667091600,4),(200,1679792400,5),(200,1698541200,4),(200,1711846800,5),(200,1729990800,4),(200,1743296400,5),(200,1761440400,4),(200,1774746000,5),(200,1792890000,4),(200,1806195600,5),(200,1824944400,4),(200,1837645200,5),(200,1856394000,4),(200,1869094800,5),(200,1887843600,4),(200,1901149200,5),(200,1919293200,4),(200,1932598800,5),(200,1950742800,4),(200,1964048400,5),(200,1982797200,4),(200,1995498000,5),(200,2014246800,4),(200,2026947600,5),(200,2045696400,4),(200,2058397200,5),(200,2077146000,4),(200,2090451600,5),(200,2108595600,4),(200,2121901200,5),(200,2140045200,4),(200,2147483647,4),(201,-2147483648,2),(201,-1633273200,1),(201,-1615132800,2),(201,-1601823600,1),(201,-1583683200,2),(201,-1570374000,1),(201,-1551628800,2),(201,-1538924400,1),(201,-1534089600,2),(201,-880210800,3),(201,-769395600,4),(201,-765388800,2),(201,-147884400,1),(201,-131558400,2),(201,-116434800,1),(201,-100108800,2),(201,-84380400,1),(201,-68659200,2),(201,-52930800,1),(201,-37209600,2),(201,-21481200,1),(201,-5760000,2),(201,9968400,1),(201,25689600,2),(201,41418000,1),(201,57744000,2),(201,73472400,1),(201,89193600,2),(201,104922000,1),(201,120643200,2),(201,126694800,1),(201,152092800,2),(201,162378000,1),(201,183542400,2),(201,199270800,1),(201,215596800,2),(201,230720400,1),(201,247046400,2),(201,262774800,1),(201,278496000,2),(201,294224400,1),(201,309945600,2),(201,325674000,1),(201,341395200,2),(201,357123600,1),(201,372844800,2),(201,388573200,1),(201,404899200,2),(201,420022800,1),(201,436348800,2),(201,452077200,1),(201,467798400,2),(201,483526800,1),(201,499248000,2),(201,514976400,1),(201,530697600,2),(201,544611600,1),(201,562147200,2),(201,576061200,1),(201,594201600,2),(201,607510800,1),(201,625651200,2),(201,638960400,1),(201,657100800,2),(201,671014800,1),(201,688550400,2),(201,702464400,1),(201,720000000,2),(201,733914000,1),(201,752054400,2),(201,765363600,1),(201,783504000,2),(201,796813200,1),(201,814953600,2),(201,828867600,1),(201,846403200,2),(201,860317200,1),(201,877852800,2),(201,891766800,1),(201,909302400,2),(201,923216400,1),(201,941356800,2),(201,954666000,1),(201,972806400,2),(201,986115600,1),(201,1004256000,2),(201,1018170000,1),(201,1035705600,2),(201,1049619600,1),(201,1067155200,2),(201,1081069200,1),(201,1099209600,2),(201,1112518800,1),(201,1130659200,2),(201,1143968400,1),(201,1162108800,2),(201,1173603600,1),(201,1194163200,2),(201,1205053200,1),(201,1225612800,2),(201,1236502800,1),(201,1257062400,2),(201,1268557200,1),(201,1289116800,2),(201,1300006800,1),(201,1320566400,2),(201,1331456400,1),(201,1352016000,2),(201,1362906000,1),(201,1383465600,2),(201,1394355600,1),(201,1414915200,2),(201,1425805200,1),(201,1446364800,2),(201,1457859600,1),(201,1478419200,2),(201,1489309200,1),(201,1509868800,2),(201,1520758800,1),(201,1541318400,2),(201,1552208400,1),(201,1572768000,2),(201,1583658000,1),(201,1604217600,2),(201,1615712400,1),(201,1636272000,2),(201,1647162000,1),(201,1667721600,2),(201,1678611600,1),(201,1699171200,2),(201,1710061200,1),(201,1730620800,2),(201,1741510800,1),(201,1762070400,2),(201,1772960400,1),(201,1793520000,2),(201,1805014800,1),(201,1825574400,2),(201,1836464400,1),(201,1857024000,2),(201,1867914000,1),(201,1888473600,2),(201,1899363600,1),(201,1919923200,2),(201,1930813200,1),(201,1951372800,2),(201,1962867600,1),(201,1983427200,2),(201,1994317200,1),(201,2014876800,2),(201,2025766800,1),(201,2046326400,2),(201,2057216400,1),(201,2077776000,2),(201,2088666000,1),(201,2109225600,2),(201,2120115600,1),(201,2140675200,2),(202,-2147483648,1),(202,-880207200,2),(202,-769395600,3),(202,-765385200,1),(202,-21477600,4),(202,-5756400,1),(202,9972000,4),(202,25693200,1),(202,41421600,4),(202,57747600,1),(202,73476000,4),(202,89197200,1),(202,104925600,4),(202,120646800,1),(202,126698400,4),(202,152096400,1),(202,162381600,4),(202,183546000,1),(202,199274400,4),(202,215600400,1),(202,230724000,4),(202,247050000,1),(202,262778400,4),(202,278499600,1),(202,294228000,4),(202,309949200,1),(202,325677600,4),(202,341398800,1),(202,357127200,4),(202,372848400,1),(202,388576800,4),(202,404902800,1),(202,420026400,4),(202,436352400,5),(202,439030800,7),(202,452084400,6),(202,467805600,7),(202,483534000,6),(202,499255200,7),(202,514983600,6),(202,530704800,7),(202,544618800,6),(202,562154400,7),(202,576068400,6),(202,594208800,7),(202,607518000,6),(202,625658400,7),(202,638967600,6),(202,657108000,7),(202,671022000,6),(202,688557600,7),(202,702471600,6),(202,720007200,7),(202,733921200,6),(202,752061600,7),(202,765370800,6),(202,783511200,7),(202,796820400,6),(202,814960800,7),(202,828874800,6),(202,846410400,7),(202,860324400,6),(202,877860000,7),(202,891774000,6),(202,909309600,7),(202,923223600,6),(202,941364000,7),(202,954673200,6),(202,972813600,7),(202,986122800,6),(202,1004263200,7),(202,1018177200,6),(202,1035712800,7),(202,1049626800,6),(202,1067162400,7),(202,1081076400,6),(202,1099216800,7),(202,1112526000,6),(202,1130666400,7),(202,1143975600,6),(202,1162116000,7),(202,1173610800,6),(202,1194170400,7),(202,1205060400,6),(202,1225620000,7),(202,1236510000,6),(202,1257069600,7),(202,1268564400,6),(202,1289124000,7),(202,1300014000,6),(202,1320573600,7),(202,1331463600,6),(202,1352023200,7),(202,1362913200,6),(202,1383472800,7),(202,1394362800,6),(202,1414922400,7),(202,1425812400,6),(202,1446372000,7),(202,1457866800,6),(202,1478426400,7),(202,1489316400,6),(202,1509876000,7),(202,1520766000,6),(202,1541325600,7),(202,1552215600,6),(202,1572775200,7),(202,1583665200,6),(202,1604224800,7),(202,1615719600,6),(202,1636279200,7),(202,1647169200,6),(202,1667728800,7),(202,1678618800,6),(202,1699178400,7),(202,1710068400,6),(202,1730628000,7),(202,1741518000,6),(202,1762077600,7),(202,1772967600,6),(202,1793527200,7),(202,1805022000,6),(202,1825581600,7),(202,1836471600,6),(202,1857031200,7),(202,1867921200,6),(202,1888480800,7),(202,1899370800,6),(202,1919930400,7),(202,1930820400,6),(202,1951380000,7),(202,1962874800,6),(202,1983434400,7),(202,1994324400,6),(202,2014884000,7),(202,2025774000,6),(202,2046333600,7),(202,2057223600,6),(202,2077783200,7),(202,2088673200,6),(202,2109232800,7),(202,2120122800,6),(202,2140682400,7),(203,-2147483648,1),(203,-873057600,3),(203,-769395600,2),(203,-765399600,1),(204,-2147483648,2),(204,-1664130548,1),(204,-1650137348,2),(204,-1632076148,1),(204,-1615145348,2),(204,-1598650148,1),(204,-1590100148,2),(204,-1567286948,1),(204,-1551565748,2),(204,-1535837348,1),(204,-1520116148,2),(204,-1503782948,1),(204,-1488666548,2),(204,-1472333348,1),(204,-1457216948,2),(204,-1440883748,1),(204,-1425767348,2),(204,-1409434148,1),(204,-1394317748,2),(204,-1377984548,1),(204,-1362263348,2),(204,-1346534948,1),(204,-1330813748,2),(204,-1314480548,1),(204,-1299364148,2),(204,-1283030948,1),(204,-1267914548,2),(204,-1251581348,1),(204,-1236464948,2),(204,-1220131748,1),(204,-1205015348,2),(204,-1188682148,1),(204,-1172960948,2),(204,-1156627748,1),(204,-1141511348,2),(204,-1125178148,1),(204,-1110061748,2),(204,-1096921748,4),(204,-1093728600,3),(204,-1078612200,4),(204,-1061670600,3),(204,-1048973400,4),(204,-1030221000,3),(204,-1017523800,4),(204,-998771400,3),(204,-986074200,4),(204,-966717000,3),(204,-954624600,4),(204,-935267400,3),(204,-922570200,4),(204,-903817800,3),(204,-891120600,4),(204,-872368200,6),(204,-769395600,5),(204,-765401400,4),(204,-746044200,3),(204,-733347000,4),(204,-714594600,3),(204,-701897400,4),(204,-683145000,3),(204,-670447800,4),(204,-651695400,3),(204,-638998200,4),(204,-619641000,3),(204,-606943800,4),(204,-589401000,3),(204,-576099000,4),(204,-557951400,3),(204,-544649400,4),(204,-526501800,3),(204,-513199800,4),(204,-495052200,3),(204,-481750200,4),(204,-463602600,3),(204,-450300600,4),(204,-431548200,3),(204,-418246200,4),(204,-400098600,3),(204,-386796600,4),(204,-368649000,3),(204,-355347000,4),(204,-337199400,3),(204,-323897400,4),(204,-305749800,3),(204,-289423800,4),(204,-273695400,3),(204,-257974200,4),(204,-242245800,3),(204,-226524600,4),(204,-210796200,3),(204,-195075000,4),(204,-179346600,3),(204,-163625400,4),(204,-147897000,3),(204,-131571000,4),(204,-116447400,3),(204,-100121400,4),(204,-84393000,3),(204,-68671800,4),(204,-52943400,3),(204,-37222200,4),(204,-21493800,3),(204,-5772600,4),(204,9955800,3),(204,25677000,4),(204,41405400,3),(204,57731400,4),(204,73459800,3),(204,89181000,4),(204,104909400,3),(204,120630600,4),(204,136359000,3),(204,152080200,4),(204,167808600,3),(204,183529800,4),(204,199258200,3),(204,215584200,4),(204,230707800,3),(204,247033800,4),(204,262762200,3),(204,278483400,4),(204,294211800,3),(204,309933000,4),(204,325661400,3),(204,341382600,4),(204,357111000,3),(204,372832200,4),(204,388560600,3),(204,404886600,4),(204,420010200,3),(204,436336200,4),(204,452064600,3),(204,467785800,4),(204,483514200,3),(204,499235400,4),(204,514963800,3),(204,530685000,4),(204,544591860,3),(204,562127460,4),(204,576041460,7),(204,594178260,4),(204,607491060,3),(204,625631460,4),(204,638940660,3),(204,657081060,4),(204,670995060,3),(204,688530660,4),(204,702444660,3),(204,719980260,4),(204,733894260,3),(204,752034660,4),(204,765343860,3),(204,783484260,4),(204,796793460,3),(204,814933860,4),(204,828847860,3),(204,846383460,4),(204,860297460,3),(204,877833060,4),(204,891747060,3),(204,909282660,4),(204,923196660,3),(204,941337060,4),(204,954646260,3),(204,972786660,4),(204,986095860,3),(204,1004236260,4),(204,1018150260,3),(204,1035685860,4),(204,1049599860,3),(204,1067135460,4),(204,1081049460,3),(204,1099189860,4),(204,1112499060,3),(204,1130639460,4),(204,1143948660,3),(204,1162089060,4),(204,1173583860,3),(204,1194143460,4),(204,1205033460,3),(204,1225593060,4),(204,1236483060,3),(204,1257042660,4),(204,1268537460,3),(204,1289097060,4),(204,1299987060,3),(204,1320553800,4),(204,1331443800,3),(204,1352003400,4),(204,1362893400,3),(204,1383453000,4),(204,1394343000,3),(204,1414902600,4),(204,1425792600,3),(204,1446352200,4),(204,1457847000,3),(204,1478406600,4),(204,1489296600,3),(204,1509856200,4),(204,1520746200,3),(204,1541305800,4),(204,1552195800,3),(204,1572755400,4),(204,1583645400,3),(204,1604205000,4),(204,1615699800,3),(204,1636259400,4),(204,1647149400,3),(204,1667709000,4),(204,1678599000,3),(204,1699158600,4),(204,1710048600,3),(204,1730608200,4),(204,1741498200,3),(204,1762057800,4),(204,1772947800,3),(204,1793507400,4),(204,1805002200,3),(204,1825561800,4),(204,1836451800,3),(204,1857011400,4),(204,1867901400,3),(204,1888461000,4),(204,1899351000,3),(204,1919910600,4),(204,1930800600,3),(204,1951360200,4),(204,1962855000,3),(204,1983414600,4),(204,1994304600,3),(204,2014864200,4),(204,2025754200,3),(204,2046313800,4),(204,2057203800,3),(204,2077763400,4),(204,2088653400,3),(204,2109213000,4),(204,2120103000,3),(204,2140662600,4),(205,-2147483648,1),(205,-873057600,3),(205,-769395600,2),(205,-765399600,1),(206,-2147483648,1),(206,-873057600,3),(206,-769395600,2),(206,-765399600,1),(207,-2147483648,1),(207,-873057600,3),(207,-769395600,2),(207,-765399600,1),(208,-2147483648,1),(208,-873057600,3),(208,-769395600,2),(208,-765399600,1),(209,-2030201320,2),(209,-1632063600,1),(209,-1615132800,2),(209,-880210800,3),(209,-769395600,4),(209,-765388800,2),(209,-747241200,1),(209,-732729600,2),(209,-715791600,1),(209,-702489600,2),(209,-684342000,1),(209,-671040000,2),(209,-652892400,1),(209,-639590400,2),(209,-400086000,1),(209,-384364800,2),(209,-337186800,1),(209,-321465600,2),(209,-305737200,1),(209,-292435200,2),(209,-273682800,1),(209,-260985600,2),(209,73472400,5),(210,-1538503868,2),(210,547020000,1),(210,559717200,2),(210,578469600,1),(210,591166800,2),(210,1146981600,1),(210,1154926800,2),(211,-1686079492,2),(211,670399200,1),(211,686120400,2),(211,701848800,1),(211,717570000,2),(211,733903200,1),(211,752043600,2),(211,765352800,1),(211,783493200,2),(211,796802400,1),(211,814942800,2),(211,828856800,1),(211,846392400,2),(211,860306400,1),(211,877842000,2),(211,891756000,1),(211,909291600,2),(211,923205600,1),(211,941346000,2),(211,954655200,1),(211,972795600,2),(211,986104800,1),(211,1004245200,2),(211,1018159200,1),(211,1035694800,2),(211,1049608800,1),(211,1067144400,2),(211,1081058400,1),(211,1099198800,2),(211,1112508000,1),(211,1130648400,2),(211,1143957600,1),(211,1162098000,2),(211,1173592800,1),(211,1194152400,2),(211,1205042400,1),(211,1225602000,2),(211,1236492000,1),(211,1257051600,2),(211,1268546400,1),(211,1289106000,2),(211,1299996000,1),(211,1320555600,2),(211,1331445600,1),(211,1352005200,2),(211,1362895200,1),(211,1383454800,2),(211,1394344800,1),(211,1414904400,2),(211,1425794400,1),(211,1446354000,2),(211,1457848800,1),(211,1478408400,2),(211,1489298400,1),(211,1509858000,2),(211,1520748000,1),(211,1541307600,2),(211,1552197600,1),(211,1572757200,2),(211,1583647200,1),(211,1604206800,2),(211,1615701600,1),(211,1636261200,2),(211,1647151200,1),(211,1667710800,2),(211,1678600800,1),(211,1699160400,2),(211,1710050400,1),(211,1730610000,2),(211,1741500000,1),(211,1762059600,2),(211,1772949600,1),(211,1793509200,2),(211,1805004000,1),(211,1825563600,2),(211,1836453600,1),(211,1857013200,2),(211,1867903200,1),(211,1888462800,2),(211,1899352800,1),(211,1919912400,2),(211,1930802400,1),(211,1951362000,2),(211,1962856800,1),(211,1983416400,2),(211,1994306400,1),(211,2014866000,2),(211,2025756000,1),(211,2046315600,2),(211,2057205600,1),(211,2077765200,2),(211,2088655200,1),(211,2109214800,2),(211,2120104800,1),(211,2140664400,2),(212,-2147483648,1),(212,-1893434400,2),(212,-880218000,3),(212,-769395600,4),(212,-765396000,2),(212,9961200,5),(212,25682400,2),(212,41410800,5),(212,57736800,2),(212,73465200,5),(212,89186400,2),(212,136364400,5),(212,152085600,2),(212,167814000,5),(212,183535200,2),(212,199263600,5),(212,215589600,2),(212,230713200,5),(212,247039200,2),(212,262767600,5),(212,278488800,2),(212,294217200,5),(212,309938400,2),(212,325666800,5),(212,341388000,2),(212,357116400,5),(212,372837600,2),(212,388566000,5),(212,404892000,2),(212,420015600,5),(212,436341600,2),(212,452070000,5),(212,467791200,2),(212,483519600,5),(212,499240800,2),(212,514969200,5),(212,530690400,2),(212,544604400,5),(212,562140000,2),(212,576054000,5),(212,594194400,2),(212,607503600,5),(212,625644000,2),(212,638953200,5),(212,657093600,2),(212,671007600,5),(212,688543200,2),(212,702457200,5),(212,719992800,2),(212,733906800,5),(212,752047200,2),(212,765356400,5),(212,783496800,2),(212,796806000,5),(212,814946400,2),(212,828860400,5),(212,846396000,2),(212,860310000,5),(212,877845600,2),(212,891759600,5),(212,909295200,2),(212,923209200,5),(212,941349600,2),(212,954658800,5),(212,972799200,2),(212,986108400,5),(212,1004248800,2),(212,1018162800,5),(212,1035698400,2),(212,1049612400,5),(212,1067148000,2),(212,1081062000,5),(212,1099202400,2),(212,1112511600,5),(212,1130652000,2),(212,1143961200,5),(212,1162101600,2),(212,1173596400,5),(212,1194156000,2),(212,1205046000,5),(212,1225605600,2),(212,1236495600,5),(212,1257055200,2),(212,1268550000,5),(212,1289109600,2),(212,1299999600,5),(212,1320559200,2),(212,1331449200,5),(212,1352008800,2),(212,1362898800,5),(212,1383458400,2),(212,1394348400,5),(212,1414908000,2),(212,1425798000,5),(212,1446357600,2),(212,1457852400,5),(212,1478412000,2),(212,1489302000,5),(212,1509861600,2),(212,1520751600,5),(212,1541311200,2),(212,1552201200,5),(212,1572760800,2),(212,1583650800,5),(212,1604210400,2),(212,1615705200,5),(212,1636264800,2),(212,1647154800,5),(212,1667714400,2),(212,1678604400,5),(212,1699164000,2),(212,1710054000,5),(212,1730613600,2),(212,1741503600,5),(212,1762063200,2),(212,1772953200,5),(212,1793512800,2),(212,1805007600,5),(212,1825567200,2),(212,1836457200,5),(212,1857016800,2),(212,1867906800,5),(212,1888466400,2),(212,1899356400,5),(212,1919916000,2),(212,1930806000,5),(212,1951365600,2),(212,1962860400,5),(212,1983420000,2),(212,1994310000,5),(212,2014869600,2),(212,2025759600,5),(212,2046319200,2),(212,2057209200,5),(212,2077768800,2),(212,2088658800,5),(212,2109218400,2),(212,2120108400,5),(212,2140668000,2),(213,-1514736000,1),(213,-1451667600,2),(213,-1343062800,1),(213,-1234803600,2),(213,-1222963200,3),(213,-1207242000,2),(213,-873820800,4),(213,-769395600,5),(213,-761677200,2),(213,-686073600,3),(213,-661539600,2),(213,-495039600,3),(213,-481734000,2),(213,-463590000,3),(213,-450284400,2),(213,-431535600,3),(213,-418230000,2),(213,-400086000,3),(213,-386780400,2),(213,-368636400,3),(213,-355330800,2),(213,-337186800,3),(213,-323881200,2),(213,-305737200,3),(213,-292431600,2),(213,199274400,3),(213,215600400,2),(213,230724000,3),(213,247050000,2),(213,262778400,3),(213,278499600,2),(213,294228000,3),(213,309949200,2),(213,325677600,3),(213,341398800,2),(213,357127200,3),(213,372848400,2),(213,388576800,3),(213,404902800,2),(213,420026400,3),(213,436352400,2),(213,452080800,3),(213,467802000,2),(213,483530400,3),(213,499251600,2),(213,514980000,3),(213,530701200,2),(213,544615200,3),(213,562150800,2),(213,576064800,3),(213,594205200,2),(213,607514400,3),(213,625654800,2),(213,638964000,3),(213,657104400,2),(213,671018400,3),(213,688554000,2),(213,702468000,3),(213,720003600,2),(213,733917600,3),(213,752058000,2),(213,765367200,3),(213,783507600,2),(213,796816800,3),(213,814957200,2),(213,828871200,3),(213,846406800,2),(213,860320800,3),(213,877856400,2),(213,891770400,3),(213,909306000,2),(213,923220000,3),(213,941360400,2),(213,954669600,3),(213,972810000,2),(213,986119200,3),(213,1004259600,2),(213,1018173600,3),(213,1035709200,2),(213,1049623200,3),(213,1067158800,2),(213,1081072800,3),(213,1099213200,2),(213,1112522400,3),(213,1130662800,2),(213,1143972000,3),(213,1162112400,2),(213,1175421600,3),(213,1193562000,2),(213,1207476000,3),(213,1225011600,2),(213,1238925600,3),(213,1256461200,2),(213,1268560800,3),(213,1289120400,2),(213,1300010400,3),(213,1320570000,2),(213,1331460000,3),(213,1352019600,2),(213,1362909600,3),(213,1383469200,2),(213,1394359200,3),(213,1414918800,2),(213,1425808800,3),(213,1446368400,2),(213,1457863200,3),(213,1478422800,2),(213,1489312800,3),(213,1509872400,2),(213,1520762400,3),(213,1541322000,2),(213,1552212000,3),(213,1572771600,2),(213,1583661600,3),(213,1604221200,2),(213,1615716000,3),(213,1636275600,2),(213,1647165600,3),(213,1667725200,2),(213,1678615200,3),(213,1699174800,2),(213,1710064800,3),(213,1730624400,2),(213,1741514400,3),(213,1762074000,2),(213,1772964000,3),(213,1793523600,2),(213,1805018400,3),(213,1825578000,2),(213,1836468000,3),(213,1857027600,2),(213,1867917600,3),(213,1888477200,2),(213,1899367200,3),(213,1919926800,2),(213,1930816800,3),(213,1951376400,2),(213,1962871200,3),(213,1983430800,2),(213,1994320800,3),(213,2014880400,2),(213,2025770400,3),(213,2046330000,2),(213,2057220000,3),(213,2077779600,2),(213,2088669600,3),(213,2109229200,2),(213,2120119200,3),(213,2140678800,2),(214,-2147483648,2),(214,-1632070800,1),(214,-1615140000,2),(214,-1601753400,1),(214,-1583697600,2),(214,-1567357200,1),(214,-1554667200,2),(214,-1534698000,1),(214,-1524074400,2),(214,-1503248400,1),(214,-1492365600,2),(214,-1471798800,1),(214,-1460916000,2),(214,-1440954000,1),(214,-1428861600,2),(214,-1409504400,1),(214,-1397412000,2),(214,-1378054800,1),(214,-1365962400,2),(214,-1346605200,1),(214,-1333908000,2),(214,-1315155600,1),(214,-1301853600,2),(214,-1283706000,1),(214,-1270404000,2),(214,-1252256400,1),(214,-1238954400,2),(214,-1220806800,1),(214,-1207504800,2),(214,-1188752400,1),(214,-1176055200,2),(214,-1157302800,1),(214,-1144000800,2),(214,-1125853200,1),(214,-1112551200,2),(214,-1094403600,1),(214,-1081101600,2),(214,-1062954000,1),(214,-1049652000,2),(214,-1031504400,1),(214,-1018202400,2),(214,-1000054800,1),(214,-986752800,2),(214,-968000400,1),(214,-955303200,2),(214,-936550800,1),(214,-880218000,3),(214,-769395600,4),(214,-765396000,2),(214,-747248400,1),(214,-733946400,2),(214,-715806000,1),(214,-702504000,2),(214,-684356400,1),(214,-671054400,2),(214,-652906800,1),(214,-634161600,2),(214,-620845200,1),(214,-602704800,2),(214,-589395600,1),(214,-576093600,2),(214,-557946000,1),(214,-544644000,2),(214,-526496400,1),(214,-513194400,2),(214,-495046800,1),(214,-481744800,2),(214,-463597200,1),(214,-450295200,2),(214,-431542800,1),(214,-418240800,2),(214,-400093200,1),(214,-384372000,2),(214,-368643600,1),(214,-352922400,2),(214,-337194000,1),(214,-321472800,2),(214,-305744400,1),(214,-289418400,2),(214,-273690000,1),(214,-257968800,2),(214,-242240400,1),(214,-226519200,2),(214,-210790800,1),(214,-195069600,2),(214,-179341200,1),(214,-163620000,2),(214,-147891600,1),(214,-131565600,2),(214,-116442000,1),(214,-100116000,2),(214,-84387600,1),(214,-68666400,2),(214,-52938000,1),(214,-37216800,2),(214,-21488400,1),(214,-5767200,2),(214,9961200,1),(214,25682400,2),(214,41410800,1),(214,57736800,2),(214,73465200,1),(214,89186400,2),(214,104914800,1),(214,120636000,2),(214,136364400,1),(214,152085600,2),(214,167814000,1),(214,183535200,2),(214,199263600,1),(214,215589600,2),(214,230713200,1),(214,247039200,2),(214,262767600,1),(214,278488800,2),(214,294217200,1),(214,309938400,2),(214,325666800,1),(214,341388000,2),(214,357116400,1),(214,372837600,2),(214,388566000,1),(214,404892000,2),(214,420015600,1),(214,436341600,2),(214,452070000,1),(214,467791200,2),(214,483519600,1),(214,499240800,2),(214,514969200,1),(214,530690400,2),(214,544604400,1),(214,562140000,2),(214,576054000,1),(214,594194400,2),(214,607503600,1),(214,625644000,2),(214,638953200,1),(214,657093600,2),(214,671007600,1),(214,688543200,2),(214,702457200,1),(214,719992800,2),(214,733906800,1),(214,752047200,2),(214,765356400,1),(214,783496800,2),(214,796806000,1),(214,814946400,2),(214,828860400,1),(214,846396000,2),(214,860310000,1),(214,877845600,2),(214,891759600,1),(214,909295200,2),(214,923209200,1),(214,941349600,2),(214,954658800,1),(214,972799200,2),(214,986108400,1),(214,1004248800,2),(214,1018162800,1),(214,1035698400,2),(214,1049612400,1),(214,1067148000,2),(214,1081062000,1),(214,1099202400,2),(214,1112511600,1),(214,1130652000,2),(214,1143961200,1),(214,1162101600,2),(214,1173596400,1),(214,1194156000,2),(214,1205046000,1),(214,1225605600,2),(214,1236495600,1),(214,1257055200,2),(214,1268550000,1),(214,1289109600,2),(214,1299999600,1),(214,1320559200,2),(214,1331449200,1),(214,1352008800,2),(214,1362898800,1),(214,1383458400,2),(214,1394348400,1),(214,1414908000,2),(214,1425798000,1),(214,1446357600,2),(214,1457852400,1),(214,1478412000,2),(214,1489302000,1),(214,1509861600,2),(214,1520751600,1),(214,1541311200,2),(214,1552201200,1),(214,1572760800,2),(214,1583650800,1),(214,1604210400,2),(214,1615705200,1),(214,1636264800,2),(214,1647154800,1),(214,1667714400,2),(214,1678604400,1),(214,1699164000,2),(214,1710054000,1),(214,1730613600,2),(214,1741503600,1),(214,1762063200,2),(214,1772953200,1),(214,1793512800,2),(214,1805007600,1),(214,1825567200,2),(214,1836457200,1),(214,1857016800,2),(214,1867906800,1),(214,1888466400,2),(214,1899356400,1),(214,1919916000,2),(214,1930806000,1),(214,1951365600,2),(214,1962860400,1),(214,1983420000,2),(214,1994310000,1),(214,2014869600,2),(214,2025759600,1),(214,2046319200,2),(214,2057209200,1),(214,2077768800,2),(214,2088658800,1),(214,2109218400,2),(214,2120108400,1),(214,2140668000,2),(215,-2147483648,1),(215,-873057600,3),(215,-769395600,2),(215,-765399600,1),(216,-2147483648,2),(216,-1632060000,1),(216,-1615129200,2),(216,-880207200,3),(216,-769395600,4),(216,-765385200,2),(216,-747237600,1),(216,-733935600,2),(216,-715788000,1),(216,-702486000,2),(216,-684338400,1),(216,-671036400,2),(216,-652888800,1),(216,-639586800,2),(216,-620834400,1),(216,-608137200,2),(216,-589384800,1),(216,-576082800,2),(216,-557935200,1),(216,-544633200,2),(216,-526485600,1),(216,-513183600,2),(216,-495036000,1),(216,-481734000,2),(216,-463586400,1),(216,-450284400,2),(216,-431532000,1),(216,-418230000,2),(216,-400082400,1),(216,-386780400,2),(216,-368632800,1),(216,-355330800,2),(216,-337183200,1),(216,-323881200,2),(216,-305733600,1),(216,-292431600,2),(216,-273679200,1),(216,-260982000,2),(216,-242229600,1),(216,-226508400,2),(216,-210780000,1),(216,-195058800,2),(216,-179330400,1),(216,-163609200,2),(216,-147880800,1),(216,-131554800,2),(216,-116431200,1),(216,-100105200,2),(216,-84376800,1),(216,-68655600,2),(216,-52927200,1),(216,-37206000,2),(216,-21477600,1),(216,-5756400,2),(216,9972000,1),(216,25693200,2),(216,41421600,1),(216,57747600,2),(216,73476000,1),(216,89197200,2),(216,104925600,1),(216,120646800,2),(216,136375200,1),(216,152096400,2),(216,167824800,1),(216,183546000,2),(216,199274400,1),(216,215600400,2),(216,230724000,1),(216,247050000,2),(216,262778400,1),(216,278499600,2),(216,294228000,1),(216,309949200,2),(216,325677600,1),(216,341398800,2),(216,357127200,1),(216,372848400,2),(216,388576800,1),(216,404902800,2),(216,420026400,1),(216,436352400,2),(216,452080800,1),(216,467802000,2),(216,483530400,1),(216,499251600,2),(216,514980000,1),(216,530701200,2),(216,544615200,1),(216,562150800,2),(216,576064800,1),(216,594205200,2),(216,607514400,1),(216,625654800,2),(216,638964000,1),(216,657104400,2),(216,671018400,1),(216,688554000,2),(216,702468000,1),(216,720003600,2),(216,733917600,1),(216,752058000,2),(216,765367200,1),(216,783507600,2),(216,796816800,1),(216,814957200,2),(216,828871200,1),(216,846406800,2),(216,860320800,1),(216,877856400,2),(216,891770400,1),(216,909306000,2),(216,923220000,1),(216,941360400,2),(216,954669600,1),(216,972810000,2),(216,986119200,1),(216,1004259600,2),(216,1018173600,1),(216,1035709200,2),(216,1049623200,1),(216,1067158800,2),(216,1081072800,1),(216,1099213200,2),(216,1112522400,1),(216,1130662800,2),(216,1143972000,1),(216,1162112400,2),(216,1173607200,1),(216,1194166800,2),(216,1205056800,1),(216,1225616400,2),(216,1236506400,1),(216,1257066000,2),(216,1268560800,1),(216,1289120400,2),(216,1300010400,1),(216,1320570000,2),(216,1331460000,1),(216,1352019600,2),(216,1362909600,1),(216,1383469200,2),(216,1394359200,1),(216,1414918800,2),(216,1425808800,1),(216,1446368400,2),(216,1457863200,1),(216,1478422800,2),(216,1489312800,1),(216,1509872400,2),(216,1520762400,1),(216,1541322000,2),(216,1552212000,1),(216,1572771600,2),(216,1583661600,1),(216,1604221200,2),(216,1615716000,1),(216,1636275600,2),(216,1647165600,1),(216,1667725200,2),(216,1678615200,1),(216,1699174800,2),(216,1710064800,1),(216,1730624400,2),(216,1741514400,1),(216,1762074000,2),(216,1772964000,1),(216,1793523600,2),(216,1805018400,1),(216,1825578000,2),(216,1836468000,1),(216,1857027600,2),(216,1867917600,1),(216,1888477200,2),(216,1899367200,1),(216,1919926800,2),(216,1930816800,1),(216,1951376400,2),(216,1962871200,1),(216,1983430800,2),(216,1994320800,1),(216,2014880400,2),(216,2025770400,1),(216,2046330000,2),(216,2057220000,1),(216,2077779600,2),(216,2088669600,1),(216,2109229200,2),(216,2120119200,1),(216,2140678800,2),(217,-2147483648,1),(217,-873057600,3),(217,-769395600,2),(217,-765399600,1),(218,-2147483648,2),(218,-1632056400,1),(218,-1615125600,2),(218,-1596978000,1),(218,-1583164800,2),(218,-880203600,3),(218,-769395600,4),(218,-765381600,2),(218,-147884400,5),(218,-131554800,2),(218,-81961200,6),(218,325677600,7),(218,341398800,6),(218,357127200,7),(218,372848400,6),(218,388576800,7),(218,404902800,6),(218,420026400,7),(218,436352400,6),(218,452080800,7),(218,467802000,6),(218,483530400,7),(218,499251600,6),(218,514980000,7),(218,530701200,6),(218,544615200,7),(218,562150800,6),(218,576064800,7),(218,594205200,6),(218,607514400,7),(218,625654800,6),(218,638964000,7),(218,657104400,6),(218,671018400,7),(218,688554000,6),(218,702468000,7),(218,720003600,6),(218,733917600,7),(218,752058000,6),(218,765367200,7),(218,783507600,6),(218,796816800,7),(218,814957200,6),(218,828871200,7),(218,846406800,6),(218,860320800,7),(218,877856400,6),(218,891770400,7),(218,909306000,6),(218,923220000,7),(218,941360400,6),(218,954669600,7),(218,972810000,6),(218,986119200,7),(218,1004259600,6),(218,1018173600,7),(218,1035709200,6),(218,1049623200,7),(218,1067158800,6),(218,1081072800,7),(218,1099213200,6),(218,1112522400,7),(218,1130662800,6),(218,1143972000,7),(218,1162112400,6),(218,1173607200,7),(218,1194166800,6),(218,1205056800,7),(218,1225616400,6),(218,1236506400,7),(218,1257066000,6),(218,1268560800,7),(218,1289120400,6),(218,1300010400,7),(218,1320570000,6),(218,1331460000,7),(218,1352019600,6),(218,1362909600,7),(218,1383469200,6),(218,1394359200,7),(218,1414918800,6),(218,1425808800,7),(218,1446368400,6),(218,1457863200,7),(218,1478422800,6),(218,1489312800,7),(218,1509872400,6),(218,1520762400,7),(218,1541322000,6),(218,1552212000,7),(218,1572771600,6),(218,1583661600,7),(218,1604214000,8),(219,-2147483648,2),(219,-1694368800,1),(219,-1681671600,2),(219,-1632067200,1),(219,-1615136400,2),(219,-1029686400,1),(219,-1018198800,2),(219,-880214400,3),(219,-769395600,4),(219,-765392400,2),(219,-746035200,1),(219,-732733200,2),(219,-715795200,1),(219,-702493200,2),(219,-684345600,1),(219,-671043600,2),(219,-652896000,1),(219,-639594000,2),(219,-620755200,1),(219,-607626000,2),(219,-589392000,1),(219,-576090000,2),(219,-557942400,1),(219,-544640400,2),(219,-526492800,1),(219,-513190800,2),(219,-495043200,1),(219,-481741200,2),(219,-463593600,1),(219,-450291600,2),(219,-431539200,1),(219,-418237200,2),(219,-400089600,1),(219,-386787600,2),(219,-368640000,1),(219,-355338000,2),(219,-337190400,1),(219,-321469200,2),(219,-305740800,1),(219,-292438800,2),(219,-210787200,1),(219,-198090000,2),(219,-116438400,5),(219,-100108800,6),(219,-84384000,5),(219,-68659200,6),(219,-52934400,5),(219,-37209600,6),(219,-21484800,5),(219,-5760000,6),(219,9964800,5),(219,25689600,6),(219,41414400,5),(219,57744000,6),(219,73468800,5),(219,89193600,6),(219,104918400,5),(219,120643200,6),(219,136368000,5),(219,152092800,6),(219,167817600,5),(219,183542400,6),(219,199267200,5),(219,215596800,6),(219,230716800,5),(219,247046400,6),(219,262771200,5),(219,278496000,6),(219,294220800,5),(219,309945600,6),(219,325670400,5),(219,341395200,6),(219,357120000,5),(219,372844800,6),(219,388569600,5),(219,404899200,6),(219,420019200,5),(219,436348800,6),(219,452073600,5),(219,467798400,6),(219,483523200,5),(219,499248000,6),(219,514972800,5),(219,530697600,6),(219,544608000,5),(219,562147200,6),(219,576057600,5),(219,594201600,6),(219,607507200,5),(219,625651200,6),(219,638956800,5),(219,657100800,6),(219,671011200,5),(219,688550400,6),(219,702460800,5),(219,720000000,6),(219,733910400,5),(219,752054400,6),(219,765360000,5),(219,783504000,6),(219,796809600,5),(219,814953600,6),(219,828864000,5),(219,846403200,6),(219,860313600,5),(219,877852800,6),(219,891763200,5),(219,909302400,6),(219,923212800,5),(219,941356800,6),(219,954662400,5),(219,972806400,6),(219,986112000,5),(219,1004256000,6),(219,1018166400,5),(219,1035705600,6),(219,1049616000,5),(219,1067155200,6),(219,1081065600,5),(219,1099209600,6),(219,1112515200,5),(219,1130659200,6),(219,1143964800,1),(219,1162105200,2),(219,1173600000,1),(219,1194159600,2),(219,1205049600,1),(219,1225609200,2),(219,1236499200,1),(219,1257058800,2),(219,1268553600,1),(219,1289113200,2),(219,1300003200,1),(219,1320562800,2),(219,1331452800,1),(219,1352012400,2),(219,1362902400,1),(219,1383462000,2),(219,1394352000,1),(219,1414911600,2),(219,1425801600,1),(219,1446361200,2),(219,1457856000,1),(219,1478415600,2),(219,1489305600,1),(219,1509865200,2),(219,1520755200,1),(219,1541314800,2),(219,1552204800,1),(219,1572764400,2),(219,1583654400,1),(219,1604214000,2),(219,1615708800,1),(219,1636268400,2),(219,1647158400,1),(219,1667718000,2),(219,1678608000,1),(219,1699167600,2),(219,1710057600,1),(219,1730617200,2),(219,1741507200,1),(219,1762066800,2),(219,1772956800,1),(219,1793516400,2),(219,1805011200,1),(219,1825570800,2),(219,1836460800,1),(219,1857020400,2),(219,1867910400,1),(219,1888470000,2),(219,1899360000,1),(219,1919919600,2),(219,1930809600,1),(219,1951369200,2),(219,1962864000,1),(219,1983423600,2),(219,1994313600,1),(219,2014873200,2),(219,2025763200,1),(219,2046322800,2),(219,2057212800,1),(219,2077772400,2),(219,2088662400,1),(219,2109222000,2),(219,2120112000,1),(219,2140671600,2),(220,-2147483648,1),(220,-880203600,2),(220,-769395600,3),(220,-765381600,1),(220,-21474000,4),(220,-5752800,1),(220,9975600,4),(220,25696800,1),(220,41425200,4),(220,57751200,1),(220,73479600,4),(220,89200800,1),(220,104929200,4),(220,120650400,1),(220,126702000,4),(220,152100000,1),(220,162385200,4),(220,183549600,1),(220,199278000,4),(220,215604000,1),(220,230727600,4),(220,247053600,1),(220,262782000,4),(220,278503200,1),(220,294231600,4),(220,309952800,1),(220,325681200,4),(220,341402400,1),(220,357130800,4),(220,372852000,1),(220,388580400,4),(220,404906400,1),(220,420030000,4),(220,436356000,1),(220,439030800,6),(220,452084400,5),(220,467805600,6),(220,483534000,5),(220,499255200,6),(220,514983600,5),(220,530704800,6),(220,544618800,5),(220,562154400,6),(220,576068400,5),(220,594208800,6),(220,607518000,5),(220,625658400,6),(220,638967600,5),(220,657108000,6),(220,671022000,5),(220,688557600,6),(220,702471600,5),(220,720007200,6),(220,733921200,5),(220,752061600,6),(220,765370800,5),(220,783511200,6),(220,796820400,5),(220,814960800,6),(220,828874800,5),(220,846410400,6),(220,860324400,5),(220,877860000,6),(220,891774000,5),(220,909309600,6),(220,923223600,5),(220,941364000,6),(220,954673200,5),(220,972813600,6),(220,986122800,5),(220,1004263200,6),(220,1018177200,5),(220,1035712800,6),(220,1049626800,5),(220,1067162400,6),(220,1081076400,5),(220,1099216800,6),(220,1112526000,5),(220,1130666400,6),(220,1143975600,5),(220,1162116000,6),(220,1173610800,5),(220,1194170400,6),(220,1205060400,5),(220,1225620000,6),(220,1236510000,5),(220,1257069600,6),(220,1268564400,5),(220,1289124000,6),(220,1300014000,5),(220,1320573600,6),(220,1331463600,5),(220,1352023200,6),(220,1362913200,5),(220,1383472800,6),(220,1394362800,5),(220,1414922400,6),(220,1425812400,5),(220,1446372000,6),(220,1457866800,5),(220,1478426400,6),(220,1489316400,5),(220,1509876000,6),(220,1520766000,5),(220,1541325600,6),(220,1552215600,5),(220,1572775200,6),(220,1583665200,5),(220,1604224800,6),(220,1615719600,5),(220,1636279200,6),(220,1647169200,5),(220,1667728800,6),(220,1678618800,5),(220,1699178400,6),(220,1710068400,5),(220,1730628000,6),(220,1741518000,5),(220,1762077600,6),(220,1772967600,5),(220,1793527200,6),(220,1805022000,5),(220,1825581600,6),(220,1836471600,5),(220,1857031200,6),(220,1867921200,5),(220,1888480800,6),(220,1899370800,5),(220,1919930400,6),(220,1930820400,5),(220,1951380000,6),(220,1962874800,5),(220,1983434400,6),(220,1994324400,5),(220,2014884000,6),(220,2025774000,5),(220,2046333600,6),(220,2057223600,5),(220,2077783200,6),(220,2088673200,5),(220,2109232800,6),(220,2120122800,5),(220,2140682400,6),(221,-1104537600,3),(221,-880210800,1),(221,-769395600,2),(221,-765388800,3),(221,-147891600,4),(221,-131562000,3),(221,325674000,5),(221,341395200,3),(221,357123600,5),(221,372844800,3),(221,388573200,5),(221,404899200,3),(221,420022800,5),(221,436348800,3),(221,452077200,5),(221,467798400,3),(221,483526800,5),(221,499248000,3),(221,514976400,5),(221,530697600,3),(221,544611600,5),(221,562147200,3),(221,576061200,5),(221,594201600,3),(221,607510800,5),(221,625651200,3),(221,638960400,5),(221,657100800,3),(221,671014800,5),(221,688550400,3),(221,702464400,5),(221,720000000,3),(221,733914000,5),(221,752054400,3),(221,765363600,5),(221,783504000,3),(221,796813200,5),(221,814953600,3),(221,828867600,5),(221,846403200,3),(221,860317200,5),(221,877852800,3),(221,891766800,5),(221,909302400,3),(221,923216400,5),(221,941356800,3),(221,954666000,5),(221,972806400,3),(221,986115600,5),(221,1004256000,3),(221,1018170000,5),(221,1035705600,3),(221,1049619600,5),(221,1067155200,3),(221,1081069200,5),(221,1099209600,3),(221,1112518800,5),(221,1130659200,3),(221,1143968400,5),(221,1162108800,3),(221,1173603600,5),(221,1194163200,3),(221,1205053200,5),(221,1225612800,3),(221,1236502800,5),(221,1257062400,3),(221,1268557200,5),(221,1289116800,3),(221,1300006800,5),(221,1320566400,3),(221,1331456400,5),(221,1352016000,3),(221,1362906000,5),(221,1383465600,3),(221,1394355600,5),(221,1414915200,3),(221,1425805200,5),(221,1446364800,3),(221,1457859600,5),(221,1478419200,3),(221,1489309200,5),(221,1509868800,3),(221,1520758800,5),(221,1541318400,3),(221,1552208400,5),(221,1572768000,3),(221,1583658000,5),(221,1604217600,3),(221,1615712400,5),(221,1636272000,3),(221,1647162000,5),(221,1667721600,3),(221,1678611600,5),(221,1699171200,3),(221,1710061200,5),(221,1730620800,3),(221,1741510800,5),(221,1762070400,3),(221,1772960400,5),(221,1793520000,3),(221,1805014800,5),(221,1825574400,3),(221,1836464400,5),(221,1857024000,3),(221,1867914000,5),(221,1888473600,3),(221,1899363600,5),(221,1919923200,3),(221,1930813200,5),(221,1951372800,3),(221,1962867600,5),(221,1983427200,3),(221,1994317200,5),(221,2014876800,3),(221,2025766800,5),(221,2046326400,3),(221,2057216400,5),(221,2077776000,3),(221,2088666000,5),(221,2109225600,3),(221,2120115600,5),(221,2140675200,3),(222,-31536000,1),(222,1255802400,2),(222,1267714800,1),(222,1319738400,2),(222,1329843600,3),(222,1477065600,2),(222,1520701200,1),(222,1538856000,2),(222,1552752000,1),(222,1570129200,2),(222,1583596800,1),(222,1601740860,2),(222,2147483647,2),(223,-409190400,1),(223,-163062000,0),(223,-28857600,1),(223,1255806000,2),(223,1268251200,3),(223,1319742000,2),(223,1329854400,3),(223,2147483647,3),(224,-2147483648,1),(224,2147483647,1),(225,-2147483648,1),(225,-1680508800,2),(225,-1665388800,3),(225,-1601719200,4),(225,-687052800,1),(225,-71136000,5),(225,-55411200,3),(225,-37267200,5),(225,-25776000,3),(225,-5817600,5),(225,5673600,3),(225,25632000,5),(225,37728000,3),(225,57686400,5),(225,67968000,3),(225,89136000,5),(225,100022400,3),(225,120585600,5),(225,131472000,3),(225,152035200,5),(225,162921600,3),(225,183484800,5),(225,194976000,3),(225,215539200,5),(225,226425600,3),(225,246988800,5),(225,257875200,3),(225,278438400,5),(225,289324800,3),(225,309888000,5),(225,320774400,3),(225,341337600,5),(225,352224000,3),(225,372787200,5),(225,386092800,3),(225,404841600,5),(225,417542400,3),(225,436291200,5),(225,447177600,3),(225,467740800,5),(225,478627200,3),(225,499190400,5),(225,510076800,3),(225,530035200,5),(225,542736000,3),(225,562089600,5),(225,574790400,3),(225,594144000,5),(225,606240000,3),(225,625593600,5),(225,637689600,3),(225,657043200,5),(225,670348800,3),(225,686678400,5),(225,701798400,3),(225,718128000,5),(225,733248000,3),(225,749577600,5),(225,764697600,3),(225,781027200,5),(225,796147200,3),(225,812476800,5),(225,828201600,3),(225,844531200,5),(225,859651200,3),(225,875980800,5),(225,891100800,3),(225,907430400,5),(225,922550400,3),(225,938880000,5),(225,954000000,3),(225,967305600,5),(225,985449600,3),(225,1002384000,5),(225,1017504000,3),(225,1033833600,5),(225,1048953600,3),(225,1065283200,5),(225,1080403200,3),(225,1096732800,5),(225,1111852800,3),(225,1128182400,5),(225,1143907200,3),(225,1159632000,5),(225,1174752000,3),(225,1191686400,5),(225,1207411200,3),(225,1223136000,5),(225,1238860800,3),(225,1254585600,5),(225,1301760000,3),(225,1317484800,5),(225,1333209600,3),(225,1349539200,5),(225,1365264000,3),(225,1380988800,5),(225,1396713600,3),(225,1412438400,5),(225,1428163200,3),(225,1443888000,5),(225,1459612800,3),(225,1475337600,5),(225,1491062400,3),(225,1506787200,5),(225,1522512000,3),(225,1538841600,5),(225,1554566400,3),(225,1570291200,5),(225,1586016000,3),(225,1601740800,5),(225,1617465600,3),(225,1633190400,5),(225,1648915200,3),(225,1664640000,5),(225,1680364800,3),(225,1696089600,5),(225,1712419200,3),(225,1728144000,5),(225,1743868800,3),(225,1759593600,5),(225,1775318400,3),(225,1791043200,5),(225,1806768000,3),(225,1822492800,5),(225,1838217600,3),(225,1853942400,5),(225,1869667200,3),(225,1885996800,5),(225,1901721600,3),(225,1917446400,5),(225,1933171200,3),(225,1948896000,5),(225,1964620800,3),(225,1980345600,5),(225,1996070400,3),(225,2011795200,5),(225,2027520000,3),(225,2043244800,5),(225,2058969600,3),(225,2075299200,5),(225,2091024000,3),(225,2106748800,5),(225,2122473600,3),(225,2138198400,5),(226,-501206400,1),(226,1255809600,2),(226,2147483647,2),(227,-2147483648,2),(227,-1330335000,1),(227,-1320057000,2),(227,-1300699800,3),(227,-1287396000,2),(227,-1269250200,3),(227,-1255946400,2),(227,-1237800600,3),(227,-1224496800,2),(227,-1206351000,3),(227,-1192442400,2),(227,-1174901400,3),(227,-1160992800,2),(227,-1143451800,3),(227,-1125914400,2),(227,-1112607000,3),(227,-1094464800,2),(227,-1081157400,3),(227,-1063015200,2),(227,-1049707800,3),(227,-1031565600,2),(227,-1018258200,3),(227,-1000116000,2),(227,-986808600,3),(227,-968061600,2),(227,-955359000,3),(227,-936612000,2),(227,-923304600,3),(227,-757425600,6),(227,152632800,4),(227,162309600,5),(227,183477600,4),(227,194968800,5),(227,215532000,4),(227,226418400,5),(227,246981600,4),(227,257868000,5),(227,278431200,4),(227,289317600,5),(227,309880800,4),(227,320767200,5),(227,341330400,4),(227,352216800,5),(227,372780000,4),(227,384271200,5),(227,404834400,4),(227,415720800,5),(227,436284000,4),(227,447170400,5),(227,467733600,4),(227,478620000,5),(227,499183200,4),(227,510069600,5),(227,530632800,4),(227,541519200,5),(227,562082400,4),(227,573573600,5),(227,594136800,4),(227,605023200,5),(227,623772000,4),(227,637682400,5),(227,655221600,4),(227,669132000,5),(227,686671200,4),(227,700581600,5),(227,718120800,4),(227,732636000,5),(227,749570400,4),(227,764085600,5),(227,781020000,4),(227,795535200,5),(227,812469600,4),(227,826984800,5),(227,844524000,4),(227,858434400,5),(227,875973600,4),(227,889884000,5),(227,907423200,4),(227,921938400,5),(227,938872800,4),(227,953388000,5),(227,970322400,4),(227,984837600,5),(227,1002376800,4),(227,1016287200,5),(227,1033826400,4),(227,1047736800,5),(227,1065276000,4),(227,1079791200,5),(227,1096725600,4),(227,1111240800,5),(227,1128175200,4),(227,1142690400,5),(227,1159624800,4),(227,1174140000,5),(227,1191074400,4),(227,1207404000,5),(227,1222524000,4),(227,1238853600,5),(227,1253973600,4),(227,1270303200,5),(227,1285423200,4),(227,1301752800,5),(227,1316872800,4),(227,1333202400,5),(227,1348927200,4),(227,1365256800,5),(227,1380376800,4),(227,1396706400,5),(227,1411826400,4),(227,1428156000,5),(227,1443276000,4),(227,1459605600,5),(227,1474725600,4),(227,1491055200,5),(227,1506175200,4),(227,1522504800,5),(227,1538229600,4),(227,1554559200,5),(227,1569679200,4),(227,1586008800,5),(227,1601128800,4),(227,1617458400,5),(227,1632578400,4),(227,1648908000,5),(227,1664028000,4),(227,1680357600,5),(227,1695477600,4),(227,1712412000,5),(227,1727532000,4),(227,1743861600,5),(227,1758981600,4),(227,1775311200,5),(227,1790431200,4),(227,1806760800,5),(227,1821880800,4),(227,1838210400,5),(227,1853330400,4),(227,1869660000,5),(227,1885384800,4),(227,1901714400,5),(227,1916834400,4),(227,1933164000,5),(227,1948284000,4),(227,1964613600,5),(227,1979733600,4),(227,1996063200,5),(227,2011183200,4),(227,2027512800,5),(227,2042632800,4),(227,2058962400,5),(227,2074687200,4),(227,2091016800,5),(227,2106136800,4),(227,2122466400,5),(227,2137586400,4),(228,-157766400,2),(228,-152658000,1),(228,-132955200,2),(228,-121122000,1),(228,-101419200,2),(228,-86821200,1),(228,-71092800,2),(228,-54766800,1),(228,-39038400,2),(228,-23317200,1),(228,-7588800,4),(228,128142000,3),(228,136605600,4),(228,389070000,1),(228,403070400,5),(228,416372400,6),(228,434520000,5),(228,447822000,6),(228,466574400,5),(228,479271600,6),(228,498024000,5),(228,510721200,6),(228,529473600,5),(228,545194800,6),(228,560923200,5),(228,574225200,6),(228,592372800,5),(228,605674800,6),(228,624427200,5),(228,637124400,6),(228,653457600,5),(228,668574000,6),(228,687326400,5),(228,700628400,6),(228,718776000,5),(228,732078000,6),(228,750225600,5),(228,763527600,6),(228,781675200,5),(228,794977200,6),(228,813729600,5),(228,826426800,6),(228,845179200,5),(228,859690800,6),(228,876628800,5),(228,889930800,6),(228,906868800,5),(228,923194800,6),(228,939528000,5),(228,952830000,6),(228,971582400,5),(228,984279600,6),(228,1003032000,5),(228,1015729200,6),(228,1034481600,5),(228,1047178800,6),(228,1065931200,5),(228,1079233200,6),(228,1097380800,5),(228,1110682800,6),(228,1128830400,5),(228,1142132400,6),(228,1160884800,5),(228,1173582000,6),(228,1192334400,5),(228,1206846000,6),(228,1223784000,5),(228,1237086000,6),(228,1255233600,5),(228,1270350000,6),(228,1286683200,5),(228,1304823600,6),(228,1313899200,5),(228,1335668400,6),(228,1346558400,5),(228,1367118000,6),(228,1378612800,5),(228,1398567600,6),(228,1410062400,5),(228,1463281200,6),(228,1471147200,5),(228,1480820400,4),(228,2147483647,4),(229,218246400,1),(229,2147483647,1),(230,-2147483648,2),(230,-1330335000,1),(230,-1320057000,2),(230,-1300699800,3),(230,-1287396000,2),(230,-1269250200,3),(230,-1255946400,2),(230,-1237800600,3),(230,-1224496800,2),(230,-1206351000,3),(230,-1192442400,2),(230,-1174901400,3),(230,-1160992800,2),(230,-1143451800,3),(230,-1125914400,2),(230,-1112607000,3),(230,-1094464800,2),(230,-1081157400,3),(230,-1063015200,2),(230,-1049707800,3),(230,-1031565600,2),(230,-1018258200,3),(230,-1000116000,2),(230,-986808600,3),(230,-968061600,2),(230,-955359000,3),(230,-936612000,2),(230,-923304600,3),(230,-757425600,6),(230,152632800,4),(230,162309600,5),(230,183477600,4),(230,194968800,5),(230,215532000,4),(230,226418400,5),(230,246981600,4),(230,257868000,5),(230,278431200,4),(230,289317600,5),(230,309880800,4),(230,320767200,5),(230,341330400,4),(230,352216800,5),(230,372780000,4),(230,384271200,5),(230,404834400,4),(230,415720800,5),(230,436284000,4),(230,447170400,5),(230,467733600,4),(230,478620000,5),(230,499183200,4),(230,510069600,5),(230,530632800,4),(230,541519200,5),(230,562082400,4),(230,573573600,5),(230,594136800,4),(230,605023200,5),(230,623772000,4),(230,637682400,5),(230,655221600,4),(230,669132000,5),(230,686671200,4),(230,700581600,5),(230,718120800,4),(230,732636000,5),(230,749570400,4),(230,764085600,5),(230,781020000,4),(230,795535200,5),(230,812469600,4),(230,826984800,5),(230,844524000,4),(230,858434400,5),(230,875973600,4),(230,889884000,5),(230,907423200,4),(230,921938400,5),(230,938872800,4),(230,953388000,5),(230,970322400,4),(230,984837600,5),(230,1002376800,4),(230,1016287200,5),(230,1033826400,4),(230,1047736800,5),(230,1065276000,4),(230,1079791200,5),(230,1096725600,4),(230,1111240800,5),(230,1128175200,4),(230,1142690400,5),(230,1159624800,4),(230,1174140000,5),(230,1191074400,4),(230,1207404000,5),(230,1222524000,4),(230,1238853600,5),(230,1253973600,4),(230,1270303200,5),(230,1285423200,4),(230,1301752800,5),(230,1316872800,4),(230,1333202400,5),(230,1348927200,4),(230,1365256800,5),(230,1380376800,4),(230,1396706400,5),(230,1411826400,4),(230,1428156000,5),(230,1443276000,4),(230,1459605600,5),(230,1474725600,4),(230,1491055200,5),(230,1506175200,4),(230,1522504800,5),(230,1538229600,4),(230,1554559200,5),(230,1569679200,4),(230,1586008800,5),(230,1601128800,4),(230,1617458400,5),(230,1632578400,4),(230,1648908000,5),(230,1664028000,4),(230,1680357600,5),(230,1695477600,4),(230,1712412000,5),(230,1727532000,4),(230,1743861600,5),(230,1758981600,4),(230,1775311200,5),(230,1790431200,4),(230,1806760800,5),(230,1821880800,4),(230,1838210400,5),(230,1853330400,4),(230,1869660000,5),(230,1885384800,4),(230,1901714400,5),(230,1916834400,4),(230,1933164000,5),(230,1948284000,4),(230,1964613600,5),(230,1979733600,4),(230,1996063200,5),(230,2011183200,4),(230,2027512800,5),(230,2042632800,4),(230,2058962400,5),(230,2074687200,4),(230,2091016800,5),(230,2106136800,4),(230,2122466400,5),(230,2137586400,4),(231,-719636812,1),(231,2147483647,1),(232,1108166400,3),(232,1111885200,1),(232,1130634000,2),(232,1143334800,1),(232,1162083600,2),(232,1174784400,1),(232,1193533200,2),(232,1206838800,1),(232,1224982800,2),(232,1238288400,1),(232,1256432400,2),(232,1269738000,1),(232,1288486800,2),(232,1301187600,1),(232,1319936400,2),(232,1332637200,1),(232,1351386000,2),(232,1364691600,1),(232,1382835600,2),(232,1396141200,1),(232,1414285200,2),(232,1427590800,1),(232,1445734800,2),(232,1459040400,1),(232,1477789200,2),(232,1490490000,1),(232,1509238800,2),(232,1521939600,1),(232,1540688400,2),(232,1553994000,1),(232,1572138000,2),(232,1585443600,1),(232,1603587600,2),(232,1616893200,1),(232,1635642000,2),(232,1648342800,1),(232,1667091600,2),(232,1679792400,1),(232,1698541200,2),(232,1711846800,1),(232,1729990800,2),(232,1743296400,1),(232,1761440400,2),(232,1774746000,1),(232,1792890000,2),(232,1806195600,1),(232,1824944400,2),(232,1837645200,1),(232,1856394000,2),(232,1869094800,1),(232,1887843600,2),(232,1901149200,1),(232,1919293200,2),(232,1932598800,1),(232,1950742800,2),(232,1964048400,1),(232,1982797200,2),(232,1995498000,1),(232,2014246800,2),(232,2026947600,1),(232,2045696400,2),(232,2058397200,1),(232,2077146000,2),(232,2090451600,1),(232,2108595600,2),(232,2121901200,1),(232,2140045200,2),(232,2147483647,2),(233,-1325483420,1),(233,2147483647,1),(234,-2147483648,2),(234,-1693706400,1),(234,-1680483600,2),(234,-1663455600,3),(234,-1650150000,4),(234,-1632006000,3),(234,-1618700400,4),(234,-938905200,3),(234,-857257200,4),(234,-844556400,3),(234,-828226800,4),(234,-812502000,3),(234,-796777200,4),(234,-781052400,3),(234,-776563200,5),(234,-765936000,1),(234,-761180400,4),(234,-748479600,3),(234,-733273200,4),(234,-717631200,3),(234,-714610800,6),(234,-710380800,1),(234,-701910000,4),(234,-684975600,3),(234,-670460400,4),(234,-654130800,3),(234,-639010800,4),(234,323830800,7),(234,338950800,8),(234,354675600,7),(234,370400400,8),(234,386125200,7),(234,401850000,8),(234,417574800,7),(234,433299600,8),(234,449024400,7),(234,465354000,8),(234,481078800,7),(234,496803600,8),(234,512528400,7),(234,528253200,8),(234,543978000,7),(234,559702800,8),(234,575427600,7),(234,591152400,8),(234,606877200,7),(234,622602000,8),(234,638326800,7),(234,654656400,8),(234,670381200,7),(234,686106000,8),(234,701830800,7),(234,717555600,8),(234,733280400,7),(234,749005200,8),(234,764730000,7),(234,780454800,8),(234,796179600,7),(234,811904400,8),(234,828234000,7),(234,846378000,8),(234,859683600,7),(234,877827600,8),(234,891133200,7),(234,909277200,8),(234,922582800,7),(234,941331600,8),(234,954032400,7),(234,972781200,8),(234,985482000,7),(234,1004230800,8),(234,1017536400,7),(234,1035680400,8),(234,1048986000,7),(234,1067130000,8),(234,1080435600,7),(234,1099184400,8),(234,1111885200,7),(234,1130634000,8),(234,1143334800,7),(234,1162083600,8),(234,1174784400,7),(234,1193533200,8),(234,1206838800,7),(234,1224982800,8),(234,1238288400,7),(234,1256432400,8),(234,1269738000,7),(234,1288486800,8),(234,1301187600,7),(234,1319936400,8),(234,1332637200,7),(234,1351386000,8),(234,1364691600,7),(234,1382835600,8),(234,1396141200,7),(234,1414285200,8),(234,1427590800,7),(234,1445734800,8),(234,1459040400,7),(234,1477789200,8),(234,1490490000,7),(234,1509238800,8),(234,1521939600,7),(234,1540688400,8),(234,1553994000,7),(234,1572138000,8),(234,1585443600,7),(234,1603587600,8),(234,1616893200,7),(234,1635642000,8),(234,1648342800,7),(234,1667091600,8),(234,1679792400,7),(234,1698541200,8),(234,1711846800,7),(234,1729990800,8),(234,1743296400,7),(234,1761440400,8),(234,1774746000,7),(234,1792890000,8),(234,1806195600,7),(234,1824944400,8),(234,1837645200,7),(234,1856394000,8),(234,1869094800,7),(234,1887843600,8),(234,1901149200,7),(234,1919293200,8),(234,1932598800,7),(234,1950742800,8),(234,1964048400,7),(234,1982797200,8),(234,1995498000,7),(234,2014246800,8),(234,2026947600,7),(234,2045696400,8),(234,2058397200,7),(234,2077146000,8),(234,2090451600,7),(234,2108595600,8),(234,2121901200,7),(234,2140045200,8),(235,-719636812,1),(235,2147483647,1),(236,-1441170468,1),(236,-1247547600,3),(236,354909600,2),(236,370717200,3),(236,386445600,2),(236,402253200,3),(236,417981600,2),(236,433789200,3),(236,449604000,2),(236,465336000,4),(236,481060800,5),(236,496785600,4),(236,512510400,5),(236,528235200,4),(236,543960000,5),(236,559684800,4),(236,575409600,5),(236,591134400,4),(236,606859200,5),(236,622584000,4),(236,638308800,5),(236,654638400,4),(236,670363200,6),(236,686091600,7),(236,695768400,4),(236,701812800,5),(236,717537600,4),(236,733262400,5),(236,748987200,4),(236,764712000,5),(236,780436800,4),(236,796161600,5),(236,811886400,4),(236,828216000,5),(236,846360000,4),(236,859665600,5),(236,877809600,4),(236,891115200,5),(236,909259200,4),(236,922564800,5),(236,941313600,4),(236,954014400,5),(236,972763200,4),(236,985464000,5),(236,1004212800,4),(236,1017518400,5),(236,1035662400,4),(236,1048968000,5),(236,1067112000,4),(236,1080417600,5),(236,1099166400,4),(236,2147483647,4),(237,-1230776624,2),(237,108165600,1),(237,118270800,2),(237,136591200,1),(237,149806800,2),(237,168127200,1),(237,181342800,2),(237,199749600,1),(237,215643600,2),(237,231285600,1),(237,244501200,2),(237,262735200,1),(237,275950800,2),(237,481154400,1),(237,496962000,2),(237,512949600,1),(237,528670800,2),(237,544399200,1),(237,560120400,2),(237,575848800,1),(237,592174800,2),(237,610581600,1),(237,623624400,2),(237,641167200,1),(237,655074000,2),(237,671839200,1),(237,685918800,2),(237,702856800,1),(237,717973200,2),(237,733701600,1),(237,749422800,2),(237,765151200,1),(237,779662800,2),(237,797205600,1),(237,811116000,3),(237,828655200,1),(237,843170400,3),(237,860104800,1),(237,874620000,3),(237,891554400,1),(237,906069600,3),(237,930780000,4),(237,938124000,3),(237,954367200,4),(237,970178400,3),(237,985816800,4),(237,1001628000,3),(237,1017352800,1),(237,1033077600,3),(237,1048802400,1),(237,1066946400,3),(237,1080252000,1),(237,1097791200,3),(237,1112306400,1),(237,1128031200,3),(237,1143756000,1),(237,1161900000,3),(237,1175205600,1),(237,1193349600,3),(237,1206655200,1),(237,1225404000,3),(237,1238104800,1),(237,1256853600,3),(237,1269554400,1),(237,1288303200,3),(237,1301608800,1),(237,1319752800,3),(237,1333058400,1),(237,1387486800,2),(237,1395957600,1),(237,1414706400,3),(237,1427407200,1),(237,1446156000,3),(237,1459461600,1),(237,1477605600,3),(237,1490911200,1),(237,1509055200,3),(237,1522360800,1),(237,1540504800,3),(237,1553810400,1),(237,1571954400,3),(237,1585260000,1),(237,1604008800,3),(237,1616709600,1),(237,1635458400,3),(237,1645740000,1),(237,1666908000,3),(237,1677189600,1),(237,1698357600,3),(237,1709244000,1),(237,1729807200,3),(237,1740693600,1),(237,1761861600,3),(237,1772143200,1),(237,1793311200,3),(237,1803592800,1),(237,1824760800,3),(237,1835042400,1),(237,1856210400,3),(237,1866492000,1),(237,1887660000,3),(237,1898546400,1),(237,1919109600,3),(237,1929996000,1),(237,1951164000,3),(237,1961445600,1),(237,1982613600,3),(237,1992895200,1),(237,2014063200,3),(237,2024344800,1),(237,2045512800,3),(237,2055794400,1),(237,2076962400,3),(237,2087848800,1),(237,2109016800,3),(237,2119298400,1),(237,2140466400,3),(238,-1441194596,1),(238,-1247572800,3),(238,354884400,2),(238,370692000,3),(238,386420400,4),(238,402231600,1),(238,417960000,4),(238,433767600,1),(238,449582400,4),(238,465314400,5),(238,481039200,6),(238,496764000,5),(238,512488800,6),(238,528213600,5),(238,543938400,6),(238,559663200,5),(238,575388000,6),(238,591112800,5),(238,606837600,6),(238,622562400,5),(238,638287200,6),(238,654616800,5),(238,670341600,7),(238,686070000,8),(238,695746800,5),(238,701791200,6),(238,717516000,5),(238,733240800,6),(238,748965600,5),(238,764690400,6),(238,780415200,5),(238,796140000,6),(238,811864800,5),(238,828194400,6),(238,846338400,5),(238,859644000,6),(238,877788000,5),(238,891093600,6),(238,909237600,5),(238,922543200,6),(238,941292000,5),(238,953992800,6),(238,972741600,5),(238,985442400,6),(238,1004191200,5),(238,1017496800,6),(238,1035640800,5),(238,1048946400,6),(238,1067090400,5),(238,1080396000,6),(238,1099144800,5),(238,1111845600,6),(238,1130594400,5),(238,1143295200,6),(238,1162044000,5),(238,1174744800,6),(238,1193493600,5),(238,1206799200,6),(238,1224943200,5),(238,1238248800,6),(238,1256392800,5),(238,1269698400,7),(238,1288450800,8),(238,1301151600,5),(238,2147483647,5),(239,-1441164064,1),(239,-1247544000,2),(239,370724400,3),(239,386445600,4),(239,402256800,2),(239,417985200,4),(239,433792800,2),(239,449607600,4),(239,465339600,5),(239,481064400,6),(239,496789200,5),(239,512514000,6),(239,528238800,5),(239,543963600,6),(239,559688400,5),(239,575413200,6),(239,591138000,5),(239,606862800,6),(239,622587600,5),(239,638312400,6),(239,654642000,5),(239,670366800,7),(239,686095200,8),(239,695772000,5),(239,701816400,6),(239,717541200,5),(239,733266000,6),(239,748990800,5),(239,764715600,6),(239,780440400,8),(239,796168800,7),(239,811893600,8),(239,828223200,7),(239,846367200,8),(239,859672800,7),(239,877816800,8),(239,891122400,7),(239,909266400,8),(239,922572000,7),(239,941320800,8),(239,954021600,7),(239,972770400,8),(239,985471200,7),(239,1004220000,8),(239,1017525600,7),(239,1035669600,8),(239,1048975200,7),(239,1067119200,8),(239,1080424800,7),(239,1099173600,5),(239,2147483647,5),(240,-1441165720,1),(240,-1247544000,2),(240,354913200,3),(240,370720800,4),(240,386445600,3),(240,402256800,2),(240,417985200,3),(240,433792800,2),(240,449607600,3),(240,465339600,5),(240,481064400,6),(240,496789200,5),(240,512514000,6),(240,528238800,5),(240,543963600,6),(240,559688400,5),(240,575413200,6),(240,591138000,5),(240,606862800,6),(240,622587600,5),(240,638312400,6),(240,654642000,5),(240,670366800,7),(240,686095200,8),(240,695772000,5),(240,701816400,6),(240,717541200,5),(240,733266000,6),(240,748990800,5),(240,764715600,6),(240,780440400,5),(240,796165200,6),(240,811890000,5),(240,828219600,6),(240,846363600,5),(240,859669200,6),(240,877813200,5),(240,891118800,6),(240,909262800,5),(240,922568400,6),(240,941317200,5),(240,954018000,6),(240,972766800,5),(240,985467600,6),(240,1004216400,5),(240,1017522000,6),(240,1035666000,5),(240,1048971600,6),(240,1067115600,5),(240,1080421200,6),(240,1099170000,5),(240,2147483647,5),(241,-1441166012,1),(241,-1247544000,3),(241,354913200,2),(241,370720800,3),(241,386449200,2),(241,402256800,3),(241,417985200,2),(241,433792800,3),(241,449607600,2),(241,465339600,4),(241,481064400,5),(241,496789200,4),(241,512514000,5),(241,528238800,4),(241,543963600,5),(241,559688400,4),(241,575413200,5),(241,591138000,4),(241,606862800,5),(241,622587600,4),(241,638312400,5),(241,654642000,4),(241,670366800,6),(241,686095200,7),(241,695772000,3),(241,2147483647,3),(242,-1441166012,1),(242,-1247544000,3),(242,354913200,2),(242,370720800,3),(242,386449200,2),(242,402256800,3),(242,417985200,2),(242,433792800,3),(242,449607600,2),(242,465339600,4),(242,481064400,5),(242,496789200,4),(242,512514000,5),(242,528238800,4),(242,543963600,5),(242,559688400,4),(242,575413200,5),(242,591138000,4),(242,606862800,5),(242,622587600,4),(242,638312400,5),(242,654642000,4),(242,670366800,6),(242,686095200,7),(242,695772000,3),(242,2147483647,3),(243,-1441164464,1),(243,-1247540400,2),(243,370724400,3),(243,386445600,4),(243,402256800,2),(243,417985200,4),(243,433792800,2),(243,449607600,4),(243,465339600,5),(243,481064400,6),(243,496789200,5),(243,512514000,6),(243,528238800,5),(243,543963600,6),(243,559688400,5),(243,575413200,6),(243,591138000,5),(243,606862800,6),(243,622587600,5),(243,638312400,6),(243,654642000,5),(243,670366800,7),(243,686095200,8),(243,695772000,5),(243,701816400,6),(243,717541200,5),(243,733266000,6),(243,748990800,5),(243,764715600,6),(243,780440400,5),(243,796165200,6),(243,811890000,5),(243,828219600,6),(243,846363600,5),(243,859669200,6),(243,877813200,5),(243,891118800,6),(243,909262800,5),(243,922568400,7),(243,941320800,8),(243,954021600,7),(243,972770400,8),(243,985471200,7),(243,1004220000,8),(243,1017525600,7),(243,1035669600,8),(243,1048975200,7),(243,1067119200,8),(243,1080424800,7),(243,1099173600,5),(243,2147483647,5),(244,-2147483648,1),(244,-1641005856,2),(244,389048400,3),(244,402264000,2),(244,417906000,3),(244,433800000,2),(244,449614800,3),(244,465422400,2),(244,481150800,3),(244,496792800,4),(244,512517600,5),(244,528242400,4),(244,543967200,5),(244,559692000,4),(244,575416800,5),(244,591141600,4),(244,606866400,5),(244,622591200,4),(244,638316000,5),(244,654645600,4),(244,670464000,5),(244,686275200,4),(244,702086400,5),(244,717897600,4),(244,733622400,5),(244,749433600,4),(244,765158400,5),(244,780969600,4),(244,796694400,5),(244,812505600,4),(244,828316800,5),(244,844128000,4),(244,859852800,5),(244,875664000,4),(244,891388800,5),(244,907200000,4),(244,922924800,5),(244,938736000,4),(244,954547200,5),(244,970358400,4),(244,986083200,5),(244,1001894400,4),(244,1017619200,5),(244,1033430400,4),(244,1049155200,5),(244,1064966400,4),(244,1080777600,5),(244,1096588800,4),(244,1112313600,5),(244,1128124800,4),(244,1143849600,5),(244,1159660800,4),(244,1175385600,5),(244,1191196800,4),(244,2147483647,4),(245,-1577935568,1),(245,76190400,2),(245,2147483647,2),(246,-1441163964,1),(246,-405140400,3),(246,354916800,2),(246,370724400,3),(246,386452800,2),(246,402260400,3),(246,417988800,2),(246,433796400,3),(246,449611200,2),(246,465343200,4),(246,481068000,5),(246,496792800,4),(246,512517600,5),(246,528242400,4),(246,543967200,5),(246,559692000,4),(246,575416800,5),(246,591141600,4),(246,606866400,5),(246,622591200,4),(246,638316000,5),(246,654645600,4),(246,670370400,6),(246,686098800,7),(246,701823600,6),(246,717548400,4),(246,828234000,8),(246,846378000,9),(246,859680000,2),(246,877824000,3),(246,891129600,2),(246,909273600,3),(246,922579200,2),(246,941328000,3),(246,954028800,2),(246,972777600,3),(246,985478400,2),(246,1004227200,3),(246,1017532800,2),(246,1035676800,3),(246,1048982400,2),(246,1067126400,3),(246,1080432000,2),(246,1099180800,3),(246,1111881600,2),(246,1130630400,3),(246,1143331200,2),(246,1162080000,3),(246,1174780800,2),(246,1193529600,3),(246,1206835200,2),(246,1224979200,3),(246,1238284800,2),(246,1256428800,3),(246,1269734400,2),(246,1288483200,3),(246,1301184000,2),(246,1319932800,3),(246,1332633600,2),(246,1351382400,3),(246,1364688000,2),(246,1382832000,3),(246,1396137600,2),(246,1414281600,3),(246,1427587200,2),(246,1445731200,3),(246,2147483647,3),(247,-2147483648,1),(247,-1570084924,2),(247,2147483647,2),(248,-1579844100,1),(248,-1247551200,3),(248,354906000,2),(248,370713600,3),(248,386442000,2),(248,402249600,3),(248,417978000,2),(248,433785600,3),(248,449600400,2),(248,465332400,4),(248,481057200,5),(248,496782000,4),(248,512506800,5),(248,528231600,4),(248,543956400,5),(248,559681200,4),(248,575406000,5),(248,591130800,4),(248,606855600,5),(248,622580400,4),(248,638305200,5),(248,654634800,4),(248,670359600,6),(248,686088000,7),(248,695764800,4),(248,701809200,5),(248,717534000,4),(248,733258800,5),(248,748983600,4),(248,764708400,5),(248,780433200,4),(248,796158000,5),(248,801590400,8),(248,811886400,7),(248,828216000,6),(248,846360000,7),(248,859665600,6),(248,877809600,7),(248,891115200,6),(248,909259200,7),(248,922564800,6),(248,941313600,7),(248,954014400,6),(248,972763200,7),(248,985464000,6),(248,1004212800,7),(248,1017518400,6),(248,1035662400,7),(248,1048968000,6),(248,1067112000,7),(248,1080417600,6),(248,1099166400,7),(248,1111867200,6),(248,1130616000,7),(248,1143316800,6),(248,1162065600,7),(248,1174766400,6),(248,1193515200,7),(248,1206820800,6),(248,1224964800,7),(248,1238270400,6),(248,1256414400,7),(248,1269720000,6),(248,1288468800,7),(248,1301169600,4),(248,1414263600,7),(248,1459022400,4),(248,2147483647,4),(249,-2147483648,2),(249,-1570413600,1),(249,-1552186800,2),(249,-1538359200,1),(249,-1522551600,2),(249,-1507514400,1),(249,-1490583600,2),(249,-1473645600,1),(249,-1460948400,2),(249,-399866400,1),(249,-386650800,2),(249,-368330400,1),(249,-355114800,2),(249,-336794400,1),(249,-323578800,2),(249,-305172000,1),(249,-291956400,2),(249,-273636000,1),(249,-260420400,2),(249,78012000,1),(249,86734800,2),(249,105055200,1),(249,118270800,2),(249,136591200,1),(249,149806800,2),(249,168127200,1),(249,181342800,2),(249,199749600,1),(249,212965200,2),(249,231285600,1),(249,244501200,2),(249,262735200,1),(249,275950800,2),(249,452210400,1),(249,466722000,2),(249,483746400,1),(249,498258000,2),(249,515282400,1),(249,529794000,2),(249,546818400,1),(249,561330000,2),(249,581119200,1),(249,592952400,2),(249,610754400,1),(249,624488400,2),(249,641512800,1),(249,656024400,2),(249,673048800,1),(249,687560400,2),(249,704671200,1),(249,718146000,2),(249,733269600,1),(249,748990800,2),(249,764719200,1),(249,780440400,2),(249,796168800,1),(249,811890000,2),(249,828223200,1),(249,843944400,2),(249,859672800,1),(249,875394000,2),(249,891122400,1),(249,906843600,2),(249,922572000,1),(249,941317200,2),(249,954021600,1),(249,972766800,2),(249,985471200,1),(249,1004216400,2),(249,1017525600,1),(249,1035666000,2),(249,1048975200,1),(249,1067115600,2),(249,1080424800,1),(249,1099170000,2),(249,1111874400,1),(249,1130619600,2),(249,1143324000,1),(249,1162069200,2),(249,1174773600,1),(249,1193518800,2),(249,1206828000,1),(249,1224968400,2),(249,1238277600,1),(249,1256418000,2),(249,1269727200,1),(249,1288472400,2),(249,1301176800,1),(249,1319922000,2),(249,1332626400,1),(249,1351371600,2),(249,1364680800,1),(249,1382821200,2),(249,1396130400,1),(249,1414270800,2),(249,1427580000,1),(249,1445720400,2),(249,1459029600,1),(249,1477774800,2),(249,1490479200,1),(249,1509224400,2),(249,1521928800,1),(249,1540674000,2),(249,1553983200,1),(249,1572123600,2),(249,1585432800,1),(249,1603573200,2),(249,1616882400,1),(249,1635627600,2),(249,1648332000,1),(249,1667077200,2),(249,1679781600,1),(249,1698526800,2),(249,1711836000,1),(249,1729976400,2),(249,1743285600,1),(249,1761426000,2),(249,1774735200,1),(249,1792875600,2),(249,1806184800,1),(249,1824930000,2),(249,1837634400,1),(249,1856379600,2),(249,1869084000,1),(249,1887829200,2),(249,1901138400,1),(249,1919278800,2),(249,1932588000,1),(249,1950728400,2),(249,1964037600,1),(249,1982782800,2),(249,1995487200,1),(249,2014232400,2),(249,2026936800,1),(249,2045682000,2),(249,2058386400,1),(249,2077131600,2),(249,2090440800,1),(249,2108581200,2),(249,2121890400,1),(249,2140030800,2),(250,-1441169904,1),(250,-1247547600,3),(250,354909600,2),(250,370717200,3),(250,386445600,2),(250,402253200,3),(250,417981600,2),(250,433789200,3),(250,449604000,2),(250,465336000,4),(250,481060800,5),(250,496785600,4),(250,512510400,5),(250,528235200,4),(250,543960000,5),(250,559684800,4),(250,575409600,5),(250,591134400,4),(250,606859200,5),(250,622584000,4),(250,638308800,5),(250,654638400,4),(250,670363200,6),(250,683582400,1),(250,703018800,6),(250,717530400,1),(250,734468400,6),(250,748980000,1),(250,765918000,6),(250,780429600,1),(250,797367600,6),(250,811879200,1),(250,828817200,6),(250,843933600,1),(250,859671000,7),(250,877811400,1),(250,891120600,7),(250,909261000,1),(250,922570200,7),(250,941315400,1),(250,954019800,7),(250,972765000,1),(250,985469400,7),(250,1004214600,1),(250,1017523800,7),(250,1035664200,1),(250,1048973400,7),(250,1067113800,1),(250,1080423000,7),(250,1099168200,1),(250,1111872600,7),(250,1123783200,3),(250,2147483647,3),(251,-1383463280,1),(251,-1167636600,3),(251,-1082448000,2),(251,-1074586800,3),(251,-1050825600,2),(251,-1042964400,3),(251,-1019289600,2),(251,-1011428400,3),(251,-987753600,2),(251,-979892400,3),(251,-956217600,2),(251,-948356400,3),(251,-924595200,2),(251,-916734000,3),(251,-893059200,2),(251,-885198000,3),(251,-879667200,4),(251,-767005200,3),(251,2147483647,3),(252,-2147483648,1),(252,-2019705670,2),(252,-891581400,3),(252,-872058600,2),(252,-862637400,3),(252,-764145000,2),(253,-1579419232,1),(253,-1247558400,3),(253,354898800,2),(253,370706400,3),(253,386434800,2),(253,402242400,3),(253,417970800,2),(253,433778400,3),(253,449593200,2),(253,465325200,4),(253,481050000,5),(253,496774800,4),(253,512499600,5),(253,528224400,4),(253,543949200,5),(253,559674000,4),(253,575398800,5),(253,591123600,4),(253,606848400,5),(253,622573200,4),(253,638298000,5),(253,654627600,4),(253,670352400,6),(253,686080800,7),(253,695757600,4),(253,701802000,5),(253,717526800,4),(253,733251600,5),(253,748976400,4),(253,764701200,5),(253,780426000,4),(253,796150800,5),(253,811875600,4),(253,828205200,5),(253,846349200,4),(253,859654800,5),(253,877798800,4),(253,891104400,5),(253,909248400,4),(253,922554000,5),(253,941302800,4),(253,954003600,5),(253,972752400,4),(253,985453200,5),(253,1004202000,4),(253,1017507600,5),(253,1035651600,4),(253,1048957200,5),(253,1067101200,4),(253,1080406800,5),(253,1099155600,4),(253,1111856400,5),(253,1130605200,4),(253,1143306000,5),(253,1162054800,4),(253,1174755600,5),(253,1193504400,4),(253,1206810000,5),(253,1224954000,4),(253,1238259600,5),(253,1256403600,4),(253,1269709200,5),(253,1288458000,4),(253,1301158800,8),(253,1414252800,7),(253,1459015200,3),(253,2147483647,3),(254,-2032933080,1),(254,252435600,2),(254,417974400,4),(254,433778400,3),(254,449593200,4),(254,465314400,3),(254,481042800,4),(254,496764000,3),(254,512492400,4),(254,528213600,3),(254,543942000,4),(254,559663200,3),(254,575391600,4),(254,591112800,3),(254,606841200,4),(254,622562400,3),(254,638290800,4),(254,654616800,3),(254,670345200,4),(254,686066400,3),(254,701794800,4),(254,717516000,3),(254,733244400,4),(254,748965600,3),(254,764694000,4),(254,780415200,3),(254,796143600,4),(254,811864800,3),(254,828198000,4),(254,843919200,3),(254,859647600,4),(254,875368800,3),(254,891097200,4),(254,906818400,3),(254,988390800,4),(254,1001692800,3),(254,1017421200,4),(254,1033142400,3),(254,1048870800,4),(254,1064592000,3),(254,1080320400,4),(254,1096041600,3),(254,1111770000,4),(254,1127491200,3),(254,1143219600,4),(254,1159545600,3),(254,1206889200,2),(254,1427479200,5),(254,1443193200,2),(254,1458928800,5),(254,1474642800,2),(254,2147483647,2),(255,-2147483648,2),(255,-1600675200,1),(255,-1585904400,2),(255,-933667200,1),(255,-922093200,2),(255,-908870400,1),(255,-888829200,2),(255,-881049600,1),(255,-767869200,2),(255,-745833600,1),(255,-733827600,2),(255,-716889600,1),(255,-699613200,2),(255,-683884800,1),(255,-670669200,2),(255,-652348800,1),(255,-650019600,2),(255,515527200,1),(255,527014800,2),(255,545162400,1),(255,558464400,2),(255,577216800,1),(255,589914000,2),(255,608666400,1),(255,621968400,2),(255,640116000,1),(255,653418000,2),(255,671565600,1),(255,684867600,2),(256,-2147483648,2),(256,-1600675200,1),(256,-1585904400,2),(256,-933667200,1),(256,-922093200,2),(256,-908870400,1),(256,-888829200,2),(256,-881049600,1),(256,-767869200,2),(256,-745833600,1),(256,-733827600,2),(256,-716889600,1),(256,-699613200,2),(256,-683884800,1),(256,-670669200,2),(256,-652348800,1),(256,-650019600,2),(256,515527200,1),(256,527014800,2),(256,545162400,1),(256,558464400,2),(256,577216800,1),(256,589914000,2),(256,608666400,1),(256,621968400,2),(256,640116000,1),(256,653418000,2),(256,671565600,1),(256,684867600,2),(257,-2147483648,1),(257,-2019705572,2),(257,-883287000,3),(257,-862639200,4),(257,-764051400,2),(257,832962600,5),(257,846266400,6),(257,1145039400,2),(257,2147483647,2),(258,-2147483648,1),(258,-891582800,2),(258,-872058600,3),(258,-862637400,2),(258,-576138600,4),(258,1245430800,5),(258,1262278800,4),(258,2147483647,4),(259,-1577931912,2),(259,-1568592000,1),(259,-1554080400,2),(259,-1537142400,1),(259,-1522630800,2),(259,-1505692800,1),(259,-1491181200,2),(259,-1474243200,1),(259,-1459126800,2),(259,-242265600,1),(259,-228877200,2),(259,-210556800,1),(259,-197427600,2),(259,-178934400,1),(259,-165718800,2),(259,-147398400,1),(259,-134269200,2),(259,-116467200,1),(259,-102646800,2),(259,-84326400,1),(259,-71110800,2),(259,-52704000,1),(259,-39488400,2),(259,-21168000,1),(259,-7952400,2),(259,10368000,1),(259,23583600,2),(259,41904000,1),(259,55119600,2),(259,73526400,1),(259,86742000,2),(259,105062400,1),(259,118278000,2),(259,136598400,1),(259,149814000,2),(259,168134400,1),(259,181350000,2),(259,199756800,1),(259,212972400,2),(259,231292800,1),(259,241916400,2),(259,262828800,1),(259,273452400,2),(259,418694400,1),(259,433810800,2),(259,450316800,1),(259,465433200,2),(259,508896000,1),(259,529196400,2),(259,541555200,1),(259,562633200,2),(259,574387200,1),(259,594255600,2),(259,607305600,1),(259,623199600,2),(259,638928000,1),(259,654649200,2),(259,670456800,1),(259,686264400,2),(259,702684000,1),(259,717886800,2),(259,733096800,1),(259,748904400,2),(259,765151200,1),(259,780958800,2),(259,796687200,1),(259,812494800,2),(259,828309600,1),(259,844117200,2),(259,859759200,1),(259,875653200,2),(259,891208800,1),(259,907189200,2),(259,922917600,1),(259,938725200,2),(259,954540000,1),(259,970347600,2),(259,986076000,1),(259,1001883600,2),(259,1017612000,1),(259,1033419600,2),(259,1049148000,1),(259,1064955600,2),(259,1080770400,1),(259,1096578000,2),(259,1112306400,1),(259,1128114000,2),(259,1143842400,1),(259,1158872400,2),(259,1175205600,1),(259,1193950800,2),(259,1207260000,1),(259,1225486800,2),(259,1238104800,1),(259,1256850000,2),(259,1270159200,1),(259,1288299600,2),(259,1301608800,1),(259,1319749200,2),(259,1333058400,1),(259,1351198800,2),(259,1364508000,1),(259,1382648400,2),(259,1395957600,1),(259,1414702800,2),(259,1427407200,1),(259,1446152400,2),(259,1458856800,1),(259,1477602000,2),(259,1490911200,1),(259,1509051600,2),(259,1522360800,1),(259,1540501200,2),(259,1553810400,1),(259,1571950800,2),(259,1585260000,1),(259,1604005200,2),(259,1616709600,1),(259,1635454800,2),(259,1648159200,1),(259,1666904400,2),(259,1680213600,1),(259,1698354000,2),(259,1711663200,1),(259,1729803600,2),(259,1743112800,1),(259,1761858000,2),(259,1774562400,1),(259,1793307600,2),(259,1806012000,1),(259,1824757200,2),(259,1838066400,1),(259,1856206800,2),(259,1869516000,1),(259,1887656400,2),(259,1900965600,1),(259,1919106000,2),(259,1932415200,1),(259,1951160400,2),(259,1963864800,1),(259,1982610000,2),(259,1995314400,1),(259,2014059600,2),(259,2027368800,1),(259,2045509200,2),(259,2058818400,1),(259,2076958800,2),(259,2090268000,1),(259,2109013200,2),(259,2121717600,1),(259,2140462800,2),(260,-2147483648,1),(260,-891582800,2),(260,-872058600,3),(260,-862637400,2),(260,-576138600,4),(260,1245430800,5),(260,1262278800,4),(260,2147483647,4),(261,-1830414140,1),(261,-879152400,2),(261,199897200,1),(261,969120000,2),(261,2147483647,2),(262,-1577936472,1),(262,2147483647,1),(263,-1441168512,1),(263,-1247547600,3),(263,354909600,2),(263,370717200,3),(263,386445600,2),(263,402253200,3),(263,417981600,2),(263,433789200,3),(263,449604000,2),(263,465336000,4),(263,481060800,5),(263,496785600,4),(263,512510400,5),(263,528235200,4),(263,543960000,5),(263,559684800,4),(263,575409600,5),(263,591134400,4),(263,606859200,5),(263,622584000,4),(263,638308800,5),(263,654638400,4),(263,670363200,6),(263,684363600,7),(263,2147483647,7),(264,-1518920148,2),(264,166572000,1),(264,182293200,2),(264,200959200,1),(264,213829200,2),(264,228866400,1),(264,243982800,2),(264,260316000,1),(264,276123600,2),(264,291765600,1),(264,307486800,2),(264,323820000,1),(264,338936400,2),(264,354664800,1),(264,370386000,2),(264,386114400,1),(264,401835600,2),(264,417564000,1),(264,433285200,2),(264,449013600,1),(264,465339600,2),(264,481068000,1),(264,496789200,2),(264,512517600,1),(264,528238800,2),(264,543967200,1),(264,559688400,2),(264,575416800,1),(264,591138000,2),(264,606866400,1),(264,622587600,2),(264,638316000,1),(264,654642000,2),(264,670370400,1),(264,686091600,2),(264,701820000,1),(264,717541200,2),(264,733269600,1),(264,748990800,2),(264,764719200,1),(264,780440400,2),(264,796168800,1),(264,811890000,2),(264,828223200,1),(264,843944400,2),(264,859672800,1),(264,875394000,2),(264,891122400,1),(264,909277200,3),(264,922582800,4),(264,941331600,3),(264,954032400,4),(264,972781200,3),(264,985482000,4),(264,1004230800,3),(264,1017536400,4),(264,1035680400,3),(264,1048986000,4),(264,1067130000,3),(264,1080435600,4),(264,1099184400,3),(264,1111885200,4),(264,1130634000,3),(264,1143334800,4),(264,1162083600,3),(264,1174784400,4),(264,1193533200,3),(264,1206838800,4),(264,1224982800,3),(264,1238288400,4),(264,1256432400,3),(264,1269738000,4),(264,1288486800,3),(264,1301187600,4),(264,1319936400,3),(264,1332637200,4),(264,1351386000,3),(264,1364691600,4),(264,1382835600,3),(264,1396141200,4),(264,1414285200,3),(264,1427590800,4),(264,1445734800,3),(264,1459040400,4),(264,1473282000,5),(264,1509238800,3),(264,1521939600,4),(264,1540688400,3),(264,1553994000,4),(264,1572138000,3),(264,1585443600,4),(264,1603587600,3),(264,1616893200,4),(264,1635642000,3),(264,1648342800,4),(264,1667091600,3),(264,1679792400,4),(264,1698541200,3),(264,1711846800,4),(264,1729990800,3),(264,1743296400,4),(264,1761440400,3),(264,1774746000,4),(264,1792890000,3),(264,1806195600,4),(264,1824944400,3),(264,1837645200,4),(264,1856394000,3),(264,1869094800,4),(264,1887843600,3),(264,1901149200,4),(264,1919293200,3),(264,1932598800,4),(264,1950742800,3),(264,1964048400,4),(264,1982797200,3),(264,1995498000,4),(264,2014246800,3),(264,2026947600,4),(264,2045696400,3),(264,2058397200,4),(264,2077146000,3),(264,2090451600,4),(264,2108595600,3),(264,2121901200,4),(264,2140045200,3),(265,-2147483648,3),(265,-933638400,1),(265,-923097600,2),(265,-919036800,1),(265,-857347200,2),(265,-844300800,1),(265,-825811200,2),(265,-812678400,1),(265,-794188800,2),(265,-779846400,1),(265,-762652800,2),(265,-748310400,1),(265,-731116800,2),(265,-399088800,4),(265,-386650800,3),(265,-368330400,4),(265,-355114800,3),(265,-336790800,4),(265,-323654400,3),(265,-305168400,4),(265,-292032000,3),(265,-273632400,4),(265,-260496000,3),(265,-242096400,4),(265,-228960000,3),(265,-210560400,4),(265,-197424000,3),(265,-178938000,4),(265,-165801600,3),(265,-147402000,4),(265,-134265600,3),(265,-115866000,4),(265,-102643200,3),(265,-84330000,4),(265,-81313200,6),(265,142380000,5),(265,150843600,6),(265,167176800,5),(265,178664400,6),(265,334101600,7),(265,337730400,8),(265,452642400,7),(265,462319200,8),(265,482277600,5),(265,494370000,6),(265,516751200,5),(265,526424400,6),(265,545436000,5),(265,558478800,6),(265,576626400,5),(265,589323600,6),(265,609890400,5),(265,620773200,6),(265,638316000,5),(265,651618000,6),(265,669765600,5),(265,683672400,6),(265,701820000,5),(265,715726800,6),(265,733701600,5),(265,747176400,6),(265,765151200,5),(265,778021200,6),(265,796600800,5),(265,810075600,6),(265,820447200,3),(265,828655200,4),(265,843170400,9),(265,860104800,4),(265,874620000,9),(265,891554400,4),(265,906069600,9),(265,924213600,4),(265,939934800,3),(265,956268000,4),(265,971989200,3),(265,987717600,4),(265,1003438800,3),(265,1019167200,4),(265,1034888400,3),(265,1050616800,4),(265,1066338000,3),(265,1082066400,4),(265,1096581600,3),(265,1113516000,4),(265,1128380400,3),(265,1143842400,4),(265,1158872400,3),(265,1175378400,4),(265,1189638000,3),(265,1206655200,4),(265,1219957200,3),(265,1238104800,4),(265,1252015200,3),(265,1269640860,4),(265,1281474000,3),(265,1301608860,4),(265,1312146000,3),(265,1333058400,4),(265,1348178400,3),(265,1364508000,4),(265,1380229200,3),(265,1395957600,4),(265,1414098000,3),(265,1427493600,4),(265,1445551200,3),(265,1458946800,4),(265,1477692000,3),(265,1490396400,4),(265,1509141600,3),(265,1521846000,4),(265,1540591200,3),(265,1553810400,4),(265,1572037200,3),(265,1585346400,4),(265,1603490400,3),(265,1616796000,4),(265,1635458400,3),(265,1648332000,4),(265,1666908000,3),(265,1679781600,4),(265,1698357600,3),(265,1711836000,4),(265,1729807200,3),(265,1743285600,4),(265,1761256800,3),(265,1774735200,4),(265,1792706400,3),(265,1806184800,4),(265,1824760800,3),(265,1837634400,4),(265,1856210400,3),(265,1869084000,4),(265,1887660000,3),(265,1901138400,4),(265,1919109600,3),(265,1932588000,4),(265,1950559200,3),(265,1964037600,4),(265,1982613600,3),(265,1995487200,4),(265,2014063200,3),(265,2026936800,4),(265,2045512800,3),(265,2058386400,4),(265,2076962400,3),(265,2090440800,4),(265,2108412000,3),(265,2121890400,4),(265,2139861600,3),(266,-2147483648,2),(266,-1600675200,1),(266,-1585904400,2),(266,-933667200,1),(266,-922093200,2),(266,-908870400,1),(266,-888829200,2),(266,-881049600,1),(266,-767869200,2),(266,-745833600,1),(266,-733827600,2),(266,-716889600,1),(266,-699613200,2),(266,-683884800,1),(266,-670669200,2),(266,-652348800,1),(266,-650019600,2),(266,515527200,1),(266,527014800,2),(266,545162400,1),(266,558464400,2),(266,577216800,1),(266,589914000,2),(266,608666400,1),(266,621968400,2),(266,640116000,1),(266,653418000,2),(266,671565600,1),(266,684867600,2),(267,-2147483648,3),(267,-933638400,1),(267,-923097600,2),(267,-919036800,1),(267,-857347200,2),(267,-844300800,1),(267,-825811200,2),(267,-812678400,1),(267,-794188800,2),(267,-779846400,1),(267,-762652800,2),(267,-748310400,1),(267,-731116800,2),(267,-399088800,4),(267,-386650800,3),(267,-368330400,4),(267,-355114800,3),(267,-336790800,4),(267,-323654400,3),(267,-305168400,4),(267,-292032000,3),(267,-273632400,4),(267,-260496000,3),(267,-242096400,4),(267,-228960000,3),(267,-210560400,4),(267,-197424000,3),(267,-178938000,4),(267,-165801600,3),(267,-147402000,4),(267,-134265600,3),(267,-115866000,4),(267,-102643200,3),(267,-84330000,4),(267,-81313200,6),(267,142380000,5),(267,150843600,6),(267,167176800,5),(267,178664400,6),(267,334101600,7),(267,337730400,8),(267,452642400,7),(267,462319200,8),(267,482277600,5),(267,494370000,6),(267,516751200,5),(267,526424400,6),(267,545436000,5),(267,558478800,6),(267,576626400,5),(267,589323600,6),(267,609890400,5),(267,620773200,6),(267,638316000,5),(267,651618000,6),(267,669765600,5),(267,683672400,6),(267,701820000,5),(267,715726800,6),(267,733701600,5),(267,747176400,6),(267,765151200,5),(267,778021200,6),(267,796600800,5),(267,810075600,6),(267,820447200,3),(267,828655200,4),(267,843170400,9),(267,860104800,4),(267,874620000,9),(267,891554400,4),(267,906069600,9),(267,924213600,4),(267,939934800,3),(267,956268000,4),(267,971989200,3),(267,987717600,4),(267,1003438800,3),(267,1019167200,4),(267,1034888400,3),(267,1050616800,4),(267,1066338000,3),(267,1082066400,4),(267,1096581600,3),(267,1113516000,4),(267,1128380400,3),(267,1143842400,4),(267,1158872400,3),(267,1175378400,4),(267,1189638000,3),(267,1206655200,4),(267,1220216400,3),(267,1238104800,4),(267,1252015200,3),(267,1269554400,4),(267,1281474000,3),(267,1301608860,4),(267,1312146000,3),(267,1314655200,4),(267,1317330000,3),(267,1333058400,4),(267,1348178400,3),(267,1364508000,4),(267,1380229200,3),(267,1395957600,4),(267,1414098000,3),(267,1427493600,4),(267,1445551200,3),(267,1458946800,4),(267,1477692000,3),(267,1490396400,4),(267,1509141600,3),(267,1521846000,4),(267,1540591200,3),(267,1553810400,4),(267,1572037200,3),(267,1585346400,4),(267,1603490400,3),(267,1616796000,4),(267,1635458400,3),(267,1648332000,4),(267,1666908000,3),(267,1679781600,4),(267,1698357600,3),(267,1711836000,4),(267,1729807200,3),(267,1743285600,4),(267,1761256800,3),(267,1774735200,4),(267,1792706400,3),(267,1806184800,4),(267,1824760800,3),(267,1837634400,4),(267,1856210400,3),(267,1869084000,4),(267,1887660000,3),(267,1901138400,4),(267,1919109600,3),(267,1932588000,4),(267,1950559200,3),(267,1964037600,4),(267,1982613600,3),(267,1995487200,4),(267,2014063200,3),(267,2026936800,4),(267,2045512800,3),(267,2058386400,4),(267,2076962400,3),(267,2090440800,4),(267,2108412000,3),(267,2121890400,4),(267,2139861600,3),(268,-2004073590,1),(268,-1851577590,2),(268,-852105600,3),(268,-782643600,4),(268,-767869200,2),(268,-718095600,3),(268,-457776000,2),(268,-315648000,3),(268,171820800,2),(268,2147483647,2),(269,-2056690800,1),(269,-900910800,2),(269,-891579600,3),(269,-884248200,4),(269,-761209200,7),(269,-747907200,2),(269,-728541000,5),(269,-717049800,6),(269,-697091400,5),(269,-683785800,6),(269,-668061000,5),(269,-654755400,2),(269,-636611400,5),(269,-623305800,2),(269,-605161800,5),(269,-591856200,2),(269,-573712200,5),(269,-559801800,2),(269,-541657800,5),(269,-528352200,2),(269,-510211800,7),(269,-498112200,2),(269,-478762200,7),(269,-466662600,2),(269,-446707800,7),(269,-435213000,2),(269,-415258200,7),(269,-403158600,2),(269,-383808600,7),(269,-371709000,2),(269,-352359000,7),(269,-340259400,2),(269,-320909400,7),(269,-308809800,2),(269,-288855000,7),(269,-277360200,2),(269,-257405400,7),(269,-245910600,2),(269,-225955800,7),(269,-213856200,2),(269,-194506200,7),(269,-182406600,2),(269,-163056600,7),(269,-148537800,2),(269,-132816600,7),(269,-117088200,2),(269,-101367000,7),(269,-85638600,2),(269,-69312600,7),(269,-53584200,2),(269,-37863000,7),(269,-22134600,2),(269,-6413400,7),(269,9315000,2),(269,25036200,7),(269,40764600,2),(269,56485800,7),(269,72214200,2),(269,88540200,7),(269,104268600,2),(269,119989800,7),(269,126041400,2),(269,151439400,7),(269,167167800,2),(269,182889000,7),(269,198617400,2),(269,214338600,7),(269,295385400,2),(269,309292200,7),(270,-2032927596,1),(270,252439200,3),(270,417978000,2),(270,433785600,3),(270,449600400,2),(270,465321600,3),(270,481050000,2),(270,496771200,3),(270,512499600,2),(270,528220800,3),(270,543949200,2),(270,559670400,3),(270,575398800,2),(270,591120000,3),(270,606848400,2),(270,622569600,3),(270,638298000,2),(270,654624000,3),(270,670352400,2),(270,686073600,3),(270,701802000,2),(270,717523200,3),(270,733251600,2),(270,748972800,3),(270,764701200,2),(270,780422400,3),(270,796150800,2),(270,811872000,3),(270,828205200,2),(270,843926400,3),(270,859654800,2),(270,875376000,3),(270,891104400,2),(270,906825600,3),(270,988398000,2),(270,1001700000,3),(270,1017428400,2),(270,1033149600,3),(270,1048878000,2),(270,1064599200,3),(270,1080327600,2),(270,1096048800,3),(270,1111777200,2),(270,1127498400,3),(270,1143226800,2),(270,1159552800,3),(270,1427482800,2),(270,1443196800,3),(270,1458932400,2),(270,1474646400,3),(270,2147483647,3),(271,-2147483648,1),(271,-1575874625,2),(271,-1247554800,4),(271,354902400,3),(271,370710000,4),(271,386438400,3),(271,402246000,4),(271,417974400,3),(271,433782000,4),(271,449596800,3),(271,465328800,5),(271,481053600,6),(271,496778400,5),(271,512503200,6),(271,528228000,5),(271,543952800,6),(271,559677600,5),(271,575402400,6),(271,591127200,5),(271,606852000,6),(271,622576800,5),(271,638301600,6),(271,654631200,5),(271,670356000,7),(271,686084400,8),(271,695761200,5),(271,701805600,6),(271,717530400,5),(271,733255200,6),(271,748980000,5),(271,764704800,6),(271,780429600,5),(271,796154400,6),(271,811879200,5),(271,828208800,6),(271,846352800,5),(271,859658400,6),(271,877802400,5),(271,891108000,6),(271,909252000,5),(271,922557600,6),(271,941306400,5),(271,954007200,6),(271,972756000,5),(271,985456800,6),(271,1004205600,5),(271,1017511200,6),(271,1035655200,5),(271,1048960800,6),(271,1067104800,5),(271,1080410400,6),(271,1099159200,5),(271,1111860000,6),(271,1130608800,5),(271,1143309600,6),(271,1162058400,5),(271,1174759200,6),(271,1193508000,5),(271,1206813600,6),(271,1224957600,5),(271,1238263200,6),(271,1256407200,5),(271,1269712800,6),(271,1288461600,5),(271,1301162400,9),(271,1414256400,5),(271,2147483647,5),(272,-2147483648,1),(272,-1869875816,3),(272,-1693706400,2),(272,-1680490800,3),(272,-1570413600,2),(272,-1552186800,3),(272,-1538359200,2),(272,-1522551600,3),(272,-1507514400,2),(272,-1490583600,3),(272,-1440208800,2),(272,-1428030000,3),(272,-1409709600,2),(272,-1396494000,3),(272,-931053600,2),(272,-922676400,3),(272,-917834400,2),(272,-892436400,3),(272,-875844000,2),(272,-764737200,3),(272,-744343200,2),(272,-733806000,3),(272,-716436000,2),(272,-701924400,3),(272,-684986400,2),(272,-670474800,3),(272,-654141600,2),(272,-639025200,3),(272,-622087200,2),(272,-606970800,3),(272,-590032800,2),(272,-575521200,3),(272,-235620000,2),(272,-194842800,3),(272,-177732000,2),(272,-165726000,3),(272,107910000,2),(272,121215600,3),(272,133920000,2),(272,152665200,3),(272,164678400,2),(272,184114800,3),(272,196214400,2),(272,215564400,3),(272,228873600,2),(272,245804400,3),(272,260323200,2),(272,267915600,4),(272,428454000,5),(272,433893600,4),(272,468111600,3),(272,482799600,6),(272,496710000,7),(272,512521200,6),(272,528246000,7),(272,543970800,6),(272,559695600,7),(272,575420400,6),(272,591145200,7),(272,606870000,6),(272,622594800,7),(272,638319600,6),(272,654649200,7),(272,670374000,6),(272,686098800,7),(272,701823600,6),(272,717548400,7),(272,733273200,6),(272,748998000,7),(272,764118000,6),(272,780447600,7),(272,796172400,6),(272,811897200,7),(272,828226800,6),(272,846370800,7),(272,859676400,6),(272,877820400,7),(272,891126000,6),(272,909270000,7),(272,922575600,6),(272,941324400,7),(272,954025200,6),(272,972774000,7),(272,985474800,6),(272,1004223600,7),(272,1017529200,6),(272,1035673200,7),(272,1048978800,6),(272,1067122800,7),(272,1080428400,6),(272,1099177200,7),(272,1111878000,6),(272,1130626800,7),(272,1143327600,6),(272,1162076400,7),(272,1174784400,8),(272,1193533200,9),(272,1206838800,8),(272,1224982800,9),(272,1238288400,8),(272,1256432400,9),(272,1269738000,8),(272,1288486800,9),(272,1301274000,8),(272,1319936400,9),(272,1332637200,8),(272,1351386000,9),(272,1364691600,8),(272,1382835600,9),(272,1396227600,8),(272,1414285200,9),(272,1427590800,8),(272,1446944400,9),(272,1459040400,8),(272,1473195600,4),(272,2147483647,4),(273,-2147483648,1),(273,-1451719200,2),(273,-1172906400,3),(273,-876641400,4),(273,-766054800,3),(273,-683883000,5),(273,-620812800,3),(273,-189415800,6),(274,-1172913768,1),(274,-799491600,2),(274,-189423000,3),(275,-2147483648,1),(275,-1641003640,6),(275,-933638400,2),(275,-923097600,3),(275,-919036800,2),(275,-857347200,3),(275,-844300800,2),(275,-825811200,3),(275,-812678400,2),(275,-794188800,3),(275,-779846400,2),(275,-762652800,3),(275,-748310400,2),(275,-731116800,3),(275,-681955200,4),(275,-673228800,2),(275,-667958400,3),(275,-652320000,2),(275,-636422400,3),(275,-622080000,2),(275,-608947200,3),(275,-591840000,2),(275,-572486400,3),(275,-558576000,2),(275,-542851200,3),(275,-527731200,2),(275,-514425600,3),(275,-490838400,2),(275,-482976000,3),(275,-459388800,2),(275,-451526400,3),(275,-428544000,2),(275,-418262400,3),(275,-400118400,2),(275,-387417600,3),(275,142380000,5),(275,150843600,6),(275,167176800,5),(275,178664400,6),(275,334101600,7),(275,337730400,8),(275,452642400,7),(275,462319200,8),(275,482277600,5),(275,494370000,6),(275,516751200,5),(275,526424400,6),(275,545436000,5),(275,558478800,6),(275,576626400,5),(275,589323600,6),(275,609890400,5),(275,620773200,6),(275,638316000,5),(275,651618000,6),(275,669765600,5),(275,683672400,6),(275,701820000,5),(275,715726800,6),(275,733701600,5),(275,747176400,6),(275,765151200,5),(275,778021200,6),(275,796600800,5),(275,810075600,6),(275,826840800,5),(275,842821200,6),(275,858895200,5),(275,874184400,6),(275,890344800,5),(275,905029200,6),(275,923011200,5),(275,936313200,6),(275,955670400,5),(275,970783200,6),(275,986770800,5),(275,1001282400,6),(275,1017356400,5),(275,1033941600,6),(275,1048806000,5),(275,1065132000,6),(275,1081292400,5),(275,1095804000,6),(275,1112313600,5),(275,1128812400,6),(275,1143763200,5),(275,1159657200,6),(275,1175212800,5),(275,1189897200,6),(275,1206662400,5),(275,1223161200,6),(275,1238112000,5),(275,1254006000,6),(275,1269561600,5),(275,1284246000,6),(275,1301616000,5),(275,1317510000,6),(275,1333065600,5),(275,1348354800,6),(275,1364515200,5),(275,1382828400,6),(275,1395964800,5),(275,1414278000,6),(275,1427414400,5),(275,1445727600,6),(275,1458864000,5),(275,1477782000,6),(275,1490313600,5),(275,1509231600,6),(275,1521763200,5),(275,1540681200,6),(275,1553817600,5),(275,1572130800,6),(275,1585267200,5),(275,1603580400,6),(275,1616716800,5),(275,1635634800,6),(275,1648166400,5),(275,1667084400,6),(275,1679616000,5),(275,1698534000,6),(275,1711670400,5),(275,1729983600,6),(275,1743120000,5),(275,1761433200,6),(275,1774569600,5),(275,1792882800,6),(275,1806019200,5),(275,1824937200,6),(275,1837468800,5),(275,1856386800,6),(275,1868918400,5),(275,1887836400,6),(275,1900972800,5),(275,1919286000,6),(275,1932422400,5),(275,1950735600,6),(275,1963872000,5),(275,1982790000,6),(275,1995321600,5),(275,2014239600,6),(275,2026771200,5),(275,2045689200,6),(275,2058220800,5),(275,2077138800,6),(275,2090275200,5),(275,2108588400,6),(275,2121724800,5),(275,2140038000,6),(276,-2147483648,1),(276,-788932800,2),(276,2147483647,2),(277,-1487759676,1),(277,-1247569200,3),(277,354888000,2),(277,370695600,3),(277,386424000,2),(277,402231600,3),(277,417960000,2),(277,433767600,3),(277,449582400,2),(277,465314400,4),(277,481039200,5),(277,496764000,4),(277,512488800,5),(277,528213600,4),(277,543938400,5),(277,559663200,4),(277,575388000,5),(277,591112800,4),(277,606837600,5),(277,622562400,4),(277,638287200,5),(277,654616800,4),(277,670341600,6),(277,686070000,7),(277,695746800,4),(277,701791200,5),(277,717516000,4),(277,733240800,5),(277,748965600,4),(277,764690400,5),(277,780415200,4),(277,796140000,5),(277,811864800,4),(277,828194400,5),(277,846338400,4),(277,859644000,5),(277,877788000,4),(277,891093600,5),(277,909237600,4),(277,922543200,5),(277,941292000,4),(277,953992800,5),(277,972741600,4),(277,985442400,5),(277,1004191200,4),(277,1017496800,5),(277,1035640800,4),(277,1048946400,5),(277,1067090400,4),(277,1080396000,5),(277,1099144800,4),(277,1111845600,5),(277,1130594400,4),(277,1143295200,5),(277,1162044000,4),(277,1174744800,5),(277,1193493600,4),(277,1206799200,5),(277,1224943200,4),(277,1238248800,5),(277,1256392800,4),(277,1269698400,6),(277,1288450800,7),(277,1301151600,4),(277,2147483647,4),(278,-1988166492,1),(278,-862637400,2),(278,-764145000,1),(278,-576135000,3),(278,38775600,5),(278,1018119600,4),(278,1033840800,5),(278,1212260400,4),(278,1225476000,5),(278,1239735600,4),(278,1257012000,5),(279,-1325483420,1),(279,2147483647,1),(280,-1577943676,1),(280,504901800,2),(280,2147483647,2),(281,-1577943676,1),(281,504901800,2),(281,2147483647,2),(282,-1579424533,1),(282,-1247558400,3),(282,354898800,2),(282,370706400,3),(282,386434800,2),(282,402242400,3),(282,417970800,2),(282,433778400,3),(282,449593200,2),(282,465325200,4),(282,481050000,5),(282,496774800,4),(282,512499600,5),(282,528224400,4),(282,543949200,5),(282,559674000,4),(282,575398800,5),(282,591123600,4),(282,606848400,5),(282,622573200,4),(282,638298000,5),(282,654627600,4),(282,670352400,6),(282,686080800,7),(282,695757600,4),(282,701802000,5),(282,717526800,4),(282,733251600,5),(282,748976400,4),(282,764701200,5),(282,780426000,4),(282,796150800,5),(282,811875600,4),(282,828205200,5),(282,846349200,4),(282,859654800,5),(282,877798800,4),(282,891104400,5),(282,909248400,4),(282,922554000,5),(282,941302800,4),(282,954003600,5),(282,972752400,4),(282,985453200,5),(282,1004202000,4),(282,1017507600,5),(282,1035651600,4),(282,1048957200,5),(282,1067101200,4),(282,1072882800,10),(282,1080403200,8),(282,1099152000,9),(282,1111852800,8),(282,1130601600,9),(282,1143302400,8),(282,1162051200,9),(282,1174752000,8),(282,1193500800,9),(282,1206806400,8),(282,1224950400,9),(282,1238256000,8),(282,1256400000,9),(282,1269705600,8),(282,1288454400,9),(282,1301155200,11),(282,1315832400,9),(282,1414252800,4),(282,2147483647,4),(283,-2147483648,1),(283,-2019705670,2),(283,-891581400,3),(283,-872058600,2),(283,-862637400,3),(283,-764145000,2),(284,-1577513486,1),(284,-1247551200,3),(284,354906000,2),(284,370713600,3),(284,386442000,2),(284,402249600,3),(284,417978000,2),(284,433785600,3),(284,449600400,2),(284,465332400,4),(284,481057200,5),(284,496782000,4),(284,512506800,5),(284,528231600,4),(284,543956400,5),(284,559681200,4),(284,575406000,5),(284,591130800,4),(284,606855600,5),(284,622580400,4),(284,638305200,5),(284,654634800,4),(284,670359600,6),(284,686088000,7),(284,695764800,4),(284,701809200,5),(284,717534000,4),(284,733258800,5),(284,748983600,4),(284,764708400,5),(284,780433200,4),(284,796158000,5),(284,811882800,4),(284,828212400,5),(284,846356400,4),(284,859662000,5),(284,877806000,4),(284,891111600,5),(284,909255600,4),(284,922561200,5),(284,941310000,4),(284,954010800,5),(284,972759600,4),(284,985460400,5),(284,1004209200,4),(284,1017514800,5),(284,1035658800,4),(284,1048964400,5),(284,1067108400,4),(284,1080414000,5),(284,1099162800,4),(284,1111863600,5),(284,1130612400,4),(284,1143313200,5),(284,1162062000,4),(284,1174762800,5),(284,1193511600,4),(284,1206817200,5),(284,1224961200,4),(284,1238266800,5),(284,1256410800,4),(284,1269716400,5),(284,1288465200,4),(284,1301166000,8),(284,1414260000,4),(284,2147483647,4),(285,-2147483648,1),(285,-2038200925,2),(285,-1167634800,3),(285,-1073028000,4),(285,-894180000,5),(285,-879665400,6),(285,-767005200,5),(285,378664200,7),(285,2147483647,7),(286,-1383463280,1),(286,-1167636600,3),(286,-1082448000,2),(286,-1074586800,3),(286,-1050825600,2),(286,-1042964400,3),(286,-1019289600,2),(286,-1011428400,3),(286,-987753600,2),(286,-979892400,3),(286,-956217600,2),(286,-948356400,3),(286,-924595200,2),(286,-916734000,3),(286,-893059200,2),(286,-885198000,3),(286,-879667200,4),(286,-767005200,3),(286,2147483647,3),(287,-719636812,1),(287,2147483647,1),(288,-2056692850,1),(288,-884509200,3),(288,-873280800,2),(288,-855918000,3),(288,-841744800,2),(288,-828529200,3),(288,-765363600,1),(288,-747046800,4),(288,-733827600,5),(288,-716461200,4),(288,-697021200,5),(288,-683715600,4),(288,-667990800,5),(288,-654771600,4),(288,-636627600,5),(288,-623322000,4),(288,-605178000,5),(288,-591872400,4),(288,-573642000,5),(288,-559818000,4),(288,-541674000,5),(288,-528368400,4),(288,-510224400,5),(288,-498128400,4),(288,-478774800,5),(288,-466678800,4),(288,-446720400,5),(288,-435229200,4),(288,-415258200,1),(288,-403158600,6),(288,-383808600,1),(288,-371709000,6),(288,-352359000,1),(288,-340259400,6),(288,-320909400,1),(288,-308809800,6),(288,-288855000,1),(288,-277360200,6),(288,-257405400,1),(288,-245910600,6),(288,-225955800,1),(288,-213856200,6),(288,-194506200,1),(288,-182406600,6),(288,-163056600,1),(288,-148537800,6),(288,-132820200,1),(288,-117088200,6),(288,-101370600,1),(288,-85638600,6),(288,-69312600,1),(288,-53584200,6),(288,-37863000,1),(288,-22134600,6),(288,-6413400,1),(288,9315000,6),(288,25036200,1),(288,40764600,6),(288,56485800,1),(288,72214200,6),(288,88540200,1),(288,104268600,6),(288,119989800,1),(288,126041400,6),(288,151439400,1),(288,167167800,6),(288,182889000,1),(288,198617400,6),(288,214338600,1),(288,295385400,6),(288,309292200,1),(289,-2056692850,1),(289,-884509200,3),(289,-873280800,2),(289,-855918000,3),(289,-841744800,2),(289,-828529200,3),(289,-765363600,1),(289,-747046800,4),(289,-733827600,5),(289,-716461200,4),(289,-697021200,5),(289,-683715600,4),(289,-667990800,5),(289,-654771600,4),(289,-636627600,5),(289,-623322000,4),(289,-605178000,5),(289,-591872400,4),(289,-573642000,5),(289,-559818000,4),(289,-541674000,5),(289,-528368400,4),(289,-510224400,5),(289,-498128400,4),(289,-478774800,5),(289,-466678800,4),(289,-446720400,5),(289,-435229200,4),(289,-415258200,1),(289,-403158600,6),(289,-383808600,1),(289,-371709000,6),(289,-352359000,1),(289,-340259400,6),(289,-320909400,1),(289,-308809800,6),(289,-288855000,1),(289,-277360200,6),(289,-257405400,1),(289,-245910600,6),(289,-225955800,1),(289,-213856200,6),(289,-194506200,1),(289,-182406600,6),(289,-163056600,1),(289,-148537800,6),(289,-132820200,1),(289,-117088200,6),(289,-101370600,1),(289,-85638600,6),(289,-69312600,1),(289,-53584200,6),(289,-37863000,1),(289,-22134600,6),(289,-6413400,1),(289,9315000,6),(289,25036200,1),(289,40764600,6),(289,56485800,1),(289,72214200,6),(289,88540200,1),(289,104268600,6),(289,119989800,1),(289,126041400,6),(289,151439400,1),(289,167167800,6),(289,182889000,1),(289,198617400,6),(289,214338600,1),(289,295385400,6),(289,309292200,1),(290,-1441188192,1),(290,-1247565600,3),(290,354891600,2),(290,370699200,3),(290,386427600,2),(290,402235200,3),(290,417963600,2),(290,433771200,3),(290,449586000,2),(290,465318000,4),(290,481042800,5),(290,496767600,4),(290,512492400,5),(290,528217200,4),(290,543942000,5),(290,559666800,4),(290,575391600,5),(290,591116400,4),(290,606841200,5),(290,622566000,4),(290,638290800,5),(290,654620400,4),(290,670345200,6),(290,686073600,7),(290,695750400,4),(290,701794800,5),(290,717519600,4),(290,733244400,5),(290,748969200,4),(290,764694000,5),(290,780418800,4),(290,796143600,5),(290,811868400,4),(290,828198000,5),(290,846342000,4),(290,859647600,5),(290,877791600,4),(290,891097200,5),(290,909241200,4),(290,922546800,5),(290,941295600,4),(290,953996400,5),(290,972745200,4),(290,985446000,5),(290,1004194800,4),(290,1017500400,5),(290,1035644400,4),(290,1048950000,5),(290,1067094000,4),(290,1080399600,5),(290,1099148400,4),(290,1111849200,5),(290,1130598000,4),(290,1143298800,5),(290,1162047600,4),(290,1174748400,5),(290,1193497200,4),(290,1206802800,5),(290,1224946800,4),(290,1238252400,5),(290,1256396400,4),(290,1269702000,5),(290,1288450800,4),(290,1301151600,8),(290,1414245600,7),(290,1461427200,4),(290,2147483647,4),(291,-1577951856,1),(291,-1172908656,2),(291,-880272000,3),(291,-766054800,4),(292,-2147483648,2),(292,-1046678400,1),(292,-1038733200,2),(292,-873273600,3),(292,-794221200,2),(292,-496224000,1),(292,-489315600,2),(292,259344000,1),(292,275151600,2),(293,-1577936472,1),(293,2147483647,1),(294,-1518920008,2),(294,166572000,1),(294,182293200,2),(294,200959200,1),(294,213829200,2),(294,228866400,1),(294,243982800,2),(294,260316000,1),(294,276123600,2),(294,291765600,1),(294,307486800,2),(294,323820000,1),(294,338936400,2),(294,354664800,1),(294,370386000,2),(294,386114400,1),(294,401835600,2),(294,417564000,1),(294,433285200,2),(294,449013600,1),(294,465339600,2),(294,481068000,1),(294,496789200,2),(294,512517600,1),(294,528238800,2),(294,543967200,1),(294,559688400,2),(294,575416800,1),(294,591138000,2),(294,606866400,1),(294,622587600,2),(294,638316000,1),(294,654642000,2),(294,670370400,1),(294,686091600,2),(294,701820000,1),(294,717541200,2),(294,733269600,1),(294,748990800,2),(294,764719200,1),(294,780440400,2),(294,796168800,1),(294,811890000,2),(294,828223200,1),(294,843944400,2),(294,859672800,1),(294,875394000,2),(294,891122400,1),(294,909277200,3),(294,922582800,4),(294,941331600,3),(294,954032400,4),(294,972781200,3),(294,985482000,4),(294,1004230800,3),(294,1017536400,4),(294,1035680400,3),(294,1048986000,4),(294,1067130000,3),(294,1080435600,4),(294,1099184400,3),(294,1111885200,4),(294,1130634000,3),(294,1143334800,4),(294,1162083600,3),(294,1174784400,4),(294,1193533200,3),(294,1206838800,4),(294,1224982800,3),(294,1238288400,4),(294,1256432400,3),(294,1269738000,4),(294,1288486800,3),(294,1301187600,4),(294,1319936400,3),(294,1332637200,4),(294,1351386000,3),(294,1364691600,4),(294,1382835600,3),(294,1396141200,4),(294,1414285200,3),(294,1427590800,4),(294,1445734800,3),(294,1459040400,4),(294,1477789200,3),(294,1490490000,4),(294,1509238800,3),(294,1521939600,4),(294,1540688400,3),(294,1553994000,4),(294,1572138000,3),(294,1585443600,4),(294,1603587600,3),(294,1616893200,4),(294,1635642000,3),(294,1648342800,4),(294,1667091600,3),(294,1679792400,4),(294,1698541200,3),(294,1711846800,4),(294,1729990800,3),(294,1743296400,4),(294,1761440400,3),(294,1774746000,4),(294,1792890000,3),(294,1806195600,4),(294,1824944400,3),(294,1837645200,4),(294,1856394000,3),(294,1869094800,4),(294,1887843600,3),(294,1901149200,4),(294,1919293200,3),(294,1932598800,4),(294,1950742800,3),(294,1964048400,4),(294,1982797200,3),(294,1995498000,4),(294,2014246800,3),(294,2026947600,4),(294,2045696400,3),(294,2058397200,4),(294,2077146000,3),(294,2090451600,4),(294,2108595600,3),(294,2121901200,4),(294,2140045200,3),(295,-1441259328,1),(295,-1247551200,3),(295,354906000,2),(295,370713600,3),(295,386442000,2),(295,402249600,3),(295,417978000,2),(295,433785600,3),(295,449600400,2),(295,465332400,4),(295,481057200,5),(295,496782000,4),(295,512506800,5),(295,528231600,4),(295,543956400,5),(295,559681200,4),(295,575406000,5),(295,591130800,4),(295,606855600,5),(295,622580400,4),(295,638305200,5),(295,654634800,4),(295,670359600,6),(295,686088000,7),(295,695764800,4),(295,701809200,5),(295,717534000,4),(295,733258800,5),(295,748983600,4),(295,764708400,5),(295,780433200,4),(295,796158000,5),(295,811882800,4),(295,828212400,5),(295,846356400,4),(295,859662000,5),(295,877806000,4),(295,891111600,5),(295,909255600,4),(295,922561200,5),(295,941310000,4),(295,954010800,5),(295,972759600,4),(295,985460400,5),(295,1004209200,4),(295,1017514800,5),(295,1035658800,4),(295,1048964400,5),(295,1067108400,4),(295,1080414000,5),(295,1099162800,4),(295,1111863600,5),(295,1130612400,4),(295,1143313200,5),(295,1162062000,4),(295,1174762800,5),(295,1193511600,4),(295,1206817200,5),(295,1224961200,4),(295,1238266800,5),(295,1256410800,4),(295,1269716400,6),(295,1288468800,7),(295,1301169600,4),(295,2147483647,4),(296,-1579476700,1),(296,-1247551200,3),(296,354906000,2),(296,370713600,3),(296,386442000,2),(296,402249600,3),(296,417978000,2),(296,433785600,3),(296,449600400,2),(296,465332400,4),(296,481057200,5),(296,496782000,4),(296,512506800,5),(296,528231600,4),(296,543956400,5),(296,559681200,4),(296,575406000,5),(296,591130800,4),(296,606855600,5),(296,622580400,4),(296,638305200,5),(296,654634800,4),(296,670359600,6),(296,686088000,7),(296,695764800,4),(296,701809200,5),(296,717534000,4),(296,733258800,5),(296,738086400,8),(296,748987200,7),(296,764712000,6),(296,780436800,7),(296,796161600,6),(296,811886400,7),(296,828216000,6),(296,846360000,7),(296,859665600,6),(296,877809600,7),(296,891115200,6),(296,909259200,7),(296,922564800,6),(296,941313600,7),(296,954014400,6),(296,972763200,7),(296,985464000,6),(296,1004212800,7),(296,1017518400,6),(296,1035662400,7),(296,1048968000,6),(296,1067112000,7),(296,1080417600,6),(296,1099166400,7),(296,1111867200,6),(296,1130616000,7),(296,1143316800,6),(296,1162065600,7),(296,1174766400,6),(296,1193515200,7),(296,1206820800,6),(296,1224964800,7),(296,1238270400,6),(296,1256414400,7),(296,1269720000,6),(296,1288468800,7),(296,1301169600,4),(296,1414263600,7),(296,1469304000,4),(296,2147483647,4),(297,-1582088010,1),(297,-1247547600,3),(297,354909600,2),(297,370717200,3),(297,386445600,2),(297,402253200,3),(297,417981600,2),(297,433789200,3),(297,449604000,2),(297,465336000,4),(297,481060800,5),(297,496785600,4),(297,512510400,5),(297,528235200,4),(297,543960000,5),(297,559684800,4),(297,575409600,5),(297,591134400,4),(297,606859200,5),(297,622584000,4),(297,638308800,5),(297,654638400,4),(297,670363200,6),(297,686091600,7),(297,695768400,4),(297,701812800,5),(297,717537600,4),(297,733262400,5),(297,748987200,4),(297,764712000,5),(297,780436800,4),(297,796161600,5),(297,811886400,4),(297,828216000,5),(297,846360000,4),(297,859665600,5),(297,877809600,4),(297,891115200,5),(297,909259200,4),(297,922564800,5),(297,941313600,4),(297,954014400,5),(297,972763200,4),(297,985464000,5),(297,1004212800,4),(297,1017518400,5),(297,1035662400,4),(297,1048968000,5),(297,1067112000,4),(297,1080417600,5),(297,1099166400,4),(297,1111867200,5),(297,1130616000,4),(297,1143316800,5),(297,1162065600,4),(297,1174766400,5),(297,1193515200,4),(297,1206820800,5),(297,1224964800,4),(297,1238270400,5),(297,1256414400,4),(297,1269720000,5),(297,1288468800,4),(297,1301169600,8),(297,1414263600,4),(297,2147483647,4),(298,-1441164324,1),(298,-1247540400,2),(298,354913200,3),(298,370720800,4),(298,386445600,3),(298,402256800,2),(298,417985200,3),(298,433792800,2),(298,449607600,3),(298,465339600,5),(298,481064400,6),(298,496789200,5),(298,512514000,6),(298,528238800,5),(298,543963600,6),(298,559688400,5),(298,575413200,6),(298,591138000,5),(298,606862800,7),(298,622591200,8),(298,638316000,7),(298,654645600,8),(298,670370400,7),(298,686095200,8),(298,695772000,5),(298,701816400,7),(298,717544800,8),(298,733269600,7),(298,748994400,8),(298,764719200,7),(298,780444000,8),(298,796168800,7),(298,811893600,8),(298,828223200,7),(298,846367200,8),(298,859672800,7),(298,877816800,8),(298,891122400,7),(298,909266400,8),(298,922572000,7),(298,941320800,8),(298,954021600,7),(298,972770400,8),(298,985471200,7),(298,1004220000,8),(298,1017525600,7),(298,1035669600,8),(298,1048975200,7),(298,1067119200,8),(298,1080424800,7),(298,1099173600,5),(298,2147483647,5),(299,-2147483648,1),(299,-1570084924,2),(299,2147483647,2),(300,-1946186240,1),(300,-1172906240,2),(300,-881220600,3),(300,-766054800,2),(300,-683883000,4),(300,-620812800,2),(300,-189415800,5),(300,567964800,6),(301,-1948782180,1),(301,-1830414600,2),(301,-768646800,3),(301,1439564400,1),(301,1525446000,3),(302,-1577935568,1),(302,76190400,2),(302,2147483647,2),(303,-1441167268,1),(303,-1247544000,2),(303,354913200,3),(303,370720800,4),(303,386445600,3),(303,402256800,2),(303,417985200,3),(303,433792800,2),(303,449607600,3),(303,465339600,5),(303,481064400,6),(303,496789200,5),(303,512514000,6),(303,528238800,5),(303,543963600,6),(303,559688400,5),(303,575413200,6),(303,591138000,5),(303,606862800,6),(303,622587600,5),(303,638312400,6),(303,654642000,5),(303,670366800,7),(303,686095200,8),(303,695772000,5),(303,701816400,6),(303,717541200,5),(303,733266000,6),(303,748990800,5),(303,764715600,6),(303,780440400,5),(303,796165200,6),(303,811890000,5),(303,828219600,6),(303,846363600,5),(303,859669200,6),(303,877813200,5),(303,891118800,6),(303,909262800,5),(303,922568400,6),(303,941317200,5),(303,954018000,6),(303,972766800,5),(303,985467600,6),(303,1004216400,5),(303,1017522000,6),(303,1035666000,5),(303,1048971600,6),(303,1067115600,5),(303,1080421200,6),(303,1099170000,9),(303,2147483647,9),(304,-1441167712,1),(304,-1247544000,2),(304,354913200,3),(304,370720800,4),(304,386445600,3),(304,402256800,2),(304,417985200,3),(304,433792800,2),(304,449607600,3),(304,465339600,5),(304,481064400,6),(304,496789200,5),(304,512514000,6),(304,528238800,5),(304,543963600,6),(304,559688400,5),(304,575413200,6),(304,591138000,5),(304,606862800,6),(304,622587600,5),(304,638312400,6),(304,654642000,5),(304,670366800,7),(304,686095200,5),(304,695768400,8),(304,701812800,6),(304,717541200,5),(304,733266000,6),(304,748990800,5),(304,764715600,6),(304,780440400,5),(304,796165200,6),(304,811890000,5),(304,828219600,6),(304,846363600,5),(304,859669200,6),(304,877813200,5),(304,891118800,6),(304,909262800,5),(304,922568400,6),(304,941317200,5),(304,954018000,6),(304,972766800,5),(304,985467600,6),(304,1004216400,5),(304,1017522000,6),(304,1035666000,5),(304,1048971600,6),(304,1067115600,5),(304,1080421200,6),(304,1099170000,8),(304,1545328800,2),(304,2147483647,2),(305,-2147483648,1),(305,-1577946287,2),(305,-873268200,3),(305,-778410000,2),(305,2147483647,2),(306,-719636812,1),(306,2147483647,1),(307,-2004073590,1),(307,-1851577590,2),(307,-852105600,3),(307,-782643600,4),(307,-767869200,2),(307,-718095600,3),(307,-457776000,2),(307,-315648000,3),(307,171820800,2),(307,2147483647,2),(308,-2031039048,1),(308,-768560400,3),(308,354891600,2),(308,370699200,3),(308,386427600,2),(308,402235200,3),(308,417963600,2),(308,433771200,3),(308,449586000,2),(308,465318000,4),(308,481042800,5),(308,496767600,4),(308,512492400,5),(308,528217200,4),(308,543942000,5),(308,559666800,4),(308,575391600,5),(308,591116400,4),(308,606841200,5),(308,622566000,4),(308,638290800,5),(308,654620400,4),(308,670345200,6),(308,686073600,7),(308,695750400,4),(308,701794800,5),(308,717519600,4),(308,733244400,5),(308,748969200,4),(308,764694000,5),(308,780418800,4),(308,796143600,5),(308,811868400,4),(308,828198000,5),(308,846342000,4),(308,859647600,6),(308,877795200,7),(308,891100800,6),(308,909244800,7),(308,922550400,6),(308,941299200,7),(308,954000000,6),(308,972748800,7),(308,985449600,6),(308,1004198400,7),(308,1017504000,6),(308,1035648000,7),(308,1048953600,6),(308,1067097600,7),(308,1080403200,6),(308,1099152000,7),(308,1111852800,6),(308,1130601600,7),(308,1143302400,6),(308,1162051200,7),(308,1174752000,6),(308,1193500800,7),(308,1206806400,6),(308,1224950400,7),(308,1238256000,6),(308,1256400000,7),(308,1269705600,6),(308,1288454400,7),(308,1301155200,4),(308,1414249200,7),(308,1459008000,4),(308,2147483647,4),(309,-1441168073,1),(309,-1247544000,2),(309,354913200,3),(309,370720800,4),(309,386445600,3),(309,402256800,2),(309,417985200,3),(309,433792800,2),(309,449607600,3),(309,465339600,5),(309,481064400,6),(309,496789200,5),(309,512514000,6),(309,528238800,5),(309,543963600,6),(309,559688400,5),(309,575413200,6),(309,591138000,5),(309,606862800,6),(309,622587600,5),(309,638312400,6),(309,654642000,5),(309,670366800,6),(309,686091600,5),(309,2147483647,5),(310,-1948782472,1),(310,-1830414600,2),(310,-767350800,4),(310,-681210000,3),(310,-672228000,4),(310,-654771600,3),(310,-640864800,4),(310,-623408400,3),(310,-609415200,4),(310,-588848400,3),(310,-577965600,4),(310,-498128400,1),(310,-462702600,5),(310,-451733400,1),(310,-429784200,5),(310,-418296600,1),(310,-399544200,5),(310,-387451800,1),(310,-368094600,5),(310,-356002200,1),(310,-336645000,5),(310,-324552600,1),(310,-305195400,5),(310,-293103000,1),(310,-264933000,4),(310,547578000,3),(310,560883600,4),(310,579027600,3),(310,592333200,4),(311,-2147483648,2),(311,-1600675200,1),(311,-1585904400,2),(311,-933667200,1),(311,-922093200,2),(311,-908870400,1),(311,-888829200,2),(311,-881049600,1),(311,-767869200,2),(311,-745833600,1),(311,-733827600,2),(311,-716889600,1),(311,-699613200,2),(311,-683884800,1),(311,-670669200,2),(311,-652348800,1),(311,-650019600,2),(311,515527200,1),(311,527014800,2),(311,545162400,1),(311,558464400,2),(311,577216800,1),(311,589914000,2),(311,608666400,1),(311,621968400,2),(311,640116000,1),(311,653418000,2),(311,671565600,1),(311,684867600,2),(312,-2147483648,1),(312,-2038200925,2),(312,-1167634800,3),(312,-1073028000,4),(312,-894180000,5),(312,-879665400,6),(312,-767005200,5),(312,378664200,7),(312,2147483647,7),(313,-1441188892,1),(313,-1247565600,3),(313,354891600,2),(313,370699200,3),(313,386427600,2),(313,402235200,3),(313,417963600,2),(313,433771200,3),(313,449586000,2),(313,465318000,4),(313,481042800,5),(313,496767600,4),(313,512492400,5),(313,528217200,4),(313,543942000,5),(313,559666800,4),(313,575391600,5),(313,591116400,4),(313,606841200,5),(313,622566000,4),(313,638290800,5),(313,654620400,4),(313,670345200,6),(313,686073600,7),(313,695750400,4),(313,701794800,5),(313,717519600,4),(313,733244400,5),(313,748969200,4),(313,764694000,5),(313,780418800,4),(313,796143600,5),(313,811868400,4),(313,828198000,5),(313,846342000,4),(313,859647600,5),(313,877791600,4),(313,891097200,5),(313,909241200,4),(313,922546800,5),(313,941295600,4),(313,953996400,5),(313,972745200,4),(313,985446000,5),(313,1004194800,4),(313,1017500400,5),(313,1035644400,4),(313,1048950000,5),(313,1067094000,4),(313,1080399600,5),(313,1099148400,4),(313,1111849200,5),(313,1130598000,4),(313,1143298800,5),(313,1162047600,4),(313,1174748400,5),(313,1193497200,4),(313,1206802800,5),(313,1224946800,4),(313,1238252400,5),(313,1256396400,4),(313,1269702000,5),(313,1288450800,4),(313,1301151600,8),(313,1414245600,4),(313,2147483647,4),(314,-2147483648,1),(314,-1017820800,2),(314,-766224000,1),(314,-745833600,3),(314,-733827600,1),(314,-716889600,3),(314,-699613200,1),(314,-683884800,3),(314,-670669200,1),(314,-652348800,3),(314,-639133200,1),(314,-620812800,3),(314,-607597200,1),(314,-589276800,3),(314,-576061200,1),(314,-562924800,3),(314,-541760400,1),(314,-528710400,3),(314,-510224400,1),(314,-497174400,3),(314,-478688400,1),(314,-465638400,3),(314,-449830800,1),(314,-434016000,3),(314,-418208400,1),(314,-402480000,3),(314,-386672400,1),(314,-370944000,3),(314,-355136400,1),(314,-339408000,3),(314,-323600400,1),(314,-302515200,3),(314,-291978000,1),(314,-270979200,3),(314,-260442000,1),(314,133977600,3),(314,149785200,1),(314,165513600,3),(314,181321200,1),(314,299606400,3),(314,307551600,1),(315,-1441168631,1),(315,-1247547600,3),(315,354909600,2),(315,370717200,3),(315,386445600,2),(315,402253200,3),(315,417981600,2),(315,433789200,3),(315,449604000,2),(315,465336000,4),(315,481060800,5),(315,496785600,4),(315,512510400,5),(315,528235200,4),(315,543960000,5),(315,559684800,4),(315,575409600,5),(315,591134400,4),(315,606859200,5),(315,622584000,4),(315,638308800,5),(315,654638400,4),(315,670363200,6),(315,686091600,7),(315,2147483647,7),(316,-2147483648,1),(316,-1441162751,2),(316,-405140400,4),(316,354916800,3),(316,370724400,4),(316,386452800,3),(316,402260400,4),(316,417988800,3),(316,433796400,4),(316,449611200,3),(316,465343200,5),(316,481068000,6),(316,496792800,5),(316,512517600,6),(316,528242400,5),(316,543967200,6),(316,559692000,5),(316,575416800,6),(316,591141600,5),(316,606866400,6),(316,622591200,5),(316,638316000,6),(316,654645600,5),(316,670370400,7),(316,686098800,8),(316,701816400,9),(316,717537600,2),(316,733266000,9),(316,748987200,2),(316,764715600,9),(316,780436800,4),(316,796161600,3),(316,811882800,4),(316,828216000,3),(316,859662000,3),(316,877806000,4),(316,891115200,3),(316,909255600,4),(316,922564800,3),(316,941310000,4),(316,954014400,3),(316,972759600,4),(316,985464000,3),(316,1004209200,4),(316,1017518400,3),(316,1035658800,4),(316,1048968000,3),(316,1067108400,4),(316,1080417600,3),(316,1088276400,9),(316,1099177200,8),(316,1111878000,4),(316,2147483647,4),(317,-1704165944,1),(317,-1090466744,3),(317,227820600,2),(317,246223800,5),(317,259617600,4),(317,271108800,5),(317,283982400,3),(317,296598600,2),(317,306531000,3),(317,322432200,2),(317,338499000,3),(317,673216200,2),(317,685481400,3),(317,701209800,2),(317,717103800,3),(317,732745800,2),(317,748639800,3),(317,764281800,2),(317,780175800,3),(317,795817800,2),(317,811711800,3),(317,827353800,2),(317,843247800,3),(317,858976200,2),(317,874870200,3),(317,890512200,2),(317,906406200,3),(317,922048200,2),(317,937942200,3),(317,953584200,2),(317,969478200,3),(317,985206600,2),(317,1001100600,3),(317,1016742600,2),(317,1032636600,3),(317,1048278600,2),(317,1064172600,3),(317,1079814600,2),(317,1095708600,3),(317,1111437000,2),(317,1127331000,3),(317,1206045000,2),(317,1221939000,3),(317,1237667400,2),(317,1253561400,3),(317,1269203400,2),(317,1285097400,3),(317,1300739400,2),(317,1316633400,3),(317,1332275400,2),(317,1348169400,3),(317,1363897800,2),(317,1379791800,3),(317,1395433800,2),(317,1411327800,3),(317,1426969800,2),(317,1442863800,3),(317,1458505800,2),(317,1474399800,3),(317,1490128200,2),(317,1506022200,3),(317,1521664200,2),(317,1537558200,3),(317,1553200200,2),(317,1569094200,3),(317,1584736200,2),(317,1600630200,3),(317,1616358600,2),(317,1632252600,3),(317,1647894600,2),(317,1663788600,3),(317,2147483647,3),(318,-2147483648,1),(318,-1641003640,6),(318,-933638400,2),(318,-923097600,3),(318,-919036800,2),(318,-857347200,3),(318,-844300800,2),(318,-825811200,3),(318,-812678400,2),(318,-794188800,3),(318,-779846400,2),(318,-762652800,3),(318,-748310400,2),(318,-731116800,3),(318,-681955200,4),(318,-673228800,2),(318,-667958400,3),(318,-652320000,2),(318,-636422400,3),(318,-622080000,2),(318,-608947200,3),(318,-591840000,2),(318,-572486400,3),(318,-558576000,2),(318,-542851200,3),(318,-527731200,2),(318,-514425600,3),(318,-490838400,2),(318,-482976000,3),(318,-459388800,2),(318,-451526400,3),(318,-428544000,2),(318,-418262400,3),(318,-400118400,2),(318,-387417600,3),(318,142380000,5),(318,150843600,6),(318,167176800,5),(318,178664400,6),(318,334101600,7),(318,337730400,8),(318,452642400,7),(318,462319200,8),(318,482277600,5),(318,494370000,6),(318,516751200,5),(318,526424400,6),(318,545436000,5),(318,558478800,6),(318,576626400,5),(318,589323600,6),(318,609890400,5),(318,620773200,6),(318,638316000,5),(318,651618000,6),(318,669765600,5),(318,683672400,6),(318,701820000,5),(318,715726800,6),(318,733701600,5),(318,747176400,6),(318,765151200,5),(318,778021200,6),(318,796600800,5),(318,810075600,6),(318,826840800,5),(318,842821200,6),(318,858895200,5),(318,874184400,6),(318,890344800,5),(318,905029200,6),(318,923011200,5),(318,936313200,6),(318,955670400,5),(318,970783200,6),(318,986770800,5),(318,1001282400,6),(318,1017356400,5),(318,1033941600,6),(318,1048806000,5),(318,1065132000,6),(318,1081292400,5),(318,1095804000,6),(318,1112313600,5),(318,1128812400,6),(318,1143763200,5),(318,1159657200,6),(318,1175212800,5),(318,1189897200,6),(318,1206662400,5),(318,1223161200,6),(318,1238112000,5),(318,1254006000,6),(318,1269561600,5),(318,1284246000,6),(318,1301616000,5),(318,1317510000,6),(318,1333065600,5),(318,1348354800,6),(318,1364515200,5),(318,1382828400,6),(318,1395964800,5),(318,1414278000,6),(318,1427414400,5),(318,1445727600,6),(318,1458864000,5),(318,1477782000,6),(318,1490313600,5),(318,1509231600,6),(318,1521763200,5),(318,1540681200,6),(318,1553817600,5),(318,1572130800,6),(318,1585267200,5),(318,1603580400,6),(318,1616716800,5),(318,1635634800,6),(318,1648166400,5),(318,1667084400,6),(318,1679616000,5),(318,1698534000,6),(318,1711670400,5),(318,1729983600,6),(318,1743120000,5),(318,1761433200,6),(318,1774569600,5),(318,1792882800,6),(318,1806019200,5),(318,1824937200,6),(318,1837468800,5),(318,1856386800,6),(318,1868918400,5),(318,1887836400,6),(318,1900972800,5),(318,1919286000,6),(318,1932422400,5),(318,1950735600,6),(318,1963872000,5),(318,1982790000,6),(318,1995321600,5),(318,2014239600,6),(318,2026771200,5),(318,2045689200,6),(318,2058220800,5),(318,2077138800,6),(318,2090275200,5),(318,2108588400,6),(318,2121724800,5),(318,2140038000,6),(319,-706341516,1),(319,560025000,2),(319,2147483647,2),(320,-706341516,1),(320,560025000,2),(320,2147483647,2),(321,-2147483648,3),(321,-683802000,1),(321,-672310800,2),(321,-654771600,1),(321,-640861200,2),(321,-620298000,1),(321,-609411600,2),(321,-588848400,1),(321,-577962000,2),(322,-1578807591,1),(322,-1247551200,3),(322,354906000,2),(322,370713600,3),(322,386442000,2),(322,402249600,3),(322,417978000,2),(322,433785600,3),(322,449600400,2),(322,465332400,4),(322,481057200,5),(322,496782000,4),(322,512506800,5),(322,528231600,4),(322,543956400,5),(322,559681200,4),(322,575406000,5),(322,591130800,4),(322,606855600,5),(322,622580400,4),(322,638305200,5),(322,654634800,4),(322,670359600,6),(322,686088000,7),(322,695764800,4),(322,701809200,5),(322,717534000,4),(322,733258800,5),(322,748983600,4),(322,764708400,5),(322,780433200,4),(322,796158000,5),(322,811882800,4),(322,828212400,5),(322,846356400,4),(322,859662000,5),(322,877806000,4),(322,891111600,5),(322,909255600,4),(322,922561200,5),(322,941310000,4),(322,954010800,5),(322,972759600,4),(322,985460400,5),(322,1004209200,4),(322,1017514800,5),(322,1020193200,8),(322,1035662400,7),(322,1048968000,6),(322,1067112000,7),(322,1080417600,6),(322,1099166400,7),(322,1111867200,6),(322,1130616000,7),(322,1143316800,6),(322,1162065600,7),(322,1174766400,6),(322,1193515200,7),(322,1206820800,6),(322,1224964800,7),(322,1238270400,6),(322,1256414400,7),(322,1269720000,6),(322,1288468800,7),(322,1301169600,4),(322,1414263600,7),(322,1464465600,4),(322,2147483647,4),(323,-1577951856,1),(323,-1172908656,2),(323,-880272000,3),(323,-766054800,4),(324,-2032931252,1),(324,252435600,3),(324,417974400,2),(324,433782000,3),(324,449596800,2),(324,465318000,3),(324,481046400,2),(324,496767600,3),(324,512496000,2),(324,528217200,3),(324,543945600,2),(324,559666800,3),(324,575395200,2),(324,591116400,3),(324,606844800,2),(324,622566000,3),(324,638294400,2),(324,654620400,3),(324,670348800,2),(324,686070000,3),(324,701798400,2),(324,717519600,3),(324,733248000,2),(324,748969200,3),(324,764697600,2),(324,780418800,3),(324,796147200,2),(324,811868400,3),(324,828201600,2),(324,843922800,3),(324,859651200,2),(324,875372400,3),(324,891100800,2),(324,906822000,3),(324,988394400,2),(324,1001696400,3),(324,1017424800,2),(324,1033146000,3),(324,1048874400,2),(324,1064595600,3),(324,1080324000,2),(324,1096045200,3),(324,1111773600,2),(324,1127494800,3),(324,1143223200,2),(324,1159549200,3),(324,1427479200,2),(324,1443193200,3),(324,1458928800,2),(324,1474642800,3),(324,2147483647,3),(325,-2032931252,1),(325,252435600,3),(325,417974400,2),(325,433782000,3),(325,449596800,2),(325,465318000,3),(325,481046400,2),(325,496767600,3),(325,512496000,2),(325,528217200,3),(325,543945600,2),(325,559666800,3),(325,575395200,2),(325,591116400,3),(325,606844800,2),(325,622566000,3),(325,638294400,2),(325,654620400,3),(325,670348800,2),(325,686070000,3),(325,701798400,2),(325,717519600,3),(325,733248000,2),(325,748969200,3),(325,764697600,2),(325,780418800,3),(325,796147200,2),(325,811868400,3),(325,828201600,2),(325,843922800,3),(325,859651200,2),(325,875372400,3),(325,891100800,2),(325,906822000,3),(325,988394400,2),(325,1001696400,3),(325,1017424800,2),(325,1033146000,3),(325,1048874400,2),(325,1064595600,3),(325,1080324000,2),(325,1096045200,3),(325,1111773600,2),(325,1127494800,3),(325,1143223200,2),(325,1159549200,3),(325,1427479200,2),(325,1443193200,3),(325,1458928800,2),(325,1474642800,3),(325,2147483647,3),(326,-1325483420,1),(326,2147483647,1),(327,-1579426374,1),(327,-1247558400,2),(327,354898800,4),(327,370699200,3),(327,386427600,4),(327,402235200,3),(327,417963600,4),(327,433771200,3),(327,449586000,4),(327,465318000,5),(327,481042800,6),(327,496767600,5),(327,512492400,6),(327,528217200,5),(327,543942000,6),(327,559666800,5),(327,575391600,6),(327,591116400,5),(327,606841200,6),(327,622566000,5),(327,638290800,6),(327,654620400,5),(327,670345200,7),(327,686073600,8),(327,695750400,5),(327,701794800,6),(327,717519600,5),(327,733244400,6),(327,748969200,5),(327,764694000,6),(327,780418800,5),(327,796143600,6),(327,811868400,5),(327,828198000,6),(327,846342000,5),(327,859647600,6),(327,877791600,5),(327,891097200,6),(327,909241200,5),(327,922546800,6),(327,941295600,5),(327,953996400,6),(327,972745200,5),(327,985446000,6),(327,1004194800,5),(327,1017500400,6),(327,1035644400,5),(327,1048950000,6),(327,1067094000,5),(327,1080399600,6),(327,1099148400,5),(327,1111849200,6),(327,1130598000,5),(327,1143298800,6),(327,1162047600,5),(327,1174748400,6),(327,1193497200,5),(327,1206802800,6),(327,1224946800,5),(327,1238252400,6),(327,1256396400,5),(327,1269702000,6),(327,1288450800,5),(327,1301151600,9),(327,1315828800,5),(327,1414249200,8),(327,2147483647,8),(328,-2147483648,1),(328,-1570084924,2),(328,2147483647,2),(329,-1487321251,1),(329,-1247562000,3),(329,354895200,2),(329,370702800,3),(329,386431200,2),(329,402238800,3),(329,417967200,2),(329,433774800,3),(329,449589600,2),(329,465321600,4),(329,481046400,5),(329,496771200,4),(329,512496000,5),(329,528220800,4),(329,543945600,5),(329,559670400,4),(329,575395200,5),(329,591120000,4),(329,606844800,5),(329,622569600,4),(329,638294400,5),(329,654624000,4),(329,670348800,6),(329,686077200,7),(329,695754000,4),(329,701798400,5),(329,717523200,4),(329,733248000,5),(329,748972800,4),(329,764697600,5),(329,780422400,4),(329,796147200,5),(329,811872000,4),(329,828201600,5),(329,846345600,4),(329,859651200,5),(329,877795200,4),(329,891100800,5),(329,909244800,4),(329,922550400,5),(329,941299200,4),(329,954000000,5),(329,972748800,4),(329,985449600,5),(329,1004198400,4),(329,1017504000,5),(329,1035648000,4),(329,1048953600,5),(329,1067097600,4),(329,1080403200,5),(329,1099152000,4),(329,1111852800,5),(329,1130601600,4),(329,1143302400,5),(329,1162051200,4),(329,1174752000,5),(329,1193500800,4),(329,1206806400,5),(329,1224950400,4),(329,1238256000,5),(329,1256400000,4),(329,1269705600,5),(329,1288454400,4),(329,1301155200,8),(329,1414249200,4),(329,2147483647,4),(330,-1579423138,1),(330,-1247558400,3),(330,354898800,2),(330,370706400,3),(330,386434800,2),(330,402242400,3),(330,417970800,2),(330,433778400,3),(330,449593200,2),(330,465325200,4),(330,481050000,5),(330,496774800,4),(330,512499600,5),(330,528224400,4),(330,543949200,5),(330,559674000,4),(330,575398800,5),(330,591123600,4),(330,606848400,5),(330,622573200,4),(330,638298000,5),(330,654627600,4),(330,670352400,6),(330,686080800,7),(330,695757600,4),(330,701802000,5),(330,717526800,4),(330,733251600,5),(330,748976400,4),(330,764701200,5),(330,780426000,4),(330,796150800,5),(330,811875600,4),(330,828205200,5),(330,846349200,4),(330,859654800,5),(330,877798800,4),(330,891104400,5),(330,909248400,4),(330,922554000,5),(330,941302800,4),(330,954003600,5),(330,972752400,4),(330,985453200,5),(330,1004202000,4),(330,1017507600,5),(330,1035651600,4),(330,1048957200,5),(330,1067101200,4),(330,1080406800,5),(330,1099155600,4),(330,1111856400,5),(330,1130605200,4),(330,1143306000,5),(330,1162054800,4),(330,1174755600,5),(330,1193504400,4),(330,1206810000,5),(330,1224954000,4),(330,1238259600,5),(330,1256403600,4),(330,1269709200,5),(330,1288458000,4),(330,1301158800,8),(330,1414252800,4),(330,2147483647,4),(331,-2147483648,1),(331,-1577946287,2),(331,-873268200,3),(331,-778410000,2),(331,2147483647,2),(332,-1688270553,1),(332,-1592610305,2),(332,-1247544000,4),(332,354913200,3),(332,370720800,4),(332,386449200,3),(332,402256800,4),(332,417985200,3),(332,433792800,4),(332,449607600,3),(332,465339600,5),(332,481064400,6),(332,496789200,5),(332,512514000,6),(332,528238800,5),(332,543963600,6),(332,559688400,5),(332,575413200,6),(332,591138000,5),(332,606862800,6),(332,622587600,5),(332,638312400,6),(332,654642000,5),(332,670366800,7),(332,686095200,8),(332,695772000,5),(332,701816400,6),(332,717541200,5),(332,733266000,6),(332,748990800,5),(332,764715600,6),(332,780440400,5),(332,796165200,6),(332,811890000,5),(332,828219600,6),(332,846363600,5),(332,859669200,6),(332,877813200,5),(332,891118800,6),(332,909262800,5),(332,922568400,6),(332,941317200,5),(332,954018000,6),(332,972766800,5),(332,985467600,6),(332,1004216400,5),(332,1017522000,6),(332,1035666000,5),(332,1048971600,6),(332,1067115600,5),(332,1080421200,6),(332,1099170000,5),(332,1111870800,6),(332,1130619600,5),(332,1143320400,6),(332,1162069200,5),(332,1174770000,6),(332,1193518800,5),(332,1206824400,6),(332,1224968400,5),(332,1238274000,6),(332,1256418000,5),(332,1269723600,6),(332,1288472400,5),(332,1301173200,9),(332,1414267200,5),(332,2147483647,5),(333,-1441162680,1),(333,-405140400,3),(333,354916800,2),(333,370724400,3),(333,386452800,2),(333,402260400,3),(333,417988800,2),(333,433796400,3),(333,449611200,2),(333,465343200,4),(333,481068000,5),(333,496792800,4),(333,512517600,5),(333,528242400,4),(333,543967200,5),(333,559692000,4),(333,575416800,5),(333,591141600,4),(333,606866400,5),(333,622591200,4),(333,638316000,5),(333,654645600,4),(333,670370400,6),(333,686098800,7),(333,701823600,6),(333,717548400,7),(333,733273200,6),(333,748998000,7),(333,764722800,6),(333,780447600,7),(333,796172400,6),(333,811897200,4),(333,859672800,5),(333,877816800,4),(333,891122400,5),(333,909266400,4),(333,922572000,5),(333,941320800,4),(333,954021600,5),(333,972770400,4),(333,985471200,5),(333,1004220000,4),(333,1017525600,5),(333,1035669600,4),(333,1048975200,5),(333,1067119200,4),(333,1080424800,5),(333,1099173600,4),(333,1111874400,5),(333,1130623200,4),(333,1143324000,5),(333,1162072800,4),(333,1174773600,5),(333,1193522400,4),(333,1206828000,5),(333,1224972000,4),(333,1238277600,5),(333,1256421600,4),(333,1269727200,5),(333,1288476000,4),(333,1301176800,5),(333,1319925600,4),(333,2147483647,4),(334,-2147483648,1),(334,-1830376800,6),(334,-1689548400,2),(334,-1677794400,3),(334,-1667430000,4),(334,-1647730800,5),(334,-1635807600,4),(334,-1616194800,5),(334,-1604358000,4),(334,-1584658800,5),(334,-1572735600,4),(334,-1553036400,5),(334,-1541199600,4),(334,-1521500400,5),(334,-1442444400,4),(334,-1426806000,5),(334,-1379286000,4),(334,-1364770800,5),(334,-1348441200,4),(334,-1333321200,5),(334,-1316386800,4),(334,-1301266800,5),(334,-1284332400,4),(334,-1269817200,5),(334,-1221433200,4),(334,-1206918000,5),(334,-1191193200,4),(334,-1175468400,5),(334,-1127689200,4),(334,-1111964400,5),(334,-1096844400,4),(334,-1080514800,5),(334,-1063580400,4),(334,-1049065200,5),(334,-1033340400,4),(334,-1017615600,5),(334,-1002495600,4),(334,-986166000,5),(334,-969231600,4),(334,-950482800,5),(334,-942015600,4),(334,-922662000,5),(334,-906937200,4),(334,-891126000,5),(334,-877302000,4),(334,-873676800,7),(334,-864000000,4),(334,-857948400,5),(334,-845852400,4),(334,-842832000,7),(334,-831340800,4),(334,-825894000,5),(334,-814402800,4),(334,-810777600,7),(334,-799891200,4),(334,-794444400,5),(334,-782953200,4),(334,-779328000,7),(334,-768441600,4),(334,-762994800,5),(334,-749084400,4),(334,-733359600,5),(334,-717624000,4),(334,-701899200,5),(334,-686174400,4),(334,-670449600,5),(334,-654724800,4),(334,-639000000,5),(334,-623275200,4),(334,-607550400,5),(334,-591825600,4),(334,-575496000,5),(334,-559771200,4),(334,-544046400,5),(334,-528321600,4),(334,-512596800,5),(334,-496872000,4),(334,-481147200,5),(334,-465422400,4),(334,-449697600,5),(334,-433972800,4),(334,-417643200,5),(334,-401918400,4),(334,-386193600,5),(334,-370468800,4),(334,-354744000,5),(334,-339019200,4),(334,-323294400,5),(334,-307569600,4),(334,-291844800,5),(334,-276120000,4),(334,-260395200,5),(334,-244670400,4),(334,-228340800,5),(334,-212616000,4),(334,-196891200,5),(334,-181166400,4),(334,-165441600,5),(334,-149716800,4),(334,-133992000,5),(334,-118267200,9),(334,228272400,7),(334,243997200,8),(334,260326800,7),(334,276051600,8),(334,291776400,7),(334,307504800,8),(334,323226000,7),(334,338954400,8),(334,354679200,7),(334,370404000,8),(334,386128800,7),(334,401853600,8),(334,417582000,7),(334,433303200,8),(334,449028000,7),(334,465357600,8),(334,481082400,7),(334,496807200,8),(334,512532000,7),(334,528256800,8),(334,543981600,7),(334,559706400,8),(334,575431200,7),(334,591156000,8),(334,606880800,7),(334,622605600,8),(334,638330400,7),(334,654660000,8),(334,670384800,7),(334,686109600,8),(334,701834400,7),(334,717559200,10),(334,733280400,11),(334,749005200,12),(334,764730000,11),(334,780454800,12),(334,796179600,11),(334,811904400,12),(334,828234000,11),(334,846378000,12),(334,859683600,11),(334,877827600,12),(334,891133200,11),(334,909277200,12),(334,922582800,11),(334,941331600,12),(334,954032400,11),(334,972781200,12),(334,985482000,11),(334,1004230800,12),(334,1017536400,11),(334,1035680400,12),(334,1048986000,11),(334,1067130000,12),(334,1080435600,11),(334,1099184400,12),(334,1111885200,11),(334,1130634000,12),(334,1143334800,11),(334,1162083600,12),(334,1174784400,11),(334,1193533200,12),(334,1206838800,11),(334,1224982800,12),(334,1238288400,11),(334,1256432400,12),(334,1269738000,11),(334,1288486800,12),(334,1301187600,11),(334,1319936400,12),(334,1332637200,11),(334,1351386000,12),(334,1364691600,11),(334,1382835600,12),(334,1396141200,11),(334,1414285200,12),(334,1427590800,11),(334,1445734800,12),(334,1459040400,11),(334,1477789200,12),(334,1490490000,11),(334,1509238800,12),(334,1521939600,11),(334,1540688400,12),(334,1553994000,11),(334,1572138000,12),(334,1585443600,11),(334,1603587600,12),(334,1616893200,11),(334,1635642000,12),(334,1648342800,11),(334,1667091600,12),(334,1679792400,11),(334,1698541200,12),(334,1711846800,11),(334,1729990800,12),(334,1743296400,11),(334,1761440400,12),(334,1774746000,11),(334,1792890000,12),(334,1806195600,11),(334,1824944400,12),(334,1837645200,11),(334,1856394000,12),(334,1869094800,11),(334,1887843600,12),(334,1901149200,11),(334,1919293200,12),(334,1932598800,11),(334,1950742800,12),(334,1964048400,11),(334,1982797200,12),(334,1995498000,11),(334,2014246800,12),(334,2026947600,11),(334,2045696400,12),(334,2058397200,11),(334,2077146000,12),(334,2090451600,11),(334,2108595600,12),(334,2121901200,11),(334,2140045200,12),(334,2147483647,12),(335,-2147483648,2),(335,-1664307642,1),(335,-1648932042,2),(335,-1632080442,1),(335,-1618692042,2),(335,-1262281242,4),(335,-882727200,3),(335,-858538800,4),(335,-845229600,3),(335,-825879600,4),(335,-814384800,3),(335,-793825200,4),(335,-782935200,3),(335,-762375600,4),(335,-713988000,3),(335,-703710000,4),(335,-681933600,3),(335,-672865200,4),(335,-650484000,3),(335,-641415600,4),(335,-618429600,3),(335,-609966000,4),(335,-586980000,3),(335,-578516400,4),(335,-555530400,3),(335,-546462000,4),(335,-429127200,3),(335,-415825200,4),(335,136360800,3),(335,152082000,4),(335,167810400,3),(335,183531600,4),(335,199260000,3),(335,215586000,4),(335,230709600,3),(335,247035600,4),(335,262764000,3),(335,278485200,4),(335,294213600,3),(335,309934800,4),(335,325663200,3),(335,341384400,4),(335,357112800,3),(335,372834000,4),(335,388562400,3),(335,404888400,4),(335,420012000,3),(335,436338000,4),(335,452066400,3),(335,467787600,4),(335,483516000,3),(335,499237200,4),(335,514965600,3),(335,530686800,4),(335,544600800,3),(335,562136400,4),(335,576050400,3),(335,594190800,4),(335,607500000,3),(335,625640400,4),(335,638949600,3),(335,657090000,4),(335,671004000,3),(335,688539600,4),(335,702453600,3),(335,719989200,4),(335,733903200,3),(335,752043600,4),(335,765352800,3),(335,783493200,4),(335,796802400,3),(335,814942800,4),(335,828856800,3),(335,846392400,4),(335,860306400,3),(335,877842000,4),(335,891756000,3),(335,909291600,4),(335,923205600,3),(335,941346000,4),(335,954655200,3),(335,972795600,4),(335,986104800,3),(335,1004245200,4),(335,1018159200,3),(335,1035694800,4),(335,1049608800,3),(335,1067144400,4),(335,1081058400,3),(335,1099198800,4),(335,1112508000,3),(335,1130648400,4),(335,1143957600,3),(335,1162098000,4),(335,1173592800,3),(335,1194152400,4),(335,1205042400,3),(335,1225602000,4),(335,1236492000,3),(335,1257051600,4),(335,1268546400,3),(335,1289106000,4),(335,1299996000,3),(335,1320555600,4),(335,1331445600,3),(335,1352005200,4),(335,1362895200,3),(335,1383454800,4),(335,1394344800,3),(335,1414904400,4),(335,1425794400,3),(335,1446354000,4),(335,1457848800,3),(335,1478408400,4),(335,1489298400,3),(335,1509858000,4),(335,1520748000,3),(335,1541307600,4),(335,1552197600,3),(335,1572757200,4),(335,1583647200,3),(335,1604206800,4),(335,1615701600,3),(335,1636261200,4),(335,1647151200,3),(335,1667710800,4),(335,1678600800,3),(335,1699160400,4),(335,1710050400,3),(335,1730610000,4),(335,1741500000,3),(335,1762059600,4),(335,1772949600,3),(335,1793509200,4),(335,1805004000,3),(335,1825563600,4),(335,1836453600,3),(335,1857013200,4),(335,1867903200,3),(335,1888462800,4),(335,1899352800,3),(335,1919912400,4),(335,1930802400,3),(335,1951362000,4),(335,1962856800,3),(335,1983416400,4),(335,1994306400,3),(335,2014866000,4),(335,2025756000,3),(335,2046315600,4),(335,2057205600,3),(335,2077765200,4),(335,2088655200,3),(335,2109214800,4),(335,2120104800,3),(335,2140664400,4),(336,-1509663504,1),(336,-733874400,2),(336,323827200,3),(336,338950800,4),(336,354675600,5),(336,370400400,4),(336,386125200,5),(336,401850000,4),(336,417574800,5),(336,433299600,4),(336,449024400,5),(336,465354000,4),(336,481078800,5),(336,496803600,4),(336,512528400,5),(336,528253200,4),(336,543978000,5),(336,559702800,4),(336,575427600,5),(336,591152400,4),(336,606877200,5),(336,622602000,4),(336,638326800,5),(336,654656400,4),(336,670381200,5),(336,686106000,4),(336,701830800,5),(336,717555600,4),(336,733280400,5),(336,749005200,4),(336,764730000,5),(336,780454800,4),(336,796179600,5),(336,811904400,4),(336,828234000,5),(336,846378000,4),(336,859683600,5),(336,877827600,4),(336,891133200,5),(336,909277200,4),(336,922582800,5),(336,941331600,4),(336,954032400,5),(336,972781200,4),(336,985482000,5),(336,1004230800,4),(336,1017536400,5),(336,1035680400,4),(336,1048986000,5),(336,1067130000,4),(336,1080435600,5),(336,1099184400,4),(336,1111885200,5),(336,1130634000,4),(336,1143334800,5),(336,1162083600,4),(336,1174784400,5),(336,1193533200,4),(336,1206838800,5),(336,1224982800,4),(336,1238288400,5),(336,1256432400,4),(336,1269738000,5),(336,1288486800,4),(336,1301187600,5),(336,1319936400,4),(336,1332637200,5),(336,1351386000,4),(336,1364691600,5),(336,1382835600,4),(336,1396141200,5),(336,1414285200,4),(336,1427590800,5),(336,1445734800,4),(336,1459040400,5),(336,1477789200,4),(336,1490490000,5),(336,1509238800,4),(336,1521939600,5),(336,1540688400,4),(336,1553994000,5),(336,1572138000,4),(336,1585443600,5),(336,1603587600,4),(336,1616893200,5),(336,1635642000,4),(336,1648342800,5),(336,1667091600,4),(336,1679792400,5),(336,1698541200,4),(336,1711846800,5),(336,1729990800,4),(336,1743296400,5),(336,1761440400,4),(336,1774746000,5),(336,1792890000,4),(336,1806195600,5),(336,1824944400,4),(336,1837645200,5),(336,1856394000,4),(336,1869094800,5),(336,1887843600,4),(336,1901149200,5),(336,1919293200,4),(336,1932598800,5),(336,1950742800,4),(336,1964048400,5),(336,1982797200,4),(336,1995498000,5),(336,2014246800,4),(336,2026947600,5),(336,2045696400,4),(336,2058397200,5),(336,2077146000,4),(336,2090451600,5),(336,2108595600,4),(336,2121901200,5),(336,2140045200,4),(337,-1830376800,1),(337,-862610400,2),(337,-764118000,3),(337,186120000,4),(337,2147483647,4),(338,-1955748776,1),(338,354675600,2),(338,370400400,3),(338,386125200,2),(338,401850000,3),(338,417574800,2),(338,433299600,3),(338,449024400,2),(338,465354000,3),(338,481078800,2),(338,496803600,3),(338,512528400,2),(338,528253200,3),(338,543978000,2),(338,559702800,3),(338,575427600,2),(338,591152400,3),(338,606877200,2),(338,622602000,3),(338,638326800,2),(338,654656400,3),(338,670381200,2),(338,686106000,3),(338,701830800,2),(338,717555600,3),(338,733280400,2),(338,749005200,3),(338,764730000,2),(338,780454800,3),(338,796179600,2),(338,811904400,3),(338,828234000,2),(338,846378000,3),(338,859683600,2),(338,877827600,3),(338,891133200,2),(338,909277200,3),(338,922582800,2),(338,941331600,3),(338,954032400,2),(338,972781200,3),(338,985482000,2),(338,1004230800,3),(338,1017536400,2),(338,1035680400,3),(338,1048986000,2),(338,1067130000,3),(338,1080435600,2),(338,1099184400,3),(338,1111885200,2),(338,1130634000,3),(338,1143334800,2),(338,1162083600,3),(338,1174784400,2),(338,1193533200,3),(338,1206838800,2),(338,1224982800,3),(338,1238288400,2),(338,1256432400,3),(338,1269738000,2),(338,1288486800,3),(338,1301187600,2),(338,1319936400,3),(338,1332637200,2),(338,1351386000,3),(338,1364691600,2),(338,1382835600,3),(338,1396141200,2),(338,1414285200,3),(338,1427590800,2),(338,1445734800,3),(338,1459040400,2),(338,1477789200,3),(338,1490490000,2),(338,1509238800,3),(338,1521939600,2),(338,1540688400,3),(338,1553994000,2),(338,1572138000,3),(338,1585443600,2),(338,1603587600,3),(338,1616893200,2),(338,1635642000,3),(338,1648342800,2),(338,1667091600,3),(338,1679792400,2),(338,1698541200,3),(338,1711846800,2),(338,1729990800,3),(338,1743296400,2),(338,1761440400,3),(338,1774746000,2),(338,1792890000,3),(338,1806195600,2),(338,1824944400,3),(338,1837645200,2),(338,1856394000,3),(338,1869094800,2),(338,1887843600,3),(338,1901149200,2),(338,1919293200,3),(338,1932598800,2),(338,1950742800,3),(338,1964048400,2),(338,1982797200,3),(338,1995498000,2),(338,2014246800,3),(338,2026947600,2),(338,2045696400,3),(338,2058397200,2),(338,2077146000,3),(338,2090451600,2),(338,2108595600,3),(338,2121901200,2),(338,2140045200,3),(339,-1955748776,1),(339,354675600,2),(339,370400400,3),(339,386125200,2),(339,401850000,3),(339,417574800,2),(339,433299600,3),(339,449024400,2),(339,465354000,3),(339,481078800,2),(339,496803600,3),(339,512528400,2),(339,528253200,3),(339,543978000,2),(339,559702800,3),(339,575427600,2),(339,591152400,3),(339,606877200,2),(339,622602000,3),(339,638326800,2),(339,654656400,3),(339,670381200,2),(339,686106000,3),(339,701830800,2),(339,717555600,3),(339,733280400,2),(339,749005200,3),(339,764730000,2),(339,780454800,3),(339,796179600,2),(339,811904400,3),(339,828234000,2),(339,846378000,3),(339,859683600,2),(339,877827600,3),(339,891133200,2),(339,909277200,3),(339,922582800,2),(339,941331600,3),(339,954032400,2),(339,972781200,3),(339,985482000,2),(339,1004230800,3),(339,1017536400,2),(339,1035680400,3),(339,1048986000,2),(339,1067130000,3),(339,1080435600,2),(339,1099184400,3),(339,1111885200,2),(339,1130634000,3),(339,1143334800,2),(339,1162083600,3),(339,1174784400,2),(339,1193533200,3),(339,1206838800,2),(339,1224982800,3),(339,1238288400,2),(339,1256432400,3),(339,1269738000,2),(339,1288486800,3),(339,1301187600,2),(339,1319936400,3),(339,1332637200,2),(339,1351386000,3),(339,1364691600,2),(339,1382835600,3),(339,1396141200,2),(339,1414285200,3),(339,1427590800,2),(339,1445734800,3),(339,1459040400,2),(339,1477789200,3),(339,1490490000,2),(339,1509238800,3),(339,1521939600,2),(339,1540688400,3),(339,1553994000,2),(339,1572138000,3),(339,1585443600,2),(339,1603587600,3),(339,1616893200,2),(339,1635642000,3),(339,1648342800,2),(339,1667091600,3),(339,1679792400,2),(339,1698541200,3),(339,1711846800,2),(339,1729990800,3),(339,1743296400,2),(339,1761440400,3),(339,1774746000,2),(339,1792890000,3),(339,1806195600,2),(339,1824944400,3),(339,1837645200,2),(339,1856394000,3),(339,1869094800,2),(339,1887843600,3),(339,1901149200,2),(339,1919293200,3),(339,1932598800,2),(339,1950742800,3),(339,1964048400,2),(339,1982797200,3),(339,1995498000,2),(339,2014246800,3),(339,2026947600,2),(339,2045696400,3),(339,2058397200,2),(339,2077146000,3),(339,2090451600,2),(339,2108595600,3),(339,2121901200,2),(339,2140045200,3),(340,-2147483648,2),(340,-1693706400,1),(340,-1680483600,2),(340,-1663455600,3),(340,-1650150000,4),(340,-1632006000,3),(340,-1618700400,4),(340,-938905200,3),(340,-857257200,4),(340,-844556400,3),(340,-828226800,4),(340,-812502000,3),(340,-796777200,4),(340,-781052400,3),(340,-776563200,5),(340,-765936000,1),(340,-761180400,4),(340,-748479600,3),(340,-733273200,4),(340,-717631200,3),(340,-714610800,6),(340,-710380800,1),(340,-701910000,4),(340,-684975600,3),(340,-670460400,4),(340,-654130800,3),(340,-639010800,4),(340,323830800,7),(340,338950800,8),(340,354675600,7),(340,370400400,8),(340,386125200,7),(340,401850000,8),(340,417574800,7),(340,433299600,8),(340,449024400,7),(340,465354000,8),(340,481078800,7),(340,496803600,8),(340,512528400,7),(340,528253200,8),(340,543978000,7),(340,559702800,8),(340,575427600,7),(340,591152400,8),(340,606877200,7),(340,622602000,8),(340,638326800,7),(340,654656400,8),(340,670381200,7),(340,686106000,8),(340,701830800,7),(340,717555600,8),(340,733280400,7),(340,749005200,8),(340,764730000,7),(340,780454800,8),(340,796179600,7),(340,811904400,8),(340,828234000,7),(340,846378000,8),(340,859683600,7),(340,877827600,8),(340,891133200,7),(340,909277200,8),(340,922582800,7),(340,941331600,8),(340,954032400,7),(340,972781200,8),(340,985482000,7),(340,1004230800,8),(340,1017536400,7),(340,1035680400,8),(340,1048986000,7),(340,1067130000,8),(340,1080435600,7),(340,1099184400,8),(340,1111885200,7),(340,1130634000,8),(340,1143334800,7),(340,1162083600,8),(340,1174784400,7),(340,1193533200,8),(340,1206838800,7),(340,1224982800,8),(340,1238288400,7),(340,1256432400,8),(340,1269738000,7),(340,1288486800,8),(340,1301187600,7),(340,1319936400,8),(340,1332637200,7),(340,1351386000,8),(340,1364691600,7),(340,1382835600,8),(340,1396141200,7),(340,1414285200,8),(340,1427590800,7),(340,1445734800,8),(340,1459040400,7),(340,1477789200,8),(340,1490490000,7),(340,1509238800,8),(340,1521939600,7),(340,1540688400,8),(340,1553994000,7),(340,1572138000,8),(340,1585443600,7),(340,1603587600,8),(340,1616893200,7),(340,1635642000,8),(340,1648342800,7),(340,1667091600,8),(340,1679792400,7),(340,1698541200,8),(340,1711846800,7),(340,1729990800,8),(340,1743296400,7),(340,1761440400,8),(340,1774746000,7),(340,1792890000,8),(340,1806195600,7),(340,1824944400,8),(340,1837645200,7),(340,1856394000,8),(340,1869094800,7),(340,1887843600,8),(340,1901149200,7),(340,1919293200,8),(340,1932598800,7),(340,1950742800,8),(340,1964048400,7),(340,1982797200,8),(340,1995498000,7),(340,2014246800,8),(340,2026947600,7),(340,2045696400,8),(340,2058397200,7),(340,2077146000,8),(340,2090451600,7),(340,2108595600,8),(340,2121901200,7),(340,2140045200,8),(341,-2147483648,1),(341,-1830380400,6),(341,-1689552000,2),(341,-1677798000,3),(341,-1667433600,4),(341,-1647734400,5),(341,-1635811200,4),(341,-1616198400,5),(341,-1604361600,4),(341,-1584662400,5),(341,-1572739200,4),(341,-1553040000,5),(341,-1541203200,4),(341,-1521504000,5),(341,-1442448000,4),(341,-1426809600,5),(341,-1379289600,4),(341,-1364774400,5),(341,-1348444800,4),(341,-1333324800,5),(341,-1316390400,4),(341,-1301270400,5),(341,-1284336000,4),(341,-1269820800,5),(341,-1221436800,4),(341,-1206921600,5),(341,-1191196800,4),(341,-1175472000,5),(341,-1127692800,4),(341,-1111968000,5),(341,-1096848000,4),(341,-1080518400,5),(341,-1063584000,4),(341,-1049068800,5),(341,-1033344000,4),(341,-1017619200,5),(341,-1002499200,4),(341,-986169600,5),(341,-969235200,4),(341,-950486400,5),(341,-942019200,4),(341,-922665600,5),(341,-906940800,4),(341,-891129600,5),(341,-877305600,4),(341,-873680400,7),(341,-864003600,4),(341,-857952000,5),(341,-845856000,4),(341,-842835600,7),(341,-831344400,4),(341,-825897600,5),(341,-814406400,4),(341,-810781200,7),(341,-799894800,4),(341,-794448000,5),(341,-782956800,4),(341,-779331600,7),(341,-768445200,4),(341,-762998400,5),(341,-749088000,4),(341,-733363200,5),(341,-717627600,4),(341,-701902800,5),(341,-686178000,4),(341,-670453200,5),(341,-654728400,4),(341,-639003600,5),(341,-623278800,4),(341,-607554000,5),(341,-591829200,4),(341,-575499600,5),(341,-559774800,4),(341,-544050000,5),(341,-528325200,4),(341,-512600400,5),(341,-496875600,4),(341,-481150800,5),(341,-465426000,4),(341,-449701200,5),(341,-433976400,4),(341,-417646800,5),(341,-401922000,4),(341,-386197200,5),(341,-370472400,4),(341,-354747600,5),(341,-339022800,4),(341,-323298000,5),(341,-307573200,4),(341,-291848400,5),(341,-276123600,4),(341,-260398800,5),(341,-244674000,4),(341,-228344400,5),(341,-212619600,4),(341,-196894800,5),(341,-181170000,4),(341,-165445200,5),(341,-149720400,4),(341,-133995600,5),(341,-118270800,10),(341,228268800,8),(341,243993600,9),(341,260323200,8),(341,276048000,9),(341,291772800,8),(341,307501200,9),(341,323222400,8),(341,338950800,9),(341,354675600,8),(341,370400400,9),(341,386125200,8),(341,401850000,9),(341,417578400,8),(341,433299600,11),(341,449024400,12),(341,465354000,11),(341,481078800,12),(341,496803600,11),(341,512528400,12),(341,528253200,11),(341,543978000,12),(341,559702800,11),(341,575427600,12),(341,591152400,11),(341,606877200,12),(341,622602000,11),(341,638326800,12),(341,654656400,11),(341,670381200,12),(341,686106000,11),(341,701830800,12),(341,717555600,11),(341,733280400,12),(341,749005200,11),(341,764730000,12),(341,780454800,11),(341,796179600,12),(341,811904400,11),(341,828234000,12),(341,846378000,11),(341,859683600,12),(341,877827600,11),(341,891133200,12),(341,909277200,11),(341,922582800,12),(341,941331600,11),(341,954032400,12),(341,972781200,11),(341,985482000,12),(341,1004230800,11),(341,1017536400,12),(341,1035680400,11),(341,1048986000,12),(341,1067130000,11),(341,1080435600,12),(341,1099184400,11),(341,1111885200,12),(341,1130634000,11),(341,1143334800,12),(341,1162083600,11),(341,1174784400,12),(341,1193533200,11),(341,1206838800,12),(341,1224982800,11),(341,1238288400,12),(341,1256432400,11),(341,1269738000,12),(341,1288486800,11),(341,1301187600,12),(341,1319936400,11),(341,1332637200,12),(341,1351386000,11),(341,1364691600,12),(341,1382835600,11),(341,1396141200,12),(341,1414285200,11),(341,1427590800,12),(341,1445734800,11),(341,1459040400,12),(341,1477789200,11),(341,1490490000,12),(341,1509238800,11),(341,1521939600,12),(341,1540688400,11),(341,1553994000,12),(341,1572138000,11),(341,1585443600,12),(341,1603587600,11),(341,1616893200,12),(341,1635642000,11),(341,1648342800,12),(341,1667091600,11),(341,1679792400,12),(341,1698541200,11),(341,1711846800,12),(341,1729990800,11),(341,1743296400,12),(341,1761440400,11),(341,1774746000,12),(341,1792890000,11),(341,1806195600,12),(341,1824944400,11),(341,1837645200,12),(341,1856394000,11),(341,1869094800,12),(341,1887843600,11),(341,1901149200,12),(341,1919293200,11),(341,1932598800,12),(341,1950742800,11),(341,1964048400,12),(341,1982797200,11),(341,1995498000,12),(341,2014246800,11),(341,2026947600,12),(341,2045696400,11),(341,2058397200,12),(341,2077146000,11),(341,2090451600,12),(341,2108595600,11),(341,2121901200,12),(341,2140045200,11),(342,-1830383032,1),(343,-2147483648,1),(343,2147483647,1),(344,-1830383032,1),(345,-2147483648,1),(345,-1824235716,3),(345,-1018209600,2),(345,-1003093200,3),(345,-986760000,2),(345,-971643600,3),(345,-954705600,2),(345,-939589200,3),(345,-923256000,2),(345,-908139600,3),(345,-891806400,2),(345,-876690000,3),(345,-860356800,2),(345,-852066000,3),(345,420609600,5),(345,433306800,4),(345,452052000,5),(345,464151600,4),(345,483501600,5),(345,495601200,2),(345,514350000,3),(345,527054400,2),(345,545799600,3),(345,558504000,2),(345,577249200,3),(345,589953600,2),(345,608698800,3),(345,621403200,2),(345,640753200,3),(345,652852800,2),(345,672202800,3),(345,684907200,2),(345,703652400,3),(345,716356800,2),(345,735102000,3),(345,747806400,2),(345,766551600,3),(345,779256000,2),(345,798001200,3),(345,810705600,2),(345,830055600,3),(345,842760000,2),(345,861505200,3),(345,874209600,2),(345,892954800,3),(345,905659200,2),(345,924404400,3),(345,937108800,2),(345,955854000,3),(345,968558400,2),(345,987310800,3),(345,999410400,2),(345,1019365200,3),(345,1030860000,2),(345,1050814800,3),(345,1062914400,2),(345,1082264400,3),(345,1094364000,2),(345,1113714000,3),(345,1125813600,2),(345,1145163600,3),(345,1157263200,2),(345,1176613200,3),(345,1188712800,2),(345,1208667600,3),(345,1220767200,2),(345,1240117200,3),(345,1252216800,2),(345,1271566800,3),(345,1283666400,5),(345,2147483647,5),(346,-2147483648,3),(346,-1672560000,1),(346,-1665388800,2),(346,-883641600,1),(346,-876124800,2),(346,-860400000,1),(346,-844675200,2),(346,-828345600,1),(346,-813225600,2),(346,57686400,1),(346,67968000,2),(346,89136000,1),(346,100022400,2),(346,120585600,1),(346,131472000,2),(346,152035200,1),(346,162921600,2),(346,183484800,1),(346,194976000,2),(346,215539200,1),(346,226425600,2),(346,246988800,1),(346,257875200,2),(346,278438400,1),(346,289324800,2),(346,309888000,1),(346,320774400,2),(346,341337600,1),(346,352224000,2),(346,372787200,1),(346,386697600,2),(346,404841600,1),(346,415728000,2),(346,436291200,1),(346,447177600,2),(346,467740800,1),(346,478627200,2),(346,499190400,1),(346,511286400,2),(346,530035200,1),(346,542736000,2),(346,562089600,1),(346,574790400,2),(346,594144000,1),(346,606240000,2),(346,625593600,1),(346,636480000,2),(346,657043200,1),(346,667929600,2),(346,688492800,1),(346,699379200,2),(346,719942400,1),(346,731433600,2),(346,751996800,1),(346,762883200,2),(346,783446400,1),(346,794332800,2),(346,814896000,1),(346,828201600,2),(346,846345600,1),(346,859651200,2),(346,877795200,1),(346,891100800,2),(346,909244800,1),(346,922550400,2),(346,941299200,1),(346,954000000,2),(346,967305600,1),(346,985449600,2),(346,1004198400,1),(346,1017504000,2),(346,1035648000,1),(346,1048953600,2),(346,1067097600,1),(346,1080403200,2),(346,1099152000,1),(346,1111852800,2),(346,1130601600,1),(346,1143907200,2),(346,1162051200,1),(346,1174752000,2),(346,1193500800,1),(346,1207411200,2),(346,1223136000,1),(346,1238860800,2),(346,1254585600,1),(346,1270310400,2),(346,1286035200,1),(346,1301760000,2),(346,1317484800,1),(346,1333209600,2),(346,1349539200,1),(346,1365264000,2),(346,1380988800,1),(346,1396713600,2),(346,1412438400,1),(346,1428163200,2),(346,1443888000,1),(346,1459612800,2),(346,1475337600,1),(346,1491062400,2),(346,1506787200,1),(346,1522512000,2),(346,1538841600,1),(346,1554566400,2),(346,1570291200,1),(346,1586016000,2),(346,1601740800,1),(346,1617465600,2),(346,1633190400,1),(346,1648915200,2),(346,1664640000,1),(346,1680364800,2),(346,1696089600,1),(346,1712419200,2),(346,1728144000,1),(346,1743868800,2),(346,1759593600,1),(346,1775318400,2),(346,1791043200,1),(346,1806768000,2),(346,1822492800,1),(346,1838217600,2),(346,1853942400,1),(346,1869667200,2),(346,1885996800,1),(346,1901721600,2),(346,1917446400,1),(346,1933171200,2),(346,1948896000,1),(346,1964620800,2),(346,1980345600,1),(346,1996070400,2),(346,2011795200,1),(346,2027520000,2),(346,2043244800,1),(346,2058969600,2),(346,2075299200,1),(346,2091024000,2),(346,2106748800,1),(346,2122473600,2),(346,2138198400,1),(347,-2147483648,3),(347,-1672558200,1),(347,-1665387000,2),(347,-883639800,1),(347,-876123000,2),(347,-860398200,1),(347,-844673400,2),(347,-828343800,1),(347,-813223800,2),(347,57688200,1),(347,67969800,2),(347,89137800,1),(347,100024200,2),(347,120587400,1),(347,131473800,2),(347,152037000,1),(347,162923400,2),(347,183486600,1),(347,194977800,2),(347,215541000,1),(347,226427400,2),(347,246990600,1),(347,257877000,2),(347,278440200,1),(347,289326600,2),(347,309889800,1),(347,320776200,2),(347,341339400,1),(347,352225800,2),(347,372789000,1),(347,384280200,2),(347,404843400,1),(347,415729800,2),(347,436293000,1),(347,447179400,2),(347,467742600,1),(347,478629000,2),(347,499192200,1),(347,511288200,2),(347,530037000,1),(347,542737800,2),(347,562091400,1),(347,574792200,2),(347,594145800,1),(347,606241800,2),(347,625595400,1),(347,637691400,2),(347,657045000,1),(347,667931400,2),(347,688494600,1),(347,701195400,2),(347,719944200,1),(347,731435400,2),(347,751998600,1),(347,764094600,2),(347,783448200,1),(347,796149000,2),(347,814897800,1),(347,828203400,2),(347,846347400,1),(347,859653000,2),(347,877797000,1),(347,891102600,2),(347,909246600,1),(347,922552200,2),(347,941301000,1),(347,954001800,2),(347,972750600,1),(347,985451400,2),(347,1004200200,1),(347,1017505800,2),(347,1035649800,1),(347,1048955400,2),(347,1067099400,1),(347,1080405000,2),(347,1099153800,1),(347,1111854600,2),(347,1130603400,1),(347,1143909000,2),(347,1162053000,1),(347,1174753800,2),(347,1193502600,1),(347,1207413000,2),(347,1223137800,1),(347,1238862600,2),(347,1254587400,1),(347,1270312200,2),(347,1286037000,1),(347,1301761800,2),(347,1317486600,1),(347,1333211400,2),(347,1349541000,1),(347,1365265800,2),(347,1380990600,1),(347,1396715400,2),(347,1412440200,1),(347,1428165000,2),(347,1443889800,1),(347,1459614600,2),(347,1475339400,1),(347,1491064200,2),(347,1506789000,1),(347,1522513800,2),(347,1538843400,1),(347,1554568200,2),(347,1570293000,1),(347,1586017800,2),(347,1601742600,1),(347,1617467400,2),(347,1633192200,1),(347,1648917000,2),(347,1664641800,1),(347,1680366600,2),(347,1696091400,1),(347,1712421000,2),(347,1728145800,1),(347,1743870600,2),(347,1759595400,1),(347,1775320200,2),(347,1791045000,1),(347,1806769800,2),(347,1822494600,1),(347,1838219400,2),(347,1853944200,1),(347,1869669000,2),(347,1885998600,1),(347,1901723400,2),(347,1917448200,1),(347,1933173000,2),(347,1948897800,1),(347,1964622600,2),(347,1980347400,1),(347,1996072200,2),(347,2011797000,1),(347,2027521800,2),(347,2043246600,1),(347,2058971400,2),(347,2075301000,1),(347,2091025800,2),(347,2106750600,1),(347,2122475400,2),(347,2138200200,1),(348,-2147483648,3),(348,-1672560000,1),(348,-1665388800,2),(348,-883641600,1),(348,-876124800,2),(348,-860400000,1),(348,-844675200,2),(348,-828345600,1),(348,-813225600,2),(348,57686400,1),(348,67968000,2),(348,625593600,1),(348,636480000,2),(348,657043200,1),(348,667929600,2),(348,688492800,1),(348,699379200,2),(349,-2147483648,3),(349,-1672558200,1),(349,-1665387000,2),(349,-883639800,1),(349,-876123000,2),(349,-860398200,1),(349,-844673400,2),(349,-828343800,1),(349,-813223800,2),(349,57688200,1),(349,67969800,2),(349,89137800,1),(349,100024200,2),(349,120587400,1),(349,131473800,2),(349,152037000,1),(349,162923400,2),(349,183486600,1),(349,194977800,2),(349,215541000,1),(349,226427400,2),(349,246990600,1),(349,257877000,2),(349,278440200,1),(349,289326600,2),(349,309889800,1),(349,320776200,2),(349,341339400,1),(349,352225800,2),(349,372789000,1),(349,386699400,2),(349,404843400,1),(349,415729800,2),(349,436293000,1),(349,447179400,2),(349,467742600,1),(349,478629000,2),(349,499192200,1),(349,511288200,2),(349,530037000,1),(349,542737800,2),(349,562091400,1),(349,574792200,2),(349,594145800,1),(349,606241800,2),(349,625595400,1),(349,636481800,2),(349,657045000,1),(349,667931400,2),(349,688494600,1),(349,699381000,2),(349,719944200,1),(349,731435400,2),(349,751998600,1),(349,762885000,2),(349,783448200,1),(349,794334600,2),(349,814897800,1),(349,828203400,2),(349,846347400,1),(349,859653000,2),(349,877797000,1),(349,891102600,2),(349,909246600,1),(349,922552200,2),(349,941301000,1),(349,954001800,2),(349,972750600,1),(349,985451400,2),(349,1004200200,1),(349,1017505800,2),(349,1035649800,1),(349,1048955400,2),(349,1067099400,1),(349,1080405000,2),(349,1099153800,1),(349,1111854600,2),(349,1130603400,1),(349,1143909000,2),(349,1162053000,1),(349,1174753800,2),(349,1193502600,1),(349,1207413000,2),(349,1223137800,1),(349,1238862600,2),(349,1254587400,1),(349,1270312200,2),(349,1286037000,1),(349,1301761800,2),(349,1317486600,1),(349,1333211400,2),(349,1349541000,1),(349,1365265800,2),(349,1380990600,1),(349,1396715400,2),(349,1412440200,1),(349,1428165000,2),(349,1443889800,1),(349,1459614600,2),(349,1475339400,1),(349,1491064200,2),(349,1506789000,1),(349,1522513800,2),(349,1538843400,1),(349,1554568200,2),(349,1570293000,1),(349,1586017800,2),(349,1601742600,1),(349,1617467400,2),(349,1633192200,1),(349,1648917000,2),(349,1664641800,1),(349,1680366600,2),(349,1696091400,1),(349,1712421000,2),(349,1728145800,1),(349,1743870600,2),(349,1759595400,1),(349,1775320200,2),(349,1791045000,1),(349,1806769800,2),(349,1822494600,1),(349,1838219400,2),(349,1853944200,1),(349,1869669000,2),(349,1885998600,1),(349,1901723400,2),(349,1917448200,1),(349,1933173000,2),(349,1948897800,1),(349,1964622600,2),(349,1980347400,1),(349,1996072200,2),(349,2011797000,1),(349,2027521800,2),(349,2043246600,1),(349,2058971400,2),(349,2075301000,1),(349,2091025800,2),(349,2106750600,1),(349,2122475400,2),(349,2138200200,1),(350,-2147483648,3),(350,-1672560000,1),(350,-1665388800,2),(350,-883641600,1),(350,-876124800,2),(350,-860400000,1),(350,-844675200,2),(350,-828345600,1),(350,-813225600,2),(350,57686400,1),(350,67968000,2),(350,89136000,1),(350,100022400,2),(350,120585600,1),(350,131472000,2),(350,152035200,1),(350,162921600,2),(350,183484800,1),(350,194976000,2),(350,215539200,1),(350,226425600,2),(350,246988800,1),(350,257875200,2),(350,278438400,1),(350,289324800,2),(350,309888000,1),(350,320774400,2),(350,341337600,1),(350,352224000,2),(350,372787200,1),(350,386697600,2),(350,404841600,1),(350,415728000,2),(350,436291200,1),(350,447177600,2),(350,467740800,1),(350,478627200,2),(350,499190400,1),(350,511286400,2),(350,530035200,1),(350,542736000,2),(350,562089600,1),(350,574790400,2),(350,594144000,1),(350,606240000,2),(350,625593600,1),(350,636480000,2),(350,657043200,1),(350,667929600,2),(350,688492800,1),(350,699379200,2),(350,719942400,1),(350,731433600,2),(350,751996800,1),(350,762883200,2),(350,783446400,1),(350,794332800,2),(350,814896000,1),(350,828201600,2),(350,846345600,1),(350,859651200,2),(350,877795200,1),(350,891100800,2),(350,909244800,1),(350,922550400,2),(350,941299200,1),(350,954000000,2),(350,967305600,1),(350,985449600,2),(350,1004198400,1),(350,1017504000,2),(350,1035648000,1),(350,1048953600,2),(350,1067097600,1),(350,1080403200,2),(350,1099152000,1),(350,1111852800,2),(350,1130601600,1),(350,1143907200,2),(350,1162051200,1),(350,1174752000,2),(350,1193500800,1),(350,1207411200,2),(350,1223136000,1),(350,1238860800,2),(350,1254585600,1),(350,1270310400,2),(350,1286035200,1),(350,1301760000,2),(350,1317484800,1),(350,1333209600,2),(350,1349539200,1),(350,1365264000,2),(350,1380988800,1),(350,1396713600,2),(350,1412438400,1),(350,1428163200,2),(350,1443888000,1),(350,1459612800,2),(350,1475337600,1),(350,1491062400,2),(350,1506787200,1),(350,1522512000,2),(350,1538841600,1),(350,1554566400,2),(350,1570291200,1),(350,1586016000,2),(350,1601740800,1),(350,1617465600,2),(350,1633190400,1),(350,1648915200,2),(350,1664640000,1),(350,1680364800,2),(350,1696089600,1),(350,1712419200,2),(350,1728144000,1),(350,1743868800,2),(350,1759593600,1),(350,1775318400,2),(350,1791043200,1),(350,1806768000,2),(350,1822492800,1),(350,1838217600,2),(350,1853942400,1),(350,1869667200,2),(350,1885996800,1),(350,1901721600,2),(350,1917446400,1),(350,1933171200,2),(350,1948896000,1),(350,1964620800,2),(350,1980345600,1),(350,1996070400,2),(350,2011795200,1),(350,2027520000,2),(350,2043244800,1),(350,2058969600,2),(350,2075299200,1),(350,2091024000,2),(350,2106748800,1),(350,2122473600,2),(350,2138198400,1),(351,-2147483648,3),(351,-1680508800,1),(351,-1665388800,2),(351,-1646640000,1),(351,-1635753600,2),(351,-1615190400,1),(351,-1604304000,2),(351,-883641600,1),(351,-876124800,2),(351,-860400000,1),(351,-844675200,2),(351,-828345600,1),(351,-813225600,2),(351,-71136000,1),(351,-55411200,2),(351,-37267200,1),(351,-25776000,2),(351,-5817600,1),(351,5673600,2),(351,25632000,1),(351,37728000,2),(351,57686400,1),(351,67968000,2),(351,89136000,1),(351,100022400,2),(351,120585600,1),(351,131472000,2),(351,152035200,1),(351,162921600,2),(351,183484800,1),(351,194976000,2),(351,215539200,1),(351,226425600,2),(351,246988800,1),(351,257875200,2),(351,278438400,1),(351,289324800,2),(351,309888000,1),(351,320774400,2),(351,341337600,1),(351,352224000,2),(351,372787200,1),(351,386092800,2),(351,404841600,1),(351,417542400,2),(351,436291200,1),(351,447177600,2),(351,467740800,1),(351,478627200,2),(351,499190400,1),(351,510076800,2),(351,530035200,1),(351,542736000,2),(351,562089600,1),(351,574790400,2),(351,594144000,1),(351,606240000,2),(351,625593600,1),(351,637689600,2),(351,657043200,1),(351,670348800,2),(351,686678400,1),(351,701798400,2),(351,718128000,1),(351,733248000,2),(351,749577600,1),(351,764697600,2),(351,781027200,1),(351,796147200,2),(351,812476800,1),(351,828201600,2),(351,844531200,1),(351,859651200,2),(351,875980800,1),(351,891100800,2),(351,907430400,1),(351,922550400,2),(351,938880000,1),(351,954000000,2),(351,967305600,1),(351,985449600,2),(351,1002384000,1),(351,1017504000,2),(351,1033833600,1),(351,1048953600,2),(351,1065283200,1),(351,1080403200,2),(351,1096732800,1),(351,1111852800,2),(351,1128182400,1),(351,1143907200,2),(351,1159632000,1),(351,1174752000,2),(351,1191686400,1),(351,1207411200,2),(351,1223136000,1),(351,1238860800,2),(351,1254585600,1),(351,1270310400,2),(351,1286035200,1),(351,1301760000,2),(351,1317484800,1),(351,1333209600,2),(351,1349539200,1),(351,1365264000,2),(351,1380988800,1),(351,1396713600,2),(351,1412438400,1),(351,1428163200,2),(351,1443888000,1),(351,1459612800,2),(351,1475337600,1),(351,1491062400,2),(351,1506787200,1),(351,1522512000,2),(351,1538841600,1),(351,1554566400,2),(351,1570291200,1),(351,1586016000,2),(351,1601740800,1),(351,1617465600,2),(351,1633190400,1),(351,1648915200,2),(351,1664640000,1),(351,1680364800,2),(351,1696089600,1),(351,1712419200,2),(351,1728144000,1),(351,1743868800,2),(351,1759593600,1),(351,1775318400,2),(351,1791043200,1),(351,1806768000,2),(351,1822492800,1),(351,1838217600,2),(351,1853942400,1),(351,1869667200,2),(351,1885996800,1),(351,1901721600,2),(351,1917446400,1),(351,1933171200,2),(351,1948896000,1),(351,1964620800,2),(351,1980345600,1),(351,1996070400,2),(351,2011795200,1),(351,2027520000,2),(351,2043244800,1),(351,2058969600,2),(351,2075299200,1),(351,2091024000,2),(351,2106748800,1),(351,2122473600,2),(351,2138198400,1),(352,-2147483648,3),(352,-1672558200,1),(352,-1665387000,2),(352,-883639800,1),(352,-876123000,2),(352,-860398200,1),(352,-844673400,2),(352,-828343800,1),(352,-813223800,2),(353,-2147483648,3),(353,-1672555500,1),(353,-1665384300,2),(353,-883637100,1),(353,-876120300,2),(353,-860395500,1),(353,-844670700,2),(353,152039700,1),(353,162926100,2),(353,436295700,1),(353,447182100,2),(353,690311700,1),(353,699383700,2),(353,1165079700,1),(353,1174756500,2),(353,1193505300,1),(353,1206810900,2),(353,1224954900,1),(353,1238260500,2),(353,2147483647,2),(354,-2147483648,3),(354,-1680508800,1),(354,-1665388800,2),(354,-1646640000,1),(354,-1635753600,2),(354,-1615190400,1),(354,-1604304000,2),(354,-883641600,1),(354,-876124800,2),(354,-860400000,1),(354,-844675200,2),(354,-828345600,1),(354,-813225600,2),(354,-71136000,1),(354,-55411200,2),(354,-37267200,1),(354,-25776000,2),(354,-5817600,1),(354,5673600,2),(354,25632000,1),(354,37728000,2),(354,57686400,1),(354,67968000,2),(354,89136000,1),(354,100022400,2),(354,120585600,1),(354,131472000,2),(354,152035200,1),(354,162921600,2),(354,183484800,1),(354,194976000,2),(354,215539200,1),(354,226425600,2),(354,246988800,1),(354,257875200,2),(354,278438400,1),(354,289324800,2),(354,309888000,1),(354,320774400,2),(354,341337600,1),(354,352224000,2),(354,372787200,1),(354,386092800,2),(354,404841600,1),(354,417542400,2),(354,436291200,1),(354,447177600,2),(354,467740800,1),(354,478627200,2),(354,499190400,1),(354,510076800,2),(354,530035200,1),(354,542736000,2),(354,562089600,1),(354,574790400,2),(354,594144000,1),(354,606240000,2),(354,625593600,1),(354,637689600,2),(354,657043200,1),(354,670348800,2),(354,686678400,1),(354,701798400,2),(354,718128000,1),(354,733248000,2),(354,749577600,1),(354,764697600,2),(354,781027200,1),(354,796147200,2),(354,812476800,1),(354,828201600,2),(354,844531200,1),(354,859651200,2),(354,875980800,1),(354,891100800,2),(354,907430400,1),(354,922550400,2),(354,938880000,1),(354,954000000,2),(354,967305600,1),(354,985449600,2),(354,1002384000,1),(354,1017504000,2),(354,1033833600,1),(354,1048953600,2),(354,1065283200,1),(354,1080403200,2),(354,1096732800,1),(354,1111852800,2),(354,1128182400,1),(354,1143907200,2),(354,1159632000,1),(354,1174752000,2),(354,1191686400,1),(354,1207411200,2),(354,1223136000,1),(354,1238860800,2),(354,1254585600,1),(354,1270310400,2),(354,1286035200,1),(354,1301760000,2),(354,1317484800,1),(354,1333209600,2),(354,1349539200,1),(354,1365264000,2),(354,1380988800,1),(354,1396713600,2),(354,1412438400,1),(354,1428163200,2),(354,1443888000,1),(354,1459612800,2),(354,1475337600,1),(354,1491062400,2),(354,1506787200,1),(354,1522512000,2),(354,1538841600,1),(354,1554566400,2),(354,1570291200,1),(354,1586016000,2),(354,1601740800,1),(354,1617465600,2),(354,1633190400,1),(354,1648915200,2),(354,1664640000,1),(354,1680364800,2),(354,1696089600,1),(354,1712419200,2),(354,1728144000,1),(354,1743868800,2),(354,1759593600,1),(354,1775318400,2),(354,1791043200,1),(354,1806768000,2),(354,1822492800,1),(354,1838217600,2),(354,1853942400,1),(354,1869667200,2),(354,1885996800,1),(354,1901721600,2),(354,1917446400,1),(354,1933171200,2),(354,1948896000,1),(354,1964620800,2),(354,1980345600,1),(354,1996070400,2),(354,2011795200,1),(354,2027520000,2),(354,2043244800,1),(354,2058969600,2),(354,2075299200,1),(354,2091024000,2),(354,2106748800,1),(354,2122473600,2),(354,2138198400,1),(355,-2147483648,1),(355,352216800,3),(355,372785400,2),(355,384273000,3),(355,404839800,2),(355,415722600,3),(355,436289400,2),(355,447172200,3),(355,467739000,2),(355,478621800,3),(355,499188600,4),(355,511282800,3),(355,530033400,4),(355,542732400,3),(355,562087800,4),(355,574786800,3),(355,594142200,4),(355,606236400,3),(355,625591800,4),(355,636476400,3),(355,657041400,4),(355,667926000,3),(355,688491000,4),(355,699375600,3),(355,719940600,4),(355,731430000,3),(355,751995000,4),(355,762879600,3),(355,783444600,4),(355,794329200,3),(355,814894200,4),(355,828198000,3),(355,846343800,4),(355,859647600,3),(355,877793400,4),(355,891097200,3),(355,909243000,4),(355,922546800,3),(355,941297400,4),(355,953996400,3),(355,967303800,4),(355,985446000,3),(355,1004196600,4),(355,1017500400,3),(355,1035646200,4),(355,1048950000,3),(355,1067095800,4),(355,1080399600,3),(355,1099150200,4),(355,1111849200,3),(355,1130599800,4),(355,1143903600,3),(355,1162049400,4),(355,1174748400,3),(355,1193499000,4),(355,1207407600,3),(355,1223134200,4),(355,1238857200,3),(355,1254583800,4),(355,1270306800,3),(355,1286033400,4),(355,1301756400,3),(355,1317483000,4),(355,1333206000,3),(355,1349537400,4),(355,1365260400,3),(355,1380987000,4),(355,1396710000,3),(355,1412436600,4),(355,1428159600,3),(355,1443886200,4),(355,1459609200,3),(355,1475335800,4),(355,1491058800,3),(355,1506785400,4),(355,1522508400,3),(355,1538839800,4),(355,1554562800,3),(355,1570289400,4),(355,1586012400,3),(355,1601739000,4),(355,1617462000,3),(355,1633188600,4),(355,1648911600,3),(355,1664638200,4),(355,1680361200,3),(355,1696087800,4),(355,1712415600,3),(355,1728142200,4),(355,1743865200,3),(355,1759591800,4),(355,1775314800,3),(355,1791041400,4),(355,1806764400,3),(355,1822491000,4),(355,1838214000,3),(355,1853940600,4),(355,1869663600,3),(355,1885995000,4),(355,1901718000,3),(355,1917444600,4),(355,1933167600,3),(355,1948894200,4),(355,1964617200,3),(355,1980343800,4),(355,1996066800,3),(355,2011793400,4),(355,2027516400,3),(355,2043243000,4),(355,2058966000,3),(355,2075297400,4),(355,2091020400,3),(355,2106747000,4),(355,2122470000,3),(355,2138196600,4),(355,2147483647,4),(356,-2147483648,3),(356,-1672560000,1),(356,-1665388800,2),(356,-883641600,1),(356,-876124800,2),(356,-860400000,1),(356,-844675200,2),(356,-828345600,1),(356,-813225600,2),(356,57686400,1),(356,67968000,2),(356,625593600,1),(356,636480000,2),(356,657043200,1),(356,667929600,2),(356,688492800,1),(356,699379200,2),(356,719942400,1),(356,731433600,2),(356,751996800,1),(356,762883200,2),(357,-2147483648,1),(357,352216800,3),(357,372785400,2),(357,384273000,3),(357,404839800,2),(357,415722600,3),(357,436289400,2),(357,447172200,3),(357,467739000,2),(357,478621800,3),(357,499188600,4),(357,511282800,3),(357,530033400,4),(357,542732400,3),(357,562087800,4),(357,574786800,3),(357,594142200,4),(357,606236400,3),(357,625591800,4),(357,636476400,3),(357,657041400,4),(357,667926000,3),(357,688491000,4),(357,699375600,3),(357,719940600,4),(357,731430000,3),(357,751995000,4),(357,762879600,3),(357,783444600,4),(357,794329200,3),(357,814894200,4),(357,828198000,3),(357,846343800,4),(357,859647600,3),(357,877793400,4),(357,891097200,3),(357,909243000,4),(357,922546800,3),(357,941297400,4),(357,953996400,3),(357,967303800,4),(357,985446000,3),(357,1004196600,4),(357,1017500400,3),(357,1035646200,4),(357,1048950000,3),(357,1067095800,4),(357,1080399600,3),(357,1099150200,4),(357,1111849200,3),(357,1130599800,4),(357,1143903600,3),(357,1162049400,4),(357,1174748400,3),(357,1193499000,4),(357,1207407600,3),(357,1223134200,4),(357,1238857200,3),(357,1254583800,4),(357,1270306800,3),(357,1286033400,4),(357,1301756400,3),(357,1317483000,4),(357,1333206000,3),(357,1349537400,4),(357,1365260400,3),(357,1380987000,4),(357,1396710000,3),(357,1412436600,4),(357,1428159600,3),(357,1443886200,4),(357,1459609200,3),(357,1475335800,4),(357,1491058800,3),(357,1506785400,4),(357,1522508400,3),(357,1538839800,4),(357,1554562800,3),(357,1570289400,4),(357,1586012400,3),(357,1601739000,4),(357,1617462000,3),(357,1633188600,4),(357,1648911600,3),(357,1664638200,4),(357,1680361200,3),(357,1696087800,4),(357,1712415600,3),(357,1728142200,4),(357,1743865200,3),(357,1759591800,4),(357,1775314800,3),(357,1791041400,4),(357,1806764400,3),(357,1822491000,4),(357,1838214000,3),(357,1853940600,4),(357,1869663600,3),(357,1885995000,4),(357,1901718000,3),(357,1917444600,4),(357,1933167600,3),(357,1948894200,4),(357,1964617200,3),(357,1980343800,4),(357,1996066800,3),(357,2011793400,4),(357,2027516400,3),(357,2043243000,4),(357,2058966000,3),(357,2075297400,4),(357,2091020400,3),(357,2106747000,4),(357,2122470000,3),(357,2138196600,4),(357,2147483647,4),(358,-2147483648,3),(358,-1672560000,1),(358,-1665388800,2),(358,-883641600,1),(358,-876124800,2),(358,-860400000,1),(358,-844675200,2),(358,-828345600,1),(358,-813225600,2),(358,57686400,1),(358,67968000,2),(358,89136000,1),(358,100022400,2),(358,120585600,1),(358,131472000,2),(358,152035200,1),(358,162921600,2),(358,183484800,1),(358,194976000,2),(358,215539200,1),(358,226425600,2),(358,246988800,1),(358,257875200,2),(358,278438400,1),(358,289324800,2),(358,309888000,1),(358,320774400,2),(358,341337600,1),(358,352224000,2),(358,372787200,1),(358,384278400,2),(358,404841600,1),(358,415728000,2),(358,436291200,1),(358,447177600,2),(358,467740800,1),(358,478627200,2),(358,499190400,1),(358,511286400,2),(358,530035200,1),(358,542736000,2),(358,561484800,1),(358,574790400,2),(358,594144000,1),(358,606240000,2),(358,625593600,1),(358,637689600,2),(358,657043200,1),(358,667929600,2),(358,688492800,1),(358,699379200,2),(358,719942400,1),(358,731433600,2),(358,751996800,1),(358,762883200,2),(358,783446400,1),(358,796147200,2),(358,814896000,1),(358,828201600,2),(358,846345600,1),(358,859651200,2),(358,877795200,1),(358,891100800,2),(358,909244800,1),(358,922550400,2),(358,941299200,1),(358,954000000,2),(358,967305600,1),(358,985449600,2),(358,1004198400,1),(358,1017504000,2),(358,1035648000,1),(358,1048953600,2),(358,1067097600,1),(358,1080403200,2),(358,1099152000,1),(358,1111852800,2),(358,1130601600,1),(358,1143907200,2),(358,1162051200,1),(358,1174752000,2),(358,1193500800,1),(358,1207411200,2),(358,1223136000,1),(358,1238860800,2),(358,1254585600,1),(358,1270310400,2),(358,1286035200,1),(358,1301760000,2),(358,1317484800,1),(358,1333209600,2),(358,1349539200,1),(358,1365264000,2),(358,1380988800,1),(358,1396713600,2),(358,1412438400,1),(358,1428163200,2),(358,1443888000,1),(358,1459612800,2),(358,1475337600,1),(358,1491062400,2),(358,1506787200,1),(358,1522512000,2),(358,1538841600,1),(358,1554566400,2),(358,1570291200,1),(358,1586016000,2),(358,1601740800,1),(358,1617465600,2),(358,1633190400,1),(358,1648915200,2),(358,1664640000,1),(358,1680364800,2),(358,1696089600,1),(358,1712419200,2),(358,1728144000,1),(358,1743868800,2),(358,1759593600,1),(358,1775318400,2),(358,1791043200,1),(358,1806768000,2),(358,1822492800,1),(358,1838217600,2),(358,1853942400,1),(358,1869667200,2),(358,1885996800,1),(358,1901721600,2),(358,1917446400,1),(358,1933171200,2),(358,1948896000,1),(358,1964620800,2),(358,1980345600,1),(358,1996070400,2),(358,2011795200,1),(358,2027520000,2),(358,2043244800,1),(358,2058969600,2),(358,2075299200,1),(358,2091024000,2),(358,2106748800,1),(358,2122473600,2),(358,2138198400,1),(359,-2147483648,3),(359,-1672560000,1),(359,-1665388800,2),(359,-883641600,1),(359,-876124800,2),(359,-860400000,1),(359,-844675200,2),(359,-828345600,1),(359,-813225600,2),(359,57686400,1),(359,67968000,2),(359,89136000,1),(359,100022400,2),(359,120585600,1),(359,131472000,2),(359,152035200,1),(359,162921600,2),(359,183484800,1),(359,194976000,2),(359,215539200,1),(359,226425600,2),(359,246988800,1),(359,257875200,2),(359,278438400,1),(359,289324800,2),(359,309888000,1),(359,320774400,2),(359,341337600,1),(359,352224000,2),(359,372787200,1),(359,386697600,2),(359,404841600,1),(359,415728000,2),(359,436291200,1),(359,447177600,2),(359,467740800,1),(359,478627200,2),(359,499190400,1),(359,511286400,2),(359,530035200,1),(359,542736000,2),(359,562089600,1),(359,574790400,2),(359,594144000,1),(359,606240000,2),(359,625593600,1),(359,636480000,2),(359,657043200,1),(359,667929600,2),(359,688492800,1),(359,699379200,2),(359,719942400,1),(359,731433600,2),(359,751996800,1),(359,762883200,2),(359,783446400,1),(359,794332800,2),(359,814896000,1),(359,828201600,2),(359,846345600,1),(359,859651200,2),(359,877795200,1),(359,891100800,2),(359,909244800,1),(359,922550400,2),(359,941299200,1),(359,954000000,2),(359,967305600,1),(359,985449600,2),(359,1004198400,1),(359,1017504000,2),(359,1035648000,1),(359,1048953600,2),(359,1067097600,1),(359,1080403200,2),(359,1099152000,1),(359,1111852800,2),(359,1130601600,1),(359,1143907200,2),(359,1162051200,1),(359,1174752000,2),(359,1193500800,1),(359,1207411200,2),(359,1223136000,1),(359,1238860800,2),(359,1254585600,1),(359,1270310400,2),(359,1286035200,1),(359,1301760000,2),(359,1317484800,1),(359,1333209600,2),(359,1349539200,1),(359,1365264000,2),(359,1380988800,1),(359,1396713600,2),(359,1412438400,1),(359,1428163200,2),(359,1443888000,1),(359,1459612800,2),(359,1475337600,1),(359,1491062400,2),(359,1506787200,1),(359,1522512000,2),(359,1538841600,1),(359,1554566400,2),(359,1570291200,1),(359,1586016000,2),(359,1601740800,1),(359,1617465600,2),(359,1633190400,1),(359,1648915200,2),(359,1664640000,1),(359,1680364800,2),(359,1696089600,1),(359,1712419200,2),(359,1728144000,1),(359,1743868800,2),(359,1759593600,1),(359,1775318400,2),(359,1791043200,1),(359,1806768000,2),(359,1822492800,1),(359,1838217600,2),(359,1853942400,1),(359,1869667200,2),(359,1885996800,1),(359,1901721600,2),(359,1917446400,1),(359,1933171200,2),(359,1948896000,1),(359,1964620800,2),(359,1980345600,1),(359,1996070400,2),(359,2011795200,1),(359,2027520000,2),(359,2043244800,1),(359,2058969600,2),(359,2075299200,1),(359,2091024000,2),(359,2106748800,1),(359,2122473600,2),(359,2138198400,1),(360,-2147483648,3),(360,-1672558200,1),(360,-1665387000,2),(360,-883639800,1),(360,-876123000,2),(360,-860398200,1),(360,-844673400,2),(360,-828343800,1),(360,-813223800,2),(361,-2147483648,3),(361,-1672552800,1),(361,-1665381600,2),(361,-883634400,1),(361,-876117600,2),(361,-860392800,1),(361,-844668000,2),(361,152042400,1),(361,162928800,2),(361,436298400,1),(361,447184800,2),(361,690314400,1),(361,699386400,2),(361,1165082400,1),(361,1174759200,2),(361,1193508000,1),(361,1206813600,2),(361,1224957600,1),(361,1238263200,2),(362,-2147483648,3),(362,-1672560000,1),(362,-1665388800,2),(362,-883641600,1),(362,-876124800,2),(362,-860400000,1),(362,-844675200,2),(362,-828345600,1),(362,-813225600,2),(362,57686400,1),(362,67968000,2),(362,625593600,1),(362,636480000,2),(362,657043200,1),(362,667929600,2),(362,688492800,1),(362,699379200,2),(363,-2147483648,3),(363,-1672558200,1),(363,-1665387000,2),(363,-883639800,1),(363,-876123000,2),(363,-860398200,1),(363,-844673400,2),(363,-828343800,1),(363,-813223800,2),(363,57688200,1),(363,67969800,2),(363,89137800,1),(363,100024200,2),(363,120587400,1),(363,131473800,2),(363,152037000,1),(363,162923400,2),(363,183486600,1),(363,194977800,2),(363,215541000,1),(363,226427400,2),(363,246990600,1),(363,257877000,2),(363,278440200,1),(363,289326600,2),(363,309889800,1),(363,320776200,2),(363,341339400,1),(363,352225800,2),(363,372789000,1),(363,384280200,2),(363,404843400,1),(363,415729800,2),(363,436293000,1),(363,447179400,2),(363,467742600,1),(363,478629000,2),(363,499192200,1),(363,511288200,2),(363,530037000,1),(363,542737800,2),(363,562091400,1),(363,574792200,2),(363,594145800,1),(363,606241800,2),(363,625595400,1),(363,637691400,2),(363,657045000,1),(363,667931400,2),(363,688494600,1),(363,701195400,2),(363,719944200,1),(363,731435400,2),(363,751998600,1),(363,764094600,2),(363,783448200,1),(363,796149000,2),(363,814897800,1),(363,828203400,2),(363,846347400,1),(363,859653000,2),(363,877797000,1),(363,891102600,2),(363,909246600,1),(363,922552200,2),(363,941301000,1),(363,954001800,2),(363,972750600,1),(363,985451400,2),(363,1004200200,1),(363,1017505800,2),(363,1035649800,1),(363,1048955400,2),(363,1067099400,1),(363,1080405000,2),(363,1099153800,1),(363,1111854600,2),(363,1130603400,1),(363,1143909000,2),(363,1162053000,1),(363,1174753800,2),(363,1193502600,1),(363,1207413000,2),(363,1223137800,1),(363,1238862600,2),(363,1254587400,1),(363,1270312200,2),(363,1286037000,1),(363,1301761800,2),(363,1317486600,1),(363,1333211400,2),(363,1349541000,1),(363,1365265800,2),(363,1380990600,1),(363,1396715400,2),(363,1412440200,1),(363,1428165000,2),(363,1443889800,1),(363,1459614600,2),(363,1475339400,1),(363,1491064200,2),(363,1506789000,1),(363,1522513800,2),(363,1538843400,1),(363,1554568200,2),(363,1570293000,1),(363,1586017800,2),(363,1601742600,1),(363,1617467400,2),(363,1633192200,1),(363,1648917000,2),(363,1664641800,1),(363,1680366600,2),(363,1696091400,1),(363,1712421000,2),(363,1728145800,1),(363,1743870600,2),(363,1759595400,1),(363,1775320200,2),(363,1791045000,1),(363,1806769800,2),(363,1822494600,1),(363,1838219400,2),(363,1853944200,1),(363,1869669000,2),(363,1885998600,1),(363,1901723400,2),(363,1917448200,1),(363,1933173000,2),(363,1948897800,1),(363,1964622600,2),(363,1980347400,1),(363,1996072200,2),(363,2011797000,1),(363,2027521800,2),(363,2043246600,1),(363,2058971400,2),(363,2075301000,1),(363,2091025800,2),(363,2106750600,1),(363,2122475400,2),(363,2138200200,1),(364,-2147483648,3),(364,-1672560000,1),(364,-1665388800,2),(364,-883641600,1),(364,-876124800,2),(364,-860400000,1),(364,-844675200,2),(364,-828345600,1),(364,-813225600,2),(364,57686400,1),(364,67968000,2),(364,89136000,1),(364,100022400,2),(364,120585600,1),(364,131472000,2),(364,152035200,1),(364,162921600,2),(364,183484800,1),(364,194976000,2),(364,215539200,1),(364,226425600,2),(364,246988800,1),(364,257875200,2),(364,278438400,1),(364,289324800,2),(364,309888000,1),(364,320774400,2),(364,341337600,1),(364,352224000,2),(364,372787200,1),(364,386697600,2),(364,404841600,1),(364,415728000,2),(364,436291200,1),(364,447177600,2),(364,467740800,1),(364,478627200,2),(364,499190400,1),(364,511286400,2),(364,530035200,1),(364,542736000,2),(364,562089600,1),(364,574790400,2),(364,594144000,1),(364,606240000,2),(364,625593600,1),(364,636480000,2),(364,657043200,1),(364,667929600,2),(364,688492800,1),(364,699379200,2),(364,719942400,1),(364,731433600,2),(364,751996800,1),(364,762883200,2),(364,783446400,1),(364,794332800,2),(364,814896000,1),(364,828201600,2),(364,846345600,1),(364,859651200,2),(364,877795200,1),(364,891100800,2),(364,909244800,1),(364,922550400,2),(364,941299200,1),(364,954000000,2),(364,967305600,1),(364,985449600,2),(364,1004198400,1),(364,1017504000,2),(364,1035648000,1),(364,1048953600,2),(364,1067097600,1),(364,1080403200,2),(364,1099152000,1),(364,1111852800,2),(364,1130601600,1),(364,1143907200,2),(364,1162051200,1),(364,1174752000,2),(364,1193500800,1),(364,1207411200,2),(364,1223136000,1),(364,1238860800,2),(364,1254585600,1),(364,1270310400,2),(364,1286035200,1),(364,1301760000,2),(364,1317484800,1),(364,1333209600,2),(364,1349539200,1),(364,1365264000,2),(364,1380988800,1),(364,1396713600,2),(364,1412438400,1),(364,1428163200,2),(364,1443888000,1),(364,1459612800,2),(364,1475337600,1),(364,1491062400,2),(364,1506787200,1),(364,1522512000,2),(364,1538841600,1),(364,1554566400,2),(364,1570291200,1),(364,1586016000,2),(364,1601740800,1),(364,1617465600,2),(364,1633190400,1),(364,1648915200,2),(364,1664640000,1),(364,1680364800,2),(364,1696089600,1),(364,1712419200,2),(364,1728144000,1),(364,1743868800,2),(364,1759593600,1),(364,1775318400,2),(364,1791043200,1),(364,1806768000,2),(364,1822492800,1),(364,1838217600,2),(364,1853942400,1),(364,1869667200,2),(364,1885996800,1),(364,1901721600,2),(364,1917446400,1),(364,1933171200,2),(364,1948896000,1),(364,1964620800,2),(364,1980345600,1),(364,1996070400,2),(364,2011795200,1),(364,2027520000,2),(364,2043244800,1),(364,2058969600,2),(364,2075299200,1),(364,2091024000,2),(364,2106748800,1),(364,2122473600,2),(364,2138198400,1),(365,-2147483648,3),(365,-1680508800,1),(365,-1665388800,2),(365,-1646640000,1),(365,-1635753600,2),(365,-1615190400,1),(365,-1604304000,2),(365,-883641600,1),(365,-876124800,2),(365,-860400000,1),(365,-844675200,2),(365,-828345600,1),(365,-813225600,2),(365,-71136000,1),(365,-55411200,2),(365,-37267200,1),(365,-25776000,2),(365,-5817600,1),(365,5673600,2),(365,25632000,1),(365,37728000,2),(365,57686400,1),(365,67968000,2),(365,89136000,1),(365,100022400,2),(365,120585600,1),(365,131472000,2),(365,152035200,1),(365,162921600,2),(365,183484800,1),(365,194976000,2),(365,215539200,1),(365,226425600,2),(365,246988800,1),(365,257875200,2),(365,278438400,1),(365,289324800,2),(365,309888000,1),(365,320774400,2),(365,341337600,1),(365,352224000,2),(365,372787200,1),(365,386092800,2),(365,404841600,1),(365,417542400,2),(365,436291200,1),(365,447177600,2),(365,467740800,1),(365,478627200,2),(365,499190400,1),(365,510076800,2),(365,530035200,1),(365,542736000,2),(365,562089600,1),(365,574790400,2),(365,594144000,1),(365,606240000,2),(365,625593600,1),(365,637689600,2),(365,657043200,1),(365,670348800,2),(365,686678400,1),(365,701798400,2),(365,718128000,1),(365,733248000,2),(365,749577600,1),(365,764697600,2),(365,781027200,1),(365,796147200,2),(365,812476800,1),(365,828201600,2),(365,844531200,1),(365,859651200,2),(365,875980800,1),(365,891100800,2),(365,907430400,1),(365,922550400,2),(365,938880000,1),(365,954000000,2),(365,967305600,1),(365,985449600,2),(365,1002384000,1),(365,1017504000,2),(365,1033833600,1),(365,1048953600,2),(365,1065283200,1),(365,1080403200,2),(365,1096732800,1),(365,1111852800,2),(365,1128182400,1),(365,1143907200,2),(365,1159632000,1),(365,1174752000,2),(365,1191686400,1),(365,1207411200,2),(365,1223136000,1),(365,1238860800,2),(365,1254585600,1),(365,1270310400,2),(365,1286035200,1),(365,1301760000,2),(365,1317484800,1),(365,1333209600,2),(365,1349539200,1),(365,1365264000,2),(365,1380988800,1),(365,1396713600,2),(365,1412438400,1),(365,1428163200,2),(365,1443888000,1),(365,1459612800,2),(365,1475337600,1),(365,1491062400,2),(365,1506787200,1),(365,1522512000,2),(365,1538841600,1),(365,1554566400,2),(365,1570291200,1),(365,1586016000,2),(365,1601740800,1),(365,1617465600,2),(365,1633190400,1),(365,1648915200,2),(365,1664640000,1),(365,1680364800,2),(365,1696089600,1),(365,1712419200,2),(365,1728144000,1),(365,1743868800,2),(365,1759593600,1),(365,1775318400,2),(365,1791043200,1),(365,1806768000,2),(365,1822492800,1),(365,1838217600,2),(365,1853942400,1),(365,1869667200,2),(365,1885996800,1),(365,1901721600,2),(365,1917446400,1),(365,1933171200,2),(365,1948896000,1),(365,1964620800,2),(365,1980345600,1),(365,1996070400,2),(365,2011795200,1),(365,2027520000,2),(365,2043244800,1),(365,2058969600,2),(365,2075299200,1),(365,2091024000,2),(365,2106748800,1),(365,2122473600,2),(365,2138198400,1),(366,-2147483648,3),(366,-1672560000,1),(366,-1665388800,2),(366,-883641600,1),(366,-876124800,2),(366,-860400000,1),(366,-844675200,2),(366,-828345600,1),(366,-813225600,2),(366,57686400,1),(366,67968000,2),(366,89136000,1),(366,100022400,2),(366,120585600,1),(366,131472000,2),(366,152035200,1),(366,162921600,2),(366,183484800,1),(366,194976000,2),(366,215539200,1),(366,226425600,2),(366,246988800,1),(366,257875200,2),(366,278438400,1),(366,289324800,2),(366,309888000,1),(366,320774400,2),(366,341337600,1),(366,352224000,2),(366,372787200,1),(366,384278400,2),(366,404841600,1),(366,415728000,2),(366,436291200,1),(366,447177600,2),(366,467740800,1),(366,478627200,2),(366,499190400,1),(366,511286400,2),(366,530035200,1),(366,542736000,2),(366,561484800,1),(366,574790400,2),(366,594144000,1),(366,606240000,2),(366,625593600,1),(366,637689600,2),(366,657043200,1),(366,667929600,2),(366,688492800,1),(366,699379200,2),(366,719942400,1),(366,731433600,2),(366,751996800,1),(366,762883200,2),(366,783446400,1),(366,796147200,2),(366,814896000,1),(366,828201600,2),(366,846345600,1),(366,859651200,2),(366,877795200,1),(366,891100800,2),(366,909244800,1),(366,922550400,2),(366,941299200,1),(366,954000000,2),(366,967305600,1),(366,985449600,2),(366,1004198400,1),(366,1017504000,2),(366,1035648000,1),(366,1048953600,2),(366,1067097600,1),(366,1080403200,2),(366,1099152000,1),(366,1111852800,2),(366,1130601600,1),(366,1143907200,2),(366,1162051200,1),(366,1174752000,2),(366,1193500800,1),(366,1207411200,2),(366,1223136000,1),(366,1238860800,2),(366,1254585600,1),(366,1270310400,2),(366,1286035200,1),(366,1301760000,2),(366,1317484800,1),(366,1333209600,2),(366,1349539200,1),(366,1365264000,2),(366,1380988800,1),(366,1396713600,2),(366,1412438400,1),(366,1428163200,2),(366,1443888000,1),(366,1459612800,2),(366,1475337600,1),(366,1491062400,2),(366,1506787200,1),(366,1522512000,2),(366,1538841600,1),(366,1554566400,2),(366,1570291200,1),(366,1586016000,2),(366,1601740800,1),(366,1617465600,2),(366,1633190400,1),(366,1648915200,2),(366,1664640000,1),(366,1680364800,2),(366,1696089600,1),(366,1712419200,2),(366,1728144000,1),(366,1743868800,2),(366,1759593600,1),(366,1775318400,2),(366,1791043200,1),(366,1806768000,2),(366,1822492800,1),(366,1838217600,2),(366,1853942400,1),(366,1869667200,2),(366,1885996800,1),(366,1901721600,2),(366,1917446400,1),(366,1933171200,2),(366,1948896000,1),(366,1964620800,2),(366,1980345600,1),(366,1996070400,2),(366,2011795200,1),(366,2027520000,2),(366,2043244800,1),(366,2058969600,2),(366,2075299200,1),(366,2091024000,2),(366,2106748800,1),(366,2122473600,2),(366,2138198400,1),(367,-2147483648,3),(367,-1672552800,1),(367,-1665381600,2),(367,-883634400,1),(367,-876117600,2),(367,-860392800,1),(367,-844668000,2),(367,152042400,1),(367,162928800,2),(367,436298400,1),(367,447184800,2),(367,690314400,1),(367,699386400,2),(367,1165082400,1),(367,1174759200,2),(367,1193508000,1),(367,1206813600,2),(367,1224957600,1),(367,1238263200,2),(368,-2147483648,3),(368,-1672558200,1),(368,-1665387000,2),(368,-883639800,1),(368,-876123000,2),(368,-860398200,1),(368,-844673400,2),(368,-828343800,1),(368,-813223800,2),(368,57688200,1),(368,67969800,2),(368,89137800,1),(368,100024200,2),(368,120587400,1),(368,131473800,2),(368,152037000,1),(368,162923400,2),(368,183486600,1),(368,194977800,2),(368,215541000,1),(368,226427400,2),(368,246990600,1),(368,257877000,2),(368,278440200,1),(368,289326600,2),(368,309889800,1),(368,320776200,2),(368,341339400,1),(368,352225800,2),(368,372789000,1),(368,386699400,2),(368,404843400,1),(368,415729800,2),(368,436293000,1),(368,447179400,2),(368,467742600,1),(368,478629000,2),(368,499192200,1),(368,511288200,2),(368,530037000,1),(368,542737800,2),(368,562091400,1),(368,574792200,2),(368,594145800,1),(368,606241800,2),(368,625595400,1),(368,636481800,2),(368,657045000,1),(368,667931400,2),(368,688494600,1),(368,699381000,2),(368,719944200,1),(368,731435400,2),(368,751998600,1),(368,762885000,2),(368,783448200,1),(368,794334600,2),(368,814897800,1),(368,828203400,2),(368,846347400,1),(368,859653000,2),(368,877797000,1),(368,891102600,2),(368,909246600,1),(368,922552200,2),(368,941301000,1),(368,954001800,2),(368,972750600,1),(368,985451400,2),(368,1004200200,1),(368,1017505800,2),(368,1035649800,1),(368,1048955400,2),(368,1067099400,1),(368,1080405000,2),(368,1099153800,1),(368,1111854600,2),(368,1130603400,1),(368,1143909000,2),(368,1162053000,1),(368,1174753800,2),(368,1193502600,1),(368,1207413000,2),(368,1223137800,1),(368,1238862600,2),(368,1254587400,1),(368,1270312200,2),(368,1286037000,1),(368,1301761800,2),(368,1317486600,1),(368,1333211400,2),(368,1349541000,1),(368,1365265800,2),(368,1380990600,1),(368,1396715400,2),(368,1412440200,1),(368,1428165000,2),(368,1443889800,1),(368,1459614600,2),(368,1475339400,1),(368,1491064200,2),(368,1506789000,1),(368,1522513800,2),(368,1538843400,1),(368,1554568200,2),(368,1570293000,1),(368,1586017800,2),(368,1601742600,1),(368,1617467400,2),(368,1633192200,1),(368,1648917000,2),(368,1664641800,1),(368,1680366600,2),(368,1696091400,1),(368,1712421000,2),(368,1728145800,1),(368,1743870600,2),(368,1759595400,1),(368,1775320200,2),(368,1791045000,1),(368,1806769800,2),(368,1822494600,1),(368,1838219400,2),(368,1853944200,1),(368,1869669000,2),(368,1885998600,1),(368,1901723400,2),(368,1917448200,1),(368,1933173000,2),(368,1948897800,1),(368,1964622600,2),(368,1980347400,1),(368,1996072200,2),(368,2011797000,1),(368,2027521800,2),(368,2043246600,1),(368,2058971400,2),(368,2075301000,1),(368,2091025800,2),(368,2106750600,1),(368,2122475400,2),(368,2138200200,1),(369,-1767209328,2),(369,-1206950400,1),(369,-1191355200,2),(369,-1175367600,1),(369,-1159819200,2),(369,-633812400,1),(369,-622062000,2),(369,-602276400,1),(369,-591825600,2),(369,-570740400,1),(369,-560203200,2),(369,-539118000,1),(369,-531345600,2),(369,-191358000,1),(369,-184190400,2),(369,-155156400,1),(369,-150062400,2),(369,-128890800,1),(369,-121118400,2),(369,-99946800,1),(369,-89582400,2),(369,-68410800,1),(369,-57960000,2),(369,499755600,1),(369,511243200,2),(369,530600400,1),(369,540273600,2),(369,562136400,1),(369,571204800,2),(369,1214283600,3),(369,1384056000,2),(369,2147483647,2),(370,-1767217820,2),(370,-1206961200,1),(370,-1191366000,2),(370,-1175378400,1),(370,-1159830000,2),(370,-633823200,1),(370,-622072800,2),(370,-602287200,1),(370,-591836400,2),(370,-570751200,1),(370,-560214000,2),(370,-539128800,1),(370,-531356400,2),(370,-191368800,1),(370,-184201200,2),(370,-155167200,1),(370,-150073200,2),(370,-128901600,1),(370,-121129200,2),(370,-99957600,1),(370,-89593200,2),(370,-68421600,1),(370,-57970800,2),(370,499744800,1),(370,511232400,2),(370,530589600,1),(370,540262800,2),(370,562125600,1),(370,571194000,2),(370,592970400,1),(370,602038800,2),(370,624420000,1),(370,634698000,2),(370,938916000,1),(370,951613200,2),(370,970970400,1),(370,971571600,2),(370,1003024800,1),(370,1013907600,2),(370,2147483647,2),(371,-1767214412,2),(371,-1206957600,1),(371,-1191362400,2),(371,-1175374800,1),(371,-1159826400,2),(371,-633819600,1),(371,-622069200,2),(371,-602283600,1),(371,-591832800,2),(371,-570747600,1),(371,-560210400,2),(371,-539125200,1),(371,-531352800,2),(371,-195426000,1),(371,-184197600,2),(371,-155163600,1),(371,-150069600,2),(371,-128898000,1),(371,-121125600,2),(371,-99954000,1),(371,-89589600,2),(371,-68418000,1),(371,-57967200,2),(371,499748400,1),(371,511236000,2),(371,530593200,1),(371,540266400,2),(371,562129200,1),(371,571197600,2),(371,592974000,1),(371,602042400,2),(371,624423600,1),(371,634701600,2),(371,656478000,1),(371,666756000,2),(371,687927600,1),(371,697600800,2),(371,719982000,1),(371,728445600,2),(371,750826800,1),(371,761709600,2),(371,782276400,1),(371,793159200,2),(371,813726000,1),(371,824004000,2),(371,844570800,1),(371,856058400,2),(371,876106800,1),(371,888717600,2),(371,908074800,1),(371,919562400,2),(371,938919600,1),(371,951616800,2),(371,970974000,1),(371,982461600,2),(371,1003028400,1),(371,1013911200,2),(371,1036292400,1),(371,1045360800,2),(371,1066532400,1),(371,1076810400,2),(371,1099364400,1),(371,1108864800,2),(371,1129431600,1),(371,1140314400,2),(371,1162695600,1),(371,1172368800,2),(371,1192330800,1),(371,1203213600,2),(371,1224385200,1),(371,1234663200,2),(371,1255834800,1),(371,1266717600,2),(371,1287284400,1),(371,1298167200,2),(371,1318734000,1),(371,1330221600,2),(371,1350788400,1),(371,1361066400,2),(371,1382238000,1),(371,1392516000,2),(371,1413687600,1),(371,1424570400,2),(371,1445137200,1),(371,1456020000,2),(371,1476586800,1),(371,1487469600,2),(371,1508036400,1),(371,1518919200,2),(371,1541300400,1),(371,1550368800,2),(371,2147483647,2),(372,-1767211196,2),(372,-1206954000,1),(372,-1191358800,2),(372,-1175371200,1),(372,-1159822800,2),(372,-633816000,1),(372,-622065600,2),(372,-602280000,1),(372,-591829200,2),(372,-570744000,1),(372,-560206800,2),(372,-539121600,1),(372,-531349200,2),(372,-191361600,1),(372,-184194000,2),(372,-155160000,1),(372,-150066000,2),(372,-128894400,1),(372,-121122000,2),(372,-99950400,1),(372,-89586000,2),(372,-68414400,1),(372,-57963600,2),(372,499752000,1),(372,511239600,2),(372,530596800,1),(372,540270000,2),(372,562132800,1),(372,571201200,2),(372,750830400,1),(372,761713200,2),(372,2147483647,2),(373,-1693706400,1),(373,-1680483600,0),(373,-1663455600,2),(373,-1650150000,3),(373,-1632006000,2),(373,-1618700400,3),(373,-938905200,2),(373,-857257200,3),(373,-844556400,2),(373,-828226800,3),(373,-812502000,2),(373,-796777200,3),(373,-781052400,2),(373,-766623600,3),(373,228877200,2),(373,243997200,3),(373,260326800,2),(373,276051600,3),(373,291776400,2),(373,307501200,3),(373,323830800,2),(373,338950800,3),(373,354675600,2),(373,370400400,3),(373,386125200,2),(373,401850000,3),(373,417574800,2),(373,433299600,3),(373,449024400,2),(373,465354000,3),(373,481078800,2),(373,496803600,3),(373,512528400,2),(373,528253200,3),(373,543978000,2),(373,559702800,3),(373,575427600,2),(373,591152400,3),(373,606877200,2),(373,622602000,3),(373,638326800,2),(373,654656400,3),(373,670381200,2),(373,686106000,3),(373,701830800,2),(373,717555600,3),(373,733280400,2),(373,749005200,3),(373,764730000,2),(373,780454800,3),(373,796179600,2),(373,811904400,3),(373,828234000,2),(373,846378000,3),(373,859683600,2),(373,877827600,3),(373,891133200,2),(373,909277200,3),(373,922582800,2),(373,941331600,3),(373,954032400,2),(373,972781200,3),(373,985482000,2),(373,1004230800,3),(373,1017536400,2),(373,1035680400,3),(373,1048986000,2),(373,1067130000,3),(373,1080435600,2),(373,1099184400,3),(373,1111885200,2),(373,1130634000,3),(373,1143334800,2),(373,1162083600,3),(373,1174784400,2),(373,1193533200,3),(373,1206838800,2),(373,1224982800,3),(373,1238288400,2),(373,1256432400,3),(373,1269738000,2),(373,1288486800,3),(373,1301187600,2),(373,1319936400,3),(373,1332637200,2),(373,1351386000,3),(373,1364691600,2),(373,1382835600,3),(373,1396141200,2),(373,1414285200,3),(373,1427590800,2),(373,1445734800,3),(373,1459040400,2),(373,1477789200,3),(373,1490490000,2),(373,1509238800,3),(373,1521939600,2),(373,1540688400,3),(373,1553994000,2),(373,1572138000,3),(373,1585443600,2),(373,1603587600,3),(373,1616893200,2),(373,1635642000,3),(373,1648342800,2),(373,1667091600,3),(373,1679792400,2),(373,1698541200,3),(373,1711846800,2),(373,1729990800,3),(373,1743296400,2),(373,1761440400,3),(373,1774746000,2),(373,1792890000,3),(373,1806195600,2),(373,1824944400,3),(373,1837645200,2),(373,1856394000,3),(373,1869094800,2),(373,1887843600,3),(373,1901149200,2),(373,1919293200,3),(373,1932598800,2),(373,1950742800,3),(373,1964048400,2),(373,1982797200,3),(373,1995498000,2),(373,2014246800,3),(373,2026947600,2),(373,2045696400,3),(373,2058397200,2),(373,2077146000,3),(373,2090451600,2),(373,2108595600,3),(373,2121901200,2),(373,2140045200,3),(374,-1633276800,1),(374,-1615136400,0),(374,-1601827200,1),(374,-1583686800,0),(374,-880214400,2),(374,-769395600,3),(374,-765392400,0),(374,-84384000,1),(374,-68662800,0),(374,-52934400,1),(374,-37213200,0),(374,-21484800,1),(374,-5763600,0),(374,9964800,1),(374,25686000,0),(374,41414400,1),(374,57740400,0),(374,73468800,1),(374,89190000,0),(374,104918400,1),(374,120639600,0),(374,126691200,1),(374,152089200,0),(374,162374400,1),(374,183538800,0),(374,199267200,1),(374,215593200,0),(374,230716800,1),(374,247042800,0),(374,262771200,1),(374,278492400,0),(374,294220800,1),(374,309942000,0),(374,325670400,1),(374,341391600,0),(374,357120000,1),(374,372841200,0),(374,388569600,1),(374,404895600,0),(374,420019200,1),(374,436345200,0),(374,452073600,1),(374,467794800,0),(374,483523200,1),(374,499244400,0),(374,514972800,1),(374,530694000,0),(374,544608000,1),(374,562143600,0),(374,576057600,1),(374,594198000,0),(374,607507200,1),(374,625647600,0),(374,638956800,1),(374,657097200,0),(374,671011200,1),(374,688546800,0),(374,702460800,1),(374,719996400,0),(374,733910400,1),(374,752050800,0),(374,765360000,1),(374,783500400,0),(374,796809600,1),(374,814950000,0),(374,828864000,1),(374,846399600,0),(374,860313600,1),(374,877849200,0),(374,891763200,1),(374,909298800,0),(374,923212800,1),(374,941353200,0),(374,954662400,1),(374,972802800,0),(374,986112000,1),(374,1004252400,0),(374,1018166400,1),(374,1035702000,0),(374,1049616000,1),(374,1067151600,0),(374,1081065600,1),(374,1099206000,0),(374,1112515200,1),(374,1130655600,0),(374,1143964800,1),(374,1162105200,0),(374,1173600000,1),(374,1194159600,0),(374,1205049600,1),(374,1225609200,0),(374,1236499200,1),(374,1257058800,0),(374,1268553600,1),(374,1289113200,0),(374,1300003200,1),(374,1320562800,0),(374,1331452800,1),(374,1352012400,0),(374,1362902400,1),(374,1383462000,0),(374,1394352000,1),(374,1414911600,0),(374,1425801600,1),(374,1446361200,0),(374,1457856000,1),(374,1478415600,0),(374,1489305600,1),(374,1509865200,0),(374,1520755200,1),(374,1541314800,0),(374,1552204800,1),(374,1572764400,0),(374,1583654400,1),(374,1604214000,0),(374,1615708800,1),(374,1636268400,0),(374,1647158400,1),(374,1667718000,0),(374,1678608000,1),(374,1699167600,0),(374,1710057600,1),(374,1730617200,0),(374,1741507200,1),(374,1762066800,0),(374,1772956800,1),(374,1793516400,0),(374,1805011200,1),(374,1825570800,0),(374,1836460800,1),(374,1857020400,0),(374,1867910400,1),(374,1888470000,0),(374,1899360000,1),(374,1919919600,0),(374,1930809600,1),(374,1951369200,0),(374,1962864000,1),(374,1983423600,0),(374,1994313600,1),(374,2014873200,0),(374,2025763200,1),(374,2046322800,0),(374,2057212800,1),(374,2077772400,0),(374,2088662400,1),(374,2109222000,0),(374,2120112000,1),(374,2140671600,0),(375,-2131645536,2),(375,-1696276800,1),(375,-1680469200,2),(375,-1632074400,1),(375,-1615143600,2),(375,-1566763200,1),(375,-1557090000,2),(375,-1535486400,1),(375,-1524949200,2),(375,-1504468800,1),(375,-1493413200,2),(375,-1472414400,1),(375,-1461963600,2),(375,-1440964800,1),(375,-1429390800,2),(375,-1409515200,1),(375,-1396731600,2),(375,-1376856000,1),(375,-1366491600,2),(375,-1346616000,1),(375,-1333832400,2),(375,-1313956800,1),(375,-1303678800,2),(375,-1282507200,1),(375,-1272661200,2),(375,-1251057600,1),(375,-1240088400,2),(375,-1219608000,1),(375,-1207429200,2),(375,-1188763200,1),(375,-1175979600,2),(375,-1157313600,1),(375,-1143925200,2),(375,-1124049600,1),(375,-1113771600,2),(375,-1091390400,1),(375,-1081026000,2),(375,-1059854400,1),(375,-1050786000,2),(375,-1030910400,1),(375,-1018126800,2),(375,-999460800,1),(375,-986677200,2),(375,-965592000,1),(375,-955227600,2),(375,-935956800,1),(375,-923173200,2),(375,-904507200,1),(375,-891723600,2),(375,-880221600,3),(375,-769395600,4),(375,-765399600,2),(375,-747252000,1),(375,-733950000,2),(375,-715802400,1),(375,-702500400,2),(375,-684352800,1),(375,-671050800,2),(375,-652903200,1),(375,-639601200,2),(375,-589399200,1),(375,-576097200,2),(375,-557949600,1),(375,-544647600,2),(375,-526500000,1),(375,-513198000,2),(375,-495050400,1),(375,-481748400,2),(375,-431546400,1),(375,-418244400,2),(375,-400096800,1),(375,-386794800,2),(375,-368647200,1),(375,-355345200,2),(375,-337197600,1),(375,-323895600,2),(375,-242244000,1),(375,-226522800,2),(375,-210794400,1),(375,-195073200,2),(375,-179344800,1),(375,-163623600,2),(375,-147895200,1),(375,-131569200,2),(375,-116445600,1),(375,-100119600,2),(375,-84391200,1),(375,-68670000,2),(375,-52941600,1),(375,-37220400,2),(375,-21492000,1),(375,-5770800,2),(375,9957600,1),(375,25678800,2),(375,41407200,1),(375,57733200,2),(375,73461600,1),(375,89182800,2),(375,104911200,1),(375,120632400,2),(375,136360800,1),(375,152082000,2),(375,167810400,1),(375,183531600,2),(375,199260000,1),(375,215586000,2),(375,230709600,1),(375,247035600,2),(375,262764000,1),(375,278485200,2),(375,294213600,1),(375,309934800,2),(375,325663200,1),(375,341384400,2),(375,357112800,1),(375,372834000,2),(375,388562400,1),(375,404888400,2),(375,420012000,1),(375,436338000,2),(375,452066400,1),(375,467787600,2),(375,483516000,1),(375,499237200,2),(375,514965600,1),(375,530686800,2),(375,544600800,1),(375,562136400,2),(375,576050400,1),(375,594190800,2),(375,607500000,1),(375,625640400,2),(375,638949600,1),(375,657090000,2),(375,671004000,1),(375,688539600,2),(375,702453600,1),(375,719989200,2),(375,733903200,1),(375,752043600,2),(375,765352800,1),(375,783493200,2),(375,796802400,1),(375,814942800,2),(375,828856800,1),(375,846392400,2),(375,860306400,1),(375,877842000,2),(375,891756000,1),(375,909291600,2),(375,923205600,1),(375,941346000,2),(375,954655200,1),(375,972795600,2),(375,986104800,1),(375,1004245200,2),(375,1018159200,1),(375,1035694800,2),(375,1049608800,1),(375,1067144400,2),(375,1081058400,1),(375,1099198800,2),(375,1112508000,1),(375,1130648400,2),(375,1143957600,1),(375,1162098000,2),(375,1173592800,1),(375,1194152400,2),(375,1205042400,1),(375,1225602000,2),(375,1236492000,1),(375,1257051600,2),(375,1268546400,1),(375,1289106000,2),(375,1299996000,1),(375,1320555600,2),(375,1331445600,1),(375,1352005200,2),(375,1362895200,1),(375,1383454800,2),(375,1394344800,1),(375,1414904400,2),(375,1425794400,1),(375,1446354000,2),(375,1457848800,1),(375,1478408400,2),(375,1489298400,1),(375,1509858000,2),(375,1520748000,1),(375,1541307600,2),(375,1552197600,1),(375,1572757200,2),(375,1583647200,1),(375,1604206800,2),(375,1615701600,1),(375,1636261200,2),(375,1647151200,1),(375,1667710800,2),(375,1678600800,1),(375,1699160400,2),(375,1710050400,1),(375,1730610000,2),(375,1741500000,1),(375,1762059600,2),(375,1772949600,1),(375,1793509200,2),(375,1805004000,1),(375,1825563600,2),(375,1836453600,1),(375,1857013200,2),(375,1867903200,1),(375,1888462800,2),(375,1899352800,1),(375,1919912400,2),(375,1930802400,1),(375,1951362000,2),(375,1962856800,1),(375,1983416400,2),(375,1994306400,1),(375,2014866000,2),(375,2025756000,1),(375,2046315600,2),(375,2057205600,1),(375,2077765200,2),(375,2088655200,1),(375,2109214800,2),(375,2120104800,1),(375,2140664400,2),(376,-2147483648,2),(376,-1694368800,1),(376,-1681671600,2),(376,-1632067200,1),(376,-1615136400,2),(376,-1029686400,1),(376,-1018198800,2),(376,-880214400,3),(376,-769395600,4),(376,-765392400,2),(376,-746035200,1),(376,-732733200,2),(376,-715795200,1),(376,-702493200,2),(376,-684345600,1),(376,-671043600,2),(376,-652896000,1),(376,-639594000,2),(376,-620755200,1),(376,-607626000,2),(376,-589392000,1),(376,-576090000,2),(376,-557942400,1),(376,-544640400,2),(376,-526492800,1),(376,-513190800,2),(376,-495043200,1),(376,-481741200,2),(376,-463593600,1),(376,-450291600,2),(376,-431539200,1),(376,-418237200,2),(376,-400089600,1),(376,-386787600,2),(376,-368640000,1),(376,-355338000,2),(376,-337190400,1),(376,-321469200,2),(376,-305740800,1),(376,-292438800,2),(376,-210787200,1),(376,-198090000,2),(376,-116438400,5),(376,-100108800,6),(376,-84384000,5),(376,-68659200,6),(376,-52934400,5),(376,-37209600,6),(376,-21484800,5),(376,-5760000,6),(376,9964800,5),(376,25689600,6),(376,41414400,5),(376,57744000,6),(376,73468800,5),(376,89193600,6),(376,104918400,5),(376,120643200,6),(376,136368000,5),(376,152092800,6),(376,167817600,5),(376,183542400,6),(376,199267200,5),(376,215596800,6),(376,230716800,5),(376,247046400,6),(376,262771200,5),(376,278496000,6),(376,294220800,5),(376,309945600,6),(376,325670400,5),(376,341395200,6),(376,357120000,5),(376,372844800,6),(376,388569600,5),(376,404899200,6),(376,420019200,5),(376,436348800,6),(376,452073600,5),(376,467798400,6),(376,483523200,5),(376,499248000,6),(376,514972800,5),(376,530697600,6),(376,544608000,5),(376,562147200,6),(376,576057600,5),(376,594201600,6),(376,607507200,5),(376,625651200,6),(376,638956800,5),(376,657100800,6),(376,671011200,5),(376,688550400,6),(376,702460800,5),(376,720000000,6),(376,733910400,5),(376,752054400,6),(376,765360000,5),(376,783504000,6),(376,796809600,5),(376,814953600,6),(376,828864000,5),(376,846403200,6),(376,860313600,5),(376,877852800,6),(376,891763200,5),(376,909302400,6),(376,923212800,5),(376,941356800,6),(376,954662400,5),(376,972806400,6),(376,986112000,5),(376,1004256000,6),(376,1018166400,5),(376,1035705600,6),(376,1049616000,5),(376,1067155200,6),(376,1081065600,5),(376,1099209600,6),(376,1112515200,5),(376,1130659200,6),(376,1143964800,1),(376,1162105200,2),(376,1173600000,1),(376,1194159600,2),(376,1205049600,1),(376,1225609200,2),(376,1236499200,1),(376,1257058800,2),(376,1268553600,1),(376,1289113200,2),(376,1300003200,1),(376,1320562800,2),(376,1331452800,1),(376,1352012400,2),(376,1362902400,1),(376,1383462000,2),(376,1394352000,1),(376,1414911600,2),(376,1425801600,1),(376,1446361200,2),(376,1457856000,1),(376,1478415600,2),(376,1489305600,1),(376,1509865200,2),(376,1520755200,1),(376,1541314800,2),(376,1552204800,1),(376,1572764400,2),(376,1583654400,1),(376,1604214000,2),(376,1615708800,1),(376,1636268400,2),(376,1647158400,1),(376,1667718000,2),(376,1678608000,1),(376,1699167600,2),(376,1710057600,1),(376,1730617200,2),(376,1741507200,1),(376,1762066800,2),(376,1772956800,1),(376,1793516400,2),(376,1805011200,1),(376,1825570800,2),(376,1836460800,1),(376,1857020400,2),(376,1867910400,1),(376,1888470000,2),(376,1899360000,1),(376,1919919600,2),(376,1930809600,1),(376,1951369200,2),(376,1962864000,1),(376,1983423600,2),(376,1994313600,1),(376,2014873200,2),(376,2025763200,1),(376,2046322800,2),(376,2057212800,1),(376,2077772400,2),(376,2088662400,1),(376,2109222000,2),(376,2120112000,1),(376,2140671600,2),(377,-2147483648,2),(377,-1632070800,1),(377,-1615140000,2),(377,-1601753400,1),(377,-1583697600,2),(377,-1567357200,1),(377,-1554667200,2),(377,-1534698000,1),(377,-1524074400,2),(377,-1503248400,1),(377,-1492365600,2),(377,-1471798800,1),(377,-1460916000,2),(377,-1440954000,1),(377,-1428861600,2),(377,-1409504400,1),(377,-1397412000,2),(377,-1378054800,1),(377,-1365962400,2),(377,-1346605200,1),(377,-1333908000,2),(377,-1315155600,1),(377,-1301853600,2),(377,-1283706000,1),(377,-1270404000,2),(377,-1252256400,1),(377,-1238954400,2),(377,-1220806800,1),(377,-1207504800,2),(377,-1188752400,1),(377,-1176055200,2),(377,-1157302800,1),(377,-1144000800,2),(377,-1125853200,1),(377,-1112551200,2),(377,-1094403600,1),(377,-1081101600,2),(377,-1062954000,1),(377,-1049652000,2),(377,-1031504400,1),(377,-1018202400,2),(377,-1000054800,1),(377,-986752800,2),(377,-968000400,1),(377,-955303200,2),(377,-936550800,1),(377,-880218000,3),(377,-769395600,4),(377,-765396000,2),(377,-747248400,1),(377,-733946400,2),(377,-715806000,1),(377,-702504000,2),(377,-684356400,1),(377,-671054400,2),(377,-652906800,1),(377,-634161600,2),(377,-620845200,1),(377,-602704800,2),(377,-589395600,1),(377,-576093600,2),(377,-557946000,1),(377,-544644000,2),(377,-526496400,1),(377,-513194400,2),(377,-495046800,1),(377,-481744800,2),(377,-463597200,1),(377,-450295200,2),(377,-431542800,1),(377,-418240800,2),(377,-400093200,1),(377,-384372000,2),(377,-368643600,1),(377,-352922400,2),(377,-337194000,1),(377,-321472800,2),(377,-305744400,1),(377,-289418400,2),(377,-273690000,1),(377,-257968800,2),(377,-242240400,1),(377,-226519200,2),(377,-210790800,1),(377,-195069600,2),(377,-179341200,1),(377,-163620000,2),(377,-147891600,1),(377,-131565600,2),(377,-116442000,1),(377,-100116000,2),(377,-84387600,1),(377,-68666400,2),(377,-52938000,1),(377,-37216800,2),(377,-21488400,1),(377,-5767200,2),(377,9961200,1),(377,25682400,2),(377,41410800,1),(377,57736800,2),(377,73465200,1),(377,89186400,2),(377,104914800,1),(377,120636000,2),(377,136364400,1),(377,152085600,2),(377,167814000,1),(377,183535200,2),(377,199263600,1),(377,215589600,2),(377,230713200,1),(377,247039200,2),(377,262767600,1),(377,278488800,2),(377,294217200,1),(377,309938400,2),(377,325666800,1),(377,341388000,2),(377,357116400,1),(377,372837600,2),(377,388566000,1),(377,404892000,2),(377,420015600,1),(377,436341600,2),(377,452070000,1),(377,467791200,2),(377,483519600,1),(377,499240800,2),(377,514969200,1),(377,530690400,2),(377,544604400,1),(377,562140000,2),(377,576054000,1),(377,594194400,2),(377,607503600,1),(377,625644000,2),(377,638953200,1),(377,657093600,2),(377,671007600,1),(377,688543200,2),(377,702457200,1),(377,719992800,2),(377,733906800,1),(377,752047200,2),(377,765356400,1),(377,783496800,2),(377,796806000,1),(377,814946400,2),(377,828860400,1),(377,846396000,2),(377,860310000,1),(377,877845600,2),(377,891759600,1),(377,909295200,2),(377,923209200,1),(377,941349600,2),(377,954658800,1),(377,972799200,2),(377,986108400,1),(377,1004248800,2),(377,1018162800,1),(377,1035698400,2),(377,1049612400,1),(377,1067148000,2),(377,1081062000,1),(377,1099202400,2),(377,1112511600,1),(377,1130652000,2),(377,1143961200,1),(377,1162101600,2),(377,1173596400,1),(377,1194156000,2),(377,1205046000,1),(377,1225605600,2),(377,1236495600,1),(377,1257055200,2),(377,1268550000,1),(377,1289109600,2),(377,1299999600,1),(377,1320559200,2),(377,1331449200,1),(377,1352008800,2),(377,1362898800,1),(377,1383458400,2),(377,1394348400,1),(377,1414908000,2),(377,1425798000,1),(377,1446357600,2),(377,1457852400,1),(377,1478412000,2),(377,1489302000,1),(377,1509861600,2),(377,1520751600,1),(377,1541311200,2),(377,1552201200,1),(377,1572760800,2),(377,1583650800,1),(377,1604210400,2),(377,1615705200,1),(377,1636264800,2),(377,1647154800,1),(377,1667714400,2),(377,1678604400,1),(377,1699164000,2),(377,1710054000,1),(377,1730613600,2),(377,1741503600,1),(377,1762063200,2),(377,1772953200,1),(377,1793512800,2),(377,1805007600,1),(377,1825567200,2),(377,1836457200,1),(377,1857016800,2),(377,1867906800,1),(377,1888466400,2),(377,1899356400,1),(377,1919916000,2),(377,1930806000,1),(377,1951365600,2),(377,1962860400,1),(377,1983420000,2),(377,1994310000,1),(377,2014869600,2),(377,2025759600,1),(377,2046319200,2),(377,2057209200,1),(377,2077768800,2),(377,2088658800,1),(377,2109218400,2),(377,2120108400,1),(377,2140668000,2),(378,-1998663968,2),(378,-1632063600,1),(378,-1615132800,2),(378,-1600614000,1),(378,-1596816000,2),(378,-1567954800,1),(378,-1551628800,2),(378,-1536505200,1),(378,-1523203200,2),(378,-1504450800,1),(378,-1491753600,2),(378,-1473001200,1),(378,-1459699200,2),(378,-880210800,3),(378,-769395600,4),(378,-765388800,2),(378,-715791600,1),(378,-702489600,2),(378,73472400,1),(378,89193600,2),(378,104922000,1),(378,120643200,2),(378,136371600,1),(378,152092800,2),(378,167821200,1),(378,183542400,2),(378,199270800,1),(378,215596800,2),(378,230720400,1),(378,247046400,2),(378,262774800,1),(378,278496000,2),(378,294224400,1),(378,309945600,2),(378,325674000,1),(378,341395200,2),(378,357123600,1),(378,372844800,2),(378,388573200,1),(378,404899200,2),(378,420022800,1),(378,436348800,2),(378,452077200,1),(378,467798400,2),(378,483526800,1),(378,499248000,2),(378,514976400,1),(378,530697600,2),(378,544611600,1),(378,562147200,2),(378,576061200,1),(378,594201600,2),(378,607510800,1),(378,625651200,2),(378,638960400,1),(378,657100800,2),(378,671014800,1),(378,688550400,2),(378,702464400,1),(378,720000000,2),(378,733914000,1),(378,752054400,2),(378,765363600,1),(378,783504000,2),(378,796813200,1),(378,814953600,2),(378,828867600,1),(378,846403200,2),(378,860317200,1),(378,877852800,2),(378,891766800,1),(378,909302400,2),(378,923216400,1),(378,941356800,2),(378,954666000,1),(378,972806400,2),(378,986115600,1),(378,1004256000,2),(378,1018170000,1),(378,1035705600,2),(378,1049619600,1),(378,1067155200,2),(378,1081069200,1),(378,1099209600,2),(378,1112518800,1),(378,1130659200,2),(378,1143968400,1),(378,1162108800,2),(378,1173603600,1),(378,1194163200,2),(378,1205053200,1),(378,1225612800,2),(378,1236502800,1),(378,1257062400,2),(378,1268557200,1),(378,1289116800,2),(378,1300006800,1),(378,1320566400,2),(378,1331456400,1),(378,1352016000,2),(378,1362906000,1),(378,1383465600,2),(378,1394355600,1),(378,1414915200,2),(378,1425805200,1),(378,1446364800,2),(378,1457859600,1),(378,1478419200,2),(378,1489309200,1),(378,1509868800,2),(378,1520758800,1),(378,1541318400,2),(378,1552208400,1),(378,1572768000,2),(378,1583658000,1),(378,1604217600,2),(378,1615712400,1),(378,1636272000,2),(378,1647162000,1),(378,1667721600,2),(378,1678611600,1),(378,1699171200,2),(378,1710061200,1),(378,1730620800,2),(378,1741510800,1),(378,1762070400,2),(378,1772960400,1),(378,1793520000,2),(378,1805014800,1),(378,1825574400,2),(378,1836464400,1),(378,1857024000,2),(378,1867914000,1),(378,1888473600,2),(378,1899363600,1),(378,1919923200,2),(378,1930813200,1),(378,1951372800,2),(378,1962867600,1),(378,1983427200,2),(378,1994317200,1),(378,2014876800,2),(378,2025766800,1),(378,2046326400,2),(378,2057216400,1),(378,2077776000,2),(378,2088666000,1),(378,2109225600,2),(378,2120115600,1),(378,2140675200,2),(379,-2147483648,2),(379,-1664130548,1),(379,-1650137348,2),(379,-1632076148,1),(379,-1615145348,2),(379,-1598650148,1),(379,-1590100148,2),(379,-1567286948,1),(379,-1551565748,2),(379,-1535837348,1),(379,-1520116148,2),(379,-1503782948,1),(379,-1488666548,2),(379,-1472333348,1),(379,-1457216948,2),(379,-1440883748,1),(379,-1425767348,2),(379,-1409434148,1),(379,-1394317748,2),(379,-1377984548,1),(379,-1362263348,2),(379,-1346534948,1),(379,-1330813748,2),(379,-1314480548,1),(379,-1299364148,2),(379,-1283030948,1),(379,-1267914548,2),(379,-1251581348,1),(379,-1236464948,2),(379,-1220131748,1),(379,-1205015348,2),(379,-1188682148,1),(379,-1172960948,2),(379,-1156627748,1),(379,-1141511348,2),(379,-1125178148,1),(379,-1110061748,2),(379,-1096921748,4),(379,-1093728600,3),(379,-1078612200,4),(379,-1061670600,3),(379,-1048973400,4),(379,-1030221000,3),(379,-1017523800,4),(379,-998771400,3),(379,-986074200,4),(379,-966717000,3),(379,-954624600,4),(379,-935267400,3),(379,-922570200,4),(379,-903817800,3),(379,-891120600,4),(379,-872368200,6),(379,-769395600,5),(379,-765401400,4),(379,-746044200,3),(379,-733347000,4),(379,-714594600,3),(379,-701897400,4),(379,-683145000,3),(379,-670447800,4),(379,-651695400,3),(379,-638998200,4),(379,-619641000,3),(379,-606943800,4),(379,-589401000,3),(379,-576099000,4),(379,-557951400,3),(379,-544649400,4),(379,-526501800,3),(379,-513199800,4),(379,-495052200,3),(379,-481750200,4),(379,-463602600,3),(379,-450300600,4),(379,-431548200,3),(379,-418246200,4),(379,-400098600,3),(379,-386796600,4),(379,-368649000,3),(379,-355347000,4),(379,-337199400,3),(379,-323897400,4),(379,-305749800,3),(379,-289423800,4),(379,-273695400,3),(379,-257974200,4),(379,-242245800,3),(379,-226524600,4),(379,-210796200,3),(379,-195075000,4),(379,-179346600,3),(379,-163625400,4),(379,-147897000,3),(379,-131571000,4),(379,-116447400,3),(379,-100121400,4),(379,-84393000,3),(379,-68671800,4),(379,-52943400,3),(379,-37222200,4),(379,-21493800,3),(379,-5772600,4),(379,9955800,3),(379,25677000,4),(379,41405400,3),(379,57731400,4),(379,73459800,3),(379,89181000,4),(379,104909400,3),(379,120630600,4),(379,136359000,3),(379,152080200,4),(379,167808600,3),(379,183529800,4),(379,199258200,3),(379,215584200,4),(379,230707800,3),(379,247033800,4),(379,262762200,3),(379,278483400,4),(379,294211800,3),(379,309933000,4),(379,325661400,3),(379,341382600,4),(379,357111000,3),(379,372832200,4),(379,388560600,3),(379,404886600,4),(379,420010200,3),(379,436336200,4),(379,452064600,3),(379,467785800,4),(379,483514200,3),(379,499235400,4),(379,514963800,3),(379,530685000,4),(379,544591860,3),(379,562127460,4),(379,576041460,7),(379,594178260,4),(379,607491060,3),(379,625631460,4),(379,638940660,3),(379,657081060,4),(379,670995060,3),(379,688530660,4),(379,702444660,3),(379,719980260,4),(379,733894260,3),(379,752034660,4),(379,765343860,3),(379,783484260,4),(379,796793460,3),(379,814933860,4),(379,828847860,3),(379,846383460,4),(379,860297460,3),(379,877833060,4),(379,891747060,3),(379,909282660,4),(379,923196660,3),(379,941337060,4),(379,954646260,3),(379,972786660,4),(379,986095860,3),(379,1004236260,4),(379,1018150260,3),(379,1035685860,4),(379,1049599860,3),(379,1067135460,4),(379,1081049460,3),(379,1099189860,4),(379,1112499060,3),(379,1130639460,4),(379,1143948660,3),(379,1162089060,4),(379,1173583860,3),(379,1194143460,4),(379,1205033460,3),(379,1225593060,4),(379,1236483060,3),(379,1257042660,4),(379,1268537460,3),(379,1289097060,4),(379,1299987060,3),(379,1320553800,4),(379,1331443800,3),(379,1352003400,4),(379,1362893400,3),(379,1383453000,4),(379,1394343000,3),(379,1414902600,4),(379,1425792600,3),(379,1446352200,4),(379,1457847000,3),(379,1478406600,4),(379,1489296600,3),(379,1509856200,4),(379,1520746200,3),(379,1541305800,4),(379,1552195800,3),(379,1572755400,4),(379,1583645400,3),(379,1604205000,4),(379,1615699800,3),(379,1636259400,4),(379,1647149400,3),(379,1667709000,4),(379,1678599000,3),(379,1699158600,4),(379,1710048600,3),(379,1730608200,4),(379,1741498200,3),(379,1762057800,4),(379,1772947800,3),(379,1793507400,4),(379,1805002200,3),(379,1825561800,4),(379,1836451800,3),(379,1857011400,4),(379,1867901400,3),(379,1888461000,4),(379,1899351000,3),(379,1919910600,4),(379,1930800600,3),(379,1951360200,4),(379,1962855000,3),(379,1983414600,4),(379,1994304600,3),(379,2014864200,4),(379,2025754200,3),(379,2046313800,4),(379,2057203800,3),(379,2077763400,4),(379,2088653400,3),(379,2109213000,4),(379,2120103000,3),(379,2140662600,4),(380,-2147483648,2),(380,-1632060000,1),(380,-1615129200,2),(380,-880207200,3),(380,-769395600,4),(380,-765385200,2),(380,-747237600,1),(380,-733935600,2),(380,-715788000,1),(380,-702486000,2),(380,-684338400,1),(380,-671036400,2),(380,-652888800,1),(380,-639586800,2),(380,-620834400,1),(380,-608137200,2),(380,-589384800,1),(380,-576082800,2),(380,-557935200,1),(380,-544633200,2),(380,-526485600,1),(380,-513183600,2),(380,-495036000,1),(380,-481734000,2),(380,-463586400,1),(380,-450284400,2),(380,-431532000,1),(380,-418230000,2),(380,-400082400,1),(380,-386780400,2),(380,-368632800,1),(380,-355330800,2),(380,-337183200,1),(380,-323881200,2),(380,-305733600,1),(380,-292431600,2),(380,-273679200,1),(380,-260982000,2),(380,-242229600,1),(380,-226508400,2),(380,-210780000,1),(380,-195058800,2),(380,-179330400,1),(380,-163609200,2),(380,-147880800,1),(380,-131554800,2),(380,-116431200,1),(380,-100105200,2),(380,-84376800,1),(380,-68655600,2),(380,-52927200,1),(380,-37206000,2),(380,-21477600,1),(380,-5756400,2),(380,9972000,1),(380,25693200,2),(380,41421600,1),(380,57747600,2),(380,73476000,1),(380,89197200,2),(380,104925600,1),(380,120646800,2),(380,136375200,1),(380,152096400,2),(380,167824800,1),(380,183546000,2),(380,199274400,1),(380,215600400,2),(380,230724000,1),(380,247050000,2),(380,262778400,1),(380,278499600,2),(380,294228000,1),(380,309949200,2),(380,325677600,1),(380,341398800,2),(380,357127200,1),(380,372848400,2),(380,388576800,1),(380,404902800,2),(380,420026400,1),(380,436352400,2),(380,452080800,1),(380,467802000,2),(380,483530400,1),(380,499251600,2),(380,514980000,1),(380,530701200,2),(380,544615200,1),(380,562150800,2),(380,576064800,1),(380,594205200,2),(380,607514400,1),(380,625654800,2),(380,638964000,1),(380,657104400,2),(380,671018400,1),(380,688554000,2),(380,702468000,1),(380,720003600,2),(380,733917600,1),(380,752058000,2),(380,765367200,1),(380,783507600,2),(380,796816800,1),(380,814957200,2),(380,828871200,1),(380,846406800,2),(380,860320800,1),(380,877856400,2),(380,891770400,1),(380,909306000,2),(380,923220000,1),(380,941360400,2),(380,954669600,1),(380,972810000,2),(380,986119200,1),(380,1004259600,2),(380,1018173600,1),(380,1035709200,2),(380,1049623200,1),(380,1067158800,2),(380,1081072800,1),(380,1099213200,2),(380,1112522400,1),(380,1130662800,2),(380,1143972000,1),(380,1162112400,2),(380,1173607200,1),(380,1194166800,2),(380,1205056800,1),(380,1225616400,2),(380,1236506400,1),(380,1257066000,2),(380,1268560800,1),(380,1289120400,2),(380,1300010400,1),(380,1320570000,2),(380,1331460000,1),(380,1352019600,2),(380,1362909600,1),(380,1383469200,2),(380,1394359200,1),(380,1414918800,2),(380,1425808800,1),(380,1446368400,2),(380,1457863200,1),(380,1478422800,2),(380,1489312800,1),(380,1509872400,2),(380,1520762400,1),(380,1541322000,2),(380,1552212000,1),(380,1572771600,2),(380,1583661600,1),(380,1604221200,2),(380,1615716000,1),(380,1636275600,2),(380,1647165600,1),(380,1667725200,2),(380,1678615200,1),(380,1699174800,2),(380,1710064800,1),(380,1730624400,2),(380,1741514400,1),(380,1762074000,2),(380,1772964000,1),(380,1793523600,2),(380,1805018400,1),(380,1825578000,2),(380,1836468000,1),(380,1857027600,2),(380,1867917600,1),(380,1888477200,2),(380,1899367200,1),(380,1919926800,2),(380,1930816800,1),(380,1951376400,2),(380,1962871200,1),(380,1983430800,2),(380,1994320800,1),(380,2014880400,2),(380,2025770400,1),(380,2046330000,2),(380,2057220000,1),(380,2077779600,2),(380,2088669600,1),(380,2109229200,2),(380,2120119200,1),(380,2140678800,2),(381,-2030202084,2),(381,-1632063600,1),(381,-1615132800,2),(381,-1251651600,1),(381,-1238349600,2),(381,-1220202000,1),(381,-1206900000,2),(381,-1188752400,1),(381,-1175450400,2),(381,-1156698000,1),(381,-1144000800,2),(381,-1125248400,1),(381,-1111946400,2),(381,-1032714000,1),(381,-1016992800,2),(381,-1001264400,1),(381,-986148000,2),(381,-969814800,1),(381,-954093600,2),(381,-937760400,1),(381,-922039200,2),(381,-906310800,1),(381,-890589600,2),(381,-880210800,3),(381,-769395600,4),(381,-765388800,2),(381,-748450800,1),(381,-732729600,2),(381,-715791600,1),(381,-702489600,2),(381,-684342000,1),(381,-671040000,2),(381,-652892400,1),(381,-639590400,2),(381,-620838000,1),(381,-608140800,2),(381,-589388400,1),(381,-576086400,2),(381,-557938800,1),(381,-544636800,2),(381,-526489200,1),(381,-513187200,2),(381,-495039600,1),(381,-481737600,2),(381,-463590000,1),(381,-450288000,2),(381,-431535600,1),(381,-418233600,2),(381,-400086000,1),(381,-386784000,2),(381,-337186800,1),(381,-321465600,2),(381,-305737200,5),(382,-2147483648,2),(382,-1632056400,1),(382,-1615125600,2),(382,-1596978000,1),(382,-1583164800,2),(382,-880203600,3),(382,-769395600,4),(382,-765381600,2),(382,-147884400,5),(382,-131554800,2),(382,-81961200,6),(382,325677600,7),(382,341398800,6),(382,357127200,7),(382,372848400,6),(382,388576800,7),(382,404902800,6),(382,420026400,7),(382,436352400,6),(382,452080800,7),(382,467802000,6),(382,483530400,7),(382,499251600,6),(382,514980000,7),(382,530701200,6),(382,544615200,7),(382,562150800,6),(382,576064800,7),(382,594205200,6),(382,607514400,7),(382,625654800,6),(382,638964000,7),(382,657104400,6),(382,671018400,7),(382,688554000,6),(382,702468000,7),(382,720003600,6),(382,733917600,7),(382,752058000,6),(382,765367200,7),(382,783507600,6),(382,796816800,7),(382,814957200,6),(382,828871200,7),(382,846406800,6),(382,860320800,7),(382,877856400,6),(382,891770400,7),(382,909306000,6),(382,923220000,7),(382,941360400,6),(382,954669600,7),(382,972810000,6),(382,986119200,7),(382,1004259600,6),(382,1018173600,7),(382,1035709200,6),(382,1049623200,7),(382,1067158800,6),(382,1081072800,7),(382,1099213200,6),(382,1112522400,7),(382,1130662800,6),(382,1143972000,7),(382,1162112400,6),(382,1173607200,7),(382,1194166800,6),(382,1205056800,7),(382,1225616400,6),(382,1236506400,7),(382,1257066000,6),(382,1268560800,7),(382,1289120400,6),(382,1300010400,7),(382,1320570000,6),(382,1331460000,7),(382,1352019600,6),(382,1362909600,7),(382,1383469200,6),(382,1394359200,7),(382,1414918800,6),(382,1425808800,7),(382,1446368400,6),(382,1457863200,7),(382,1478422800,6),(382,1489312800,7),(382,1509872400,6),(382,1520762400,7),(382,1541322000,6),(382,1552212000,7),(382,1572771600,6),(382,1583661600,7),(382,1604214000,8),(383,-2147483648,1),(383,-1892661435,2),(383,-1688410800,1),(383,-1619205435,3),(383,-1593806400,1),(383,-1335986235,4),(383,-1317585600,2),(383,-1304362800,4),(383,-1286049600,2),(383,-1272826800,4),(383,-1254513600,2),(383,-1241290800,4),(383,-1222977600,2),(383,-1209754800,4),(383,-1191355200,2),(383,-1178132400,3),(383,-870552000,2),(383,-865278000,3),(383,-740520000,5),(383,-736635600,4),(383,-718056000,2),(383,-713649600,3),(383,-36619200,6),(383,-23922000,7),(383,-3355200,6),(383,7527600,7),(383,24465600,6),(383,37767600,7),(383,55915200,6),(383,69217200,7),(383,87969600,6),(383,100666800,7),(383,118209600,6),(383,132116400,7),(383,150868800,6),(383,163566000,7),(383,182318400,6),(383,195620400,7),(383,213768000,6),(383,227070000,7),(383,245217600,6),(383,258519600,7),(383,277272000,6),(383,289969200,7),(383,308721600,6),(383,321418800,7),(383,340171200,6),(383,353473200,7),(383,371620800,6),(383,384922800,7),(383,403070400,6),(383,416372400,7),(383,434520000,6),(383,447822000,7),(383,466574400,6),(383,479271600,7),(383,498024000,6),(383,510721200,7),(383,529473600,6),(383,545194800,7),(383,560923200,6),(383,574225200,7),(383,592372800,6),(383,605674800,7),(383,624427200,6),(383,637124400,7),(383,653457600,6),(383,668574000,7),(383,687326400,6),(383,700628400,7),(383,718776000,6),(383,732078000,7),(383,750225600,6),(383,763527600,7),(383,781675200,6),(383,794977200,7),(383,813729600,6),(383,826426800,7),(383,845179200,6),(383,859690800,7),(383,876628800,6),(383,889930800,7),(383,906868800,6),(383,923194800,7),(383,939528000,6),(383,952830000,7),(383,971582400,6),(383,984279600,7),(383,1003032000,6),(383,1015729200,7),(383,1034481600,6),(383,1047178800,7),(383,1065931200,6),(383,1079233200,7),(383,1097380800,6),(383,1110682800,7),(383,1128830400,6),(383,1142132400,7),(383,1160884800,6),(383,1173582000,7),(383,1192334400,6),(383,1206846000,7),(383,1223784000,6),(383,1237086000,7),(383,1255233600,6),(383,1270350000,7),(383,1286683200,6),(383,1304823600,7),(383,1313899200,6),(383,1335668400,7),(383,1346558400,6),(383,1367118000,7),(383,1378612800,6),(383,1398567600,7),(383,1410062400,6),(383,1463281200,7),(383,1471147200,6),(383,1494730800,7),(383,1502596800,6),(383,1526180400,7),(383,1534046400,6),(383,1554606000,7),(383,1567915200,6),(383,1586055600,7),(383,1599364800,6),(383,1617505200,7),(383,1630814400,6),(383,1648954800,7),(383,1662868800,6),(383,1680404400,7),(383,1693713600,6),(383,1712458800,7),(383,1725768000,6),(383,1743908400,7),(383,1757217600,6),(383,1775358000,7),(383,1788667200,6),(383,1806807600,7),(383,1820116800,6),(383,1838257200,7),(383,1851566400,6),(383,1870311600,7),(383,1883016000,6),(383,1901761200,7),(383,1915070400,6),(383,1933210800,7),(383,1946520000,6),(383,1964660400,7),(383,1977969600,6),(383,1996110000,7),(383,2009419200,6),(383,2027559600,7),(383,2040868800,6),(383,2059614000,7),(383,2072318400,6),(383,2091063600,7),(383,2104372800,6),(383,2122513200,7),(383,2135822400,6),(383,2147483647,6),(384,-2147483648,1),(384,-1178124152,4),(384,-36619200,2),(384,-23922000,3),(384,-3355200,2),(384,7527600,3),(384,24465600,2),(384,37767600,3),(384,55915200,2),(384,69217200,3),(384,87969600,2),(384,100666800,3),(384,118209600,2),(384,132116400,3),(384,150868800,2),(384,163566000,3),(384,182318400,2),(384,195620400,3),(384,213768000,2),(384,227070000,3),(384,245217600,2),(384,258519600,3),(384,277272000,2),(384,289969200,3),(384,308721600,2),(384,321418800,3),(384,340171200,2),(384,353473200,3),(384,371620800,2),(384,384922800,5),(384,403070400,6),(384,416372400,5),(384,434520000,6),(384,447822000,5),(384,466574400,6),(384,479271600,5),(384,498024000,6),(384,510721200,5),(384,529473600,6),(384,545194800,5),(384,560923200,6),(384,574225200,5),(384,592372800,6),(384,605674800,5),(384,624427200,6),(384,637124400,5),(384,653457600,6),(384,668574000,5),(384,687326400,6),(384,700628400,5),(384,718776000,6),(384,732078000,5),(384,750225600,6),(384,763527600,5),(384,781675200,6),(384,794977200,5),(384,813729600,6),(384,826426800,5),(384,845179200,6),(384,859690800,5),(384,876628800,6),(384,889930800,5),(384,906868800,6),(384,923194800,5),(384,939528000,6),(384,952830000,5),(384,971582400,6),(384,984279600,5),(384,1003032000,6),(384,1015729200,5),(384,1034481600,6),(384,1047178800,5),(384,1065931200,6),(384,1079233200,5),(384,1097380800,6),(384,1110682800,5),(384,1128830400,6),(384,1142132400,5),(384,1160884800,6),(384,1173582000,5),(384,1192334400,6),(384,1206846000,5),(384,1223784000,6),(384,1237086000,5),(384,1255233600,6),(384,1270350000,5),(384,1286683200,6),(384,1304823600,5),(384,1313899200,6),(384,1335668400,5),(384,1346558400,6),(384,1367118000,5),(384,1378612800,6),(384,1398567600,5),(384,1410062400,6),(384,1463281200,5),(384,1471147200,6),(384,1494730800,5),(384,1502596800,6),(384,1526180400,5),(384,1534046400,6),(384,1554606000,5),(384,1567915200,6),(384,1586055600,5),(384,1599364800,6),(384,1617505200,5),(384,1630814400,6),(384,1648954800,5),(384,1662868800,6),(384,1680404400,5),(384,1693713600,6),(384,1712458800,5),(384,1725768000,6),(384,1743908400,5),(384,1757217600,6),(384,1775358000,5),(384,1788667200,6),(384,1806807600,5),(384,1820116800,6),(384,1838257200,5),(384,1851566400,6),(384,1870311600,5),(384,1883016000,6),(384,1901761200,5),(384,1915070400,6),(384,1933210800,5),(384,1946520000,6),(384,1964660400,5),(384,1977969600,6),(384,1996110000,5),(384,2009419200,6),(384,2027559600,5),(384,2040868800,6),(384,2059614000,5),(384,2072318400,6),(384,2091063600,5),(384,2104372800,6),(384,2122513200,5),(384,2135822400,6),(384,2147483647,6),(385,-2147483648,1),(385,-1402813824,3),(385,-1311534000,2),(385,-1300996800,3),(385,-933534000,2),(385,-925675200,3),(385,-902084400,2),(385,-893620800,3),(385,-870030000,2),(385,-862171200,3),(385,-775681200,2),(385,-767822400,3),(385,-744231600,2),(385,-736372800,3),(385,-144702000,2),(385,-134251200,3),(385,-113425200,2),(385,-102542400,3),(385,-86295600,2),(385,-72907200,3),(385,-54154800,2),(385,-41457600,3),(385,-21495600,2),(385,-5774400,3),(385,9954000,2),(385,25675200,3),(385,41403600,2),(385,57729600,3),(385,73458000,2),(385,87364800,3),(385,104907600,2),(385,118900800,3),(385,136357200,2),(385,150436800,3),(385,167806800,2),(385,183528000,3),(385,199256400,2),(385,215582400,3),(385,230706000,2),(385,247032000,3),(385,263365200,2),(385,276667200,3),(385,290581200,2),(385,308721600,3),(385,322030800,2),(385,340171200,3),(385,358318800,2),(385,371620800,3),(385,389768400,2),(385,403070400,3),(385,421218000,2),(385,434520000,3),(385,452667600,2),(385,466574400,3),(385,484117200,2),(385,498024000,3),(385,511333200,2),(385,529473600,3),(385,542782800,2),(385,560923200,3),(385,574837200,2),(385,592372800,3),(385,606286800,2),(385,623822400,3),(385,638946000,2),(385,655876800,3),(385,671000400,2),(385,687330000,4),(385,702450000,2),(385,718779600,4),(385,733899600,2),(385,750229200,4),(385,765349200,2),(385,781678800,4),(385,796798800,2),(385,813128400,4),(385,828853200,2),(385,844578000,4),(385,860302800,2),(385,876632400,4),(385,891147600,5),(385,909291600,4),(385,922597200,5),(385,941346000,4),(385,954651600,5),(385,972795600,4),(385,986101200,5),(385,1004245200,4),(385,1018155600,5),(385,1035694800,4),(385,1049605200,5),(385,1067144400,4),(385,1080450000,5),(385,1162098000,4),(385,1173589200,5),(385,1193547600,4),(385,1205643600,5),(385,1224997200,4),(385,1236488400,5),(385,1256446800,4),(385,1268542800,5),(385,1288501200,4),(385,1300597200,5),(385,1321160400,4),(385,1333256400,5),(385,1352005200,4),(385,1362891600,5),(385,1383454800,4),(385,1394341200,5),(385,1414904400,4),(385,1425790800,5),(385,1446354000,4),(385,1457845200,5),(385,1478408400,4),(385,1489294800,5),(385,1509858000,4),(385,1520744400,5),(385,1541307600,4),(385,1552194000,5),(385,1572757200,4),(385,1583643600,5),(385,1604206800,4),(385,1615698000,5),(385,1636261200,4),(385,1647147600,5),(385,1667710800,4),(385,1678597200,5),(385,1699160400,4),(385,1710046800,5),(385,1730610000,4),(385,1741496400,5),(385,1762059600,4),(385,1772946000,5),(385,1793509200,4),(385,1805000400,5),(385,1825563600,4),(385,1836450000,5),(385,1857013200,4),(385,1867899600,5),(385,1888462800,4),(385,1899349200,5),(385,1919912400,4),(385,1930798800,5),(385,1951362000,4),(385,1962853200,5),(385,1983416400,4),(385,1994302800,5),(385,2014866000,4),(385,2025752400,5),(385,2046315600,4),(385,2057202000,5),(385,2077765200,4),(385,2088651600,5),(385,2109214800,4),(385,2120101200,5),(385,2140664400,4),(386,228877200,1),(386,243997200,0),(386,260326800,1),(386,276051600,0),(386,291776400,1),(386,307501200,0),(386,323830800,1),(386,338950800,0),(386,354675600,1),(386,370400400,0),(386,386125200,1),(386,401850000,0),(386,417574800,1),(386,433299600,0),(386,449024400,1),(386,465354000,0),(386,481078800,1),(386,496803600,0),(386,512528400,1),(386,528253200,0),(386,543978000,1),(386,559702800,0),(386,575427600,1),(386,591152400,0),(386,606877200,1),(386,622602000,0),(386,638326800,1),(386,654656400,0),(386,670381200,1),(386,686106000,0),(386,701830800,1),(386,717555600,0),(386,733280400,1),(386,749005200,0),(386,764730000,1),(386,780454800,0),(386,796179600,1),(386,811904400,0),(386,828234000,1),(386,846378000,0),(386,859683600,1),(386,877827600,0),(386,891133200,1),(386,909277200,0),(386,922582800,1),(386,941331600,0),(386,954032400,1),(386,972781200,0),(386,985482000,1),(386,1004230800,0),(386,1017536400,1),(386,1035680400,0),(386,1048986000,1),(386,1067130000,0),(386,1080435600,1),(386,1099184400,0),(386,1111885200,1),(386,1130634000,0),(386,1143334800,1),(386,1162083600,0),(386,1174784400,1),(386,1193533200,0),(386,1206838800,1),(386,1224982800,0),(386,1238288400,1),(386,1256432400,0),(386,1269738000,1),(386,1288486800,0),(386,1301187600,1),(386,1319936400,0),(386,1332637200,1),(386,1351386000,0),(386,1364691600,1),(386,1382835600,0),(386,1396141200,1),(386,1414285200,0),(386,1427590800,1),(386,1445734800,0),(386,1459040400,1),(386,1477789200,0),(386,1490490000,1),(386,1509238800,0),(386,1521939600,1),(386,1540688400,0),(386,1553994000,1),(386,1572138000,0),(386,1585443600,1),(386,1603587600,0),(386,1616893200,1),(386,1635642000,0),(386,1648342800,1),(386,1667091600,0),(386,1679792400,1),(386,1698541200,0),(386,1711846800,1),(386,1729990800,0),(386,1743296400,1),(386,1761440400,0),(386,1774746000,1),(386,1792890000,0),(386,1806195600,1),(386,1824944400,0),(386,1837645200,1),(386,1856394000,0),(386,1869094800,1),(386,1887843600,0),(386,1901149200,1),(386,1919293200,0),(386,1932598800,1),(386,1950742800,0),(386,1964048400,1),(386,1982797200,0),(386,1995498000,1),(386,2014246800,0),(386,2026947600,1),(386,2045696400,0),(386,2058397200,1),(386,2077146000,0),(386,2090451600,1),(386,2108595600,0),(386,2121901200,1),(386,2140045200,0),(388,-1633280400,1),(388,-1615140000,0),(388,-1601830800,1),(388,-1583690400,0),(388,-880218000,2),(388,-769395600,3),(388,-765396000,0),(388,-84387600,1),(388,-68666400,0),(388,-52938000,1),(388,-37216800,0),(388,-21488400,1),(388,-5767200,0),(388,9961200,1),(388,25682400,0),(388,41410800,1),(388,57736800,0),(388,73465200,1),(388,89186400,0),(388,104914800,1),(388,120636000,0),(388,126687600,1),(388,152085600,0),(388,162370800,1),(388,183535200,0),(388,199263600,1),(388,215589600,0),(388,230713200,1),(388,247039200,0),(388,262767600,1),(388,278488800,0),(388,294217200,1),(388,309938400,0),(388,325666800,1),(388,341388000,0),(388,357116400,1),(388,372837600,0),(388,388566000,1),(388,404892000,0),(388,420015600,1),(388,436341600,0),(388,452070000,1),(388,467791200,0),(388,483519600,1),(388,499240800,0),(388,514969200,1),(388,530690400,0),(388,544604400,1),(388,562140000,0),(388,576054000,1),(388,594194400,0),(388,607503600,1),(388,625644000,0),(388,638953200,1),(388,657093600,0),(388,671007600,1),(388,688543200,0),(388,702457200,1),(388,719992800,0),(388,733906800,1),(388,752047200,0),(388,765356400,1),(388,783496800,0),(388,796806000,1),(388,814946400,0),(388,828860400,1),(388,846396000,0),(388,860310000,1),(388,877845600,0),(388,891759600,1),(388,909295200,0),(388,923209200,1),(388,941349600,0),(388,954658800,1),(388,972799200,0),(388,986108400,1),(388,1004248800,0),(388,1018162800,1),(388,1035698400,0),(388,1049612400,1),(388,1067148000,0),(388,1081062000,1),(388,1099202400,0),(388,1112511600,1),(388,1130652000,0),(388,1143961200,1),(388,1162101600,0),(388,1173596400,1),(388,1194156000,0),(388,1205046000,1),(388,1225605600,0),(388,1236495600,1),(388,1257055200,0),(388,1268550000,1),(388,1289109600,0),(388,1299999600,1),(388,1320559200,0),(388,1331449200,1),(388,1352008800,0),(388,1362898800,1),(388,1383458400,0),(388,1394348400,1),(388,1414908000,0),(388,1425798000,1),(388,1446357600,0),(388,1457852400,1),(388,1478412000,0),(388,1489302000,1),(388,1509861600,0),(388,1520751600,1),(388,1541311200,0),(388,1552201200,1),(388,1572760800,0),(388,1583650800,1),(388,1604210400,0),(388,1615705200,1),(388,1636264800,0),(388,1647154800,1),(388,1667714400,0),(388,1678604400,1),(388,1699164000,0),(388,1710054000,1),(388,1730613600,0),(388,1741503600,1),(388,1762063200,0),(388,1772953200,1),(388,1793512800,0),(388,1805007600,1),(388,1825567200,0),(388,1836457200,1),(388,1857016800,0),(388,1867906800,1),(388,1888466400,0),(388,1899356400,1),(388,1919916000,0),(388,1930806000,1),(388,1951365600,0),(388,1962860400,1),(388,1983420000,0),(388,1994310000,1),(388,2014869600,0),(388,2025759600,1),(388,2046319200,0),(388,2057209200,1),(388,2077768800,0),(388,2088658800,1),(388,2109218400,0),(388,2120108400,1),(388,2140668000,0),(389,-2147483648,2),(389,-929844000,1),(389,-923108400,2),(389,-906170400,1),(389,-892868400,2),(389,-875844000,1),(389,-857790000,2),(389,-844308000,1),(389,-825822000,2),(389,-812685600,1),(389,-794199600,2),(389,-779853600,1),(389,-762663600,2),(389,-399088800,1),(389,-386650800,2),(389,-368330400,1),(389,-355114800,2),(389,-336790800,1),(389,-323654400,2),(389,-305168400,1),(389,-292032000,2),(389,-273632400,1),(389,-260496000,2),(389,-242096400,1),(389,-228960000,2),(389,-210560400,1),(389,-197424000,2),(389,-178938000,1),(389,-165801600,2),(389,-147402000,1),(389,-134265600,2),(389,-115866000,1),(389,-102643200,2),(389,-84330000,1),(389,-71107200,2),(389,-52707600,1),(389,-39484800,2),(389,-21171600,1),(389,-7948800,2),(389,10364400,1),(389,23587200,2),(389,41900400,1),(389,55123200,2),(389,73522800,1),(389,86745600,2),(389,105058800,1),(389,118281600,2),(389,136594800,1),(389,149817600,2),(389,168130800,1),(389,181353600,2),(389,199753200,1),(389,212976000,2),(389,231289200,1),(389,244512000,2),(389,262825200,1),(389,276048000,2),(389,294361200,1),(389,307584000,2),(389,325983600,1),(389,339206400,2),(389,357519600,1),(389,370742400,2),(389,396399600,1),(389,402278400,2),(389,426812400,1),(389,433814400,2),(389,452214000,1),(389,465436800,2),(389,483750000,1),(389,496972800,2),(389,515286000,1),(389,528508800,2),(389,546822000,1),(389,560044800,2),(389,578444400,1),(389,591667200,2),(389,610412400,1),(389,623203200,2),(389,641516400,1),(389,654739200,2),(389,673052400,1),(389,686275200,2),(389,704674800,1),(389,717897600,2),(389,736210800,1),(389,749433600,2),(389,767746800,1),(389,780969600,2),(389,799020000,3),(389,812322000,2),(389,830469600,3),(389,843771600,2),(389,861919200,3),(389,875221200,2),(389,893368800,3),(389,906670800,2),(389,925423200,3),(389,938725200,2),(389,956872800,3),(389,970174800,2),(389,988322400,3),(389,1001624400,2),(389,1019772000,3),(389,1033074000,2),(389,1051221600,3),(389,1064523600,2),(389,1083276000,3),(389,1096578000,2),(389,1114725600,3),(389,1128027600,2),(389,1146175200,3),(389,1158872400,2),(389,1177624800,3),(389,1189112400,2),(389,1209074400,3),(389,1219957200,2),(389,1240524000,3),(389,1250802000,2),(389,1272578400,3),(389,1281474000,2),(389,1284069600,1),(389,1285880400,2),(389,1400191200,1),(389,1403816400,2),(389,1406844000,1),(389,1411678800,2),(390,-2147483648,1),(390,-1691962479,2),(390,-1680471279,4),(390,-1664143200,3),(390,-1650146400,4),(390,-1633903200,3),(390,-1617487200,4),(390,-1601848800,3),(390,-1586037600,4),(390,-1570399200,3),(390,-1552168800,4),(390,-1538344800,3),(390,-1522533600,4),(390,-1507500000,5),(390,-1490565600,4),(390,-1473631200,5),(390,-1460930400,4),(390,-1442786400,5),(390,-1428876000,4),(390,-1410732000,5),(390,-1396216800,4),(390,-1379282400,5),(390,-1364767200,4),(390,-1348437600,5),(390,-1333317600,4),(390,-1315778400,5),(390,-1301263200,4),(390,-1284328800,5),(390,-1269813600,4),(390,-1253484000,5),(390,-1238364000,4),(390,-1221429600,5),(390,-1206914400,4),(390,-1189980000,5),(390,-1175464800,4),(390,-1159135200,5),(390,-1143410400,4),(390,-1126476000,5),(390,-1111960800,4),(390,-1095631200,5),(390,-1080511200,4),(390,-1063576800,5),(390,-1049061600,4),(390,-1032127200,5),(390,-1017612000,4),(390,-1001282400,5),(390,-986162400,4),(390,-969228000,5),(390,-950479200,4),(390,-942012000,5),(390,-733356000,4),(390,-719445600,5),(390,-699487200,4),(390,-684972000,5),(390,-668037600,4),(390,-654732000,5),(390,-636588000,4),(390,-622072800,5),(390,-605743200,4),(390,-590623200,5),(390,-574293600,4),(390,-558568800,5),(390,-542239200,4),(390,-527119200,5),(390,-512604000,4),(390,-496274400,5),(390,-481154400,4),(390,-464220000,5),(390,-449704800,4),(390,-432165600,5),(390,-417650400,4),(390,-401320800,5),(390,-386200800,4),(390,-369266400,5),(390,-354751200,4),(390,-337816800,5),(390,-323301600,4),(390,-306972000,5),(390,-291852000,4),(390,-276732000,5),(390,-257983200,4),(390,-245282400,5),(390,-226533600,4),(390,-213228000,5),(390,-195084000,4),(390,-182383200,5),(390,-163634400,4),(390,-150933600,5),(390,-132184800,4),(390,-119484000,5),(390,-100735200,4),(390,-88034400,5),(390,-68680800,4),(390,-59004000,5),(390,-37242000,8),(390,57722400,6),(390,69818400,7),(390,89172000,6),(390,101268000,7),(390,120621600,6),(390,132717600,7),(390,152071200,6),(390,164167200,7),(390,183520800,6),(390,196221600,7),(390,214970400,6),(390,227671200,7),(390,246420000,6),(390,259120800,7),(390,278474400,6),(390,290570400,7),(390,309924000,6),(390,322020000,7),(390,341373600,6),(390,354675600,7),(390,372819600,6),(390,386125200,7),(390,404269200,6),(390,417574800,7),(390,435718800,6),(390,449024400,7),(390,467773200,6),(390,481078800,7),(390,499222800,6),(390,512528400,7),(390,530672400,6),(390,543978000,7),(390,562122000,6),(390,575427600,7),(390,593571600,6),(390,606877200,7),(390,625626000,6),(390,638326800,7),(390,657075600,6),(390,670381200,7),(390,688525200,6),(390,701830800,7),(390,719974800,6),(390,733280400,7),(390,751424400,6),(390,764730000,7),(390,782874000,6),(390,796179600,7),(390,814323600,6),(390,828234000,7),(390,846378000,6),(390,859683600,7),(390,877827600,6),(390,891133200,7),(390,909277200,6),(390,922582800,7),(390,941331600,6),(390,954032400,7),(390,972781200,6),(390,985482000,7),(390,1004230800,6),(390,1017536400,7),(390,1035680400,6),(390,1048986000,7),(390,1067130000,6),(390,1080435600,7),(390,1099184400,6),(390,1111885200,7),(390,1130634000,6),(390,1143334800,7),(390,1162083600,6),(390,1174784400,7),(390,1193533200,6),(390,1206838800,7),(390,1224982800,6),(390,1238288400,7),(390,1256432400,6),(390,1269738000,7),(390,1288486800,6),(390,1301187600,7),(390,1319936400,6),(390,1332637200,7),(390,1351386000,6),(390,1364691600,7),(390,1382835600,6),(390,1396141200,7),(390,1414285200,6),(390,1427590800,7),(390,1445734800,6),(390,1459040400,7),(390,1477789200,6),(390,1490490000,7),(390,1509238800,6),(390,1521939600,7),(390,1540688400,6),(390,1553994000,7),(390,1572138000,6),(390,1585443600,7),(390,1603587600,6),(390,1616893200,7),(390,1635642000,6),(390,1648342800,7),(390,1667091600,6),(390,1679792400,7),(390,1698541200,6),(390,1711846800,7),(390,1729990800,6),(390,1743296400,7),(390,1761440400,6),(390,1774746000,7),(390,1792890000,6),(390,1806195600,7),(390,1824944400,6),(390,1837645200,7),(390,1856394000,6),(390,1869094800,7),(390,1887843600,6),(390,1901149200,7),(390,1919293200,6),(390,1932598800,7),(390,1950742800,6),(390,1964048400,7),(390,1982797200,6),(390,1995498000,7),(390,2014246800,6),(390,2026947600,7),(390,2045696400,6),(390,2058397200,7),(390,2077146000,6),(390,2090451600,7),(390,2108595600,6),(390,2121901200,7),(390,2140045200,6),(426,-2147483648,1),(426,-1740355200,2),(426,-1693702800,5),(426,-1680483600,2),(426,-1663455600,3),(426,-1650150000,4),(426,-1632006000,3),(426,-1618700400,4),(426,-1613826000,8),(426,-1604278800,6),(426,-1585530000,7),(426,-1574038800,6),(426,-1552266000,7),(426,-1539997200,6),(426,-1520557200,7),(426,-1507510800,6),(426,-1490576400,7),(426,-1473642000,6),(426,-1459126800,7),(426,-1444006800,6),(426,-1427677200,7),(426,-1411952400,6),(426,-1396227600,7),(426,-1379293200,6),(426,-1364778000,7),(426,-1348448400,6),(426,-1333328400,7),(426,-1316394000,6),(426,-1301263200,7),(426,-1284328800,6),(426,-1269813600,7),(426,-1253484000,6),(426,-1238364000,7),(426,-1221429600,6),(426,-1206914400,7),(426,-1191189600,6),(426,-1175464800,7),(426,-1160344800,6),(426,-1143410400,7),(426,-1127685600,6),(426,-1111960800,7),(426,-1096840800,6),(426,-1080511200,7),(426,-1063576800,6),(426,-1049061600,7),(426,-1033336800,6),(426,-1017612000,7),(426,-1002492000,6),(426,-986162400,7),(426,-969228000,6),(426,-950479200,7),(426,-942012000,6),(426,-934668000,3),(426,-857257200,4),(426,-844556400,3),(426,-828226800,4),(426,-812502000,3),(426,-798073200,4),(426,-781052400,3),(426,-766623600,4),(426,-745455600,3),(426,-733273200,4),(426,228877200,9),(426,243997200,10),(426,260326800,9),(426,276051600,10),(426,291776400,9),(426,307501200,10),(426,323830800,9),(426,338950800,10),(426,354675600,9),(426,370400400,10),(426,386125200,9),(426,401850000,10),(426,417574800,9),(426,433299600,10),(426,449024400,9),(426,465354000,10),(426,481078800,9),(426,496803600,10),(426,512528400,9),(426,528253200,10),(426,543978000,9),(426,559702800,10),(426,575427600,9),(426,591152400,10),(426,606877200,9),(426,622602000,10),(426,638326800,9),(426,654656400,10),(426,670381200,9),(426,686106000,10),(426,701830800,9),(426,717555600,10),(426,733280400,9),(426,749005200,10),(426,764730000,9),(426,780454800,10),(426,796179600,9),(426,811904400,10),(426,828234000,9),(426,846378000,10),(426,859683600,9),(426,877827600,10),(426,891133200,9),(426,909277200,10),(426,922582800,9),(426,941331600,10),(426,954032400,9),(426,972781200,10),(426,985482000,9),(426,1004230800,10),(426,1017536400,9),(426,1035680400,10),(426,1048986000,9),(426,1067130000,10),(426,1080435600,9),(426,1099184400,10),(426,1111885200,9),(426,1130634000,10),(426,1143334800,9),(426,1162083600,10),(426,1174784400,9),(426,1193533200,10),(426,1206838800,9),(426,1224982800,10),(426,1238288400,9),(426,1256432400,10),(426,1269738000,9),(426,1288486800,10),(426,1301187600,9),(426,1319936400,10),(426,1332637200,9),(426,1351386000,10),(426,1364691600,9),(426,1382835600,10),(426,1396141200,9),(426,1414285200,10),(426,1427590800,9),(426,1445734800,10),(426,1459040400,9),(426,1477789200,10),(426,1490490000,9),(426,1509238800,10),(426,1521939600,9),(426,1540688400,10),(426,1553994000,9),(426,1572138000,10),(426,1585443600,9),(426,1603587600,10),(426,1616893200,9),(426,1635642000,10),(426,1648342800,9),(426,1667091600,10),(426,1679792400,9),(426,1698541200,10),(426,1711846800,9),(426,1729990800,10),(426,1743296400,9),(426,1761440400,10),(426,1774746000,9),(426,1792890000,10),(426,1806195600,9),(426,1824944400,10),(426,1837645200,9),(426,1856394000,10),(426,1869094800,9),(426,1887843600,10),(426,1901149200,9),(426,1919293200,10),(426,1932598800,9),(426,1950742800,10),(426,1964048400,9),(426,1982797200,10),(426,1995498000,9),(426,2014246800,10),(426,2026947600,9),(426,2045696400,10),(426,2058397200,9),(426,2077146000,10),(426,2090451600,9),(426,2108595600,10),(426,2121901200,9),(426,2140045200,10),(427,-2147483648,1),(427,-733881600,2),(427,481078800,3),(427,496803600,4),(427,512528400,3),(427,528253200,4),(427,543978000,3),(427,559702800,4),(427,575427600,3),(427,591152400,4),(427,606877200,3),(427,622602000,4),(427,638326800,3),(427,654656400,4),(427,670381200,3),(427,686106000,4),(427,701830800,3),(427,717555600,4),(427,733280400,3),(427,749005200,4),(427,764730000,3),(427,780454800,4),(427,796179600,3),(427,811904400,4),(427,828234000,3),(427,846378000,4),(427,859683600,3),(427,877827600,4),(427,891133200,3),(427,909277200,4),(427,922582800,3),(427,941331600,4),(427,954032400,3),(427,972781200,4),(427,985482000,3),(427,1004230800,4),(427,1017536400,3),(427,1035680400,4),(427,1048986000,3),(427,1067130000,4),(427,1080435600,3),(427,1099184400,4),(427,1111885200,3),(427,1130634000,4),(427,1143334800,3),(427,1162083600,4),(427,1174784400,3),(427,1193533200,4),(427,1206838800,3),(427,1224982800,4),(427,1238288400,3),(427,1256432400,4),(427,1269738000,3),(427,1288486800,4),(427,1301187600,3),(427,1319936400,4),(427,1332637200,3),(427,1351386000,4),(427,1364691600,3),(427,1382835600,4),(427,1396141200,3),(427,1414285200,4),(427,1427590800,3),(427,1445734800,4),(427,1459040400,3),(427,1477789200,4),(427,1490490000,3),(427,1509238800,4),(427,1521939600,3),(427,1540688400,4),(427,1553994000,3),(427,1572138000,4),(427,1585443600,3),(427,1603587600,4),(427,1616893200,3),(427,1635642000,4),(427,1648342800,3),(427,1667091600,4),(427,1679792400,3),(427,1698541200,4),(427,1711846800,3),(427,1729990800,4),(427,1743296400,3),(427,1761440400,4),(427,1774746000,3),(427,1792890000,4),(427,1806195600,3),(427,1824944400,4),(427,1837645200,3),(427,1856394000,4),(427,1869094800,3),(427,1887843600,4),(427,1901149200,3),(427,1919293200,4),(427,1932598800,3),(427,1950742800,4),(427,1964048400,3),(427,1982797200,4),(427,1995498000,3),(427,2014246800,4),(427,2026947600,3),(427,2045696400,4),(427,2058397200,3),(427,2077146000,4),(427,2090451600,3),(427,2108595600,4),(427,2121901200,3),(427,2140045200,4),(428,-1441249932,1),(428,-1247540400,3),(428,354916800,2),(428,370724400,3),(428,386452800,2),(428,402260400,3),(428,417988800,2),(428,433796400,3),(428,449611200,2),(428,465343200,4),(428,481068000,5),(428,496792800,4),(428,512517600,5),(428,528242400,4),(428,543967200,5),(428,559692000,4),(428,575416800,5),(428,591141600,4),(428,606866400,6),(428,622594800,7),(428,638319600,6),(428,654649200,7),(428,670374000,4),(428,701820000,6),(428,717548400,7),(428,733273200,6),(428,748998000,7),(428,764722800,6),(428,780447600,7),(428,796172400,6),(428,811897200,7),(428,828226800,6),(428,846370800,7),(428,859676400,6),(428,877820400,7),(428,891126000,6),(428,909270000,7),(428,922575600,6),(428,941324400,7),(428,954025200,6),(428,972774000,7),(428,985474800,6),(428,1004223600,7),(428,1017529200,6),(428,1035673200,7),(428,1048978800,6),(428,1067122800,7),(428,1080428400,6),(428,1099177200,7),(428,1111878000,6),(428,1130626800,7),(428,1143327600,6),(428,1162076400,7),(428,1174777200,6),(428,1193526000,7),(428,1206831600,6),(428,1224975600,7),(428,1238281200,6),(428,1256425200,7),(428,1269730800,6),(428,1288479600,7),(428,1301180400,4),(428,1414274400,7),(428,1459033200,4),(428,2147483647,4),(429,-2147483648,1),(429,-1686101632,3),(429,-1182996000,2),(429,-1178161200,3),(429,-906861600,2),(429,-904878000,5),(429,-857257200,4),(429,-844477200,5),(429,-828237600,4),(429,-812422800,3),(429,-552362400,2),(429,-541652400,3),(429,166485600,6),(429,186184800,7),(429,198028800,6),(429,213753600,7),(429,228873600,6),(429,244080000,7),(429,260323200,6),(429,275446800,3),(429,291798000,2),(429,307407600,3),(429,323388000,2),(429,338936400,3),(429,354675600,8),(429,370400400,9),(429,386125200,8),(429,401850000,9),(429,417574800,8),(429,433299600,9),(429,449024400,8),(429,465354000,9),(429,481078800,8),(429,496803600,9),(429,512528400,8),(429,528253200,9),(429,543978000,8),(429,559702800,9),(429,575427600,8),(429,591152400,9),(429,606877200,8),(429,622602000,9),(429,638326800,8),(429,654656400,9),(429,670381200,8),(429,686106000,9),(429,701830800,8),(429,717555600,9),(429,733280400,8),(429,749005200,9),(429,764730000,8),(429,780454800,9),(429,796179600,8),(429,811904400,9),(429,828234000,8),(429,846378000,9),(429,859683600,8),(429,877827600,9),(429,891133200,8),(429,909277200,9),(429,922582800,8),(429,941331600,9),(429,954032400,8),(429,972781200,9),(429,985482000,8),(429,1004230800,9),(429,1017536400,8),(429,1035680400,9),(429,1048986000,8),(429,1067130000,9),(429,1080435600,8),(429,1099184400,9),(429,1111885200,8),(429,1130634000,9),(429,1143334800,8),(429,1162083600,9),(429,1174784400,8),(429,1193533200,9),(429,1206838800,8),(429,1224982800,9),(429,1238288400,8),(429,1256432400,9),(429,1269738000,8),(429,1288486800,9),(429,1301187600,8),(429,1319936400,9),(429,1332637200,8),(429,1351386000,9),(429,1364691600,8),(429,1382835600,9),(429,1396141200,8),(429,1414285200,9),(429,1427590800,8),(429,1445734800,9),(429,1459040400,8),(429,1477789200,9),(429,1490490000,8),(429,1509238800,9),(429,1521939600,8),(429,1540688400,9),(429,1553994000,8),(429,1572138000,9),(429,1585443600,8),(429,1603587600,9),(429,1616893200,8),(429,1635642000,9),(429,1648342800,8),(429,1667091600,9),(429,1679792400,8),(429,1698541200,9),(429,1711846800,8),(429,1729990800,9),(429,1743296400,8),(429,1761440400,9),(429,1774746000,8),(429,1792890000,9),(429,1806195600,8),(429,1824944400,9),(429,1837645200,8),(429,1856394000,9),(429,1869094800,8),(429,1887843600,9),(429,1901149200,8),(429,1919293200,9),(429,1932598800,8),(429,1950742800,9),(429,1964048400,8),(429,1982797200,9),(429,1995498000,8),(429,2014246800,9),(429,2026947600,8),(429,2045696400,9),(429,2058397200,8),(429,2077146000,9),(429,2090451600,8),(429,2108595600,9),(429,2121901200,8),(429,2140045200,9),(430,-2147483648,4),(430,-1691964000,1),(430,-1680472800,2),(430,-1664143200,1),(430,-1650146400,2),(430,-1633903200,1),(430,-1617487200,2),(430,-1601848800,1),(430,-1586037600,2),(430,-1570399200,1),(430,-1552168800,2),(430,-1538344800,1),(430,-1522533600,2),(430,-1507500000,1),(430,-1490565600,2),(430,-1473631200,1),(430,-1460930400,2),(430,-1442786400,1),(430,-1428876000,2),(430,-1410732000,1),(430,-1396216800,2),(430,-1379282400,1),(430,-1364767200,2),(430,-1348437600,1),(430,-1333317600,2),(430,-1315778400,1),(430,-1301263200,2),(430,-1284328800,1),(430,-1269813600,2),(430,-1253484000,1),(430,-1238364000,2),(430,-1221429600,1),(430,-1206914400,2),(430,-1189980000,1),(430,-1175464800,2),(430,-1159135200,1),(430,-1143410400,2),(430,-1126476000,1),(430,-1111960800,2),(430,-1095631200,1),(430,-1080511200,2),(430,-1063576800,1),(430,-1049061600,2),(430,-1032127200,1),(430,-1017612000,2),(430,-1001282400,1),(430,-986162400,2),(430,-969228000,1),(430,-950479200,2),(430,-942012000,1),(430,-904518000,3),(430,-896050800,1),(430,-875487600,3),(430,-864601200,1),(430,-844038000,3),(430,-832546800,1),(430,-812588400,3),(430,-798073200,1),(430,-781052400,3),(430,-772066800,1),(430,-764805600,2),(430,-748476000,1),(430,-733356000,2),(430,-719445600,1),(430,-717030000,3),(430,-706748400,1),(430,-699487200,2),(430,-687996000,1),(430,-668037600,2),(430,-654732000,1),(430,-636588000,2),(430,-622072800,1),(430,-605743200,2),(430,-590623200,1),(430,-574293600,2),(430,-558568800,1),(430,-542239200,2),(430,-527119200,1),(430,-512604000,2),(430,-496274400,1),(430,-481154400,2),(430,-464220000,1),(430,-449704800,2),(430,-432165600,1),(430,-417650400,2),(430,-401320800,1),(430,-386200800,2),(430,-369266400,1),(430,-354751200,2),(430,-337816800,1),(430,-323301600,2),(430,-306972000,1),(430,-291852000,2),(430,-276732000,1),(430,-257983200,2),(430,-245282400,1),(430,-226533600,2),(430,-213228000,1),(430,-195084000,2),(430,-182383200,1),(430,-163634400,2),(430,-150933600,1),(430,-132184800,2),(430,-119484000,1),(430,-100735200,2),(430,-88034400,1),(430,-68680800,2),(430,-59004000,1),(430,-37242000,5),(430,57722400,7),(430,69818400,1),(430,89172000,2),(430,101268000,1),(430,120621600,2),(430,132717600,1),(430,152071200,2),(430,164167200,1),(430,183520800,2),(430,196221600,1),(430,214970400,2),(430,227671200,1),(430,246420000,2),(430,259120800,1),(430,278474400,2),(430,290570400,1),(430,309924000,2),(430,322020000,1),(430,341373600,2),(430,354675600,6),(430,372819600,7),(430,386125200,6),(430,404269200,7),(430,417574800,6),(430,435718800,7),(430,449024400,6),(430,467773200,7),(430,481078800,6),(430,499222800,7),(430,512528400,6),(430,530672400,7),(430,543978000,6),(430,562122000,7),(430,575427600,6),(430,593571600,7),(430,606877200,6),(430,625626000,7),(430,638326800,6),(430,657075600,7),(430,670381200,6),(430,688525200,7),(430,701830800,6),(430,719974800,7),(430,733280400,6),(430,751424400,7),(430,764730000,6),(430,782874000,7),(430,796179600,6),(430,814323600,7),(430,828234000,6),(430,846378000,7),(430,859683600,6),(430,877827600,7),(430,891133200,6),(430,909277200,7),(430,922582800,6),(430,941331600,7),(430,954032400,6),(430,972781200,7),(430,985482000,6),(430,1004230800,7),(430,1017536400,6),(430,1035680400,7),(430,1048986000,6),(430,1067130000,7),(430,1080435600,6),(430,1099184400,7),(430,1111885200,6),(430,1130634000,7),(430,1143334800,6),(430,1162083600,7),(430,1174784400,6),(430,1193533200,7),(430,1206838800,6),(430,1224982800,7),(430,1238288400,6),(430,1256432400,7),(430,1269738000,6),(430,1288486800,7),(430,1301187600,6),(430,1319936400,7),(430,1332637200,6),(430,1351386000,7),(430,1364691600,6),(430,1382835600,7),(430,1396141200,6),(430,1414285200,7),(430,1427590800,6),(430,1445734800,7),(430,1459040400,6),(430,1477789200,7),(430,1490490000,6),(430,1509238800,7),(430,1521939600,6),(430,1540688400,7),(430,1553994000,6),(430,1572138000,7),(430,1585443600,6),(430,1603587600,7),(430,1616893200,6),(430,1635642000,7),(430,1648342800,6),(430,1667091600,7),(430,1679792400,6),(430,1698541200,7),(430,1711846800,6),(430,1729990800,7),(430,1743296400,6),(430,1761440400,7),(430,1774746000,6),(430,1792890000,7),(430,1806195600,6),(430,1824944400,7),(430,1837645200,6),(430,1856394000,7),(430,1869094800,6),(430,1887843600,7),(430,1901149200,6),(430,1919293200,7),(430,1932598800,6),(430,1950742800,7),(430,1964048400,6),(430,1982797200,7),(430,1995498000,6),(430,2014246800,7),(430,2026947600,6),(430,2045696400,7),(430,2058397200,6),(430,2077146000,7),(430,2090451600,6),(430,2108595600,7),(430,2121901200,6),(430,2140045200,7),(431,-2147483648,1),(431,-905824800,4),(431,-857257200,2),(431,-844556400,3),(431,-828226800,2),(431,-812502000,3),(431,-796777200,2),(431,-777942000,3),(431,-766623600,2),(431,417574800,5),(431,433299600,6),(431,449024400,5),(431,465354000,6),(431,481078800,5),(431,496803600,6),(431,512528400,5),(431,528253200,6),(431,543978000,5),(431,559702800,6),(431,575427600,5),(431,591152400,6),(431,606877200,5),(431,622602000,6),(431,638326800,5),(431,654656400,6),(431,670381200,5),(431,686106000,6),(431,701830800,5),(431,717555600,6),(431,733280400,5),(431,749005200,6),(431,764730000,5),(431,780454800,6),(431,796179600,5),(431,811904400,6),(431,828234000,5),(431,846378000,6),(431,859683600,5),(431,877827600,6),(431,891133200,5),(431,909277200,6),(431,922582800,5),(431,941331600,6),(431,954032400,5),(431,972781200,6),(431,985482000,5),(431,1004230800,6),(431,1017536400,5),(431,1035680400,6),(431,1048986000,5),(431,1067130000,6),(431,1080435600,5),(431,1099184400,6),(431,1111885200,5),(431,1130634000,6),(431,1143334800,5),(431,1162083600,6),(431,1174784400,5),(431,1193533200,6),(431,1206838800,5),(431,1224982800,6),(431,1238288400,5),(431,1256432400,6),(431,1269738000,5),(431,1288486800,6),(431,1301187600,5),(431,1319936400,6),(431,1332637200,5),(431,1351386000,6),(431,1364691600,5),(431,1382835600,6),(431,1396141200,5),(431,1414285200,6),(431,1427590800,5),(431,1445734800,6),(431,1459040400,5),(431,1477789200,6),(431,1490490000,5),(431,1509238800,6),(431,1521939600,5),(431,1540688400,6),(431,1553994000,5),(431,1572138000,6),(431,1585443600,5),(431,1603587600,6),(431,1616893200,5),(431,1635642000,6),(431,1648342800,5),(431,1667091600,6),(431,1679792400,5),(431,1698541200,6),(431,1711846800,5),(431,1729990800,6),(431,1743296400,5),(431,1761440400,6),(431,1774746000,5),(431,1792890000,6),(431,1806195600,5),(431,1824944400,6),(431,1837645200,5),(431,1856394000,6),(431,1869094800,5),(431,1887843600,6),(431,1901149200,5),(431,1919293200,6),(431,1932598800,5),(431,1950742800,6),(431,1964048400,5),(431,1982797200,6),(431,1995498000,5),(431,2014246800,6),(431,2026947600,5),(431,2045696400,6),(431,2058397200,5),(431,2077146000,6),(431,2090451600,5),(431,2108595600,6),(431,2121901200,5),(431,2140045200,6),(432,-2147483648,2),(432,-1693706400,1),(432,-1680483600,2),(432,-1663455600,3),(432,-1650150000,4),(432,-1632006000,3),(432,-1618700400,4),(432,-938905200,3),(432,-857257200,4),(432,-844556400,3),(432,-828226800,4),(432,-812502000,3),(432,-796777200,4),(432,-781052400,3),(432,-776563200,5),(432,-765936000,1),(432,-761180400,4),(432,-748479600,3),(432,-733273200,4),(432,-717631200,3),(432,-714610800,6),(432,-710380800,1),(432,-701910000,4),(432,-684975600,3),(432,-670460400,4),(432,-654130800,3),(432,-639010800,4),(432,323830800,7),(432,338950800,8),(432,354675600,7),(432,370400400,8),(432,386125200,7),(432,401850000,8),(432,417574800,7),(432,433299600,8),(432,449024400,7),(432,465354000,8),(432,481078800,7),(432,496803600,8),(432,512528400,7),(432,528253200,8),(432,543978000,7),(432,559702800,8),(432,575427600,7),(432,591152400,8),(432,606877200,7),(432,622602000,8),(432,638326800,7),(432,654656400,8),(432,670381200,7),(432,686106000,8),(432,701830800,7),(432,717555600,8),(432,733280400,7),(432,749005200,8),(432,764730000,7),(432,780454800,8),(432,796179600,7),(432,811904400,8),(432,828234000,7),(432,846378000,8),(432,859683600,7),(432,877827600,8),(432,891133200,7),(432,909277200,8),(432,922582800,7),(432,941331600,8),(432,954032400,7),(432,972781200,8),(432,985482000,7),(432,1004230800,8),(432,1017536400,7),(432,1035680400,8),(432,1048986000,7),(432,1067130000,8),(432,1080435600,7),(432,1099184400,8),(432,1111885200,7),(432,1130634000,8),(432,1143334800,7),(432,1162083600,8),(432,1174784400,7),(432,1193533200,8),(432,1206838800,7),(432,1224982800,8),(432,1238288400,7),(432,1256432400,8),(432,1269738000,7),(432,1288486800,8),(432,1301187600,7),(432,1319936400,8),(432,1332637200,7),(432,1351386000,8),(432,1364691600,7),(432,1382835600,8),(432,1396141200,7),(432,1414285200,8),(432,1427590800,7),(432,1445734800,8),(432,1459040400,7),(432,1477789200,8),(432,1490490000,7),(432,1509238800,8),(432,1521939600,7),(432,1540688400,8),(432,1553994000,7),(432,1572138000,8),(432,1585443600,7),(432,1603587600,8),(432,1616893200,7),(432,1635642000,8),(432,1648342800,7),(432,1667091600,8),(432,1679792400,7),(432,1698541200,8),(432,1711846800,7),(432,1729990800,8),(432,1743296400,7),(432,1761440400,8),(432,1774746000,7),(432,1792890000,8),(432,1806195600,7),(432,1824944400,8),(432,1837645200,7),(432,1856394000,8),(432,1869094800,7),(432,1887843600,8),(432,1901149200,7),(432,1919293200,8),(432,1932598800,7),(432,1950742800,8),(432,1964048400,7),(432,1982797200,8),(432,1995498000,7),(432,2014246800,8),(432,2026947600,7),(432,2045696400,8),(432,2058397200,7),(432,2077146000,8),(432,2090451600,7),(432,2108595600,8),(432,2121901200,7),(432,2140045200,8),(433,-2147483648,2),(433,-1693706400,1),(433,-1680483600,2),(433,-1663455600,3),(433,-1650150000,4),(433,-1632006000,3),(433,-1618700400,4),(433,-938905200,3),(433,-857257200,4),(433,-844556400,3),(433,-828226800,4),(433,-812502000,3),(433,-796777200,4),(433,-781052400,3),(433,-765327600,4),(433,-746578800,3),(433,-733359600,4),(433,-728517600,5),(433,-721260000,2),(433,-716425200,3),(433,-701910000,4),(433,-684975600,3),(433,-670460400,4),(433,-654217200,3),(433,-639010800,4),(433,291776400,6),(433,307501200,7),(433,323830800,6),(433,338950800,7),(433,354675600,6),(433,370400400,7),(433,386125200,6),(433,401850000,7),(433,417574800,6),(433,433299600,7),(433,449024400,6),(433,465354000,7),(433,481078800,6),(433,496803600,7),(433,512528400,6),(433,528253200,7),(433,543978000,6),(433,559702800,7),(433,575427600,6),(433,591152400,7),(433,606877200,6),(433,622602000,7),(433,638326800,6),(433,654656400,7),(433,670381200,6),(433,686106000,7),(433,701830800,6),(433,717555600,7),(433,733280400,6),(433,749005200,7),(433,764730000,6),(433,780454800,7),(433,796179600,6),(433,811904400,7),(433,828234000,6),(433,846378000,7),(433,859683600,6),(433,877827600,7),(433,891133200,6),(433,909277200,7),(433,922582800,6),(433,941331600,7),(433,954032400,6),(433,972781200,7),(433,985482000,6),(433,1004230800,7),(433,1017536400,6),(433,1035680400,7),(433,1048986000,6),(433,1067130000,7),(433,1080435600,6),(433,1099184400,7),(433,1111885200,6),(433,1130634000,7),(433,1143334800,6),(433,1162083600,7),(433,1174784400,6),(433,1193533200,7),(433,1206838800,6),(433,1224982800,7),(433,1238288400,6),(433,1256432400,7),(433,1269738000,6),(433,1288486800,7),(433,1301187600,6),(433,1319936400,7),(433,1332637200,6),(433,1351386000,7),(433,1364691600,6),(433,1382835600,7),(433,1396141200,6),(433,1414285200,7),(433,1427590800,6),(433,1445734800,7),(433,1459040400,6),(433,1477789200,7),(433,1490490000,6),(433,1509238800,7),(433,1521939600,6),(433,1540688400,7),(433,1553994000,6),(433,1572138000,7),(433,1585443600,6),(433,1603587600,7),(433,1616893200,6),(433,1635642000,7),(433,1648342800,6),(433,1667091600,7),(433,1679792400,6),(433,1698541200,7),(433,1711846800,6),(433,1729990800,7),(433,1743296400,6),(433,1761440400,7),(433,1774746000,6),(433,1792890000,7),(433,1806195600,6),(433,1824944400,7),(433,1837645200,6),(433,1856394000,7),(433,1869094800,6),(433,1887843600,7),(433,1901149200,6),(433,1919293200,7),(433,1932598800,6),(433,1950742800,7),(433,1964048400,6),(433,1982797200,7),(433,1995498000,6),(433,2014246800,7),(433,2026947600,6),(433,2045696400,7),(433,2058397200,6),(433,2077146000,7),(433,2090451600,6),(433,2108595600,7),(433,2121901200,6),(433,2140045200,7),(434,-2147483648,1),(434,-1740355200,2),(434,-1693702800,5),(434,-1680483600,2),(434,-1663455600,3),(434,-1650150000,4),(434,-1632006000,3),(434,-1618700400,4),(434,-1613826000,8),(434,-1604278800,6),(434,-1585530000,7),(434,-1574038800,6),(434,-1552266000,7),(434,-1539997200,6),(434,-1520557200,7),(434,-1507510800,6),(434,-1490576400,7),(434,-1473642000,6),(434,-1459126800,7),(434,-1444006800,6),(434,-1427677200,7),(434,-1411952400,6),(434,-1396227600,7),(434,-1379293200,6),(434,-1364778000,7),(434,-1348448400,6),(434,-1333328400,7),(434,-1316394000,6),(434,-1301263200,7),(434,-1284328800,6),(434,-1269813600,7),(434,-1253484000,6),(434,-1238364000,7),(434,-1221429600,6),(434,-1206914400,7),(434,-1191189600,6),(434,-1175464800,7),(434,-1160344800,6),(434,-1143410400,7),(434,-1127685600,6),(434,-1111960800,7),(434,-1096840800,6),(434,-1080511200,7),(434,-1063576800,6),(434,-1049061600,7),(434,-1033336800,6),(434,-1017612000,7),(434,-1002492000,6),(434,-986162400,7),(434,-969228000,6),(434,-950479200,7),(434,-942012000,6),(434,-934668000,3),(434,-857257200,4),(434,-844556400,3),(434,-828226800,4),(434,-812502000,3),(434,-798073200,4),(434,-781052400,3),(434,-766623600,4),(434,-745455600,3),(434,-733273200,4),(434,228877200,9),(434,243997200,10),(434,260326800,9),(434,276051600,10),(434,291776400,9),(434,307501200,10),(434,323830800,9),(434,338950800,10),(434,354675600,9),(434,370400400,10),(434,386125200,9),(434,401850000,10),(434,417574800,9),(434,433299600,10),(434,449024400,9),(434,465354000,10),(434,481078800,9),(434,496803600,10),(434,512528400,9),(434,528253200,10),(434,543978000,9),(434,559702800,10),(434,575427600,9),(434,591152400,10),(434,606877200,9),(434,622602000,10),(434,638326800,9),(434,654656400,10),(434,670381200,9),(434,686106000,10),(434,701830800,9),(434,717555600,10),(434,733280400,9),(434,749005200,10),(434,764730000,9),(434,780454800,10),(434,796179600,9),(434,811904400,10),(434,828234000,9),(434,846378000,10),(434,859683600,9),(434,877827600,10),(434,891133200,9),(434,909277200,10),(434,922582800,9),(434,941331600,10),(434,954032400,9),(434,972781200,10),(434,985482000,9),(434,1004230800,10),(434,1017536400,9),(434,1035680400,10),(434,1048986000,9),(434,1067130000,10),(434,1080435600,9),(434,1099184400,10),(434,1111885200,9),(434,1130634000,10),(434,1143334800,9),(434,1162083600,10),(434,1174784400,9),(434,1193533200,10),(434,1206838800,9),(434,1224982800,10),(434,1238288400,9),(434,1256432400,10),(434,1269738000,9),(434,1288486800,10),(434,1301187600,9),(434,1319936400,10),(434,1332637200,9),(434,1351386000,10),(434,1364691600,9),(434,1382835600,10),(434,1396141200,9),(434,1414285200,10),(434,1427590800,9),(434,1445734800,10),(434,1459040400,9),(434,1477789200,10),(434,1490490000,9),(434,1509238800,10),(434,1521939600,9),(434,1540688400,10),(434,1553994000,9),(434,1572138000,10),(434,1585443600,9),(434,1603587600,10),(434,1616893200,9),(434,1635642000,10),(434,1648342800,9),(434,1667091600,10),(434,1679792400,9),(434,1698541200,10),(434,1711846800,9),(434,1729990800,10),(434,1743296400,9),(434,1761440400,10),(434,1774746000,9),(434,1792890000,10),(434,1806195600,9),(434,1824944400,10),(434,1837645200,9),(434,1856394000,10),(434,1869094800,9),(434,1887843600,10),(434,1901149200,9),(434,1919293200,10),(434,1932598800,9),(434,1950742800,10),(434,1964048400,9),(434,1982797200,10),(434,1995498000,9),(434,2014246800,10),(434,2026947600,9),(434,2045696400,10),(434,2058397200,9),(434,2077146000,10),(434,2090451600,9),(434,2108595600,10),(434,2121901200,9),(434,2140045200,10),(435,-2147483648,1),(435,-1213148664,5),(435,-1187056800,2),(435,-1175479200,3),(435,-1159754400,2),(435,-1144029600,3),(435,-1127700000,2),(435,-1111975200,3),(435,-1096250400,2),(435,-1080525600,3),(435,-1064800800,2),(435,-1049076000,3),(435,-1033351200,2),(435,-1017626400,3),(435,-1001901600,2),(435,-986176800,3),(435,-970452000,2),(435,-954727200,3),(435,296604000,4),(435,307486800,5),(435,323816400,4),(435,338940000,5),(435,354672000,2),(435,370396800,3),(435,386121600,2),(435,401846400,3),(435,417571200,2),(435,433296000,3),(435,449020800,2),(435,465350400,3),(435,481075200,2),(435,496800000,3),(435,512524800,2),(435,528249600,3),(435,543974400,2),(435,559699200,3),(435,575424000,2),(435,591148800,3),(435,606873600,2),(435,622598400,3),(435,638323200,2),(435,654652800,3),(435,670370400,2),(435,686095200,3),(435,701820000,2),(435,717544800,3),(435,733269600,2),(435,748994400,3),(435,764719200,4),(435,780440400,5),(435,796168800,4),(435,811890000,5),(435,828223200,4),(435,846363600,5),(435,859683600,6),(435,877827600,7),(435,891133200,6),(435,909277200,7),(435,922582800,6),(435,941331600,7),(435,954032400,6),(435,972781200,7),(435,985482000,6),(435,1004230800,7),(435,1017536400,6),(435,1035680400,7),(435,1048986000,6),(435,1067130000,7),(435,1080435600,6),(435,1099184400,7),(435,1111885200,6),(435,1130634000,7),(435,1143334800,6),(435,1162083600,7),(435,1174784400,6),(435,1193533200,7),(435,1206838800,6),(435,1224982800,7),(435,1238288400,6),(435,1256432400,7),(435,1269738000,6),(435,1288486800,7),(435,1301187600,6),(435,1319936400,7),(435,1332637200,6),(435,1351386000,7),(435,1364691600,6),(435,1382835600,7),(435,1396141200,6),(435,1414285200,7),(435,1427590800,6),(435,1445734800,7),(435,1459040400,6),(435,1477789200,7),(435,1490490000,6),(435,1509238800,7),(435,1521939600,6),(435,1540688400,7),(435,1553994000,6),(435,1572138000,7),(435,1585443600,6),(435,1603587600,7),(435,1616893200,6),(435,1635642000,7),(435,1648342800,6),(435,1667091600,7),(435,1679792400,6),(435,1698541200,7),(435,1711846800,6),(435,1729990800,7),(435,1743296400,6),(435,1761440400,7),(435,1774746000,6),(435,1792890000,7),(435,1806195600,6),(435,1824944400,7),(435,1837645200,6),(435,1856394000,7),(435,1869094800,6),(435,1887843600,7),(435,1901149200,6),(435,1919293200,7),(435,1932598800,6),(435,1950742800,7),(435,1964048400,6),(435,1982797200,7),(435,1995498000,6),(435,2014246800,7),(435,2026947600,6),(435,2045696400,7),(435,2058397200,6),(435,2077146000,7),(435,2090451600,6),(435,2108595600,7),(435,2121901200,6),(435,2140045200,7),(436,-2147483648,2),(436,-1693706400,1),(436,-1680483600,2),(436,-1663455600,3),(436,-1650150000,4),(436,-1632006000,1),(436,-1618700400,2),(436,-1600470000,1),(436,-1587250800,2),(436,-1569711600,1),(436,-1555196400,2),(436,-906775200,1),(436,-857257200,4),(436,-844556400,3),(436,-828226800,4),(436,-812502000,3),(436,-796777200,4),(436,-778471200,1),(436,-762656400,2),(436,-749689200,3),(436,-733276800,2),(436,-717634800,3),(436,-701910000,4),(436,-686185200,3),(436,-670460400,4),(436,-654130800,3),(436,-639010800,4),(436,-492656400,1),(436,-481168800,2),(436,-461199600,1),(436,-449708400,2),(436,-428540400,1),(436,-418258800,2),(436,-397090800,1),(436,-386809200,2),(436,323823600,1),(436,338943600,2),(436,354668400,1),(436,370393200,2),(436,386118000,1),(436,401842800,2),(436,417567600,1),(436,433292400,2),(436,449024400,5),(436,465354000,6),(436,481078800,5),(436,496803600,6),(436,512528400,5),(436,528253200,6),(436,543978000,5),(436,559702800,6),(436,575427600,5),(436,591152400,6),(436,606877200,5),(436,622602000,6),(436,638326800,5),(436,654656400,6),(436,670381200,5),(436,686106000,6),(436,701830800,5),(436,717555600,6),(436,733280400,5),(436,749005200,6),(436,764730000,5),(436,780454800,6),(436,796179600,5),(436,811904400,6),(436,828234000,5),(436,846378000,6),(436,859683600,5),(436,877827600,6),(436,891133200,5),(436,909277200,6),(436,922582800,5),(436,941331600,6),(436,954032400,5),(436,972781200,6),(436,985482000,5),(436,1004230800,6),(436,1017536400,5),(436,1035680400,6),(436,1048986000,5),(436,1067130000,6),(436,1080435600,5),(436,1099184400,6),(436,1111885200,5),(436,1130634000,6),(436,1143334800,5),(436,1162083600,6),(436,1174784400,5),(436,1193533200,6),(436,1206838800,5),(436,1224982800,6),(436,1238288400,5),(436,1256432400,6),(436,1269738000,5),(436,1288486800,6),(436,1301187600,5),(436,1319936400,6),(436,1332637200,5),(436,1351386000,6),(436,1364691600,5),(436,1382835600,6),(436,1396141200,5),(436,1414285200,6),(436,1427590800,5),(436,1445734800,6),(436,1459040400,5),(436,1477789200,6),(436,1490490000,5),(436,1509238800,6),(436,1521939600,5),(436,1540688400,6),(436,1553994000,5),(436,1572138000,6),(436,1585443600,5),(436,1603587600,6),(436,1616893200,5),(436,1635642000,6),(436,1648342800,5),(436,1667091600,6),(436,1679792400,5),(436,1698541200,6),(436,1711846800,5),(436,1729990800,6),(436,1743296400,5),(436,1761440400,6),(436,1774746000,5),(436,1792890000,6),(436,1806195600,5),(436,1824944400,6),(436,1837645200,5),(436,1856394000,6),(436,1869094800,5),(436,1887843600,6),(436,1901149200,5),(436,1919293200,6),(436,1932598800,5),(436,1950742800,6),(436,1964048400,5),(436,1982797200,6),(436,1995498000,5),(436,2014246800,6),(436,2026947600,5),(436,2045696400,6),(436,2058397200,5),(436,2077146000,6),(436,2090451600,5),(436,2108595600,6),(436,2121901200,5),(436,2140045200,6),(437,-2147483648,2),(437,-904435200,1),(437,-891129600,2),(437,-872985600,1),(437,-859680000,2),(437,354675600,3),(437,370400400,4),(437,386125200,3),(437,401850000,4),(437,417574800,3),(437,433299600,4),(437,449024400,3),(437,465354000,4),(437,481078800,3),(437,496803600,4),(437,512528400,3),(437,528253200,4),(437,543978000,3),(437,559702800,4),(437,575427600,3),(437,591152400,4),(437,606877200,3),(437,622602000,4),(437,638326800,3),(437,654656400,4),(437,670381200,3),(437,686106000,4),(437,701830800,3),(437,717555600,4),(437,733280400,3),(437,749005200,4),(437,764730000,3),(437,780454800,4),(437,796179600,3),(437,811904400,4),(437,828234000,3),(437,846378000,4),(437,859683600,3),(437,877827600,4),(437,891133200,3),(437,909277200,4),(437,922582800,3),(437,941331600,4),(437,954032400,3),(437,972781200,4),(437,985482000,3),(437,1004230800,4),(437,1017536400,3),(437,1035680400,4),(437,1048986000,3),(437,1067130000,4),(437,1080435600,3),(437,1099184400,4),(437,1111885200,3),(437,1130634000,4),(437,1143334800,3),(437,1162083600,4),(437,1174784400,3),(437,1193533200,4),(437,1206838800,3),(437,1224982800,4),(437,1238288400,3),(437,1256432400,4),(437,1269738000,3),(437,1288486800,4),(437,1301187600,3),(437,1319936400,4),(437,1332637200,3),(437,1351386000,4),(437,1364691600,3),(437,1382835600,4),(437,1396141200,3),(437,1414285200,4),(437,1427590800,3),(437,1445734800,4),(437,1459040400,3),(437,1477789200,4),(437,1490490000,3),(437,1509238800,4),(437,1521939600,3),(437,1540688400,4),(437,1553994000,3),(437,1572138000,4),(437,1585443600,3),(437,1603587600,4),(437,1616893200,3),(437,1635642000,4),(437,1648342800,3),(437,1667091600,4),(437,1679792400,3),(437,1698541200,4),(437,1711846800,3),(437,1729990800,4),(437,1743296400,3),(437,1761440400,4),(437,1774746000,3),(437,1792890000,4),(437,1806195600,3),(437,1824944400,4),(437,1837645200,3),(437,1856394000,4),(437,1869094800,3),(437,1887843600,4),(437,1901149200,3),(437,1919293200,4),(437,1932598800,3),(437,1950742800,4),(437,1964048400,3),(437,1982797200,4),(437,1995498000,3),(437,2014246800,4),(437,2026947600,3),(437,2045696400,4),(437,2058397200,3),(437,2077146000,4),(437,2090451600,3),(437,2108595600,4),(437,2121901200,3),(437,2140045200,4),(438,-2147483648,1),(438,-1637114100,2),(438,-1213148664,5),(438,-1187056800,3),(438,-1175479200,4),(438,-1159754400,3),(438,-1144029600,4),(438,-1127700000,3),(438,-1111975200,4),(438,-1096250400,3),(438,-1080525600,4),(438,-1064800800,3),(438,-1049076000,4),(438,-1033351200,3),(438,-1017626400,4),(438,-1001901600,3),(438,-986176800,4),(438,-970452000,3),(438,-954727200,4),(438,-927165600,6),(438,-898138800,9),(438,-857257200,7),(438,-844556400,8),(438,-828226800,7),(438,-812502000,8),(438,-800157600,11),(438,354920400,10),(438,370728000,11),(438,386456400,10),(438,402264000,11),(438,417992400,10),(438,433800000,11),(438,449614800,10),(438,465346800,12),(438,481071600,13),(438,496796400,12),(438,512521200,13),(438,528246000,12),(438,543970800,13),(438,559695600,12),(438,575420400,13),(438,591145200,12),(438,606870000,13),(438,622594800,12),(438,638319600,13),(438,641944800,6),(438,654652800,4),(438,670377600,3),(438,686102400,4),(438,701820000,6),(438,717541200,5),(438,733269600,6),(438,748990800,5),(438,764719200,6),(438,780440400,5),(438,796168800,6),(438,811890000,5),(438,828223200,6),(438,846363600,5),(438,859680000,6),(438,877824000,5),(438,891129600,6),(438,909273600,5),(438,922579200,6),(438,941328000,5),(438,954028800,6),(438,972777600,5),(438,985478400,6),(438,1004227200,5),(438,1017532800,6),(438,1035676800,5),(438,1048982400,6),(438,1067126400,5),(438,1080432000,6),(438,1099180800,5),(438,1111881600,6),(438,1130630400,5),(438,1143331200,6),(438,1162080000,5),(438,1174780800,6),(438,1193529600,5),(438,1206835200,6),(438,1224979200,5),(438,1238284800,6),(438,1256428800,5),(438,1269734400,6),(438,1288483200,5),(438,1301184000,6),(438,1319932800,5),(438,1332633600,6),(438,1351382400,5),(438,1364688000,6),(438,1382832000,5),(438,1396137600,6),(438,1414281600,5),(438,1427587200,6),(438,1445731200,5),(438,1459036800,6),(438,1477785600,5),(438,1490486400,6),(438,1509235200,5),(438,1521936000,6),(438,1540684800,5),(438,1553990400,6),(438,1572134400,5),(438,1585440000,6),(438,1603584000,5),(438,1616889600,6),(438,1635638400,5),(438,1648339200,6),(438,1667088000,5),(438,1679788800,6),(438,1698537600,5),(438,1711843200,6),(438,1729987200,5),(438,1743292800,6),(438,1761436800,5),(438,1774742400,6),(438,1792886400,5),(438,1806192000,6),(438,1824940800,5),(438,1837641600,6),(438,1856390400,5),(438,1869091200,6),(438,1887840000,5),(438,1901145600,6),(438,1919289600,5),(438,1932595200,6),(438,1950739200,5),(438,1964044800,6),(438,1982793600,5),(438,1995494400,6),(438,2014243200,5),(438,2026944000,6),(438,2045692800,5),(438,2058393600,6),(438,2077142400,5),(438,2090448000,6),(438,2108592000,5),(438,2121897600,6),(438,2140041600,5),(439,-2147483648,2),(439,-1693706400,1),(439,-1680483600,2),(439,-1663455600,3),(439,-1650150000,4),(439,-1632006000,3),(439,-1618700400,4),(439,-938905200,3),(439,-857257200,4),(439,-844556400,3),(439,-828226800,4),(439,-812502000,3),(439,-796777200,4),(439,-781052400,3),(439,-776563200,5),(439,-765936000,1),(439,-761180400,4),(439,-748479600,3),(439,-733273200,4),(439,-717631200,3),(439,-714610800,6),(439,-710380800,1),(439,-701910000,4),(439,-684975600,3),(439,-670460400,4),(439,-654130800,3),(439,-639010800,4),(439,323830800,7),(439,338950800,8),(439,354675600,7),(439,370400400,8),(439,386125200,7),(439,401850000,8),(439,417574800,7),(439,433299600,8),(439,449024400,7),(439,465354000,8),(439,481078800,7),(439,496803600,8),(439,512528400,7),(439,528253200,8),(439,543978000,7),(439,559702800,8),(439,575427600,7),(439,591152400,8),(439,606877200,7),(439,622602000,8),(439,638326800,7),(439,654656400,8),(439,670381200,7),(439,686106000,8),(439,701830800,7),(439,717555600,8),(439,733280400,7),(439,749005200,8),(439,764730000,7),(439,780454800,8),(439,796179600,7),(439,811904400,8),(439,828234000,7),(439,846378000,8),(439,859683600,7),(439,877827600,8),(439,891133200,7),(439,909277200,8),(439,922582800,7),(439,941331600,8),(439,954032400,7),(439,972781200,8),(439,985482000,7),(439,1004230800,8),(439,1017536400,7),(439,1035680400,8),(439,1048986000,7),(439,1067130000,8),(439,1080435600,7),(439,1099184400,8),(439,1111885200,7),(439,1130634000,8),(439,1143334800,7),(439,1162083600,8),(439,1174784400,7),(439,1193533200,8),(439,1206838800,7),(439,1224982800,8),(439,1238288400,7),(439,1256432400,8),(439,1269738000,7),(439,1288486800,8),(439,1301187600,7),(439,1319936400,8),(439,1332637200,7),(439,1351386000,8),(439,1364691600,7),(439,1382835600,8),(439,1396141200,7),(439,1414285200,8),(439,1427590800,7),(439,1445734800,8),(439,1459040400,7),(439,1477789200,8),(439,1490490000,7),(439,1509238800,8),(439,1521939600,7),(439,1540688400,8),(439,1553994000,7),(439,1572138000,8),(439,1585443600,7),(439,1603587600,8),(439,1616893200,7),(439,1635642000,8),(439,1648342800,7),(439,1667091600,8),(439,1679792400,7),(439,1698541200,8),(439,1711846800,7),(439,1729990800,8),(439,1743296400,7),(439,1761440400,8),(439,1774746000,7),(439,1792890000,8),(439,1806195600,7),(439,1824944400,8),(439,1837645200,7),(439,1856394000,8),(439,1869094800,7),(439,1887843600,8),(439,1901149200,7),(439,1919293200,8),(439,1932598800,7),(439,1950742800,8),(439,1964048400,7),(439,1982797200,8),(439,1995498000,7),(439,2014246800,8),(439,2026947600,7),(439,2045696400,8),(439,2058397200,7),(439,2077146000,8),(439,2090451600,7),(439,2108595600,8),(439,2121901200,7),(439,2140045200,8),(440,-2147483648,1),(440,-1691962479,2),(440,-1680471279,4),(440,-1664143200,3),(440,-1650146400,4),(440,-1633903200,3),(440,-1617487200,4),(440,-1601848800,3),(440,-1586037600,4),(440,-1570399200,3),(440,-1552168800,4),(440,-1538344800,3),(440,-1522533600,4),(440,-1507500000,5),(440,-1490565600,4),(440,-1473631200,5),(440,-1460930400,4),(440,-1442786400,5),(440,-1428876000,4),(440,-1410732000,5),(440,-1396216800,4),(440,-1379282400,5),(440,-1364767200,4),(440,-1348437600,5),(440,-1333317600,4),(440,-1315778400,5),(440,-1301263200,4),(440,-1284328800,5),(440,-1269813600,4),(440,-1253484000,5),(440,-1238364000,4),(440,-1221429600,5),(440,-1206914400,4),(440,-1189980000,5),(440,-1175464800,4),(440,-1159135200,5),(440,-1143410400,4),(440,-1126476000,5),(440,-1111960800,4),(440,-1095631200,5),(440,-1080511200,4),(440,-1063576800,5),(440,-1049061600,4),(440,-1032127200,5),(440,-1017612000,4),(440,-1001282400,5),(440,-986162400,4),(440,-969228000,5),(440,-950479200,4),(440,-942012000,5),(440,-733356000,4),(440,-719445600,5),(440,-699487200,4),(440,-684972000,5),(440,-668037600,4),(440,-654732000,5),(440,-636588000,4),(440,-622072800,5),(440,-605743200,4),(440,-590623200,5),(440,-574293600,4),(440,-558568800,5),(440,-542239200,4),(440,-527119200,5),(440,-512604000,4),(440,-496274400,5),(440,-481154400,4),(440,-464220000,5),(440,-449704800,4),(440,-432165600,5),(440,-417650400,4),(440,-401320800,5),(440,-386200800,4),(440,-369266400,5),(440,-354751200,4),(440,-337816800,5),(440,-323301600,4),(440,-306972000,5),(440,-291852000,4),(440,-276732000,5),(440,-257983200,4),(440,-245282400,5),(440,-226533600,4),(440,-213228000,5),(440,-195084000,4),(440,-182383200,5),(440,-163634400,4),(440,-150933600,5),(440,-132184800,4),(440,-119484000,5),(440,-100735200,4),(440,-88034400,5),(440,-68680800,4),(440,-59004000,5),(440,-37242000,8),(440,57722400,6),(440,69818400,7),(440,89172000,6),(440,101268000,7),(440,120621600,6),(440,132717600,7),(440,152071200,6),(440,164167200,7),(440,183520800,6),(440,196221600,7),(440,214970400,6),(440,227671200,7),(440,246420000,6),(440,259120800,7),(440,278474400,6),(440,290570400,7),(440,309924000,6),(440,322020000,7),(440,341373600,6),(440,354675600,7),(440,372819600,6),(440,386125200,7),(440,404269200,6),(440,417574800,7),(440,435718800,6),(440,449024400,7),(440,467773200,6),(440,481078800,7),(440,499222800,6),(440,512528400,7),(440,530672400,6),(440,543978000,7),(440,562122000,6),(440,575427600,7),(440,593571600,6),(440,606877200,7),(440,625626000,6),(440,638326800,7),(440,657075600,6),(440,670381200,7),(440,688525200,6),(440,701830800,7),(440,719974800,6),(440,733280400,7),(440,751424400,6),(440,764730000,7),(440,782874000,6),(440,796179600,7),(440,814323600,6),(440,828234000,7),(440,846378000,6),(440,859683600,7),(440,877827600,6),(440,891133200,7),(440,909277200,6),(440,922582800,7),(440,941331600,6),(440,954032400,7),(440,972781200,6),(440,985482000,7),(440,1004230800,6),(440,1017536400,7),(440,1035680400,6),(440,1048986000,7),(440,1067130000,6),(440,1080435600,7),(440,1099184400,6),(440,1111885200,7),(440,1130634000,6),(440,1143334800,7),(440,1162083600,6),(440,1174784400,7),(440,1193533200,6),(440,1206838800,7),(440,1224982800,6),(440,1238288400,7),(440,1256432400,6),(440,1269738000,7),(440,1288486800,6),(440,1301187600,7),(440,1319936400,6),(440,1332637200,7),(440,1351386000,6),(440,1364691600,7),(440,1382835600,6),(440,1396141200,7),(440,1414285200,6),(440,1427590800,7),(440,1445734800,6),(440,1459040400,7),(440,1477789200,6),(440,1490490000,7),(440,1509238800,6),(440,1521939600,7),(440,1540688400,6),(440,1553994000,7),(440,1572138000,6),(440,1585443600,7),(440,1603587600,6),(440,1616893200,7),(440,1635642000,6),(440,1648342800,7),(440,1667091600,6),(440,1679792400,7),(440,1698541200,6),(440,1711846800,7),(440,1729990800,6),(440,1743296400,7),(440,1761440400,6),(440,1774746000,7),(440,1792890000,6),(440,1806195600,7),(440,1824944400,6),(440,1837645200,7),(440,1856394000,6),(440,1869094800,7),(440,1887843600,6),(440,1901149200,7),(440,1919293200,6),(440,1932598800,7),(440,1950742800,6),(440,1964048400,7),(440,1982797200,6),(440,1995498000,7),(440,2014246800,6),(440,2026947600,7),(440,2045696400,6),(440,2058397200,7),(440,2077146000,6),(440,2090451600,7),(440,2108595600,6),(440,2121901200,7),(440,2140045200,6),(441,-2147483648,4),(441,-1691964000,1),(441,-1680472800,2),(441,-1664143200,1),(441,-1650146400,2),(441,-1633903200,1),(441,-1617487200,2),(441,-1601848800,1),(441,-1586037600,2),(441,-1570399200,1),(441,-1552168800,2),(441,-1538344800,1),(441,-1522533600,2),(441,-1507500000,1),(441,-1490565600,2),(441,-1473631200,1),(441,-1460930400,2),(441,-1442786400,1),(441,-1428876000,2),(441,-1410732000,1),(441,-1396216800,2),(441,-1379282400,1),(441,-1364767200,2),(441,-1348437600,1),(441,-1333317600,2),(441,-1315778400,1),(441,-1301263200,2),(441,-1284328800,1),(441,-1269813600,2),(441,-1253484000,1),(441,-1238364000,2),(441,-1221429600,1),(441,-1206914400,2),(441,-1189980000,1),(441,-1175464800,2),(441,-1159135200,1),(441,-1143410400,2),(441,-1126476000,1),(441,-1111960800,2),(441,-1095631200,1),(441,-1080511200,2),(441,-1063576800,1),(441,-1049061600,2),(441,-1032127200,1),(441,-1017612000,2),(441,-1001282400,1),(441,-986162400,2),(441,-969228000,1),(441,-950479200,2),(441,-942012000,1),(441,-904518000,3),(441,-896050800,1),(441,-875487600,3),(441,-864601200,1),(441,-844038000,3),(441,-832546800,1),(441,-812588400,3),(441,-798073200,1),(441,-781052400,3),(441,-772066800,1),(441,-764805600,2),(441,-748476000,1),(441,-733356000,2),(441,-719445600,1),(441,-717030000,3),(441,-706748400,1),(441,-699487200,2),(441,-687996000,1),(441,-668037600,2),(441,-654732000,1),(441,-636588000,2),(441,-622072800,1),(441,-605743200,2),(441,-590623200,1),(441,-574293600,2),(441,-558568800,1),(441,-542239200,2),(441,-527119200,1),(441,-512604000,2),(441,-496274400,1),(441,-481154400,2),(441,-464220000,1),(441,-449704800,2),(441,-432165600,1),(441,-417650400,2),(441,-401320800,5),(441,386125200,6),(441,401850000,7),(441,417574800,6),(441,433299600,7),(441,449024400,6),(441,465354000,7),(441,481078800,6),(441,496803600,7),(441,512528400,6),(441,528253200,7),(441,543978000,6),(441,559702800,7),(441,575427600,6),(441,591152400,7),(441,606877200,6),(441,622602000,7),(441,638326800,6),(441,654656400,7),(441,670381200,6),(441,686106000,7),(441,701830800,6),(441,717555600,7),(441,733280400,6),(441,749005200,7),(441,764730000,6),(441,780454800,7),(441,796179600,6),(441,811904400,7),(441,828234000,6),(441,846378000,7),(441,859683600,6),(441,877827600,7),(441,891133200,6),(441,909277200,7),(441,922582800,6),(441,941331600,7),(441,954032400,6),(441,972781200,7),(441,985482000,6),(441,1004230800,7),(441,1017536400,6),(441,1035680400,7),(441,1048986000,6),(441,1067130000,7),(441,1080435600,6),(441,1099184400,7),(441,1111885200,6),(441,1130634000,7),(441,1143334800,6),(441,1162083600,7),(441,1174784400,6),(441,1193533200,7),(441,1206838800,6),(441,1224982800,7),(441,1238288400,6),(441,1256432400,7),(441,1269738000,6),(441,1288486800,7),(441,1301187600,6),(441,1319936400,7),(441,1332637200,6),(441,1351386000,7),(441,1364691600,6),(441,1382835600,7),(441,1396141200,6),(441,1414285200,7),(441,1427590800,6),(441,1445734800,7),(441,1459040400,6),(441,1477789200,7),(441,1490490000,6),(441,1509238800,7),(441,1521939600,6),(441,1540688400,7),(441,1553994000,6),(441,1572138000,7),(441,1585443600,6),(441,1603587600,7),(441,1616893200,6),(441,1635642000,7),(441,1648342800,6),(441,1667091600,7),(441,1679792400,6),(441,1698541200,7),(441,1711846800,6),(441,1729990800,7),(441,1743296400,6),(441,1761440400,7),(441,1774746000,6),(441,1792890000,7),(441,1806195600,6),(441,1824944400,7),(441,1837645200,6),(441,1856394000,7),(441,1869094800,6),(441,1887843600,7),(441,1901149200,6),(441,1919293200,7),(441,1932598800,6),(441,1950742800,7),(441,1964048400,6),(441,1982797200,7),(441,1995498000,6),(441,2014246800,7),(441,2026947600,6),(441,2045696400,7),(441,2058397200,6),(441,2077146000,7),(441,2090451600,6),(441,2108595600,7),(441,2121901200,6),(441,2140045200,7),(442,-2147483648,4),(442,-1691964000,1),(442,-1680472800,2),(442,-1664143200,1),(442,-1650146400,2),(442,-1633903200,1),(442,-1617487200,2),(442,-1601848800,1),(442,-1586037600,2),(442,-1570399200,1),(442,-1552168800,2),(442,-1538344800,1),(442,-1522533600,2),(442,-1507500000,1),(442,-1490565600,2),(442,-1473631200,1),(442,-1460930400,2),(442,-1442786400,1),(442,-1428876000,2),(442,-1410732000,1),(442,-1396216800,2),(442,-1379282400,1),(442,-1364767200,2),(442,-1348437600,1),(442,-1333317600,2),(442,-1315778400,1),(442,-1301263200,2),(442,-1284328800,1),(442,-1269813600,2),(442,-1253484000,1),(442,-1238364000,2),(442,-1221429600,1),(442,-1206914400,2),(442,-1189980000,1),(442,-1175464800,2),(442,-1159135200,1),(442,-1143410400,2),(442,-1126476000,1),(442,-1111960800,2),(442,-1095631200,1),(442,-1080511200,2),(442,-1063576800,1),(442,-1049061600,2),(442,-1032127200,1),(442,-1017612000,2),(442,-1001282400,1),(442,-986162400,2),(442,-969228000,1),(442,-950479200,2),(442,-942012000,1),(442,-904518000,3),(442,-896050800,1),(442,-875487600,3),(442,-864601200,1),(442,-844038000,3),(442,-832546800,1),(442,-812588400,3),(442,-798073200,1),(442,-781052400,3),(442,-772066800,1),(442,-764805600,2),(442,-748476000,1),(442,-733356000,2),(442,-719445600,1),(442,-717030000,3),(442,-706748400,1),(442,-699487200,2),(442,-687996000,1),(442,-668037600,2),(442,-654732000,1),(442,-636588000,2),(442,-622072800,1),(442,-605743200,2),(442,-590623200,1),(442,-574293600,2),(442,-558568800,1),(442,-542239200,2),(442,-527119200,1),(442,-512604000,2),(442,-496274400,1),(442,-481154400,2),(442,-464220000,1),(442,-449704800,2),(442,-432165600,1),(442,-417650400,2),(442,-401320800,1),(442,-386200800,2),(442,-369266400,1),(442,-354751200,2),(442,-337816800,1),(442,-323301600,2),(442,-306972000,1),(442,-291852000,2),(442,-276732000,1),(442,-257983200,2),(442,-245282400,1),(442,-226533600,2),(442,-213228000,1),(442,-195084000,2),(442,-182383200,1),(442,-163634400,2),(442,-150933600,1),(442,-132184800,2),(442,-119484000,1),(442,-100735200,2),(442,-88034400,1),(442,-68680800,2),(442,-59004000,1),(442,-37242000,5),(442,57722400,7),(442,69818400,1),(442,89172000,2),(442,101268000,1),(442,120621600,2),(442,132717600,1),(442,152071200,2),(442,164167200,1),(442,183520800,2),(442,196221600,1),(442,214970400,2),(442,227671200,1),(442,246420000,2),(442,259120800,1),(442,278474400,2),(442,290570400,1),(442,309924000,2),(442,322020000,1),(442,341373600,2),(442,354675600,6),(442,372819600,7),(442,386125200,6),(442,404269200,7),(442,417574800,6),(442,435718800,7),(442,449024400,6),(442,467773200,7),(442,481078800,6),(442,499222800,7),(442,512528400,6),(442,530672400,7),(442,543978000,6),(442,562122000,7),(442,575427600,6),(442,593571600,7),(442,606877200,6),(442,625626000,7),(442,638326800,6),(442,657075600,7),(442,670381200,6),(442,688525200,7),(442,701830800,6),(442,719974800,7),(442,733280400,6),(442,751424400,7),(442,764730000,6),(442,782874000,7),(442,796179600,6),(442,814323600,7),(442,828234000,6),(442,846378000,7),(442,859683600,6),(442,877827600,7),(442,891133200,6),(442,909277200,7),(442,922582800,6),(442,941331600,7),(442,954032400,6),(442,972781200,7),(442,985482000,6),(442,1004230800,7),(442,1017536400,6),(442,1035680400,7),(442,1048986000,6),(442,1067130000,7),(442,1080435600,6),(442,1099184400,7),(442,1111885200,6),(442,1130634000,7),(442,1143334800,6),(442,1162083600,7),(442,1174784400,6),(442,1193533200,7),(442,1206838800,6),(442,1224982800,7),(442,1238288400,6),(442,1256432400,7),(442,1269738000,6),(442,1288486800,7),(442,1301187600,6),(442,1319936400,7),(442,1332637200,6),(442,1351386000,7),(442,1364691600,6),(442,1382835600,7),(442,1396141200,6),(442,1414285200,7),(442,1427590800,6),(442,1445734800,7),(442,1459040400,6),(442,1477789200,7),(442,1490490000,6),(442,1509238800,7),(442,1521939600,6),(442,1540688400,7),(442,1553994000,6),(442,1572138000,7),(442,1585443600,6),(442,1603587600,7),(442,1616893200,6),(442,1635642000,7),(442,1648342800,6),(442,1667091600,7),(442,1679792400,6),(442,1698541200,7),(442,1711846800,6),(442,1729990800,7),(442,1743296400,6),(442,1761440400,7),(442,1774746000,6),(442,1792890000,7),(442,1806195600,6),(442,1824944400,7),(442,1837645200,6),(442,1856394000,7),(442,1869094800,6),(442,1887843600,7),(442,1901149200,6),(442,1919293200,7),(442,1932598800,6),(442,1950742800,7),(442,1964048400,6),(442,1982797200,7),(442,1995498000,6),(442,2014246800,7),(442,2026947600,6),(442,2045696400,7),(442,2058397200,6),(442,2077146000,7),(442,2090451600,6),(442,2108595600,7),(442,2121901200,6),(442,2140045200,7),(443,-2147483648,1),(443,-1535938789,3),(443,-875671200,2),(443,-859773600,3),(443,354672000,2),(443,370396800,3),(443,386121600,2),(443,401846400,3),(443,417574800,4),(443,433299600,5),(443,449024400,4),(443,465354000,5),(443,481078800,4),(443,496803600,5),(443,512528400,4),(443,528253200,5),(443,543978000,4),(443,559702800,5),(443,575427600,4),(443,591152400,5),(443,606877200,4),(443,622602000,5),(443,638326800,4),(443,654656400,5),(443,670381200,4),(443,686106000,5),(443,701830800,4),(443,717555600,5),(443,733280400,4),(443,749005200,5),(443,764730000,4),(443,780454800,5),(443,796179600,4),(443,811904400,5),(443,828234000,4),(443,846378000,5),(443,859683600,4),(443,877827600,5),(443,891133200,4),(443,909277200,5),(443,922582800,4),(443,941331600,5),(443,954032400,4),(443,972781200,5),(443,985482000,4),(443,1004230800,5),(443,1017536400,4),(443,1035680400,5),(443,1048986000,4),(443,1067130000,5),(443,1080435600,4),(443,1099184400,5),(443,1111885200,4),(443,1130634000,5),(443,1143334800,4),(443,1162083600,5),(443,1174784400,4),(443,1193533200,5),(443,1206838800,4),(443,1224982800,5),(443,1238288400,4),(443,1256432400,5),(443,1269738000,4),(443,1288486800,5),(443,1301187600,4),(443,1319936400,5),(443,1332637200,4),(443,1351386000,5),(443,1364691600,4),(443,1382835600,5),(443,1396141200,4),(443,1414285200,5),(443,1427590800,4),(443,1445734800,5),(443,1459040400,4),(443,1477789200,5),(443,1490490000,4),(443,1509238800,5),(443,1521939600,4),(443,1540688400,5),(443,1553994000,4),(443,1572138000,5),(443,1585443600,4),(443,1603587600,5),(443,1616893200,4),(443,1635642000,5),(443,1648342800,4),(443,1667091600,5),(443,1679792400,4),(443,1698541200,5),(443,1711846800,4),(443,1729990800,5),(443,1743296400,4),(443,1761440400,5),(443,1774746000,4),(443,1792890000,5),(443,1806195600,4),(443,1824944400,5),(443,1837645200,4),(443,1856394000,5),(443,1869094800,4),(443,1887843600,5),(443,1901149200,4),(443,1919293200,5),(443,1932598800,4),(443,1950742800,5),(443,1964048400,4),(443,1982797200,5),(443,1995498000,4),(443,2014246800,5),(443,2026947600,4),(443,2045696400,5),(443,2058397200,4),(443,2077146000,5),(443,2090451600,4),(443,2108595600,5),(443,2121901200,4),(443,2140045200,5),(444,-2147483648,4),(444,-1691964000,1),(444,-1680472800,2),(444,-1664143200,1),(444,-1650146400,2),(444,-1633903200,1),(444,-1617487200,2),(444,-1601848800,1),(444,-1586037600,2),(444,-1570399200,1),(444,-1552168800,2),(444,-1538344800,1),(444,-1522533600,2),(444,-1507500000,1),(444,-1490565600,2),(444,-1473631200,1),(444,-1460930400,2),(444,-1442786400,1),(444,-1428876000,2),(444,-1410732000,1),(444,-1396216800,2),(444,-1379282400,1),(444,-1364767200,2),(444,-1348437600,1),(444,-1333317600,2),(444,-1315778400,1),(444,-1301263200,2),(444,-1284328800,1),(444,-1269813600,2),(444,-1253484000,1),(444,-1238364000,2),(444,-1221429600,1),(444,-1206914400,2),(444,-1189980000,1),(444,-1175464800,2),(444,-1159135200,1),(444,-1143410400,2),(444,-1126476000,1),(444,-1111960800,2),(444,-1095631200,1),(444,-1080511200,2),(444,-1063576800,1),(444,-1049061600,2),(444,-1032127200,1),(444,-1017612000,2),(444,-1001282400,1),(444,-986162400,2),(444,-969228000,1),(444,-950479200,2),(444,-942012000,1),(444,-904518000,3),(444,-896050800,1),(444,-875487600,3),(444,-864601200,1),(444,-844038000,3),(444,-832546800,1),(444,-812588400,3),(444,-798073200,1),(444,-781052400,3),(444,-772066800,1),(444,-764805600,2),(444,-748476000,1),(444,-733356000,2),(444,-719445600,1),(444,-717030000,3),(444,-706748400,1),(444,-699487200,2),(444,-687996000,1),(444,-668037600,2),(444,-654732000,1),(444,-636588000,2),(444,-622072800,1),(444,-605743200,2),(444,-590623200,1),(444,-574293600,2),(444,-558568800,1),(444,-542239200,2),(444,-527119200,1),(444,-512604000,2),(444,-496274400,1),(444,-481154400,2),(444,-464220000,1),(444,-449704800,2),(444,-432165600,1),(444,-417650400,2),(444,-401320800,1),(444,-386200800,2),(444,-369266400,1),(444,-354751200,2),(444,-337816800,1),(444,-323301600,2),(444,-306972000,1),(444,-291852000,2),(444,-276732000,1),(444,-257983200,2),(444,-245282400,1),(444,-226533600,2),(444,-213228000,1),(444,-195084000,2),(444,-182383200,1),(444,-163634400,2),(444,-150933600,1),(444,-132184800,2),(444,-119484000,1),(444,-100735200,2),(444,-88034400,1),(444,-68680800,2),(444,-59004000,1),(444,-37242000,5),(444,57722400,7),(444,69818400,1),(444,89172000,2),(444,101268000,1),(444,120621600,2),(444,132717600,1),(444,152071200,2),(444,164167200,1),(444,183520800,2),(444,196221600,1),(444,214970400,2),(444,227671200,1),(444,246420000,2),(444,259120800,1),(444,278474400,2),(444,290570400,1),(444,309924000,2),(444,322020000,1),(444,341373600,2),(444,354675600,6),(444,372819600,7),(444,386125200,6),(444,404269200,7),(444,417574800,6),(444,435718800,7),(444,449024400,6),(444,467773200,7),(444,481078800,6),(444,499222800,7),(444,512528400,6),(444,530672400,7),(444,543978000,6),(444,562122000,7),(444,575427600,6),(444,593571600,7),(444,606877200,6),(444,625626000,7),(444,638326800,6),(444,657075600,7),(444,670381200,6),(444,688525200,7),(444,701830800,6),(444,719974800,7),(444,733280400,6),(444,751424400,7),(444,764730000,6),(444,782874000,7),(444,796179600,6),(444,814323600,7),(444,828234000,6),(444,846378000,7),(444,859683600,6),(444,877827600,7),(444,891133200,6),(444,909277200,7),(444,922582800,6),(444,941331600,7),(444,954032400,6),(444,972781200,7),(444,985482000,6),(444,1004230800,7),(444,1017536400,6),(444,1035680400,7),(444,1048986000,6),(444,1067130000,7),(444,1080435600,6),(444,1099184400,7),(444,1111885200,6),(444,1130634000,7),(444,1143334800,6),(444,1162083600,7),(444,1174784400,6),(444,1193533200,7),(444,1206838800,6),(444,1224982800,7),(444,1238288400,6),(444,1256432400,7),(444,1269738000,6),(444,1288486800,7),(444,1301187600,6),(444,1319936400,7),(444,1332637200,6),(444,1351386000,7),(444,1364691600,6),(444,1382835600,7),(444,1396141200,6),(444,1414285200,7),(444,1427590800,6),(444,1445734800,7),(444,1459040400,6),(444,1477789200,7),(444,1490490000,6),(444,1509238800,7),(444,1521939600,6),(444,1540688400,7),(444,1553994000,6),(444,1572138000,7),(444,1585443600,6),(444,1603587600,7),(444,1616893200,6),(444,1635642000,7),(444,1648342800,6),(444,1667091600,7),(444,1679792400,6),(444,1698541200,7),(444,1711846800,6),(444,1729990800,7),(444,1743296400,6),(444,1761440400,7),(444,1774746000,6),(444,1792890000,7),(444,1806195600,6),(444,1824944400,7),(444,1837645200,6),(444,1856394000,7),(444,1869094800,6),(444,1887843600,7),(444,1901149200,6),(444,1919293200,7),(444,1932598800,6),(444,1950742800,7),(444,1964048400,6),(444,1982797200,7),(444,1995498000,6),(444,2014246800,7),(444,2026947600,6),(444,2045696400,7),(444,2058397200,6),(444,2077146000,7),(444,2090451600,6),(444,2108595600,7),(444,2121901200,6),(444,2140045200,7),(445,-2147483648,1),(445,-1869875816,3),(445,-1693706400,2),(445,-1680490800,3),(445,-1570413600,2),(445,-1552186800,3),(445,-1538359200,2),(445,-1522551600,3),(445,-1507514400,2),(445,-1490583600,3),(445,-1440208800,2),(445,-1428030000,3),(445,-1409709600,2),(445,-1396494000,3),(445,-931053600,2),(445,-922676400,3),(445,-917834400,2),(445,-892436400,3),(445,-875844000,2),(445,-764737200,3),(445,-744343200,2),(445,-733806000,3),(445,-716436000,2),(445,-701924400,3),(445,-684986400,2),(445,-670474800,3),(445,-654141600,2),(445,-639025200,3),(445,-622087200,2),(445,-606970800,3),(445,-590032800,2),(445,-575521200,3),(445,-235620000,2),(445,-194842800,3),(445,-177732000,2),(445,-165726000,3),(445,107910000,2),(445,121215600,3),(445,133920000,2),(445,152665200,3),(445,164678400,2),(445,184114800,3),(445,196214400,2),(445,215564400,3),(445,228873600,2),(445,245804400,3),(445,260323200,2),(445,267915600,4),(445,428454000,5),(445,433893600,4),(445,468111600,3),(445,482799600,6),(445,496710000,7),(445,512521200,6),(445,528246000,7),(445,543970800,6),(445,559695600,7),(445,575420400,6),(445,591145200,7),(445,606870000,6),(445,622594800,7),(445,638319600,6),(445,654649200,7),(445,670374000,6),(445,686098800,7),(445,701823600,6),(445,717548400,7),(445,733273200,6),(445,748998000,7),(445,764118000,6),(445,780447600,7),(445,796172400,6),(445,811897200,7),(445,828226800,6),(445,846370800,7),(445,859676400,6),(445,877820400,7),(445,891126000,6),(445,909270000,7),(445,922575600,6),(445,941324400,7),(445,954025200,6),(445,972774000,7),(445,985474800,6),(445,1004223600,7),(445,1017529200,6),(445,1035673200,7),(445,1048978800,6),(445,1067122800,7),(445,1080428400,6),(445,1099177200,7),(445,1111878000,6),(445,1130626800,7),(445,1143327600,6),(445,1162076400,7),(445,1174784400,8),(445,1193533200,9),(445,1206838800,8),(445,1224982800,9),(445,1238288400,8),(445,1256432400,9),(445,1269738000,8),(445,1288486800,9),(445,1301274000,8),(445,1319936400,9),(445,1332637200,8),(445,1351386000,9),(445,1364691600,8),(445,1382835600,9),(445,1396227600,8),(445,1414285200,9),(445,1427590800,8),(445,1446944400,9),(445,1459040400,8),(445,1473195600,4),(445,2147483647,4),(446,-2147483648,4),(446,-1691964000,1),(446,-1680472800,2),(446,-1664143200,1),(446,-1650146400,2),(446,-1633903200,1),(446,-1617487200,2),(446,-1601848800,1),(446,-1586037600,2),(446,-1570399200,1),(446,-1552168800,2),(446,-1538344800,1),(446,-1522533600,2),(446,-1507500000,1),(446,-1490565600,2),(446,-1473631200,1),(446,-1460930400,2),(446,-1442786400,1),(446,-1428876000,2),(446,-1410732000,1),(446,-1396216800,2),(446,-1379282400,1),(446,-1364767200,2),(446,-1348437600,1),(446,-1333317600,2),(446,-1315778400,1),(446,-1301263200,2),(446,-1284328800,1),(446,-1269813600,2),(446,-1253484000,1),(446,-1238364000,2),(446,-1221429600,1),(446,-1206914400,2),(446,-1189980000,1),(446,-1175464800,2),(446,-1159135200,1),(446,-1143410400,2),(446,-1126476000,1),(446,-1111960800,2),(446,-1095631200,1),(446,-1080511200,2),(446,-1063576800,1),(446,-1049061600,2),(446,-1032127200,1),(446,-1017612000,2),(446,-1001282400,1),(446,-986162400,2),(446,-969228000,1),(446,-950479200,2),(446,-942012000,1),(446,-904518000,3),(446,-896050800,1),(446,-875487600,3),(446,-864601200,1),(446,-844038000,3),(446,-832546800,1),(446,-812588400,3),(446,-798073200,1),(446,-781052400,3),(446,-772066800,1),(446,-764805600,2),(446,-748476000,1),(446,-733356000,2),(446,-719445600,1),(446,-717030000,3),(446,-706748400,1),(446,-699487200,2),(446,-687996000,1),(446,-668037600,2),(446,-654732000,1),(446,-636588000,2),(446,-622072800,1),(446,-605743200,2),(446,-590623200,1),(446,-574293600,2),(446,-558568800,1),(446,-542239200,2),(446,-527119200,1),(446,-512604000,2),(446,-496274400,1),(446,-481154400,2),(446,-464220000,1),(446,-449704800,2),(446,-432165600,1),(446,-417650400,2),(446,-401320800,1),(446,-386200800,2),(446,-369266400,1),(446,-354751200,2),(446,-337816800,1),(446,-323301600,2),(446,-306972000,1),(446,-291852000,2),(446,-276732000,1),(446,-257983200,2),(446,-245282400,1),(446,-226533600,2),(446,-213228000,1),(446,-195084000,2),(446,-182383200,1),(446,-163634400,2),(446,-150933600,1),(446,-132184800,2),(446,-119484000,1),(446,-100735200,2),(446,-88034400,1),(446,-68680800,2),(446,-59004000,1),(446,-37242000,5),(446,57722400,7),(446,69818400,1),(446,89172000,2),(446,101268000,1),(446,120621600,2),(446,132717600,1),(446,152071200,2),(446,164167200,1),(446,183520800,2),(446,196221600,1),(446,214970400,2),(446,227671200,1),(446,246420000,2),(446,259120800,1),(446,278474400,2),(446,290570400,1),(446,309924000,2),(446,322020000,1),(446,341373600,2),(446,354675600,6),(446,372819600,7),(446,386125200,6),(446,404269200,7),(446,417574800,6),(446,435718800,7),(446,449024400,6),(446,467773200,7),(446,481078800,6),(446,499222800,7),(446,512528400,6),(446,530672400,7),(446,543978000,6),(446,562122000,7),(446,575427600,6),(446,593571600,7),(446,606877200,6),(446,625626000,7),(446,638326800,6),(446,657075600,7),(446,670381200,6),(446,688525200,7),(446,701830800,6),(446,719974800,7),(446,733280400,6),(446,751424400,7),(446,764730000,6),(446,782874000,7),(446,796179600,6),(446,814323600,7),(446,828234000,6),(446,846378000,7),(446,859683600,6),(446,877827600,7),(446,891133200,6),(446,909277200,7),(446,922582800,6),(446,941331600,7),(446,954032400,6),(446,972781200,7),(446,985482000,6),(446,1004230800,7),(446,1017536400,6),(446,1035680400,7),(446,1048986000,6),(446,1067130000,7),(446,1080435600,6),(446,1099184400,7),(446,1111885200,6),(446,1130634000,7),(446,1143334800,6),(446,1162083600,7),(446,1174784400,6),(446,1193533200,7),(446,1206838800,6),(446,1224982800,7),(446,1238288400,6),(446,1256432400,7),(446,1269738000,6),(446,1288486800,7),(446,1301187600,6),(446,1319936400,7),(446,1332637200,6),(446,1351386000,7),(446,1364691600,6),(446,1382835600,7),(446,1396141200,6),(446,1414285200,7),(446,1427590800,6),(446,1445734800,7),(446,1459040400,6),(446,1477789200,7),(446,1490490000,6),(446,1509238800,7),(446,1521939600,6),(446,1540688400,7),(446,1553994000,6),(446,1572138000,7),(446,1585443600,6),(446,1603587600,7),(446,1616893200,6),(446,1635642000,7),(446,1648342800,6),(446,1667091600,7),(446,1679792400,6),(446,1698541200,7),(446,1711846800,6),(446,1729990800,7),(446,1743296400,6),(446,1761440400,7),(446,1774746000,6),(446,1792890000,7),(446,1806195600,6),(446,1824944400,7),(446,1837645200,6),(446,1856394000,7),(446,1869094800,6),(446,1887843600,7),(446,1901149200,6),(446,1919293200,7),(446,1932598800,6),(446,1950742800,7),(446,1964048400,6),(446,1982797200,7),(446,1995498000,6),(446,2014246800,7),(446,2026947600,6),(446,2045696400,7),(446,2058397200,6),(446,2077146000,7),(446,2090451600,6),(446,2108595600,7),(446,2121901200,6),(446,2140045200,7),(447,-2147483648,2),(447,-1693706400,1),(447,-1680483600,2),(447,-1663455600,3),(447,-1650150000,4),(447,-1632006000,3),(447,-1618700400,4),(447,-938905200,3),(447,-857257200,4),(447,-844556400,3),(447,-828226800,4),(447,-812502000,3),(447,-796777200,4),(447,-781052400,3),(447,-780372000,6),(447,-778730400,5),(447,-762663600,6),(447,-749095200,8),(447,354920400,7),(447,370728000,8),(447,386456400,7),(447,402264000,8),(447,417992400,7),(447,433800000,8),(447,449614800,7),(447,465346800,9),(447,481071600,10),(447,496796400,9),(447,512521200,10),(447,528246000,9),(447,543970800,10),(447,559695600,9),(447,575420400,10),(447,591145200,9),(447,606870000,11),(447,622598400,12),(447,638323200,11),(447,654652800,12),(447,670377600,11),(447,686102400,12),(447,701827200,11),(447,717552000,12),(447,733276800,11),(447,749001600,12),(447,764726400,11),(447,780451200,12),(447,796176000,11),(447,811900800,12),(447,828230400,11),(447,846374400,12),(447,859680000,11),(447,877824000,12),(447,891129600,11),(447,909273600,12),(447,922579200,11),(447,941328000,12),(447,954028800,11),(447,972777600,12),(447,985478400,11),(447,1004227200,12),(447,1017532800,11),(447,1035676800,12),(447,1048982400,11),(447,1067126400,12),(447,1080432000,11),(447,1099180800,12),(447,1111881600,11),(447,1130630400,12),(447,1143331200,11),(447,1162080000,12),(447,1174780800,11),(447,1193529600,12),(447,1206835200,11),(447,1224979200,12),(447,1238284800,11),(447,1256428800,12),(447,1269734400,11),(447,1288483200,12),(447,1301184000,13),(447,1414278000,12),(448,-2147483648,1),(448,-1441159324,2),(448,-1247536800,3),(448,-892522800,6),(448,-857257200,4),(448,-844556400,5),(448,-828226800,4),(448,-825382800,3),(448,354920400,7),(448,370728000,3),(448,386456400,7),(448,402264000,3),(448,417992400,7),(448,433800000,3),(448,449614800,7),(448,465346800,8),(448,481071600,9),(448,496796400,8),(448,512521200,9),(448,528246000,8),(448,543970800,9),(448,559695600,8),(448,575420400,9),(448,591145200,8),(448,606870000,9),(448,622594800,8),(448,638319600,9),(448,646783200,10),(448,686102400,11),(448,701827200,12),(448,717552000,11),(448,733276800,12),(448,749001600,11),(448,764726400,12),(448,780451200,11),(448,796176000,12),(448,811900800,11),(448,828230400,12),(448,846378000,13),(448,859683600,14),(448,877827600,13),(448,891133200,14),(448,909277200,13),(448,922582800,14),(448,941331600,13),(448,954032400,14),(448,972781200,13),(448,985482000,14),(448,1004230800,13),(448,1017536400,14),(448,1035680400,13),(448,1048986000,14),(448,1067130000,13),(448,1080435600,14),(448,1099184400,13),(448,1111885200,14),(448,1130634000,13),(448,1143334800,14),(448,1162083600,13),(448,1174784400,14),(448,1193533200,13),(448,1206838800,14),(448,1224982800,13),(448,1238288400,14),(448,1256432400,13),(448,1269738000,14),(448,1288486800,13),(448,1301187600,14),(448,1319936400,13),(448,1332637200,14),(448,1351386000,13),(448,1364691600,14),(448,1382835600,13),(448,1396141200,14),(448,1414285200,13),(448,1427590800,14),(448,1445734800,13),(448,1459040400,14),(448,1477789200,13),(448,1490490000,14),(448,1509238800,13),(448,1521939600,14),(448,1540688400,13),(448,1553994000,14),(448,1572138000,13),(448,1585443600,14),(448,1603587600,13),(448,1616893200,14),(448,1635642000,13),(448,1648342800,14),(448,1667091600,13),(448,1679792400,14),(448,1698541200,13),(448,1711846800,14),(448,1729990800,13),(448,1743296400,14),(448,1761440400,13),(448,1774746000,14),(448,1792890000,13),(448,1806195600,14),(448,1824944400,13),(448,1837645200,14),(448,1856394000,13),(448,1869094800,14),(448,1887843600,13),(448,1901149200,14),(448,1919293200,13),(448,1932598800,14),(448,1950742800,13),(448,1964048400,14),(448,1982797200,13),(448,1995498000,14),(448,2014246800,13),(448,2026947600,14),(448,2045696400,13),(448,2058397200,14),(448,2077146000,13),(448,2090451600,14),(448,2108595600,13),(448,2121901200,14),(448,2140045200,13),(449,-1593820800,1),(449,-1247540400,3),(449,354916800,2),(449,370724400,3),(449,386452800,2),(449,402260400,3),(449,417988800,2),(449,433796400,3),(449,449611200,2),(449,465343200,4),(449,481068000,5),(449,496792800,4),(449,512517600,5),(449,528242400,4),(449,543967200,5),(449,559692000,4),(449,575416800,5),(449,591141600,4),(449,606866400,6),(449,622594800,7),(449,638319600,6),(449,654649200,7),(449,670374000,4),(449,701820000,6),(449,717548400,7),(449,733273200,6),(449,748998000,7),(449,764722800,6),(449,780447600,7),(449,796172400,6),(449,811897200,7),(449,828226800,6),(449,846370800,7),(449,859676400,6),(449,877820400,7),(449,891126000,6),(449,909270000,7),(449,922575600,6),(449,941324400,7),(449,954025200,6),(449,972774000,7),(449,985474800,6),(449,1004223600,7),(449,1017529200,6),(449,1035673200,7),(449,1048978800,6),(449,1067122800,7),(449,1080428400,6),(449,1099177200,7),(449,1111878000,6),(449,1130626800,7),(449,1143327600,6),(449,1162076400,7),(449,1174777200,6),(449,1193526000,7),(449,1206831600,6),(449,1224975600,7),(449,1238281200,6),(449,1256425200,7),(449,1269730800,6),(449,1288479600,7),(449,1301180400,4),(449,1414274400,7),(449,2147483647,7),(450,-2147483648,1),(450,-1441159324,2),(450,-1247536800,3),(450,-892522800,6),(450,-857257200,4),(450,-844556400,5),(450,-828226800,4),(450,-825382800,3),(450,354920400,7),(450,370728000,3),(450,386456400,7),(450,402264000,3),(450,417992400,7),(450,433800000,3),(450,449614800,7),(450,465346800,8),(450,481071600,9),(450,496796400,8),(450,512521200,9),(450,528246000,8),(450,543970800,9),(450,559695600,8),(450,575420400,9),(450,591145200,8),(450,606870000,9),(450,622594800,8),(450,638319600,9),(450,646783200,10),(450,686102400,11),(450,701827200,12),(450,717552000,11),(450,733276800,12),(450,749001600,11),(450,764726400,12),(450,780451200,11),(450,796176000,12),(450,811900800,11),(450,828230400,12),(450,846378000,13),(450,859683600,14),(450,877827600,13),(450,891133200,14),(450,909277200,13),(450,922582800,14),(450,941331600,13),(450,954032400,14),(450,972781200,13),(450,985482000,14),(450,1004230800,13),(450,1017536400,14),(450,1035680400,13),(450,1048986000,14),(450,1067130000,13),(450,1080435600,14),(450,1099184400,13),(450,1111885200,14),(450,1130634000,13),(450,1143334800,14),(450,1162083600,13),(450,1174784400,14),(450,1193533200,13),(450,1206838800,14),(450,1224982800,13),(450,1238288400,14),(450,1256432400,13),(450,1269738000,14),(450,1288486800,13),(450,1301187600,14),(450,1319936400,13),(450,1332637200,14),(450,1351386000,13),(450,1364691600,14),(450,1382835600,13),(450,1396141200,14),(450,1414285200,13),(450,1427590800,14),(450,1445734800,13),(450,1459040400,14),(450,1477789200,13),(450,1490490000,14),(450,1509238800,13),(450,1521939600,14),(450,1540688400,13),(450,1553994000,14),(450,1572138000,13),(450,1585443600,14),(450,1603587600,13),(450,1616893200,14),(450,1635642000,13),(450,1648342800,14),(450,1667091600,13),(450,1679792400,14),(450,1698541200,13),(450,1711846800,14),(450,1729990800,13),(450,1743296400,14),(450,1761440400,13),(450,1774746000,14),(450,1792890000,13),(450,1806195600,14),(450,1824944400,13),(450,1837645200,14),(450,1856394000,13),(450,1869094800,14),(450,1887843600,13),(450,1901149200,14),(450,1919293200,13),(450,1932598800,14),(450,1950742800,13),(450,1964048400,14),(450,1982797200,13),(450,1995498000,14),(450,2014246800,13),(450,2026947600,14),(450,2045696400,13),(450,2058397200,14),(450,2077146000,13),(450,2090451600,14),(450,2108595600,13),(450,2121901200,14),(450,2140045200,13),(451,-2147483648,0),(451,-1830384000,6),(451,-1689555600,1),(451,-1677801600,2),(451,-1667437200,3),(451,-1647738000,4),(451,-1635814800,3),(451,-1616202000,4),(451,-1604365200,3),(451,-1584666000,4),(451,-1572742800,3),(451,-1553043600,4),(451,-1541206800,3),(451,-1521507600,4),(451,-1442451600,3),(451,-1426813200,4),(451,-1379293200,3),(451,-1364778000,4),(451,-1348448400,3),(451,-1333328400,4),(451,-1316394000,3),(451,-1301274000,4),(451,-1284339600,3),(451,-1269824400,4),(451,-1221440400,3),(451,-1206925200,4),(451,-1191200400,3),(451,-1175475600,4),(451,-1127696400,3),(451,-1111971600,4),(451,-1096851600,3),(451,-1080522000,4),(451,-1063587600,3),(451,-1049072400,4),(451,-1033347600,3),(451,-1017622800,4),(451,-1002502800,3),(451,-986173200,4),(451,-969238800,3),(451,-950490000,4),(451,-942022800,3),(451,-922669200,4),(451,-906944400,3),(451,-891133200,4),(451,-877309200,3),(451,-873684000,5),(451,-864007200,3),(451,-857955600,4),(451,-845859600,3),(451,-842839200,5),(451,-831348000,3),(451,-825901200,4),(451,-814410000,3),(451,-810784800,5),(451,-799898400,3),(451,-794451600,4),(451,-782960400,3),(451,-779335200,5),(451,-768448800,3),(451,-763002000,4),(451,-749091600,3),(451,-733366800,4),(451,-717631200,3),(451,-701906400,4),(451,-686181600,3),(451,-670456800,4),(451,-654732000,3),(451,-639007200,4),(451,-623282400,3),(451,-607557600,4),(451,-591832800,3),(451,-575503200,4),(451,-559778400,3),(451,-544053600,4),(451,-528328800,3),(451,-512604000,4),(451,-496879200,3),(451,-481154400,4),(451,-465429600,3),(451,-449704800,4),(451,-433980000,3),(451,-417650400,4),(451,-401925600,3),(451,-386200800,4),(451,-370476000,3),(451,-354751200,4),(451,-339026400,3),(451,-323301600,4),(451,-307576800,3),(451,-291852000,4),(451,-276127200,3),(451,-260402400,4),(451,-244677600,3),(451,-228348000,4),(451,-212623200,3),(451,-196898400,4),(451,-181173600,3),(451,-165448800,4),(451,-149724000,3),(451,-133999200,4),(451,-118274400,7),(451,212544000,2),(451,228268800,3),(451,243993600,4),(451,260323200,3),(451,276048000,4),(451,291772800,3),(451,307501200,4),(451,323222400,3),(451,338950800,4),(451,354675600,3),(451,370400400,4),(451,386125200,3),(451,401850000,4),(451,417578400,3),(451,433299600,4),(451,449024400,3),(451,465354000,4),(451,481078800,3),(451,496803600,4),(451,512528400,3),(451,528253200,4),(451,543978000,3),(451,559702800,4),(451,575427600,3),(451,591152400,4),(451,606877200,3),(451,622602000,4),(451,638326800,3),(451,654656400,4),(451,670381200,3),(451,686106000,4),(451,701830800,3),(451,717555600,8),(451,733280400,9),(451,749005200,8),(451,764730000,9),(451,780454800,8),(451,796179600,9),(451,811904400,8),(451,828234000,10),(451,846378000,6),(451,859683600,10),(451,877827600,6),(451,891133200,10),(451,909277200,6),(451,922582800,10),(451,941331600,6),(451,954032400,10),(451,972781200,6),(451,985482000,10),(451,1004230800,6),(451,1017536400,10),(451,1035680400,6),(451,1048986000,10),(451,1067130000,6),(451,1080435600,10),(451,1099184400,6),(451,1111885200,10),(451,1130634000,6),(451,1143334800,10),(451,1162083600,6),(451,1174784400,10),(451,1193533200,6),(451,1206838800,10),(451,1224982800,6),(451,1238288400,10),(451,1256432400,6),(451,1269738000,10),(451,1288486800,6),(451,1301187600,10),(451,1319936400,6),(451,1332637200,10),(451,1351386000,6),(451,1364691600,10),(451,1382835600,6),(451,1396141200,10),(451,1414285200,6),(451,1427590800,10),(451,1445734800,6),(451,1459040400,10),(451,1477789200,6),(451,1490490000,10),(451,1509238800,6),(451,1521939600,10),(451,1540688400,6),(451,1553994000,10),(451,1572138000,6),(451,1585443600,10),(451,1603587600,6),(451,1616893200,10),(451,1635642000,6),(451,1648342800,10),(451,1667091600,6),(451,1679792400,10),(451,1698541200,6),(451,1711846800,10),(451,1729990800,6),(451,1743296400,10),(451,1761440400,6),(451,1774746000,10),(451,1792890000,6),(451,1806195600,10),(451,1824944400,6),(451,1837645200,10),(451,1856394000,6),(451,1869094800,10),(451,1887843600,6),(451,1901149200,10),(451,1919293200,6),(451,1932598800,10),(451,1950742800,6),(451,1964048400,10),(451,1982797200,6),(451,1995498000,10),(451,2014246800,6),(451,2026947600,10),(451,2045696400,6),(451,2058397200,10),(451,2077146000,6),(451,2090451600,10),(451,2108595600,6),(451,2121901200,10),(451,2140045200,6),(452,-2147483648,1),(452,-905824800,4),(452,-857257200,2),(452,-844556400,3),(452,-828226800,2),(452,-812502000,3),(452,-796777200,2),(452,-777942000,3),(452,-766623600,2),(452,417574800,5),(452,433299600,6),(452,449024400,5),(452,465354000,6),(452,481078800,5),(452,496803600,6),(452,512528400,5),(452,528253200,6),(452,543978000,5),(452,559702800,6),(452,575427600,5),(452,591152400,6),(452,606877200,5),(452,622602000,6),(452,638326800,5),(452,654656400,6),(452,670381200,5),(452,686106000,6),(452,701830800,5),(452,717555600,6),(452,733280400,5),(452,749005200,6),(452,764730000,5),(452,780454800,6),(452,796179600,5),(452,811904400,6),(452,828234000,5),(452,846378000,6),(452,859683600,5),(452,877827600,6),(452,891133200,5),(452,909277200,6),(452,922582800,5),(452,941331600,6),(452,954032400,5),(452,972781200,6),(452,985482000,5),(452,1004230800,6),(452,1017536400,5),(452,1035680400,6),(452,1048986000,5),(452,1067130000,6),(452,1080435600,5),(452,1099184400,6),(452,1111885200,5),(452,1130634000,6),(452,1143334800,5),(452,1162083600,6),(452,1174784400,5),(452,1193533200,6),(452,1206838800,5),(452,1224982800,6),(452,1238288400,5),(452,1256432400,6),(452,1269738000,5),(452,1288486800,6),(452,1301187600,5),(452,1319936400,6),(452,1332637200,5),(452,1351386000,6),(452,1364691600,5),(452,1382835600,6),(452,1396141200,5),(452,1414285200,6),(452,1427590800,5),(452,1445734800,6),(452,1459040400,5),(452,1477789200,6),(452,1490490000,5),(452,1509238800,6),(452,1521939600,5),(452,1540688400,6),(452,1553994000,5),(452,1572138000,6),(452,1585443600,5),(452,1603587600,6),(452,1616893200,5),(452,1635642000,6),(452,1648342800,5),(452,1667091600,6),(452,1679792400,5),(452,1698541200,6),(452,1711846800,5),(452,1729990800,6),(452,1743296400,5),(452,1761440400,6),(452,1774746000,5),(452,1792890000,6),(452,1806195600,5),(452,1824944400,6),(452,1837645200,5),(452,1856394000,6),(452,1869094800,5),(452,1887843600,6),(452,1901149200,5),(452,1919293200,6),(452,1932598800,5),(452,1950742800,6),(452,1964048400,5),(452,1982797200,6),(452,1995498000,5),(452,2014246800,6),(452,2026947600,5),(452,2045696400,6),(452,2058397200,5),(452,2077146000,6),(452,2090451600,5),(452,2108595600,6),(452,2121901200,5),(452,2140045200,6),(453,-2147483648,4),(453,-1691964000,1),(453,-1680472800,2),(453,-1664143200,1),(453,-1650146400,2),(453,-1633903200,1),(453,-1617487200,2),(453,-1601848800,1),(453,-1586037600,2),(453,-1570399200,1),(453,-1552168800,2),(453,-1538344800,1),(453,-1522533600,2),(453,-1507500000,1),(453,-1490565600,2),(453,-1473631200,1),(453,-1460930400,2),(453,-1442786400,1),(453,-1428876000,2),(453,-1410732000,1),(453,-1396216800,2),(453,-1379282400,1),(453,-1364767200,2),(453,-1348437600,1),(453,-1333317600,2),(453,-1315778400,1),(453,-1301263200,2),(453,-1284328800,1),(453,-1269813600,2),(453,-1253484000,1),(453,-1238364000,2),(453,-1221429600,1),(453,-1206914400,2),(453,-1189980000,1),(453,-1175464800,2),(453,-1159135200,1),(453,-1143410400,2),(453,-1126476000,1),(453,-1111960800,2),(453,-1095631200,1),(453,-1080511200,2),(453,-1063576800,1),(453,-1049061600,2),(453,-1032127200,1),(453,-1017612000,2),(453,-1001282400,1),(453,-986162400,2),(453,-969228000,1),(453,-950479200,2),(453,-942012000,1),(453,-904518000,3),(453,-896050800,1),(453,-875487600,3),(453,-864601200,1),(453,-844038000,3),(453,-832546800,1),(453,-812588400,3),(453,-798073200,1),(453,-781052400,3),(453,-772066800,1),(453,-764805600,2),(453,-748476000,1),(453,-733356000,2),(453,-719445600,1),(453,-717030000,3),(453,-706748400,1),(453,-699487200,2),(453,-687996000,1),(453,-668037600,2),(453,-654732000,1),(453,-636588000,2),(453,-622072800,1),(453,-605743200,2),(453,-590623200,1),(453,-574293600,2),(453,-558568800,1),(453,-542239200,2),(453,-527119200,1),(453,-512604000,2),(453,-496274400,1),(453,-481154400,2),(453,-464220000,1),(453,-449704800,2),(453,-432165600,1),(453,-417650400,2),(453,-401320800,1),(453,-386200800,2),(453,-369266400,1),(453,-354751200,2),(453,-337816800,1),(453,-323301600,2),(453,-306972000,1),(453,-291852000,2),(453,-276732000,1),(453,-257983200,2),(453,-245282400,1),(453,-226533600,2),(453,-213228000,1),(453,-195084000,2),(453,-182383200,1),(453,-163634400,2),(453,-150933600,1),(453,-132184800,2),(453,-119484000,1),(453,-100735200,2),(453,-88034400,1),(453,-68680800,2),(453,-59004000,1),(453,-37242000,5),(453,57722400,7),(453,69818400,1),(453,89172000,2),(453,101268000,1),(453,120621600,2),(453,132717600,1),(453,152071200,2),(453,164167200,1),(453,183520800,2),(453,196221600,1),(453,214970400,2),(453,227671200,1),(453,246420000,2),(453,259120800,1),(453,278474400,2),(453,290570400,1),(453,309924000,2),(453,322020000,1),(453,341373600,2),(453,354675600,6),(453,372819600,7),(453,386125200,6),(453,404269200,7),(453,417574800,6),(453,435718800,7),(453,449024400,6),(453,467773200,7),(453,481078800,6),(453,499222800,7),(453,512528400,6),(453,530672400,7),(453,543978000,6),(453,562122000,7),(453,575427600,6),(453,593571600,7),(453,606877200,6),(453,625626000,7),(453,638326800,6),(453,657075600,7),(453,670381200,6),(453,688525200,7),(453,701830800,6),(453,719974800,7),(453,733280400,6),(453,751424400,7),(453,764730000,6),(453,782874000,7),(453,796179600,6),(453,814323600,7),(453,828234000,6),(453,846378000,7),(453,859683600,6),(453,877827600,7),(453,891133200,6),(453,909277200,7),(453,922582800,6),(453,941331600,7),(453,954032400,6),(453,972781200,7),(453,985482000,6),(453,1004230800,7),(453,1017536400,6),(453,1035680400,7),(453,1048986000,6),(453,1067130000,7),(453,1080435600,6),(453,1099184400,7),(453,1111885200,6),(453,1130634000,7),(453,1143334800,6),(453,1162083600,7),(453,1174784400,6),(453,1193533200,7),(453,1206838800,6),(453,1224982800,7),(453,1238288400,6),(453,1256432400,7),(453,1269738000,6),(453,1288486800,7),(453,1301187600,6),(453,1319936400,7),(453,1332637200,6),(453,1351386000,7),(453,1364691600,6),(453,1382835600,7),(453,1396141200,6),(453,1414285200,7),(453,1427590800,6),(453,1445734800,7),(453,1459040400,6),(453,1477789200,7),(453,1490490000,6),(453,1509238800,7),(453,1521939600,6),(453,1540688400,7),(453,1553994000,6),(453,1572138000,7),(453,1585443600,6),(453,1603587600,7),(453,1616893200,6),(453,1635642000,7),(453,1648342800,6),(453,1667091600,7),(453,1679792400,6),(453,1698541200,7),(453,1711846800,6),(453,1729990800,7),(453,1743296400,6),(453,1761440400,7),(453,1774746000,6),(453,1792890000,7),(453,1806195600,6),(453,1824944400,7),(453,1837645200,6),(453,1856394000,7),(453,1869094800,6),(453,1887843600,7),(453,1901149200,6),(453,1919293200,7),(453,1932598800,6),(453,1950742800,7),(453,1964048400,6),(453,1982797200,7),(453,1995498000,6),(453,2014246800,7),(453,2026947600,6),(453,2045696400,7),(453,2058397200,6),(453,2077146000,7),(453,2090451600,6),(453,2108595600,7),(453,2121901200,6),(453,2140045200,7),(454,-2147483648,1),(454,-1740355200,2),(454,-1693702800,5),(454,-1680483600,2),(454,-1663455600,3),(454,-1650150000,4),(454,-1632006000,3),(454,-1618700400,4),(454,-1613826000,8),(454,-1604278800,6),(454,-1585530000,7),(454,-1574038800,6),(454,-1552266000,7),(454,-1539997200,6),(454,-1520557200,7),(454,-1507510800,6),(454,-1490576400,7),(454,-1473642000,6),(454,-1459126800,7),(454,-1444006800,6),(454,-1427677200,7),(454,-1411952400,6),(454,-1396227600,7),(454,-1379293200,6),(454,-1364778000,7),(454,-1348448400,6),(454,-1333328400,7),(454,-1316394000,6),(454,-1301263200,7),(454,-1284328800,6),(454,-1269813600,7),(454,-1253484000,6),(454,-1238364000,7),(454,-1221429600,6),(454,-1206914400,7),(454,-1191189600,6),(454,-1175464800,7),(454,-1160344800,6),(454,-1143410400,7),(454,-1127685600,6),(454,-1111960800,7),(454,-1096840800,6),(454,-1080511200,7),(454,-1063576800,6),(454,-1049061600,7),(454,-1033336800,6),(454,-1017612000,7),(454,-1002492000,6),(454,-986162400,7),(454,-969228000,6),(454,-950479200,7),(454,-942012000,6),(454,-934668000,3),(454,-857257200,4),(454,-844556400,3),(454,-828226800,4),(454,-812502000,3),(454,-798073200,4),(454,-781052400,3),(454,-766623600,4),(454,-745455600,3),(454,-733273200,4),(454,228877200,9),(454,243997200,10),(454,260326800,9),(454,276051600,10),(454,291776400,9),(454,307501200,10),(454,323830800,9),(454,338950800,10),(454,354675600,9),(454,370400400,10),(454,386125200,9),(454,401850000,10),(454,417574800,9),(454,433299600,10),(454,449024400,9),(454,465354000,10),(454,481078800,9),(454,496803600,10),(454,512528400,9),(454,528253200,10),(454,543978000,9),(454,559702800,10),(454,575427600,9),(454,591152400,10),(454,606877200,9),(454,622602000,10),(454,638326800,9),(454,654656400,10),(454,670381200,9),(454,686106000,10),(454,701830800,9),(454,717555600,10),(454,733280400,9),(454,749005200,10),(454,764730000,9),(454,780454800,10),(454,796179600,9),(454,811904400,10),(454,828234000,9),(454,846378000,10),(454,859683600,9),(454,877827600,10),(454,891133200,9),(454,909277200,10),(454,922582800,9),(454,941331600,10),(454,954032400,9),(454,972781200,10),(454,985482000,9),(454,1004230800,10),(454,1017536400,9),(454,1035680400,10),(454,1048986000,9),(454,1067130000,10),(454,1080435600,9),(454,1099184400,10),(454,1111885200,9),(454,1130634000,10),(454,1143334800,9),(454,1162083600,10),(454,1174784400,9),(454,1193533200,10),(454,1206838800,9),(454,1224982800,10),(454,1238288400,9),(454,1256432400,10),(454,1269738000,9),(454,1288486800,10),(454,1301187600,9),(454,1319936400,10),(454,1332637200,9),(454,1351386000,10),(454,1364691600,9),(454,1382835600,10),(454,1396141200,9),(454,1414285200,10),(454,1427590800,9),(454,1445734800,10),(454,1459040400,9),(454,1477789200,10),(454,1490490000,9),(454,1509238800,10),(454,1521939600,9),(454,1540688400,10),(454,1553994000,9),(454,1572138000,10),(454,1585443600,9),(454,1603587600,10),(454,1616893200,9),(454,1635642000,10),(454,1648342800,9),(454,1667091600,10),(454,1679792400,9),(454,1698541200,10),(454,1711846800,9),(454,1729990800,10),(454,1743296400,9),(454,1761440400,10),(454,1774746000,9),(454,1792890000,10),(454,1806195600,9),(454,1824944400,10),(454,1837645200,9),(454,1856394000,10),(454,1869094800,9),(454,1887843600,10),(454,1901149200,9),(454,1919293200,10),(454,1932598800,9),(454,1950742800,10),(454,1964048400,9),(454,1982797200,10),(454,1995498000,9),(454,2014246800,10),(454,2026947600,9),(454,2045696400,10),(454,2058397200,9),(454,2077146000,10),(454,2090451600,9),(454,2108595600,10),(454,2121901200,9),(454,2140045200,10),(455,-2147483648,4),(455,-1631926800,1),(455,-1616889600,2),(455,-1601168400,1),(455,-1585353600,2),(455,-1442451600,1),(455,-1427673600,2),(455,-1379293200,1),(455,-1364774400,2),(455,-1348448400,1),(455,-1333324800,2),(455,-1316390400,1),(455,-1301270400,2),(455,-1284339600,1),(455,-1269820800,2),(455,-1026954000,1),(455,-1017619200,2),(455,-1001898000,1),(455,-999482400,3),(455,-986090400,1),(455,-954115200,2),(455,-940208400,6),(455,-873079200,5),(455,-862621200,6),(455,-842839200,5),(455,-828320400,6),(455,-811389600,5),(455,-796870800,6),(455,-779940000,5),(455,-765421200,6),(455,-748490400,5),(455,-733971600,6),(455,-652327200,5),(455,-639018000,6),(455,135122400,5),(455,150246000,6),(455,166572000,5),(455,181695600,6),(455,196812000,5),(455,212540400,6),(455,228866400,5),(455,243990000,6),(455,260326800,7),(455,276051600,8),(455,291776400,9),(455,307501200,10),(455,323830800,9),(455,338950800,10),(455,354675600,9),(455,370400400,10),(455,386125200,9),(455,401850000,10),(455,417574800,9),(455,433299600,10),(455,449024400,9),(455,465354000,10),(455,481078800,9),(455,496803600,10),(455,512528400,9),(455,528253200,10),(455,543978000,9),(455,559702800,10),(455,575427600,9),(455,591152400,10),(455,606877200,9),(455,622602000,10),(455,638326800,9),(455,654656400,10),(455,670381200,9),(455,686106000,10),(455,701830800,9),(455,717555600,10),(455,733280400,9),(455,749005200,10),(455,764730000,9),(455,780454800,10),(455,796179600,9),(455,811904400,10),(455,828234000,9),(455,846378000,10),(455,859683600,9),(455,877827600,10),(455,891133200,9),(455,909277200,10),(455,922582800,9),(455,941331600,10),(455,954032400,9),(455,972781200,10),(455,985482000,9),(455,1004230800,10),(455,1017536400,9),(455,1035680400,10),(455,1048986000,9),(455,1067130000,10),(455,1080435600,9),(455,1099184400,10),(455,1111885200,9),(455,1130634000,10),(455,1143334800,9),(455,1162083600,10),(455,1174784400,9),(455,1193533200,10),(455,1206838800,9),(455,1224982800,10),(455,1238288400,9),(455,1256432400,10),(455,1269738000,9),(455,1288486800,10),(455,1301187600,9),(455,1319936400,10),(455,1332637200,9),(455,1351386000,10),(455,1364691600,9),(455,1382835600,10),(455,1396141200,9),(455,1414285200,10),(455,1427590800,9),(455,1445734800,10),(455,1459040400,9),(455,1477789200,10),(455,1490490000,9),(455,1509238800,10),(455,1521939600,9),(455,1540688400,10),(455,1553994000,9),(455,1572138000,10),(455,1585443600,9),(455,1603587600,10),(455,1616893200,9),(455,1635642000,10),(455,1648342800,9),(455,1667091600,10),(455,1679792400,9),(455,1698541200,10),(455,1711846800,9),(455,1729990800,10),(455,1743296400,9),(455,1761440400,10),(455,1774746000,9),(455,1792890000,10),(455,1806195600,9),(455,1824944400,10),(455,1837645200,9),(455,1856394000,10),(455,1869094800,9),(455,1887843600,10),(455,1901149200,9),(455,1919293200,10),(455,1932598800,9),(455,1950742800,10),(455,1964048400,9),(455,1982797200,10),(455,1995498000,9),(455,2014246800,10),(455,2026947600,9),(455,2045696400,10),(455,2058397200,9),(455,2077146000,10),(455,2090451600,9),(455,2108595600,10),(455,2121901200,9),(455,2140045200,10),(456,-2147483648,2),(456,-1690765200,1),(456,-1680487200,2),(456,-1664758800,1),(456,-1648951200,2),(456,-1635123600,1),(456,-1616896800,2),(456,-1604278800,1),(456,-1585533600,2),(456,-1571014800,1),(456,-1555293600,2),(456,-932432400,1),(456,-857257200,3),(456,-844556400,4),(456,-828226800,3),(456,-812588400,4),(456,-798073200,3),(456,-781052400,1),(456,-766717200,2),(456,-750898800,4),(456,-733359600,3),(456,-719456400,4),(456,-701917200,3),(456,-689209200,4),(456,-670460400,3),(456,-114051600,4),(456,-103168800,2),(456,-81997200,4),(456,-71715600,3),(456,-50547600,4),(456,-40266000,3),(456,-18493200,4),(456,-8211600,3),(456,12956400,4),(456,23238000,3),(456,43801200,4),(456,54687600,3),(456,75855600,4),(456,86742000,3),(456,102380400,4),(456,118105200,3),(456,135730800,4),(456,148518000,3),(456,167187600,1),(456,180489600,2),(456,198637200,1),(456,211939200,2),(456,230086800,1),(456,243388800,2),(456,261536400,1),(456,274838400,2),(456,292986000,1),(456,306288000,2),(456,323312400,1),(456,338342400,2),(456,354675600,5),(456,370400400,6),(456,386125200,5),(456,401850000,6),(456,417574800,5),(456,433299600,6),(456,449024400,5),(456,465354000,6),(456,481078800,5),(456,496803600,6),(456,512528400,5),(456,528253200,6),(456,543978000,5),(456,559702800,6),(456,575427600,5),(456,591152400,6),(456,606877200,5),(456,622602000,6),(456,638326800,5),(456,654656400,6),(456,670381200,5),(456,686106000,6),(456,701830800,5),(456,717555600,6),(456,733280400,5),(456,749005200,6),(456,764730000,5),(456,780454800,6),(456,796179600,5),(456,811904400,6),(456,828234000,5),(456,846378000,6),(456,859683600,5),(456,877827600,6),(456,891133200,5),(456,909277200,6),(456,922582800,5),(456,941331600,6),(456,954032400,5),(456,972781200,6),(456,985482000,5),(456,1004230800,6),(456,1017536400,5),(456,1035680400,6),(456,1048986000,5),(456,1067130000,6),(456,1080435600,5),(456,1099184400,6),(456,1111885200,5),(456,1130634000,6),(456,1143334800,5),(456,1162083600,6),(456,1174784400,5),(456,1193533200,6),(456,1206838800,5),(456,1224982800,6),(456,1238288400,5),(456,1256432400,6),(456,1269738000,5),(456,1288486800,6),(456,1301187600,5),(456,1319936400,6),(456,1332637200,5),(456,1351386000,6),(456,1364691600,5),(456,1382835600,6),(456,1396141200,5),(456,1414285200,6),(456,1427590800,5),(456,1445734800,6),(456,1459040400,5),(456,1477789200,6),(456,1490490000,5),(456,1509238800,6),(456,1521939600,5),(456,1540688400,6),(456,1553994000,5),(456,1572138000,6),(456,1585443600,5),(456,1603587600,6),(456,1616893200,5),(456,1635642000,6),(456,1648342800,5),(456,1667091600,6),(456,1679792400,5),(456,1698541200,6),(456,1711846800,5),(456,1729990800,6),(456,1743296400,5),(456,1761440400,6),(456,1774746000,5),(456,1792890000,6),(456,1806195600,5),(456,1824944400,6),(456,1837645200,5),(456,1856394000,6),(456,1869094800,5),(456,1887843600,6),(456,1901149200,5),(456,1919293200,6),(456,1932598800,5),(456,1950742800,6),(456,1964048400,5),(456,1982797200,6),(456,1995498000,5),(456,2014246800,6),(456,2026947600,5),(456,2045696400,6),(456,2058397200,5),(456,2077146000,6),(456,2090451600,5),(456,2108595600,6),(456,2121901200,5),(456,2140045200,6),(457,-2147483648,1),(457,-1535938789,3),(457,-875671200,2),(457,-859773600,3),(457,354672000,2),(457,370396800,3),(457,386121600,2),(457,401846400,3),(457,417574800,4),(457,433299600,5),(457,449024400,4),(457,465354000,5),(457,481078800,4),(457,496803600,5),(457,512528400,4),(457,528253200,5),(457,543978000,4),(457,559702800,5),(457,575427600,4),(457,591152400,5),(457,606877200,4),(457,622602000,5),(457,638326800,4),(457,654656400,5),(457,670381200,4),(457,686106000,5),(457,701830800,4),(457,717555600,5),(457,733280400,4),(457,749005200,5),(457,764730000,4),(457,780454800,5),(457,796179600,4),(457,811904400,5),(457,828234000,4),(457,846378000,5),(457,859683600,4),(457,877827600,5),(457,891133200,4),(457,909277200,5),(457,922582800,4),(457,941331600,5),(457,954032400,4),(457,972781200,5),(457,985482000,4),(457,1004230800,5),(457,1017536400,4),(457,1035680400,5),(457,1048986000,4),(457,1067130000,5),(457,1080435600,4),(457,1099184400,5),(457,1111885200,4),(457,1130634000,5),(457,1143334800,4),(457,1162083600,5),(457,1174784400,4),(457,1193533200,5),(457,1206838800,4),(457,1224982800,5),(457,1238288400,4),(457,1256432400,5),(457,1269738000,4),(457,1288486800,5),(457,1301187600,4),(457,1319936400,5),(457,1332637200,4),(457,1351386000,5),(457,1364691600,4),(457,1382835600,5),(457,1396141200,4),(457,1414285200,5),(457,1427590800,4),(457,1445734800,5),(457,1459040400,4),(457,1477789200,5),(457,1490490000,4),(457,1509238800,5),(457,1521939600,4),(457,1540688400,5),(457,1553994000,4),(457,1572138000,5),(457,1585443600,4),(457,1603587600,5),(457,1616893200,4),(457,1635642000,5),(457,1648342800,4),(457,1667091600,5),(457,1679792400,4),(457,1698541200,5),(457,1711846800,4),(457,1729990800,5),(457,1743296400,4),(457,1761440400,5),(457,1774746000,4),(457,1792890000,5),(457,1806195600,4),(457,1824944400,5),(457,1837645200,4),(457,1856394000,5),(457,1869094800,4),(457,1887843600,5),(457,1901149200,4),(457,1919293200,5),(457,1932598800,4),(457,1950742800,5),(457,1964048400,4),(457,1982797200,5),(457,1995498000,4),(457,2014246800,5),(457,2026947600,4),(457,2045696400,5),(457,2058397200,4),(457,2077146000,5),(457,2090451600,4),(457,2108595600,5),(457,2121901200,4),(457,2140045200,5),(458,-2147483648,1),(458,-1441158600,2),(458,-1247536800,3),(458,-899780400,6),(458,-857257200,4),(458,-844556400,5),(458,-828226800,4),(458,-812502000,5),(458,-804650400,3),(458,354920400,7),(458,370728000,3),(458,386456400,7),(458,402264000,3),(458,417992400,7),(458,433800000,3),(458,449614800,7),(458,465346800,8),(458,481071600,9),(458,496796400,8),(458,512521200,9),(458,528246000,8),(458,543970800,9),(458,559695600,8),(458,575420400,9),(458,591145200,8),(458,606870000,9),(458,622594800,8),(458,670374000,10),(458,686102400,11),(458,701827200,10),(458,717552000,11),(458,733276800,10),(458,749001600,11),(458,764726400,10),(458,780451200,11),(458,796176000,10),(458,811900800,11),(458,828230400,10),(458,846374400,11),(458,859680000,10),(458,877824000,11),(458,891129600,10),(458,909273600,11),(458,922579200,10),(458,941328000,11),(458,954028800,10),(458,972777600,11),(458,985478400,10),(458,1004227200,11),(458,1017532800,10),(458,1035676800,11),(458,1048982400,10),(458,1067126400,11),(458,1080432000,10),(458,1099180800,11),(458,1111881600,10),(458,1130630400,11),(458,1143331200,10),(458,1162080000,11),(458,1174780800,10),(458,1193529600,11),(458,1206835200,10),(458,1224979200,11),(458,1238284800,10),(458,1256428800,11),(458,1269734400,10),(458,1288483200,11),(458,1301184000,12),(458,2147483647,12),(459,-2147483648,1),(459,-1855958961,5),(459,-1689814800,2),(459,-1680397200,3),(459,-1665363600,2),(459,-1648342800,3),(459,-1635123600,2),(459,-1616893200,3),(459,-1604278800,2),(459,-1585443600,3),(459,-1574038800,2),(459,-1552266000,3),(459,-1539997200,2),(459,-1520557200,3),(459,-1507510800,2),(459,-1490576400,3),(459,-1470618000,2),(459,-1459126800,3),(459,-1444006800,2),(459,-1427677200,3),(459,-1411952400,2),(459,-1396227600,3),(459,-1379293200,2),(459,-1364778000,3),(459,-1348448400,2),(459,-1333328400,3),(459,-1316394000,2),(459,-1301274000,3),(459,-1284339600,2),(459,-1269824400,3),(459,-1253494800,2),(459,-1238374800,3),(459,-1221440400,2),(459,-1206925200,3),(459,-1191200400,2),(459,-1175475600,3),(459,-1160355600,2),(459,-1143421200,3),(459,-1127696400,2),(459,-1111971600,3),(459,-1096851600,2),(459,-1080522000,3),(459,-1063587600,2),(459,-1049072400,3),(459,-1033347600,2),(459,-1017622800,3),(459,-1002502800,2),(459,-986173200,3),(459,-969238800,2),(459,-950490000,3),(459,-942012000,4),(459,-932436000,8),(459,-857257200,6),(459,-844556400,7),(459,-828226800,6),(459,-812502000,7),(459,-800071200,9),(459,-796266000,4),(459,-781052400,9),(459,-766623600,10),(459,196819200,8),(459,212540400,10),(459,228877200,11),(459,243997200,12),(459,260326800,11),(459,276051600,12),(459,291776400,11),(459,307501200,12),(459,323830800,11),(459,338950800,12),(459,354675600,11),(459,370400400,12),(459,386125200,11),(459,401850000,12),(459,417574800,11),(459,433299600,12),(459,449024400,11),(459,465354000,12),(459,481078800,11),(459,496803600,12),(459,512528400,11),(459,528253200,12),(459,543978000,11),(459,559702800,12),(459,575427600,11),(459,591152400,12),(459,606877200,11),(459,622602000,12),(459,638326800,11),(459,654656400,12),(459,670381200,11),(459,686106000,12),(459,701830800,11),(459,717555600,12),(459,733280400,11),(459,749005200,12),(459,764730000,11),(459,780454800,12),(459,796179600,11),(459,811904400,12),(459,828234000,11),(459,846378000,12),(459,859683600,11),(459,877827600,12),(459,891133200,11),(459,909277200,12),(459,922582800,11),(459,941331600,12),(459,954032400,11),(459,972781200,12),(459,985482000,11),(459,1004230800,12),(459,1017536400,11),(459,1035680400,12),(459,1048986000,11),(459,1067130000,12),(459,1080435600,11),(459,1099184400,12),(459,1111885200,11),(459,1130634000,12),(459,1143334800,11),(459,1162083600,12),(459,1174784400,11),(459,1193533200,12),(459,1206838800,11),(459,1224982800,12),(459,1238288400,11),(459,1256432400,12),(459,1269738000,11),(459,1288486800,12),(459,1301187600,11),(459,1319936400,12),(459,1332637200,11),(459,1351386000,12),(459,1364691600,11),(459,1382835600,12),(459,1396141200,11),(459,1414285200,12),(459,1427590800,11),(459,1445734800,12),(459,1459040400,11),(459,1477789200,12),(459,1490490000,11),(459,1509238800,12),(459,1521939600,11),(459,1540688400,12),(459,1553994000,11),(459,1572138000,12),(459,1585443600,11),(459,1603587600,12),(459,1616893200,11),(459,1635642000,12),(459,1648342800,11),(459,1667091600,12),(459,1679792400,11),(459,1698541200,12),(459,1711846800,11),(459,1729990800,12),(459,1743296400,11),(459,1761440400,12),(459,1774746000,11),(459,1792890000,12),(459,1806195600,11),(459,1824944400,12),(459,1837645200,11),(459,1856394000,12),(459,1869094800,11),(459,1887843600,12),(459,1901149200,11),(459,1919293200,12),(459,1932598800,11),(459,1950742800,12),(459,1964048400,11),(459,1982797200,12),(459,1995498000,11),(459,2014246800,12),(459,2026947600,11),(459,2045696400,12),(459,2058397200,11),(459,2077146000,12),(459,2090451600,11),(459,2108595600,12),(459,2121901200,11),(459,2140045200,12),(460,-2147483648,1),(460,-1688265017,3),(460,-1656819079,2),(460,-1641353479,3),(460,-1627965079,4),(460,-1618716679,2),(460,-1596429079,4),(460,-1593820800,5),(460,-1589860800,6),(460,-1542427200,7),(460,-1539493200,8),(460,-1525323600,7),(460,-1522728000,6),(460,-1491188400,9),(460,-1247536800,6),(460,354920400,7),(460,370728000,6),(460,386456400,7),(460,402264000,6),(460,417992400,7),(460,433800000,6),(460,449614800,7),(460,465346800,10),(460,481071600,11),(460,496796400,10),(460,512521200,11),(460,528246000,10),(460,543970800,11),(460,559695600,10),(460,575420400,11),(460,591145200,10),(460,606870000,11),(460,622594800,10),(460,638319600,11),(460,654649200,10),(460,670374000,12),(460,686102400,13),(460,695779200,10),(460,701823600,11),(460,717548400,10),(460,733273200,11),(460,748998000,10),(460,764722800,11),(460,780447600,10),(460,796172400,11),(460,811897200,10),(460,828226800,11),(460,846370800,10),(460,859676400,11),(460,877820400,10),(460,891126000,11),(460,909270000,10),(460,922575600,11),(460,941324400,10),(460,954025200,11),(460,972774000,10),(460,985474800,11),(460,1004223600,10),(460,1017529200,11),(460,1035673200,10),(460,1048978800,11),(460,1067122800,10),(460,1080428400,11),(460,1099177200,10),(460,1111878000,11),(460,1130626800,10),(460,1143327600,11),(460,1162076400,10),(460,1174777200,11),(460,1193526000,10),(460,1206831600,11),(460,1224975600,10),(460,1238281200,11),(460,1256425200,10),(460,1269730800,11),(460,1288479600,10),(460,1301180400,14),(460,1414274400,10),(461,-1518920008,2),(461,166572000,1),(461,182293200,2),(461,200959200,1),(461,213829200,2),(461,228866400,1),(461,243982800,2),(461,260316000,1),(461,276123600,2),(461,291765600,1),(461,307486800,2),(461,323820000,1),(461,338936400,2),(461,354664800,1),(461,370386000,2),(461,386114400,1),(461,401835600,2),(461,417564000,1),(461,433285200,2),(461,449013600,1),(461,465339600,2),(461,481068000,1),(461,496789200,2),(461,512517600,1),(461,528238800,2),(461,543967200,1),(461,559688400,2),(461,575416800,1),(461,591138000,2),(461,606866400,1),(461,622587600,2),(461,638316000,1),(461,654642000,2),(461,670370400,1),(461,686091600,2),(461,701820000,1),(461,717541200,2),(461,733269600,1),(461,748990800,2),(461,764719200,1),(461,780440400,2),(461,796168800,1),(461,811890000,2),(461,828223200,1),(461,843944400,2),(461,859672800,1),(461,875394000,2),(461,891122400,1),(461,909277200,3),(461,922582800,4),(461,941331600,3),(461,954032400,4),(461,972781200,3),(461,985482000,4),(461,1004230800,3),(461,1017536400,4),(461,1035680400,3),(461,1048986000,4),(461,1067130000,3),(461,1080435600,4),(461,1099184400,3),(461,1111885200,4),(461,1130634000,3),(461,1143334800,4),(461,1162083600,3),(461,1174784400,4),(461,1193533200,3),(461,1206838800,4),(461,1224982800,3),(461,1238288400,4),(461,1256432400,3),(461,1269738000,4),(461,1288486800,3),(461,1301187600,4),(461,1319936400,3),(461,1332637200,4),(461,1351386000,3),(461,1364691600,4),(461,1382835600,3),(461,1396141200,4),(461,1414285200,3),(461,1427590800,4),(461,1445734800,3),(461,1459040400,4),(461,1477789200,3),(461,1490490000,4),(461,1509238800,3),(461,1521939600,4),(461,1540688400,3),(461,1553994000,4),(461,1572138000,3),(461,1585443600,4),(461,1603587600,3),(461,1616893200,4),(461,1635642000,3),(461,1648342800,4),(461,1667091600,3),(461,1679792400,4),(461,1698541200,3),(461,1711846800,4),(461,1729990800,3),(461,1743296400,4),(461,1761440400,3),(461,1774746000,4),(461,1792890000,3),(461,1806195600,4),(461,1824944400,3),(461,1837645200,4),(461,1856394000,3),(461,1869094800,4),(461,1887843600,3),(461,1901149200,4),(461,1919293200,3),(461,1932598800,4),(461,1950742800,3),(461,1964048400,4),(461,1982797200,3),(461,1995498000,4),(461,2014246800,3),(461,2026947600,4),(461,2045696400,3),(461,2058397200,4),(461,2077146000,3),(461,2090451600,4),(461,2108595600,3),(461,2121901200,4),(461,2140045200,3),(462,-2147483648,2),(462,-1693706400,1),(462,-1680483600,2),(462,-1663455600,3),(462,-1650150000,4),(462,-1632006000,3),(462,-1618700400,4),(462,-938905200,3),(462,-857257200,4),(462,-844556400,3),(462,-828226800,4),(462,-812502000,3),(462,-796777200,4),(462,-781052400,3),(462,-776563200,5),(462,-765936000,1),(462,-761180400,4),(462,-748479600,3),(462,-733273200,4),(462,-717631200,3),(462,-714610800,6),(462,-710380800,1),(462,-701910000,4),(462,-684975600,3),(462,-670460400,4),(462,-654130800,3),(462,-639010800,4),(462,323830800,7),(462,338950800,8),(462,354675600,7),(462,370400400,8),(462,386125200,7),(462,401850000,8),(462,417574800,7),(462,433299600,8),(462,449024400,7),(462,465354000,8),(462,481078800,7),(462,496803600,8),(462,512528400,7),(462,528253200,8),(462,543978000,7),(462,559702800,8),(462,575427600,7),(462,591152400,8),(462,606877200,7),(462,622602000,8),(462,638326800,7),(462,654656400,8),(462,670381200,7),(462,686106000,8),(462,701830800,7),(462,717555600,8),(462,733280400,7),(462,749005200,8),(462,764730000,7),(462,780454800,8),(462,796179600,7),(462,811904400,8),(462,828234000,7),(462,846378000,8),(462,859683600,7),(462,877827600,8),(462,891133200,7),(462,909277200,8),(462,922582800,7),(462,941331600,8),(462,954032400,7),(462,972781200,8),(462,985482000,7),(462,1004230800,8),(462,1017536400,7),(462,1035680400,8),(462,1048986000,7),(462,1067130000,8),(462,1080435600,7),(462,1099184400,8),(462,1111885200,7),(462,1130634000,8),(462,1143334800,7),(462,1162083600,8),(462,1174784400,7),(462,1193533200,8),(462,1206838800,7),(462,1224982800,8),(462,1238288400,7),(462,1256432400,8),(462,1269738000,7),(462,1288486800,8),(462,1301187600,7),(462,1319936400,8),(462,1332637200,7),(462,1351386000,8),(462,1364691600,7),(462,1382835600,8),(462,1396141200,7),(462,1414285200,8),(462,1427590800,7),(462,1445734800,8),(462,1459040400,7),(462,1477789200,8),(462,1490490000,7),(462,1509238800,8),(462,1521939600,7),(462,1540688400,8),(462,1553994000,7),(462,1572138000,8),(462,1585443600,7),(462,1603587600,8),(462,1616893200,7),(462,1635642000,8),(462,1648342800,7),(462,1667091600,8),(462,1679792400,7),(462,1698541200,8),(462,1711846800,7),(462,1729990800,8),(462,1743296400,7),(462,1761440400,8),(462,1774746000,7),(462,1792890000,8),(462,1806195600,7),(462,1824944400,8),(462,1837645200,7),(462,1856394000,8),(462,1869094800,7),(462,1887843600,8),(462,1901149200,7),(462,1919293200,8),(462,1932598800,7),(462,1950742800,8),(462,1964048400,7),(462,1982797200,8),(462,1995498000,7),(462,2014246800,8),(462,2026947600,7),(462,2045696400,8),(462,2058397200,7),(462,2077146000,8),(462,2090451600,7),(462,2108595600,8),(462,2121901200,7),(462,2140045200,8),(463,-2147483648,1),(463,-1855958961,5),(463,-1689814800,2),(463,-1680397200,3),(463,-1665363600,2),(463,-1648342800,3),(463,-1635123600,2),(463,-1616893200,3),(463,-1604278800,2),(463,-1585443600,3),(463,-1574038800,2),(463,-1552266000,3),(463,-1539997200,2),(463,-1520557200,3),(463,-1507510800,2),(463,-1490576400,3),(463,-1470618000,2),(463,-1459126800,3),(463,-1444006800,2),(463,-1427677200,3),(463,-1411952400,2),(463,-1396227600,3),(463,-1379293200,2),(463,-1364778000,3),(463,-1348448400,2),(463,-1333328400,3),(463,-1316394000,2),(463,-1301274000,3),(463,-1284339600,2),(463,-1269824400,3),(463,-1253494800,2),(463,-1238374800,3),(463,-1221440400,2),(463,-1206925200,3),(463,-1191200400,2),(463,-1175475600,3),(463,-1160355600,2),(463,-1143421200,3),(463,-1127696400,2),(463,-1111971600,3),(463,-1096851600,2),(463,-1080522000,3),(463,-1063587600,2),(463,-1049072400,3),(463,-1033347600,2),(463,-1017622800,3),(463,-1002502800,2),(463,-986173200,3),(463,-969238800,2),(463,-950490000,3),(463,-942012000,4),(463,-932436000,8),(463,-857257200,6),(463,-844556400,7),(463,-828226800,6),(463,-812502000,7),(463,-800071200,9),(463,-796266000,4),(463,-781052400,9),(463,-766623600,10),(463,196819200,8),(463,212540400,10),(463,228877200,11),(463,243997200,12),(463,260326800,11),(463,276051600,12),(463,291776400,11),(463,307501200,12),(463,323830800,11),(463,338950800,12),(463,354675600,11),(463,370400400,12),(463,386125200,11),(463,401850000,12),(463,417574800,11),(463,433299600,12),(463,449024400,11),(463,465354000,12),(463,481078800,11),(463,496803600,12),(463,512528400,11),(463,528253200,12),(463,543978000,11),(463,559702800,12),(463,575427600,11),(463,591152400,12),(463,606877200,11),(463,622602000,12),(463,638326800,11),(463,654656400,12),(463,670381200,11),(463,686106000,12),(463,701830800,11),(463,717555600,12),(463,733280400,11),(463,749005200,12),(463,764730000,11),(463,780454800,12),(463,796179600,11),(463,811904400,12),(463,828234000,11),(463,846378000,12),(463,859683600,11),(463,877827600,12),(463,891133200,11),(463,909277200,12),(463,922582800,11),(463,941331600,12),(463,954032400,11),(463,972781200,12),(463,985482000,11),(463,1004230800,12),(463,1017536400,11),(463,1035680400,12),(463,1048986000,11),(463,1067130000,12),(463,1080435600,11),(463,1099184400,12),(463,1111885200,11),(463,1130634000,12),(463,1143334800,11),(463,1162083600,12),(463,1174784400,11),(463,1193533200,12),(463,1206838800,11),(463,1224982800,12),(463,1238288400,11),(463,1256432400,12),(463,1269738000,11),(463,1288486800,12),(463,1301187600,11),(463,1319936400,12),(463,1332637200,11),(463,1351386000,12),(463,1364691600,11),(463,1382835600,12),(463,1396141200,11),(463,1414285200,12),(463,1427590800,11),(463,1445734800,12),(463,1459040400,11),(463,1477789200,12),(463,1490490000,11),(463,1509238800,12),(463,1521939600,11),(463,1540688400,12),(463,1553994000,11),(463,1572138000,12),(463,1585443600,11),(463,1603587600,12),(463,1616893200,11),(463,1635642000,12),(463,1648342800,11),(463,1667091600,12),(463,1679792400,11),(463,1698541200,12),(463,1711846800,11),(463,1729990800,12),(463,1743296400,11),(463,1761440400,12),(463,1774746000,11),(463,1792890000,12),(463,1806195600,11),(463,1824944400,12),(463,1837645200,11),(463,1856394000,12),(463,1869094800,11),(463,1887843600,12),(463,1901149200,11),(463,1919293200,12),(463,1932598800,11),(463,1950742800,12),(463,1964048400,11),(463,1982797200,12),(463,1995498000,11),(463,2014246800,12),(463,2026947600,11),(463,2045696400,12),(463,2058397200,11),(463,2077146000,12),(463,2090451600,11),(463,2108595600,12),(463,2121901200,11),(463,2140045200,12),(464,-2147483648,1),(464,-905824800,4),(464,-857257200,2),(464,-844556400,3),(464,-828226800,2),(464,-812502000,3),(464,-796777200,2),(464,-777942000,3),(464,-766623600,2),(464,417574800,5),(464,433299600,6),(464,449024400,5),(464,465354000,6),(464,481078800,5),(464,496803600,6),(464,512528400,5),(464,528253200,6),(464,543978000,5),(464,559702800,6),(464,575427600,5),(464,591152400,6),(464,606877200,5),(464,622602000,6),(464,638326800,5),(464,654656400,6),(464,670381200,5),(464,686106000,6),(464,701830800,5),(464,717555600,6),(464,733280400,5),(464,749005200,6),(464,764730000,5),(464,780454800,6),(464,796179600,5),(464,811904400,6),(464,828234000,5),(464,846378000,6),(464,859683600,5),(464,877827600,6),(464,891133200,5),(464,909277200,6),(464,922582800,5),(464,941331600,6),(464,954032400,5),(464,972781200,6),(464,985482000,5),(464,1004230800,6),(464,1017536400,5),(464,1035680400,6),(464,1048986000,5),(464,1067130000,6),(464,1080435600,5),(464,1099184400,6),(464,1111885200,5),(464,1130634000,6),(464,1143334800,5),(464,1162083600,6),(464,1174784400,5),(464,1193533200,6),(464,1206838800,5),(464,1224982800,6),(464,1238288400,5),(464,1256432400,6),(464,1269738000,5),(464,1288486800,6),(464,1301187600,5),(464,1319936400,6),(464,1332637200,5),(464,1351386000,6),(464,1364691600,5),(464,1382835600,6),(464,1396141200,5),(464,1414285200,6),(464,1427590800,5),(464,1445734800,6),(464,1459040400,5),(464,1477789200,6),(464,1490490000,5),(464,1509238800,6),(464,1521939600,5),(464,1540688400,6),(464,1553994000,5),(464,1572138000,6),(464,1585443600,5),(464,1603587600,6),(464,1616893200,5),(464,1635642000,6),(464,1648342800,5),(464,1667091600,6),(464,1679792400,5),(464,1698541200,6),(464,1711846800,5),(464,1729990800,6),(464,1743296400,5),(464,1761440400,6),(464,1774746000,5),(464,1792890000,6),(464,1806195600,5),(464,1824944400,6),(464,1837645200,5),(464,1856394000,6),(464,1869094800,5),(464,1887843600,6),(464,1901149200,5),(464,1919293200,6),(464,1932598800,5),(464,1950742800,6),(464,1964048400,5),(464,1982797200,6),(464,1995498000,5),(464,2014246800,6),(464,2026947600,5),(464,2045696400,6),(464,2058397200,5),(464,2077146000,6),(464,2090451600,5),(464,2108595600,6),(464,2121901200,5),(464,2140045200,6),(465,-2147483648,2),(465,-1693706400,1),(465,-1680483600,2),(465,-1663455600,3),(465,-1650150000,4),(465,-1632006000,3),(465,-1618700400,4),(465,-938905200,3),(465,-857257200,4),(465,-844556400,3),(465,-828226800,4),(465,-812502000,3),(465,-796777200,4),(465,-781052400,3),(465,-765327600,4),(465,-746578800,3),(465,-733359600,4),(465,-728517600,5),(465,-721260000,2),(465,-716425200,3),(465,-701910000,4),(465,-684975600,3),(465,-670460400,4),(465,-654217200,3),(465,-639010800,4),(465,291776400,6),(465,307501200,7),(465,323830800,6),(465,338950800,7),(465,354675600,6),(465,370400400,7),(465,386125200,6),(465,401850000,7),(465,417574800,6),(465,433299600,7),(465,449024400,6),(465,465354000,7),(465,481078800,6),(465,496803600,7),(465,512528400,6),(465,528253200,7),(465,543978000,6),(465,559702800,7),(465,575427600,6),(465,591152400,7),(465,606877200,6),(465,622602000,7),(465,638326800,6),(465,654656400,7),(465,670381200,6),(465,686106000,7),(465,701830800,6),(465,717555600,7),(465,733280400,6),(465,749005200,7),(465,764730000,6),(465,780454800,7),(465,796179600,6),(465,811904400,7),(465,828234000,6),(465,846378000,7),(465,859683600,6),(465,877827600,7),(465,891133200,6),(465,909277200,7),(465,922582800,6),(465,941331600,7),(465,954032400,6),(465,972781200,7),(465,985482000,6),(465,1004230800,7),(465,1017536400,6),(465,1035680400,7),(465,1048986000,6),(465,1067130000,7),(465,1080435600,6),(465,1099184400,7),(465,1111885200,6),(465,1130634000,7),(465,1143334800,6),(465,1162083600,7),(465,1174784400,6),(465,1193533200,7),(465,1206838800,6),(465,1224982800,7),(465,1238288400,6),(465,1256432400,7),(465,1269738000,6),(465,1288486800,7),(465,1301187600,6),(465,1319936400,7),(465,1332637200,6),(465,1351386000,7),(465,1364691600,6),(465,1382835600,7),(465,1396141200,6),(465,1414285200,7),(465,1427590800,6),(465,1445734800,7),(465,1459040400,6),(465,1477789200,7),(465,1490490000,6),(465,1509238800,7),(465,1521939600,6),(465,1540688400,7),(465,1553994000,6),(465,1572138000,7),(465,1585443600,6),(465,1603587600,7),(465,1616893200,6),(465,1635642000,7),(465,1648342800,6),(465,1667091600,7),(465,1679792400,6),(465,1698541200,7),(465,1711846800,6),(465,1729990800,7),(465,1743296400,6),(465,1761440400,7),(465,1774746000,6),(465,1792890000,7),(465,1806195600,6),(465,1824944400,7),(465,1837645200,6),(465,1856394000,7),(465,1869094800,6),(465,1887843600,7),(465,1901149200,6),(465,1919293200,7),(465,1932598800,6),(465,1950742800,7),(465,1964048400,6),(465,1982797200,7),(465,1995498000,6),(465,2014246800,7),(465,2026947600,6),(465,2045696400,7),(465,2058397200,6),(465,2077146000,7),(465,2090451600,6),(465,2108595600,7),(465,2121901200,6),(465,2140045200,7),(466,-2147483648,1),(466,-1632008194,2),(466,-1618702594,1),(466,-1601681794,2),(466,-1597275394,1),(466,-1377308194,3),(466,-928029600,4),(466,-899521200,7),(466,-857257200,5),(466,-844556400,6),(466,-828226800,5),(466,-812502000,6),(466,-796777200,5),(466,-795834000,4),(466,354920400,8),(466,370728000,4),(466,386456400,8),(466,402264000,4),(466,417992400,8),(466,433800000,4),(466,449614800,8),(466,465346800,9),(466,481071600,10),(466,496796400,9),(466,512521200,10),(466,528246000,9),(466,543970800,10),(466,559695600,9),(466,575420400,10),(466,591145200,9),(466,606870000,11),(466,622598400,12),(466,638323200,11),(466,654652800,12),(466,670377600,11),(466,686102400,12),(466,701827200,11),(466,717552000,12),(466,733276800,11),(466,749001600,12),(466,764726400,11),(466,780451200,12),(466,796176000,11),(466,811900800,12),(466,828230400,11),(466,843955200,12),(466,859683600,13),(466,877827600,14),(466,891133200,13),(466,909277200,14),(466,922582800,13),(466,941331600,14),(466,985482000,13),(466,1004230800,14),(466,1017536400,13),(466,1035680400,14),(466,1048986000,13),(466,1067130000,14),(466,1080435600,13),(466,1099184400,14),(466,1111885200,13),(466,1130634000,14),(466,1143334800,13),(466,1162083600,14),(466,1174784400,13),(466,1193533200,14),(466,1206838800,13),(466,1224982800,14),(466,1238288400,13),(466,1256432400,14),(466,1269738000,13),(466,1288486800,14),(466,1301187600,13),(466,1319936400,14),(466,1332637200,13),(466,1351386000,14),(466,1364691600,13),(466,1382835600,14),(466,1396141200,13),(466,1414285200,14),(466,1427590800,13),(466,1445734800,14),(466,1459040400,13),(466,1477789200,14),(466,1490490000,13),(466,1509238800,14),(466,1521939600,13),(466,1540688400,14),(466,1553994000,13),(466,1572138000,14),(466,1585443600,13),(466,1603587600,14),(466,1616893200,13),(466,1635642000,14),(466,1648342800,13),(466,1667091600,14),(466,1679792400,13),(466,1698541200,14),(466,1711846800,13),(466,1729990800,14),(466,1743296400,13),(466,1761440400,14),(466,1774746000,13),(466,1792890000,14),(466,1806195600,13),(466,1824944400,14),(466,1837645200,13),(466,1856394000,14),(466,1869094800,13),(466,1887843600,14),(466,1901149200,13),(466,1919293200,14),(466,1932598800,13),(466,1950742800,14),(466,1964048400,13),(466,1982797200,14),(466,1995498000,13),(466,2014246800,14),(466,2026947600,13),(466,2045696400,14),(466,2058397200,13),(466,2077146000,14),(466,2090451600,13),(466,2108595600,14),(466,2121901200,13),(466,2140045200,14),(467,-2147483648,5),(467,-1690765200,1),(467,-1680487200,2),(467,-1664758800,1),(467,-1648951200,2),(467,-1635123600,1),(467,-1616896800,2),(467,-1604278800,1),(467,-1585533600,2),(467,-1571014800,1),(467,-1555293600,2),(467,-932432400,1),(467,-857257200,3),(467,-844556400,4),(467,-828226800,3),(467,-812502000,4),(467,-798073200,3),(467,-781052400,1),(467,-766717200,2),(467,-750898800,4),(467,-733359600,3),(467,-719456400,4),(467,-701917200,3),(467,-689209200,4),(467,-670460400,3),(467,-114051600,4),(467,-103168800,2),(467,-81997200,4),(467,-71715600,3),(467,-50547600,4),(467,-40266000,3),(467,-18493200,4),(467,-8211600,3),(467,12956400,4),(467,23238000,3),(467,43801200,4),(467,54687600,3),(467,75855600,4),(467,86742000,3),(467,107910000,4),(467,118191600,3),(467,138754800,4),(467,149641200,3),(467,170809200,4),(467,181090800,3),(467,202258800,4),(467,212540400,3),(467,233103600,4),(467,243990000,3),(467,265158000,4),(467,276044400,3),(467,296607600,4),(467,307494000,3),(467,323830800,6),(467,338950800,5),(467,354675600,6),(467,370400400,5),(467,386125200,6),(467,401850000,5),(467,417574800,6),(467,433299600,5),(467,449024400,6),(467,465354000,5),(467,481078800,6),(467,496803600,5),(467,512528400,6),(467,528253200,5),(467,543978000,6),(467,559702800,5),(467,575427600,6),(467,591152400,5),(467,606877200,6),(467,622602000,5),(467,638326800,6),(467,654656400,5),(467,670381200,6),(467,686106000,5),(467,701830800,6),(467,717555600,5),(467,733280400,6),(467,749005200,5),(467,764730000,6),(467,780454800,5),(467,796179600,6),(467,811904400,5),(467,828234000,6),(467,846378000,5),(467,859683600,6),(467,877827600,5),(467,891133200,6),(467,909277200,5),(467,922582800,6),(467,941331600,5),(467,954032400,6),(467,972781200,5),(467,985482000,6),(467,1004230800,5),(467,1017536400,6),(467,1035680400,5),(467,1048986000,6),(467,1067130000,5),(467,1080435600,6),(467,1099184400,5),(467,1111885200,6),(467,1130634000,5),(467,1143334800,6),(467,1162083600,5),(467,1174784400,6),(467,1193533200,5),(467,1206838800,6),(467,1224982800,5),(467,1238288400,6),(467,1256432400,5),(467,1269738000,6),(467,1288486800,5),(467,1301187600,6),(467,1319936400,5),(467,1332637200,6),(467,1351386000,5),(467,1364691600,6),(467,1382835600,5),(467,1396141200,6),(467,1414285200,5),(467,1427590800,6),(467,1445734800,5),(467,1459040400,6),(467,1477789200,5),(467,1490490000,6),(467,1509238800,5),(467,1521939600,6),(467,1540688400,5),(467,1553994000,6),(467,1572138000,5),(467,1585443600,6),(467,1603587600,5),(467,1616893200,6),(467,1635642000,5),(467,1648342800,6),(467,1667091600,5),(467,1679792400,6),(467,1698541200,5),(467,1711846800,6),(467,1729990800,5),(467,1743296400,6),(467,1761440400,5),(467,1774746000,6),(467,1792890000,5),(467,1806195600,6),(467,1824944400,5),(467,1837645200,6),(467,1856394000,5),(467,1869094800,6),(467,1887843600,5),(467,1901149200,6),(467,1919293200,5),(467,1932598800,6),(467,1950742800,5),(467,1964048400,6),(467,1982797200,5),(467,1995498000,6),(467,2014246800,5),(467,2026947600,6),(467,2045696400,5),(467,2058397200,6),(467,2077146000,5),(467,2090451600,6),(467,2108595600,5),(467,2121901200,6),(467,2140045200,5),(468,-1593820800,1),(468,-1247540400,2),(468,354916800,3),(468,370724400,2),(468,386452800,3),(468,402260400,2),(468,417988800,3),(468,433796400,2),(468,449611200,3),(468,465343200,4),(468,481068000,5),(468,496792800,4),(468,512517600,5),(468,528242400,4),(468,543967200,5),(468,559692000,4),(468,575416800,5),(468,591141600,4),(468,606866400,6),(468,622594800,7),(468,638319600,6),(468,654649200,7),(468,670374000,8),(468,686102400,7),(468,687916800,2),(468,701820000,5),(468,717544800,4),(468,733269600,5),(468,748994400,4),(468,764719200,5),(468,780444000,4),(468,796168800,5),(468,811893600,4),(468,828223200,5),(468,846367200,4),(468,859672800,5),(468,877816800,4),(468,891122400,5),(468,909266400,4),(468,922572000,5),(468,941320800,4),(468,954021600,5),(468,972770400,4),(468,985471200,5),(468,1004220000,4),(468,1017525600,5),(468,1035669600,4),(468,1048975200,5),(468,1067119200,4),(468,1080424800,5),(468,1099173600,4),(468,1111874400,5),(468,1130623200,4),(468,1143324000,5),(468,1162072800,4),(468,1174773600,5),(468,1193522400,4),(468,1206828000,5),(468,1224972000,4),(468,1238277600,5),(468,1256421600,4),(468,1269727200,6),(468,1288479600,7),(468,1301180400,4),(468,2147483647,4),(469,-2147483648,5),(469,-1690765200,1),(469,-1680487200,2),(469,-1664758800,1),(469,-1648951200,2),(469,-1635123600,1),(469,-1616896800,2),(469,-1604278800,1),(469,-1585533600,2),(469,-1571014800,1),(469,-1555293600,2),(469,-932432400,1),(469,-857257200,3),(469,-844556400,4),(469,-828226800,3),(469,-812502000,4),(469,-798073200,3),(469,-781052400,1),(469,-766717200,2),(469,-750898800,4),(469,-733359600,3),(469,-719456400,4),(469,-701917200,3),(469,-689209200,4),(469,-670460400,3),(469,-114051600,4),(469,-103168800,2),(469,-81997200,4),(469,-71715600,3),(469,-50547600,4),(469,-40266000,3),(469,-18493200,4),(469,-8211600,3),(469,12956400,4),(469,23238000,3),(469,43801200,4),(469,54687600,3),(469,75855600,4),(469,86742000,3),(469,107910000,4),(469,118191600,3),(469,138754800,4),(469,149641200,3),(469,170809200,4),(469,181090800,3),(469,202258800,4),(469,212540400,3),(469,233103600,4),(469,243990000,3),(469,265158000,4),(469,276044400,3),(469,296607600,4),(469,307494000,3),(469,323830800,6),(469,338950800,5),(469,354675600,6),(469,370400400,5),(469,386125200,6),(469,401850000,5),(469,417574800,6),(469,433299600,5),(469,449024400,6),(469,465354000,5),(469,481078800,6),(469,496803600,5),(469,512528400,6),(469,528253200,5),(469,543978000,6),(469,559702800,5),(469,575427600,6),(469,591152400,5),(469,606877200,6),(469,622602000,5),(469,638326800,6),(469,654656400,5),(469,670381200,6),(469,686106000,5),(469,701830800,6),(469,717555600,5),(469,733280400,6),(469,749005200,5),(469,764730000,6),(469,780454800,5),(469,796179600,6),(469,811904400,5),(469,828234000,6),(469,846378000,5),(469,859683600,6),(469,877827600,5),(469,891133200,6),(469,909277200,5),(469,922582800,6),(469,941331600,5),(469,954032400,6),(469,972781200,5),(469,985482000,6),(469,1004230800,5),(469,1017536400,6),(469,1035680400,5),(469,1048986000,6),(469,1067130000,5),(469,1080435600,6),(469,1099184400,5),(469,1111885200,6),(469,1130634000,5),(469,1143334800,6),(469,1162083600,5),(469,1174784400,6),(469,1193533200,5),(469,1206838800,6),(469,1224982800,5),(469,1238288400,6),(469,1256432400,5),(469,1269738000,6),(469,1288486800,5),(469,1301187600,6),(469,1319936400,5),(469,1332637200,6),(469,1351386000,5),(469,1364691600,6),(469,1382835600,5),(469,1396141200,6),(469,1414285200,5),(469,1427590800,6),(469,1445734800,5),(469,1459040400,6),(469,1477789200,5),(469,1490490000,6),(469,1509238800,5),(469,1521939600,6),(469,1540688400,5),(469,1553994000,6),(469,1572138000,5),(469,1585443600,6),(469,1603587600,5),(469,1616893200,6),(469,1635642000,5),(469,1648342800,6),(469,1667091600,5),(469,1679792400,6),(469,1698541200,5),(469,1711846800,6),(469,1729990800,5),(469,1743296400,6),(469,1761440400,5),(469,1774746000,6),(469,1792890000,5),(469,1806195600,6),(469,1824944400,5),(469,1837645200,6),(469,1856394000,5),(469,1869094800,6),(469,1887843600,5),(469,1901149200,6),(469,1919293200,5),(469,1932598800,6),(469,1950742800,5),(469,1964048400,6),(469,1982797200,5),(469,1995498000,6),(469,2014246800,5),(469,2026947600,6),(469,2045696400,5),(469,2058397200,6),(469,2077146000,5),(469,2090451600,6),(469,2108595600,5),(469,2121901200,6),(469,2140045200,5),(470,-2147483648,1),(470,-905824800,4),(470,-857257200,2),(470,-844556400,3),(470,-828226800,2),(470,-812502000,3),(470,-796777200,2),(470,-777942000,3),(470,-766623600,2),(470,417574800,5),(470,433299600,6),(470,449024400,5),(470,465354000,6),(470,481078800,5),(470,496803600,6),(470,512528400,5),(470,528253200,6),(470,543978000,5),(470,559702800,6),(470,575427600,5),(470,591152400,6),(470,606877200,5),(470,622602000,6),(470,638326800,5),(470,654656400,6),(470,670381200,5),(470,686106000,6),(470,701830800,5),(470,717555600,6),(470,733280400,5),(470,749005200,6),(470,764730000,5),(470,780454800,6),(470,796179600,5),(470,811904400,6),(470,828234000,5),(470,846378000,6),(470,859683600,5),(470,877827600,6),(470,891133200,5),(470,909277200,6),(470,922582800,5),(470,941331600,6),(470,954032400,5),(470,972781200,6),(470,985482000,5),(470,1004230800,6),(470,1017536400,5),(470,1035680400,6),(470,1048986000,5),(470,1067130000,6),(470,1080435600,5),(470,1099184400,6),(470,1111885200,5),(470,1130634000,6),(470,1143334800,5),(470,1162083600,6),(470,1174784400,5),(470,1193533200,6),(470,1206838800,5),(470,1224982800,6),(470,1238288400,5),(470,1256432400,6),(470,1269738000,5),(470,1288486800,6),(470,1301187600,5),(470,1319936400,6),(470,1332637200,5),(470,1351386000,6),(470,1364691600,5),(470,1382835600,6),(470,1396141200,5),(470,1414285200,6),(470,1427590800,5),(470,1445734800,6),(470,1459040400,5),(470,1477789200,6),(470,1490490000,5),(470,1509238800,6),(470,1521939600,5),(470,1540688400,6),(470,1553994000,5),(470,1572138000,6),(470,1585443600,5),(470,1603587600,6),(470,1616893200,5),(470,1635642000,6),(470,1648342800,5),(470,1667091600,6),(470,1679792400,5),(470,1698541200,6),(470,1711846800,5),(470,1729990800,6),(470,1743296400,5),(470,1761440400,6),(470,1774746000,5),(470,1792890000,6),(470,1806195600,5),(470,1824944400,6),(470,1837645200,5),(470,1856394000,6),(470,1869094800,5),(470,1887843600,6),(470,1901149200,5),(470,1919293200,6),(470,1932598800,5),(470,1950742800,6),(470,1964048400,5),(470,1982797200,6),(470,1995498000,5),(470,2014246800,6),(470,2026947600,5),(470,2045696400,6),(470,2058397200,5),(470,2077146000,6),(470,2090451600,5),(470,2108595600,6),(470,2121901200,5),(470,2140045200,6),(471,-1593820800,1),(471,-1247540400,3),(471,354916800,2),(471,370724400,3),(471,386452800,2),(471,402260400,3),(471,417988800,2),(471,433796400,3),(471,449611200,2),(471,465343200,4),(471,481068000,5),(471,496792800,4),(471,512517600,5),(471,528242400,4),(471,543967200,5),(471,559692000,4),(471,575416800,6),(471,591145200,7),(471,606870000,6),(471,622594800,7),(471,638319600,6),(471,654649200,7),(471,670374000,4),(471,701820000,6),(471,717548400,7),(471,733273200,6),(471,748998000,7),(471,764722800,6),(471,780447600,7),(471,796172400,6),(471,811897200,7),(471,828226800,6),(471,846370800,7),(471,859676400,6),(471,877820400,7),(471,891126000,6),(471,909270000,7),(471,922575600,6),(471,941324400,7),(471,954025200,6),(471,972774000,7),(471,985474800,6),(471,1004223600,7),(471,1017529200,6),(471,1035673200,7),(471,1048978800,6),(471,1067122800,7),(471,1080428400,6),(471,1099177200,7),(471,1111878000,6),(471,1130626800,7),(471,1143327600,6),(471,1162076400,7),(471,1174777200,6),(471,1193526000,7),(471,1206831600,6),(471,1224975600,7),(471,1238281200,6),(471,1256425200,7),(471,1269730800,6),(471,1288479600,7),(471,1301180400,4),(471,1414274400,7),(471,1480806000,4),(471,2147483647,4),(472,-2147483648,1),(472,-1441160160,2),(472,-1247536800,3),(472,-888894000,6),(472,-857257200,4),(472,-844556400,5),(472,-828226800,4),(472,-812502000,5),(472,-811648800,3),(472,354920400,7),(472,370728000,3),(472,386456400,7),(472,402264000,3),(472,417992400,7),(472,433800000,3),(472,449614800,7),(472,465346800,8),(472,481071600,9),(472,496796400,8),(472,512521200,9),(472,528246000,8),(472,543970800,9),(472,559695600,8),(472,575420400,9),(472,591145200,8),(472,606870000,9),(472,622594800,8),(472,646786800,2),(472,701827200,10),(472,717552000,11),(472,733276800,10),(472,749001600,11),(472,764726400,10),(472,767739600,7),(472,780447600,8),(472,796172400,9),(472,811897200,8),(472,828219600,9),(472,846374400,8),(472,859683600,12),(472,877827600,13),(472,891133200,12),(472,909277200,13),(472,922582800,12),(472,941331600,13),(472,954032400,12),(472,972781200,13),(472,985482000,12),(472,1004230800,13),(472,1017536400,12),(472,1035680400,13),(472,1048986000,12),(472,1067130000,13),(472,1080435600,12),(472,1099184400,13),(472,1111885200,12),(472,1130634000,13),(472,1143334800,12),(472,1162083600,13),(472,1174784400,12),(472,1193533200,13),(472,1206838800,12),(472,1224982800,13),(472,1238288400,12),(472,1256432400,13),(472,1269738000,12),(472,1288486800,13),(472,1301187600,12),(472,1319936400,13),(472,1332637200,12),(472,1351386000,13),(472,1364691600,12),(472,1382835600,13),(472,1396137600,14),(472,1414274400,8),(473,-2147483648,1),(473,-905824800,4),(473,-857257200,2),(473,-844556400,3),(473,-828226800,2),(473,-812502000,3),(473,-796777200,2),(473,-777942000,3),(473,-766623600,2),(473,417574800,5),(473,433299600,6),(473,449024400,5),(473,465354000,6),(473,481078800,5),(473,496803600,6),(473,512528400,5),(473,528253200,6),(473,543978000,5),(473,559702800,6),(473,575427600,5),(473,591152400,6),(473,606877200,5),(473,622602000,6),(473,638326800,5),(473,654656400,6),(473,670381200,5),(473,686106000,6),(473,701830800,5),(473,717555600,6),(473,733280400,5),(473,749005200,6),(473,764730000,5),(473,780454800,6),(473,796179600,5),(473,811904400,6),(473,828234000,5),(473,846378000,6),(473,859683600,5),(473,877827600,6),(473,891133200,5),(473,909277200,6),(473,922582800,5),(473,941331600,6),(473,954032400,5),(473,972781200,6),(473,985482000,5),(473,1004230800,6),(473,1017536400,5),(473,1035680400,6),(473,1048986000,5),(473,1067130000,6),(473,1080435600,5),(473,1099184400,6),(473,1111885200,5),(473,1130634000,6),(473,1143334800,5),(473,1162083600,6),(473,1174784400,5),(473,1193533200,6),(473,1206838800,5),(473,1224982800,6),(473,1238288400,5),(473,1256432400,6),(473,1269738000,5),(473,1288486800,6),(473,1301187600,5),(473,1319936400,6),(473,1332637200,5),(473,1351386000,6),(473,1364691600,5),(473,1382835600,6),(473,1396141200,5),(473,1414285200,6),(473,1427590800,5),(473,1445734800,6),(473,1459040400,5),(473,1477789200,6),(473,1490490000,5),(473,1509238800,6),(473,1521939600,5),(473,1540688400,6),(473,1553994000,5),(473,1572138000,6),(473,1585443600,5),(473,1603587600,6),(473,1616893200,5),(473,1635642000,6),(473,1648342800,5),(473,1667091600,6),(473,1679792400,5),(473,1698541200,6),(473,1711846800,5),(473,1729990800,6),(473,1743296400,5),(473,1761440400,6),(473,1774746000,5),(473,1792890000,6),(473,1806195600,5),(473,1824944400,6),(473,1837645200,5),(473,1856394000,6),(473,1869094800,5),(473,1887843600,6),(473,1901149200,5),(473,1919293200,6),(473,1932598800,5),(473,1950742800,6),(473,1964048400,5),(473,1982797200,6),(473,1995498000,5),(473,2014246800,6),(473,2026947600,5),(473,2045696400,6),(473,2058397200,5),(473,2077146000,6),(473,2090451600,5),(473,2108595600,6),(473,2121901200,5),(473,2140045200,6),(474,-2147483648,1),(474,-857257200,2),(474,-844556400,3),(474,-828226800,2),(474,-812502000,3),(474,-796777200,2),(474,-781048800,1),(474,291762000,4),(474,307576800,1),(474,323816400,4),(474,339026400,1),(474,355266000,4),(474,370393200,1),(474,386715600,4),(474,401846400,5),(474,417571200,6),(474,433296000,5),(474,449020800,6),(474,465350400,5),(474,481075200,6),(474,496800000,5),(474,512524800,6),(474,528249600,5),(474,543974400,6),(474,559699200,5),(474,575424000,6),(474,591148800,5),(474,606873600,6),(474,622598400,5),(474,638323200,6),(474,654652800,5),(474,670370400,4),(474,686091600,1),(474,701820000,4),(474,717541200,1),(474,733269600,4),(474,748990800,1),(474,764719200,4),(474,780440400,1),(474,796168800,4),(474,811890000,1),(474,828223200,4),(474,846363600,1),(474,859683600,7),(474,877827600,8),(474,891133200,7),(474,909277200,8),(474,922582800,7),(474,941331600,8),(474,954032400,7),(474,972781200,8),(474,985482000,7),(474,1004230800,8),(474,1017536400,7),(474,1035680400,8),(474,1048986000,7),(474,1067130000,8),(474,1080435600,7),(474,1099184400,8),(474,1111885200,7),(474,1130634000,8),(474,1143334800,7),(474,1162083600,8),(474,1174784400,7),(474,1193533200,8),(474,1206838800,7),(474,1224982800,8),(474,1238288400,7),(474,1256432400,8),(474,1269738000,7),(474,1288486800,8),(474,1301187600,7),(474,1319936400,8),(474,1332637200,7),(474,1351386000,8),(474,1364691600,7),(474,1382835600,8),(474,1396141200,7),(474,1414285200,8),(474,1427590800,7),(474,1445734800,8),(474,1459040400,7),(474,1477789200,8),(474,1490490000,7),(474,1509238800,8),(474,1521939600,7),(474,1540688400,8),(474,1553994000,7),(474,1572138000,8),(474,1585443600,7),(474,1603587600,8),(474,1616893200,7),(474,1635642000,8),(474,1648342800,7),(474,1667091600,8),(474,1679792400,7),(474,1698541200,8),(474,1711846800,7),(474,1729990800,8),(474,1743296400,7),(474,1761440400,8),(474,1774746000,7),(474,1792890000,8),(474,1806195600,7),(474,1824944400,8),(474,1837645200,7),(474,1856394000,8),(474,1869094800,7),(474,1887843600,8),(474,1901149200,7),(474,1919293200,8),(474,1932598800,7),(474,1950742800,8),(474,1964048400,7),(474,1982797200,8),(474,1995498000,7),(474,2014246800,8),(474,2026947600,7),(474,2045696400,8),(474,2058397200,7),(474,2077146000,8),(474,2090451600,7),(474,2108595600,8),(474,2121901200,7),(474,2140045200,8),(475,-2147483648,2),(475,-1693706400,1),(475,-1680483600,2),(475,-1663455600,3),(475,-1650150000,4),(475,-1632006000,3),(475,-1618700400,4),(475,-938905200,3),(475,-857257200,4),(475,-844556400,3),(475,-828226800,4),(475,-812502000,3),(475,-796777200,4),(475,-781052400,3),(475,-776563200,5),(475,-765936000,1),(475,-761180400,4),(475,-748479600,3),(475,-733273200,4),(475,-717631200,3),(475,-714610800,6),(475,-710380800,1),(475,-701910000,4),(475,-684975600,3),(475,-670460400,4),(475,-654130800,3),(475,-639010800,4),(475,323830800,7),(475,338950800,8),(475,354675600,7),(475,370400400,8),(475,386125200,7),(475,401850000,8),(475,417574800,7),(475,433299600,8),(475,449024400,7),(475,465354000,8),(475,481078800,7),(475,496803600,8),(475,512528400,7),(475,528253200,8),(475,543978000,7),(475,559702800,8),(475,575427600,7),(475,591152400,8),(475,606877200,7),(475,622602000,8),(475,638326800,7),(475,654656400,8),(475,670381200,7),(475,686106000,8),(475,701830800,7),(475,717555600,8),(475,733280400,7),(475,749005200,8),(475,764730000,7),(475,780454800,8),(475,796179600,7),(475,811904400,8),(475,828234000,7),(475,846378000,8),(475,859683600,7),(475,877827600,8),(475,891133200,7),(475,909277200,8),(475,922582800,7),(475,941331600,8),(475,954032400,7),(475,972781200,8),(475,985482000,7),(475,1004230800,8),(475,1017536400,7),(475,1035680400,8),(475,1048986000,7),(475,1067130000,8),(475,1080435600,7),(475,1099184400,8),(475,1111885200,7),(475,1130634000,8),(475,1143334800,7),(475,1162083600,8),(475,1174784400,7),(475,1193533200,8),(475,1206838800,7),(475,1224982800,8),(475,1238288400,7),(475,1256432400,8),(475,1269738000,7),(475,1288486800,8),(475,1301187600,7),(475,1319936400,8),(475,1332637200,7),(475,1351386000,8),(475,1364691600,7),(475,1382835600,8),(475,1396141200,7),(475,1414285200,8),(475,1427590800,7),(475,1445734800,8),(475,1459040400,7),(475,1477789200,8),(475,1490490000,7),(475,1509238800,8),(475,1521939600,7),(475,1540688400,8),(475,1553994000,7),(475,1572138000,8),(475,1585443600,7),(475,1603587600,8),(475,1616893200,7),(475,1635642000,8),(475,1648342800,7),(475,1667091600,8),(475,1679792400,7),(475,1698541200,8),(475,1711846800,7),(475,1729990800,8),(475,1743296400,7),(475,1761440400,8),(475,1774746000,7),(475,1792890000,8),(475,1806195600,7),(475,1824944400,8),(475,1837645200,7),(475,1856394000,8),(475,1869094800,7),(475,1887843600,8),(475,1901149200,7),(475,1919293200,8),(475,1932598800,7),(475,1950742800,8),(475,1964048400,7),(475,1982797200,8),(475,1995498000,7),(475,2014246800,8),(475,2026947600,7),(475,2045696400,8),(475,2058397200,7),(475,2077146000,8),(475,2090451600,7),(475,2108595600,8),(475,2121901200,7),(475,2140045200,8),(476,-2147483648,1),(476,-1638322740,4),(476,-1632006000,2),(476,-1618700400,3),(476,-1593824400,1),(476,-1535938740,5),(476,-927943200,6),(476,-892954800,7),(476,-857257200,3),(476,-844556400,2),(476,-828226800,3),(476,-812502000,2),(476,-797652000,6),(476,354920400,8),(476,370728000,6),(476,386456400,8),(476,402264000,6),(476,417992400,8),(476,433800000,6),(476,449614800,8),(476,465346800,9),(476,481071600,10),(476,496796400,9),(476,512521200,10),(476,528246000,9),(476,543970800,10),(476,559695600,9),(476,575420400,10),(476,591145200,9),(476,606870000,11),(476,622598400,12),(476,638323200,11),(476,654652800,12),(476,670377600,11),(476,686102400,12),(476,701827200,11),(476,717552000,12),(476,733276800,11),(476,749001600,12),(476,764726400,11),(476,780451200,12),(476,796176000,11),(476,811900800,12),(476,828230400,11),(476,846374400,12),(476,859680000,11),(476,877824000,12),(476,891129600,11),(476,909277200,13),(476,922582800,14),(476,941331600,5),(476,1017536400,14),(476,1035680400,13),(476,1048986000,14),(476,1067130000,13),(476,1080435600,14),(476,1099184400,13),(476,1111885200,14),(476,1130634000,13),(476,1143334800,14),(476,1162083600,13),(476,1174784400,14),(476,1193533200,13),(476,1206838800,14),(476,1224982800,13),(476,1238288400,14),(476,1256432400,13),(476,1269738000,14),(476,1288486800,13),(476,1301187600,14),(476,1319936400,13),(476,1332637200,14),(476,1351386000,13),(476,1364691600,14),(476,1382835600,13),(476,1396141200,14),(476,1414285200,13),(476,1427590800,14),(476,1445734800,13),(476,1459040400,14),(476,1477789200,13),(476,1490490000,14),(476,1509238800,13),(476,1521939600,14),(476,1540688400,13),(476,1553994000,14),(476,1572138000,13),(476,1585443600,14),(476,1603587600,13),(476,1616893200,14),(476,1635642000,13),(476,1648342800,14),(476,1667091600,13),(476,1679792400,14),(476,1698541200,13),(476,1711846800,14),(476,1729990800,13),(476,1743296400,14),(476,1761440400,13),(476,1774746000,14),(476,1792890000,13),(476,1806195600,14),(476,1824944400,13),(476,1837645200,14),(476,1856394000,13),(476,1869094800,14),(476,1887843600,13),(476,1901149200,14),(476,1919293200,13),(476,1932598800,14),(476,1950742800,13),(476,1964048400,14),(476,1982797200,13),(476,1995498000,14),(476,2014246800,13),(476,2026947600,14),(476,2045696400,13),(476,2058397200,14),(476,2077146000,13),(476,2090451600,14),(476,2108595600,13),(476,2121901200,14),(476,2140045200,13),(477,-1767230360,1),(477,-932346000,2),(477,-857257200,1),(477,-844556400,2),(477,-843519600,1),(477,136854000,2),(477,149896800,1),(477,168130800,2),(477,181432800,1),(477,199839600,2),(477,213141600,1),(477,231894000,2),(477,244591200,1),(477,263257200,2),(477,276040800,1),(477,294706800,2),(477,307490400,1),(477,326156400,2),(477,339458400,1),(477,357087600,2),(477,370389600,1),(477,389142000,2),(477,402444000,1),(477,419468400,2),(477,433807200,1),(477,449622000,2),(477,465354000,3),(477,481078800,4),(477,496803600,3),(477,512528400,4),(477,528253200,3),(477,543978000,4),(477,559702800,3),(477,575427600,4),(477,591152400,3),(477,606877200,4),(477,622602000,3),(477,638326800,4),(477,654656400,3),(477,670381200,4),(477,686106000,3),(477,701830800,4),(477,717555600,3),(477,733280400,4),(477,749005200,3),(477,764730000,4),(477,780454800,3),(477,796179600,4),(477,811904400,3),(477,828234000,4),(477,846378000,3),(477,859683600,4),(477,877827600,3),(477,891133200,4),(477,909277200,3),(477,922582800,4),(477,941331600,3),(477,954032400,4),(477,972781200,3),(477,985482000,4),(477,1004230800,3),(477,1017536400,4),(477,1035680400,3),(477,1048986000,4),(477,1067130000,3),(477,1080435600,4),(477,1099184400,3),(477,1111885200,4),(477,1130634000,3),(477,1143334800,4),(477,1162083600,3),(477,1174784400,4),(477,1193533200,3),(477,1206838800,4),(477,1224982800,3),(477,1238288400,4),(477,1256432400,3),(477,1269738000,4),(477,1288486800,3),(477,1301187600,4),(477,1319936400,3),(477,1332637200,4),(477,1351386000,3),(477,1364691600,4),(477,1382835600,3),(477,1396141200,4),(477,1414285200,3),(477,1427590800,4),(477,1445734800,3),(477,1459040400,4),(477,1477789200,3),(477,1490490000,4),(477,1509238800,3),(477,1521939600,4),(477,1540688400,3),(477,1553994000,4),(477,1572138000,3),(477,1585443600,4),(477,1603587600,3),(477,1616893200,4),(477,1635642000,3),(477,1648342800,4),(477,1667091600,3),(477,1679792400,4),(477,1698541200,3),(477,1711846800,4),(477,1729990800,3),(477,1743296400,4),(477,1761440400,3),(477,1774746000,4),(477,1792890000,3),(477,1806195600,4),(477,1824944400,3),(477,1837645200,4),(477,1856394000,3),(477,1869094800,4),(477,1887843600,3),(477,1901149200,4),(477,1919293200,3),(477,1932598800,4),(477,1950742800,3),(477,1964048400,4),(477,1982797200,3),(477,1995498000,4),(477,2014246800,3),(477,2026947600,4),(477,2045696400,3),(477,2058397200,4),(477,2077146000,3),(477,2090451600,4),(477,2108595600,3),(477,2121901200,4),(477,2140045200,3),(478,-2147483648,1),(478,-1637114100,2),(478,-1213148664,5),(478,-1187056800,3),(478,-1175479200,4),(478,-1159754400,3),(478,-1144029600,4),(478,-1127700000,3),(478,-1111975200,4),(478,-1096250400,3),(478,-1080525600,4),(478,-1064800800,3),(478,-1049076000,4),(478,-1033351200,3),(478,-1017626400,4),(478,-1001901600,3),(478,-986176800,4),(478,-970452000,3),(478,-954727200,4),(478,-927165600,6),(478,-898138800,9),(478,-857257200,7),(478,-844556400,8),(478,-828226800,7),(478,-812502000,8),(478,-800157600,11),(478,354920400,10),(478,370728000,11),(478,386456400,10),(478,402264000,11),(478,417992400,10),(478,433800000,11),(478,449614800,10),(478,465346800,12),(478,481071600,13),(478,496796400,12),(478,512521200,13),(478,528246000,12),(478,543970800,13),(478,559695600,12),(478,575420400,13),(478,591145200,12),(478,606870000,13),(478,622594800,12),(478,638319600,13),(478,641944800,6),(478,654652800,4),(478,670377600,3),(478,686102400,4),(478,701820000,6),(478,717541200,5),(478,733269600,6),(478,748990800,5),(478,764719200,6),(478,780440400,5),(478,796168800,6),(478,811890000,5),(478,828223200,6),(478,846363600,5),(478,859680000,6),(478,877824000,5),(478,891129600,6),(478,909273600,5),(478,922579200,6),(478,941328000,5),(478,954028800,6),(478,972777600,5),(478,985478400,6),(478,1004227200,5),(478,1017532800,6),(478,1035676800,5),(478,1048982400,6),(478,1067126400,5),(478,1080432000,6),(478,1099180800,5),(478,1111881600,6),(478,1130630400,5),(478,1143331200,6),(478,1162080000,5),(478,1174780800,6),(478,1193529600,5),(478,1206835200,6),(478,1224979200,5),(478,1238284800,6),(478,1256428800,5),(478,1269734400,6),(478,1288483200,5),(478,1301184000,6),(478,1319932800,5),(478,1332633600,6),(478,1351382400,5),(478,1364688000,6),(478,1382832000,5),(478,1396137600,6),(478,1414281600,5),(478,1427587200,6),(478,1445731200,5),(478,1459036800,6),(478,1477785600,5),(478,1490486400,6),(478,1509235200,5),(478,1521936000,6),(478,1540684800,5),(478,1553990400,6),(478,1572134400,5),(478,1585440000,6),(478,1603584000,5),(478,1616889600,6),(478,1635638400,5),(478,1648339200,6),(478,1667088000,5),(478,1679788800,6),(478,1698537600,5),(478,1711843200,6),(478,1729987200,5),(478,1743292800,6),(478,1761436800,5),(478,1774742400,6),(478,1792886400,5),(478,1806192000,6),(478,1824940800,5),(478,1837641600,6),(478,1856390400,5),(478,1869091200,6),(478,1887840000,5),(478,1901145600,6),(478,1919289600,5),(478,1932595200,6),(478,1950739200,5),(478,1964044800,6),(478,1982793600,5),(478,1995494400,6),(478,2014243200,5),(478,2026944000,6),(478,2045692800,5),(478,2058393600,6),(478,2077142400,5),(478,2090448000,6),(478,2108592000,5),(478,2121897600,6),(478,2140041600,5),(479,-1593820800,1),(479,-1247540400,3),(479,354916800,2),(479,370724400,3),(479,386452800,2),(479,402260400,3),(479,417988800,2),(479,433796400,3),(479,449611200,2),(479,465343200,4),(479,481068000,5),(479,496792800,4),(479,512517600,5),(479,528242400,4),(479,543967200,5),(479,559692000,4),(479,575416800,5),(479,591141600,4),(479,606866400,6),(479,622594800,7),(479,638319600,6),(479,654649200,7),(479,670374000,8),(479,686102400,9),(479,695779200,7),(479,701823600,6),(479,717548400,7),(479,733273200,6),(479,748998000,7),(479,764722800,6),(479,780447600,7),(479,796172400,6),(479,811897200,7),(479,828226800,6),(479,846370800,7),(479,859676400,6),(479,877820400,7),(479,891126000,6),(479,909270000,7),(479,922575600,6),(479,941324400,7),(479,954025200,6),(479,972774000,7),(479,985474800,6),(479,1004223600,7),(479,1017529200,6),(479,1035673200,7),(479,1048978800,6),(479,1067122800,7),(479,1080428400,6),(479,1099177200,7),(479,1111878000,6),(479,1130626800,7),(479,1143327600,6),(479,1162076400,7),(479,1174777200,6),(479,1193526000,7),(479,1206831600,6),(479,1224975600,7),(479,1238281200,6),(479,1256425200,7),(479,1269730800,6),(479,1288479600,7),(479,1301180400,4),(479,1414274400,7),(479,1459033200,4),(479,2147483647,4),(480,-2147483648,1),(480,-938905200,2),(480,-857257200,3),(480,-844556400,2),(480,-828226800,3),(480,-812502000,2),(480,-794714400,1),(480,-773456400,5),(480,354920400,4),(480,370728000,5),(480,386456400,4),(480,402264000,5),(480,417992400,4),(480,433800000,5),(480,449614800,4),(480,465346800,6),(480,481071600,7),(480,496796400,6),(480,512521200,7),(480,528246000,6),(480,543970800,7),(480,559695600,6),(480,575420400,7),(480,591145200,6),(480,606870000,7),(480,622594800,6),(480,646786800,1),(480,670384800,8),(480,701827200,9),(480,717552000,10),(480,733276800,9),(480,749001600,10),(480,764726400,9),(480,780451200,10),(480,796176000,9),(480,811900800,10),(480,828230400,9),(480,846378000,11),(480,859683600,12),(480,877827600,11),(480,891133200,12),(480,909277200,11),(480,922582800,12),(480,941331600,11),(480,954032400,12),(480,972781200,11),(480,985482000,12),(480,1004230800,11),(480,1017536400,12),(480,1035680400,11),(480,1048986000,12),(480,1067130000,11),(480,1080435600,12),(480,1099184400,11),(480,1111885200,12),(480,1130634000,11),(480,1143334800,12),(480,1162083600,11),(480,1174784400,12),(480,1193533200,11),(480,1206838800,12),(480,1224982800,11),(480,1238288400,12),(480,1256432400,11),(480,1269738000,12),(480,1288486800,11),(480,1301187600,12),(480,1319936400,11),(480,1332637200,12),(480,1351386000,11),(480,1364691600,12),(480,1382835600,11),(480,1396141200,12),(480,1414285200,11),(480,1427590800,12),(480,1445734800,11),(480,1459040400,12),(480,1477789200,11),(480,1490490000,12),(480,1509238800,11),(480,1521939600,12),(480,1540688400,11),(480,1553994000,12),(480,1572138000,11),(480,1585443600,12),(480,1603587600,11),(480,1616893200,12),(480,1635642000,11),(480,1648342800,12),(480,1667091600,11),(480,1679792400,12),(480,1698541200,11),(480,1711846800,12),(480,1729990800,11),(480,1743296400,12),(480,1761440400,11),(480,1774746000,12),(480,1792890000,11),(480,1806195600,12),(480,1824944400,11),(480,1837645200,12),(480,1856394000,11),(480,1869094800,12),(480,1887843600,11),(480,1901149200,12),(480,1919293200,11),(480,1932598800,12),(480,1950742800,11),(480,1964048400,12),(480,1982797200,11),(480,1995498000,12),(480,2014246800,11),(480,2026947600,12),(480,2045696400,11),(480,2058397200,12),(480,2077146000,11),(480,2090451600,12),(480,2108595600,11),(480,2121901200,12),(480,2140045200,11),(481,-2147483648,2),(481,-904435200,1),(481,-891129600,2),(481,-872985600,1),(481,-859680000,2),(481,354675600,3),(481,370400400,4),(481,386125200,3),(481,401850000,4),(481,417574800,3),(481,433299600,4),(481,449024400,3),(481,465354000,4),(481,481078800,3),(481,496803600,4),(481,512528400,3),(481,528253200,4),(481,543978000,3),(481,559702800,4),(481,575427600,3),(481,591152400,4),(481,606877200,3),(481,622602000,4),(481,638326800,3),(481,654656400,4),(481,670381200,3),(481,686106000,4),(481,701830800,3),(481,717555600,4),(481,733280400,3),(481,749005200,4),(481,764730000,3),(481,780454800,4),(481,796179600,3),(481,811904400,4),(481,828234000,3),(481,846378000,4),(481,859683600,3),(481,877827600,4),(481,891133200,3),(481,909277200,4),(481,922582800,3),(481,941331600,4),(481,954032400,3),(481,972781200,4),(481,985482000,3),(481,1004230800,4),(481,1017536400,3),(481,1035680400,4),(481,1048986000,3),(481,1067130000,4),(481,1080435600,3),(481,1099184400,4),(481,1111885200,3),(481,1130634000,4),(481,1143334800,3),(481,1162083600,4),(481,1174784400,3),(481,1193533200,4),(481,1206838800,3),(481,1224982800,4),(481,1238288400,3),(481,1256432400,4),(481,1269738000,3),(481,1288486800,4),(481,1301187600,3),(481,1319936400,4),(481,1332637200,3),(481,1351386000,4),(481,1364691600,3),(481,1382835600,4),(481,1396141200,3),(481,1414285200,4),(481,1427590800,3),(481,1445734800,4),(481,1459040400,3),(481,1477789200,4),(481,1490490000,3),(481,1509238800,4),(481,1521939600,3),(481,1540688400,4),(481,1553994000,3),(481,1572138000,4),(481,1585443600,3),(481,1603587600,4),(481,1616893200,3),(481,1635642000,4),(481,1648342800,3),(481,1667091600,4),(481,1679792400,3),(481,1698541200,4),(481,1711846800,3),(481,1729990800,4),(481,1743296400,3),(481,1761440400,4),(481,1774746000,3),(481,1792890000,4),(481,1806195600,3),(481,1824944400,4),(481,1837645200,3),(481,1856394000,4),(481,1869094800,3),(481,1887843600,4),(481,1901149200,3),(481,1919293200,4),(481,1932598800,3),(481,1950742800,4),(481,1964048400,3),(481,1982797200,4),(481,1995498000,3),(481,2014246800,4),(481,2026947600,3),(481,2045696400,4),(481,2058397200,3),(481,2077146000,4),(481,2090451600,3),(481,2108595600,4),(481,2121901200,3),(481,2140045200,4),(482,-2147483648,5),(482,-1690765200,1),(482,-1680487200,2),(482,-1664758800,1),(482,-1648951200,2),(482,-1635123600,1),(482,-1616896800,2),(482,-1604278800,1),(482,-1585533600,2),(482,-1571014800,1),(482,-1555293600,2),(482,-932432400,1),(482,-857257200,3),(482,-844556400,4),(482,-828226800,3),(482,-812502000,4),(482,-798073200,3),(482,-781052400,1),(482,-766717200,2),(482,-750898800,4),(482,-733359600,3),(482,-719456400,4),(482,-701917200,3),(482,-689209200,4),(482,-670460400,3),(482,-114051600,4),(482,-103168800,2),(482,-81997200,4),(482,-71715600,3),(482,-50547600,4),(482,-40266000,3),(482,-18493200,4),(482,-8211600,3),(482,12956400,4),(482,23238000,3),(482,43801200,4),(482,54687600,3),(482,75855600,4),(482,86742000,3),(482,107910000,4),(482,118191600,3),(482,138754800,4),(482,149641200,3),(482,170809200,4),(482,181090800,3),(482,202258800,4),(482,212540400,3),(482,233103600,4),(482,243990000,3),(482,265158000,4),(482,276044400,3),(482,296607600,4),(482,307494000,3),(482,323830800,6),(482,338950800,5),(482,354675600,6),(482,370400400,5),(482,386125200,6),(482,401850000,5),(482,417574800,6),(482,433299600,5),(482,449024400,6),(482,465354000,5),(482,481078800,6),(482,496803600,5),(482,512528400,6),(482,528253200,5),(482,543978000,6),(482,559702800,5),(482,575427600,6),(482,591152400,5),(482,606877200,6),(482,622602000,5),(482,638326800,6),(482,654656400,5),(482,670381200,6),(482,686106000,5),(482,701830800,6),(482,717555600,5),(482,733280400,6),(482,749005200,5),(482,764730000,6),(482,780454800,5),(482,796179600,6),(482,811904400,5),(482,828234000,6),(482,846378000,5),(482,859683600,6),(482,877827600,5),(482,891133200,6),(482,909277200,5),(482,922582800,6),(482,941331600,5),(482,954032400,6),(482,972781200,5),(482,985482000,6),(482,1004230800,5),(482,1017536400,6),(482,1035680400,5),(482,1048986000,6),(482,1067130000,5),(482,1080435600,6),(482,1099184400,5),(482,1111885200,6),(482,1130634000,5),(482,1143334800,6),(482,1162083600,5),(482,1174784400,6),(482,1193533200,5),(482,1206838800,6),(482,1224982800,5),(482,1238288400,6),(482,1256432400,5),(482,1269738000,6),(482,1288486800,5),(482,1301187600,6),(482,1319936400,5),(482,1332637200,6),(482,1351386000,5),(482,1364691600,6),(482,1382835600,5),(482,1396141200,6),(482,1414285200,5),(482,1427590800,6),(482,1445734800,5),(482,1459040400,6),(482,1477789200,5),(482,1490490000,6),(482,1509238800,5),(482,1521939600,6),(482,1540688400,5),(482,1553994000,6),(482,1572138000,5),(482,1585443600,6),(482,1603587600,5),(482,1616893200,6),(482,1635642000,5),(482,1648342800,6),(482,1667091600,5),(482,1679792400,6),(482,1698541200,5),(482,1711846800,6),(482,1729990800,5),(482,1743296400,6),(482,1761440400,5),(482,1774746000,6),(482,1792890000,5),(482,1806195600,6),(482,1824944400,5),(482,1837645200,6),(482,1856394000,5),(482,1869094800,6),(482,1887843600,5),(482,1901149200,6),(482,1919293200,5),(482,1932598800,6),(482,1950742800,5),(482,1964048400,6),(482,1982797200,5),(482,1995498000,6),(482,2014246800,5),(482,2026947600,6),(482,2045696400,5),(482,2058397200,6),(482,2077146000,5),(482,2090451600,6),(482,2108595600,5),(482,2121901200,6),(482,2140045200,5),(483,-2147483648,2),(483,-1693706400,1),(483,-1680483600,2),(483,-1663455600,3),(483,-1650150000,4),(483,-1632006000,3),(483,-1618700400,4),(483,-1569711600,3),(483,-1555801200,4),(483,-938905200,3),(483,-857257200,4),(483,-844556400,3),(483,-828226800,4),(483,-812502000,3),(483,-796777200,4),(483,-781052400,3),(483,-780188400,4),(483,-748479600,3),(483,-733273200,4),(483,-717634800,3),(483,-701910000,4),(483,-684975600,3),(483,-670460400,4),(483,323823600,1),(483,338940000,2),(483,354675600,5),(483,370400400,6),(483,386125200,5),(483,401850000,6),(483,417574800,5),(483,433299600,6),(483,449024400,5),(483,465354000,6),(483,481078800,5),(483,496803600,6),(483,512528400,5),(483,528253200,6),(483,543978000,5),(483,559702800,6),(483,575427600,5),(483,591152400,6),(483,606877200,5),(483,622602000,6),(483,638326800,5),(483,654656400,6),(483,670381200,5),(483,686106000,6),(483,701830800,5),(483,717555600,6),(483,733280400,5),(483,749005200,6),(483,764730000,5),(483,780454800,6),(483,796179600,5),(483,811904400,6),(483,828234000,5),(483,846378000,6),(483,859683600,5),(483,877827600,6),(483,891133200,5),(483,909277200,6),(483,922582800,5),(483,941331600,6),(483,954032400,5),(483,972781200,6),(483,985482000,5),(483,1004230800,6),(483,1017536400,5),(483,1035680400,6),(483,1048986000,5),(483,1067130000,6),(483,1080435600,5),(483,1099184400,6),(483,1111885200,5),(483,1130634000,6),(483,1143334800,5),(483,1162083600,6),(483,1174784400,5),(483,1193533200,6),(483,1206838800,5),(483,1224982800,6),(483,1238288400,5),(483,1256432400,6),(483,1269738000,5),(483,1288486800,6),(483,1301187600,5),(483,1319936400,6),(483,1332637200,5),(483,1351386000,6),(483,1364691600,5),(483,1382835600,6),(483,1396141200,5),(483,1414285200,6),(483,1427590800,5),(483,1445734800,6),(483,1459040400,5),(483,1477789200,6),(483,1490490000,5),(483,1509238800,6),(483,1521939600,5),(483,1540688400,6),(483,1553994000,5),(483,1572138000,6),(483,1585443600,5),(483,1603587600,6),(483,1616893200,5),(483,1635642000,6),(483,1648342800,5),(483,1667091600,6),(483,1679792400,5),(483,1698541200,6),(483,1711846800,5),(483,1729990800,6),(483,1743296400,5),(483,1761440400,6),(483,1774746000,5),(483,1792890000,6),(483,1806195600,5),(483,1824944400,6),(483,1837645200,5),(483,1856394000,6),(483,1869094800,5),(483,1887843600,6),(483,1901149200,5),(483,1919293200,6),(483,1932598800,5),(483,1950742800,6),(483,1964048400,5),(483,1982797200,6),(483,1995498000,5),(483,2014246800,6),(483,2026947600,5),(483,2045696400,6),(483,2058397200,5),(483,2077146000,6),(483,2090451600,5),(483,2108595600,6),(483,2121901200,5),(483,2140045200,6),(484,-2147483648,1),(484,-1672536240,2),(484,-1585100136,3),(484,-1561251600,4),(484,-1553565600,3),(484,-928198800,5),(484,-900126000,8),(484,-857257200,6),(484,-844556400,7),(484,-828226800,6),(484,-812502000,7),(484,-802144800,5),(484,354920400,9),(484,370728000,5),(484,386456400,9),(484,402264000,5),(484,417992400,9),(484,433800000,5),(484,449614800,9),(484,465346800,10),(484,481071600,11),(484,496796400,10),(484,512521200,11),(484,528246000,10),(484,543970800,11),(484,559695600,10),(484,575420400,11),(484,591145200,10),(484,606870000,12),(484,622598400,13),(484,638323200,12),(484,654652800,13),(484,670377600,12),(484,686102400,13),(484,701827200,12),(484,717552000,13),(484,733276800,12),(484,749001600,13),(484,764726400,12),(484,780451200,13),(484,796176000,12),(484,811900800,13),(484,828230400,12),(484,846374400,13),(484,859680000,12),(484,877824000,13),(484,891133200,14),(484,909277200,15),(484,922582800,14),(484,941331600,16),(484,1048986000,17),(484,1067130000,16),(484,1080435600,17),(484,1099184400,16),(484,1111885200,17),(484,1130634000,16),(484,1143334800,17),(484,1162083600,16),(484,1174784400,17),(484,1193533200,16),(484,1206838800,17),(484,1224982800,16),(484,1238288400,17),(484,1256432400,16),(484,1269738000,17),(484,1288486800,16),(484,1301187600,17),(484,1319936400,16),(484,1332637200,17),(484,1351386000,16),(484,1364691600,17),(484,1382835600,16),(484,1396141200,17),(484,1414285200,16),(484,1427590800,17),(484,1445734800,16),(484,1459040400,17),(484,1477789200,16),(484,1490490000,17),(484,1509238800,16),(484,1521939600,17),(484,1540688400,16),(484,1553994000,17),(484,1572138000,16),(484,1585443600,17),(484,1603587600,16),(484,1616893200,17),(484,1635642000,16),(484,1648342800,17),(484,1667091600,16),(484,1679792400,17),(484,1698541200,16),(484,1711846800,17),(484,1729990800,16),(484,1743296400,17),(484,1761440400,16),(484,1774746000,17),(484,1792890000,16),(484,1806195600,17),(484,1824944400,16),(484,1837645200,17),(484,1856394000,16),(484,1869094800,17),(484,1887843600,16),(484,1901149200,17),(484,1919293200,16),(484,1932598800,17),(484,1950742800,16),(484,1964048400,17),(484,1982797200,16),(484,1995498000,17),(484,2014246800,16),(484,2026947600,17),(484,2045696400,16),(484,2058397200,17),(484,2077146000,16),(484,2090451600,17),(484,2108595600,16),(484,2121901200,17),(484,2140045200,16),(485,-1577761060,1),(485,-1247540400,2),(485,354916800,3),(485,370724400,2),(485,386452800,3),(485,402260400,2),(485,417988800,3),(485,433796400,2),(485,449611200,3),(485,465343200,4),(485,481068000,5),(485,496792800,4),(485,512517600,5),(485,528242400,4),(485,543967200,5),(485,559692000,4),(485,575416800,6),(485,591145200,7),(485,606870000,6),(485,622594800,7),(485,638319600,6),(485,654649200,7),(485,670374000,4),(485,701820000,6),(485,717548400,7),(485,733273200,6),(485,748998000,7),(485,764722800,6),(485,780447600,7),(485,796172400,6),(485,811897200,7),(485,828226800,6),(485,846370800,7),(485,859676400,6),(485,877820400,7),(485,891126000,6),(485,909270000,7),(485,922575600,6),(485,941324400,7),(485,954025200,6),(485,972774000,7),(485,985474800,6),(485,1004223600,7),(485,1017529200,6),(485,1035673200,7),(485,1048978800,6),(485,1067122800,7),(485,1080428400,6),(485,1099177200,7),(485,1111878000,6),(485,1130626800,7),(485,1143327600,6),(485,1162076400,7),(485,1174777200,6),(485,1193526000,7),(485,1206831600,6),(485,1224975600,7),(485,1238281200,6),(485,1256425200,7),(485,1269730800,6),(485,1288479600,7),(485,1301180400,4),(485,1414274400,7),(485,1540681200,4),(485,1609020000,7),(485,2147483647,7),(486,-2147483648,1),(486,-1717032240,3),(486,-1693706400,2),(486,-1680483600,3),(486,-1663455600,4),(486,-1650150000,5),(486,-1632006000,4),(486,-1618700400,8),(486,-1600473600,6),(486,-1587168000,7),(486,-1501725600,3),(486,-931734000,2),(486,-857257200,5),(486,-844556400,4),(486,-828226800,5),(486,-812502000,4),(486,-796608000,3),(486,-778726800,2),(486,-762660000,3),(486,-748486800,4),(486,-733273200,5),(486,-715215600,4),(486,-701910000,5),(486,-684975600,4),(486,-670460400,5),(486,-654130800,4),(486,-639010800,5),(486,-397094400,4),(486,-386812800,5),(486,-371088000,4),(486,-355363200,5),(486,-334195200,4),(486,-323308800,5),(486,-307584000,4),(486,-291859200,5),(486,-271296000,4),(486,-260409600,5),(486,-239846400,4),(486,-228960000,5),(486,-208396800,4),(486,-197510400,5),(486,-176342400,4),(486,-166060800,5),(486,228873600,4),(486,243993600,5),(486,260323200,4),(486,276048000,5),(486,291772800,4),(486,307497600,5),(486,323827200,4),(486,338947200,5),(486,354672000,4),(486,370396800,5),(486,386121600,4),(486,401846400,5),(486,417571200,4),(486,433296000,5),(486,449020800,4),(486,465350400,5),(486,481075200,4),(486,496800000,5),(486,512524800,4),(486,528249600,5),(486,543974400,4),(486,559699200,5),(486,575427600,9),(486,591152400,10),(486,606877200,9),(486,622602000,10),(486,638326800,9),(486,654656400,10),(486,670381200,9),(486,686106000,10),(486,701830800,9),(486,717555600,10),(486,733280400,9),(486,749005200,10),(486,764730000,9),(486,780454800,10),(486,796179600,9),(486,811904400,10),(486,828234000,9),(486,846378000,10),(486,859683600,9),(486,877827600,10),(486,891133200,9),(486,909277200,10),(486,922582800,9),(486,941331600,10),(486,954032400,9),(486,972781200,10),(486,985482000,9),(486,1004230800,10),(486,1017536400,9),(486,1035680400,10),(486,1048986000,9),(486,1067130000,10),(486,1080435600,9),(486,1099184400,10),(486,1111885200,9),(486,1130634000,10),(486,1143334800,9),(486,1162083600,10),(486,1174784400,9),(486,1193533200,10),(486,1206838800,9),(486,1224982800,10),(486,1238288400,9),(486,1256432400,10),(486,1269738000,9),(486,1288486800,10),(486,1301187600,9),(486,1319936400,10),(486,1332637200,9),(486,1351386000,10),(486,1364691600,9),(486,1382835600,10),(486,1396141200,9),(486,1414285200,10),(486,1427590800,9),(486,1445734800,10),(486,1459040400,9),(486,1477789200,10),(486,1490490000,9),(486,1509238800,10),(486,1521939600,9),(486,1540688400,10),(486,1553994000,9),(486,1572138000,10),(486,1585443600,9),(486,1603587600,10),(486,1616893200,9),(486,1635642000,10),(486,1648342800,9),(486,1667091600,10),(486,1679792400,9),(486,1698541200,10),(486,1711846800,9),(486,1729990800,10),(486,1743296400,9),(486,1761440400,10),(486,1774746000,9),(486,1792890000,10),(486,1806195600,9),(486,1824944400,10),(486,1837645200,9),(486,1856394000,10),(486,1869094800,9),(486,1887843600,10),(486,1901149200,9),(486,1919293200,10),(486,1932598800,9),(486,1950742800,10),(486,1964048400,9),(486,1982797200,10),(486,1995498000,9),(486,2014246800,10),(486,2026947600,9),(486,2045696400,10),(486,2058397200,9),(486,2077146000,10),(486,2090451600,9),(486,2108595600,10),(486,2121901200,9),(486,2140045200,10),(487,-2147483648,1),(487,-905824800,4),(487,-857257200,2),(487,-844556400,3),(487,-828226800,2),(487,-812502000,3),(487,-796777200,2),(487,-777942000,3),(487,-766623600,2),(487,417574800,5),(487,433299600,6),(487,449024400,5),(487,465354000,6),(487,481078800,5),(487,496803600,6),(487,512528400,5),(487,528253200,6),(487,543978000,5),(487,559702800,6),(487,575427600,5),(487,591152400,6),(487,606877200,5),(487,622602000,6),(487,638326800,5),(487,654656400,6),(487,670381200,5),(487,686106000,6),(487,701830800,5),(487,717555600,6),(487,733280400,5),(487,749005200,6),(487,764730000,5),(487,780454800,6),(487,796179600,5),(487,811904400,6),(487,828234000,5),(487,846378000,6),(487,859683600,5),(487,877827600,6),(487,891133200,5),(487,909277200,6),(487,922582800,5),(487,941331600,6),(487,954032400,5),(487,972781200,6),(487,985482000,5),(487,1004230800,6),(487,1017536400,5),(487,1035680400,6),(487,1048986000,5),(487,1067130000,6),(487,1080435600,5),(487,1099184400,6),(487,1111885200,5),(487,1130634000,6),(487,1143334800,5),(487,1162083600,6),(487,1174784400,5),(487,1193533200,6),(487,1206838800,5),(487,1224982800,6),(487,1238288400,5),(487,1256432400,6),(487,1269738000,5),(487,1288486800,6),(487,1301187600,5),(487,1319936400,6),(487,1332637200,5),(487,1351386000,6),(487,1364691600,5),(487,1382835600,6),(487,1396141200,5),(487,1414285200,6),(487,1427590800,5),(487,1445734800,6),(487,1459040400,5),(487,1477789200,6),(487,1490490000,5),(487,1509238800,6),(487,1521939600,5),(487,1540688400,6),(487,1553994000,5),(487,1572138000,6),(487,1585443600,5),(487,1603587600,6),(487,1616893200,5),(487,1635642000,6),(487,1648342800,5),(487,1667091600,6),(487,1679792400,5),(487,1698541200,6),(487,1711846800,5),(487,1729990800,6),(487,1743296400,5),(487,1761440400,6),(487,1774746000,5),(487,1792890000,6),(487,1806195600,5),(487,1824944400,6),(487,1837645200,5),(487,1856394000,6),(487,1869094800,5),(487,1887843600,6),(487,1901149200,5),(487,1919293200,6),(487,1932598800,5),(487,1950742800,6),(487,1964048400,5),(487,1982797200,6),(487,1995498000,5),(487,2014246800,6),(487,2026947600,5),(487,2045696400,6),(487,2058397200,5),(487,2077146000,6),(487,2090451600,5),(487,2108595600,6),(487,2121901200,5),(487,2140045200,6),(488,-2147483648,1),(488,-1441160400,2),(488,-1247536800,3),(488,-894769200,6),(488,-857257200,4),(488,-844556400,5),(488,-828226800,4),(488,-826419600,3),(488,354920400,7),(488,370728000,3),(488,386456400,7),(488,402264000,3),(488,417992400,7),(488,433800000,3),(488,449614800,7),(488,465346800,8),(488,481071600,9),(488,496796400,8),(488,512521200,9),(488,528246000,8),(488,543970800,9),(488,559695600,8),(488,575420400,9),(488,591145200,8),(488,606870000,9),(488,622594800,8),(488,638319600,9),(488,654649200,8),(488,670374000,10),(488,686091600,2),(488,701827200,11),(488,717552000,12),(488,733276800,11),(488,749001600,12),(488,764726400,11),(488,780451200,12),(488,796176000,11),(488,811900800,12),(488,828230400,11),(488,846378000,13),(488,859683600,14),(488,877827600,13),(488,891133200,14),(488,909277200,13),(488,922582800,14),(488,941331600,13),(488,954032400,14),(488,972781200,13),(488,985482000,14),(488,1004230800,13),(488,1017536400,14),(488,1035680400,13),(488,1048986000,14),(488,1067130000,13),(488,1080435600,14),(488,1099184400,13),(488,1111885200,14),(488,1130634000,13),(488,1143334800,14),(488,1162083600,13),(488,1174784400,14),(488,1193533200,13),(488,1206838800,14),(488,1224982800,13),(488,1238288400,14),(488,1256432400,13),(488,1269738000,14),(488,1288486800,13),(488,1301187600,14),(488,1319936400,13),(488,1332637200,14),(488,1351386000,13),(488,1364691600,14),(488,1382835600,13),(488,1396141200,14),(488,1414285200,13),(488,1427590800,14),(488,1445734800,13),(488,1459040400,14),(488,1477789200,13),(488,1490490000,14),(488,1509238800,13),(488,1521939600,14),(488,1540688400,13),(488,1553994000,14),(488,1572138000,13),(488,1585443600,14),(488,1603587600,13),(488,1616893200,14),(488,1635642000,13),(488,1648342800,14),(488,1667091600,13),(488,1679792400,14),(488,1698541200,13),(488,1711846800,14),(488,1729990800,13),(488,1743296400,14),(488,1761440400,13),(488,1774746000,14),(488,1792890000,13),(488,1806195600,14),(488,1824944400,13),(488,1837645200,14),(488,1856394000,13),(488,1869094800,14),(488,1887843600,13),(488,1901149200,14),(488,1919293200,13),(488,1932598800,14),(488,1950742800,13),(488,1964048400,14),(488,1982797200,13),(488,1995498000,14),(488,2014246800,13),(488,2026947600,14),(488,2045696400,13),(488,2058397200,14),(488,2077146000,13),(488,2090451600,14),(488,2108595600,13),(488,2121901200,14),(488,2140045200,13),(489,-2147483648,2),(489,-904435200,1),(489,-891129600,2),(489,-872985600,1),(489,-859680000,2),(489,354675600,3),(489,370400400,4),(489,386125200,3),(489,401850000,4),(489,417574800,3),(489,433299600,4),(489,449024400,3),(489,465354000,4),(489,481078800,3),(489,496803600,4),(489,512528400,3),(489,528253200,4),(489,543978000,3),(489,559702800,4),(489,575427600,3),(489,591152400,4),(489,606877200,3),(489,622602000,4),(489,638326800,3),(489,654656400,4),(489,670381200,3),(489,686106000,4),(489,701830800,3),(489,717555600,4),(489,733280400,3),(489,749005200,4),(489,764730000,3),(489,780454800,4),(489,796179600,3),(489,811904400,4),(489,828234000,3),(489,846378000,4),(489,859683600,3),(489,877827600,4),(489,891133200,3),(489,909277200,4),(489,922582800,3),(489,941331600,4),(489,954032400,3),(489,972781200,4),(489,985482000,3),(489,1004230800,4),(489,1017536400,3),(489,1035680400,4),(489,1048986000,3),(489,1067130000,4),(489,1080435600,3),(489,1099184400,4),(489,1111885200,3),(489,1130634000,4),(489,1143334800,3),(489,1162083600,4),(489,1174784400,3),(489,1193533200,4),(489,1206838800,3),(489,1224982800,4),(489,1238288400,3),(489,1256432400,4),(489,1269738000,3),(489,1288486800,4),(489,1301187600,3),(489,1319936400,4),(489,1332637200,3),(489,1351386000,4),(489,1364691600,3),(489,1382835600,4),(489,1396141200,3),(489,1414285200,4),(489,1427590800,3),(489,1445734800,4),(489,1459040400,3),(489,1477789200,4),(489,1490490000,3),(489,1509238800,4),(489,1521939600,3),(489,1540688400,4),(489,1553994000,3),(489,1572138000,4),(489,1585443600,3),(489,1603587600,4),(489,1616893200,3),(489,1635642000,4),(489,1648342800,3),(489,1667091600,4),(489,1679792400,3),(489,1698541200,4),(489,1711846800,3),(489,1729990800,4),(489,1743296400,3),(489,1761440400,4),(489,1774746000,3),(489,1792890000,4),(489,1806195600,3),(489,1824944400,4),(489,1837645200,3),(489,1856394000,4),(489,1869094800,3),(489,1887843600,4),(489,1901149200,3),(489,1919293200,4),(489,1932598800,3),(489,1950742800,4),(489,1964048400,3),(489,1982797200,4),(489,1995498000,3),(489,2014246800,4),(489,2026947600,3),(489,2045696400,4),(489,2058397200,3),(489,2077146000,4),(489,2090451600,3),(489,2108595600,4),(489,2121901200,3),(489,2140045200,4),(490,-2147483648,4),(490,-1691964000,1),(490,-1680472800,2),(490,-1664143200,1),(490,-1650146400,2),(490,-1633903200,1),(490,-1617487200,2),(490,-1601848800,1),(490,-1586037600,2),(490,-1570399200,1),(490,-1552168800,2),(490,-1538344800,1),(490,-1522533600,2),(490,-1507500000,1),(490,-1490565600,2),(490,-1473631200,1),(490,-1460930400,2),(490,-1442786400,1),(490,-1428876000,2),(490,-1410732000,1),(490,-1396216800,2),(490,-1379282400,1),(490,-1364767200,2),(490,-1348437600,1),(490,-1333317600,2),(490,-1315778400,1),(490,-1301263200,2),(490,-1284328800,1),(490,-1269813600,2),(490,-1253484000,1),(490,-1238364000,2),(490,-1221429600,1),(490,-1206914400,2),(490,-1189980000,1),(490,-1175464800,2),(490,-1159135200,1),(490,-1143410400,2),(490,-1126476000,1),(490,-1111960800,2),(490,-1095631200,1),(490,-1080511200,2),(490,-1063576800,1),(490,-1049061600,2),(490,-1032127200,1),(490,-1017612000,2),(490,-1001282400,1),(490,-986162400,2),(490,-969228000,1),(490,-950479200,2),(490,-942012000,1),(490,-904518000,3),(490,-896050800,1),(490,-875487600,3),(490,-864601200,1),(490,-844038000,3),(490,-832546800,1),(490,-812588400,3),(490,-798073200,1),(490,-781052400,3),(490,-772066800,1),(490,-764805600,2),(490,-748476000,1),(490,-733356000,2),(490,-719445600,1),(490,-717030000,3),(490,-706748400,1),(490,-699487200,2),(490,-687996000,1),(490,-668037600,2),(490,-654732000,1),(490,-636588000,2),(490,-622072800,1),(490,-605743200,2),(490,-590623200,1),(490,-574293600,2),(490,-558568800,1),(490,-542239200,2),(490,-527119200,1),(490,-512604000,2),(490,-496274400,1),(490,-481154400,2),(490,-464220000,1),(490,-449704800,2),(490,-432165600,1),(490,-417650400,2),(490,-401320800,1),(490,-386200800,2),(490,-369266400,1),(490,-354751200,2),(490,-337816800,1),(490,-323301600,2),(490,-306972000,1),(490,-291852000,2),(490,-276732000,1),(490,-257983200,2),(490,-245282400,1),(490,-226533600,2),(490,-213228000,1),(490,-195084000,2),(490,-182383200,1),(490,-163634400,2),(490,-150933600,1),(490,-132184800,2),(490,-119484000,1),(490,-100735200,2),(490,-88034400,1),(490,-68680800,2),(490,-59004000,1),(490,-37242000,5),(490,57722400,7),(490,69818400,1),(490,89172000,2),(490,101268000,1),(490,120621600,2),(490,132717600,1),(490,152071200,2),(490,164167200,1),(490,183520800,2),(490,196221600,1),(490,214970400,2),(490,227671200,1),(490,246420000,2),(490,259120800,1),(490,278474400,2),(490,290570400,1),(490,309924000,2),(490,322020000,1),(490,341373600,2),(490,354675600,6),(490,372819600,7),(490,386125200,6),(490,404269200,7),(490,417574800,6),(490,435718800,7),(490,449024400,6),(490,467773200,7),(490,481078800,6),(490,499222800,7),(490,512528400,6),(490,530672400,7),(490,543978000,6),(490,562122000,7),(490,575427600,6),(490,593571600,7),(490,606877200,6),(490,625626000,7),(490,638326800,6),(490,657075600,7),(490,670381200,6),(490,688525200,7),(490,701830800,6),(490,719974800,7),(490,733280400,6),(490,751424400,7),(490,764730000,6),(490,782874000,7),(490,796179600,6),(490,814323600,7),(490,828234000,6),(490,846378000,7),(490,859683600,6),(490,877827600,7),(490,891133200,6),(490,909277200,7),(490,922582800,6),(490,941331600,7),(490,954032400,6),(490,972781200,7),(490,985482000,6),(490,1004230800,7),(490,1017536400,6),(490,1035680400,7),(490,1048986000,6),(490,1067130000,7),(490,1080435600,6),(490,1099184400,7),(490,1111885200,6),(490,1130634000,7),(490,1143334800,6),(490,1162083600,7),(490,1174784400,6),(490,1193533200,7),(490,1206838800,6),(490,1224982800,7),(490,1238288400,6),(490,1256432400,7),(490,1269738000,6),(490,1288486800,7),(490,1301187600,6),(490,1319936400,7),(490,1332637200,6),(490,1351386000,7),(490,1364691600,6),(490,1382835600,7),(490,1396141200,6),(490,1414285200,7),(490,1427590800,6),(490,1445734800,7),(490,1459040400,6),(490,1477789200,7),(490,1490490000,6),(490,1509238800,7),(490,1521939600,6),(490,1540688400,7),(490,1553994000,6),(490,1572138000,7),(490,1585443600,6),(490,1603587600,7),(490,1616893200,6),(490,1635642000,7),(490,1648342800,6),(490,1667091600,7),(490,1679792400,6),(490,1698541200,7),(490,1711846800,6),(490,1729990800,7),(490,1743296400,6),(490,1761440400,7),(490,1774746000,6),(490,1792890000,7),(490,1806195600,6),(490,1824944400,7),(490,1837645200,6),(490,1856394000,7),(490,1869094800,6),(490,1887843600,7),(490,1901149200,6),(490,1919293200,7),(490,1932598800,6),(490,1950742800,7),(490,1964048400,6),(490,1982797200,7),(490,1995498000,6),(490,2014246800,7),(490,2026947600,6),(490,2045696400,7),(490,2058397200,6),(490,2077146000,7),(490,2090451600,6),(490,2108595600,7),(490,2121901200,6),(490,2140045200,7),(491,-2147483648,4),(491,-1691964000,1),(491,-1680472800,2),(491,-1664143200,1),(491,-1650146400,2),(491,-1633903200,1),(491,-1617487200,2),(491,-1601848800,1),(491,-1586037600,2),(491,-1570399200,1),(491,-1552168800,2),(491,-1538344800,1),(491,-1522533600,2),(491,-1507500000,1),(491,-1490565600,2),(491,-1473631200,1),(491,-1460930400,2),(491,-1442786400,1),(491,-1428876000,2),(491,-1410732000,1),(491,-1396216800,2),(491,-1379282400,1),(491,-1364767200,2),(491,-1348437600,1),(491,-1333317600,2),(491,-1315778400,1),(491,-1301263200,2),(491,-1284328800,1),(491,-1269813600,2),(491,-1253484000,1),(491,-1238364000,2),(491,-1221429600,1),(491,-1206914400,2),(491,-1189980000,1),(491,-1175464800,2),(491,-1159135200,1),(491,-1143410400,2),(491,-1126476000,1),(491,-1111960800,2),(491,-1095631200,1),(491,-1080511200,2),(491,-1063576800,1),(491,-1049061600,2),(491,-1032127200,1),(491,-1017612000,2),(491,-1001282400,1),(491,-986162400,2),(491,-969228000,1),(491,-950479200,2),(491,-942012000,1),(491,-904518000,3),(491,-896050800,1),(491,-875487600,3),(491,-864601200,1),(491,-844038000,3),(491,-832546800,1),(491,-812588400,3),(491,-798073200,1),(491,-781052400,3),(491,-772066800,1),(491,-764805600,2),(491,-748476000,1),(491,-733356000,2),(491,-719445600,1),(491,-717030000,3),(491,-706748400,1),(491,-699487200,2),(491,-687996000,1),(491,-668037600,2),(491,-654732000,1),(491,-636588000,2),(491,-622072800,1),(491,-605743200,2),(491,-590623200,1),(491,-574293600,2),(491,-558568800,1),(491,-542239200,2),(491,-527119200,1),(491,-512604000,2),(491,-496274400,1),(491,-481154400,2),(491,-464220000,1),(491,-449704800,2),(491,-432165600,1),(491,-417650400,2),(491,-401320800,1),(491,-386200800,2),(491,-369266400,1),(491,-354751200,2),(491,-337816800,1),(491,-323301600,2),(491,-306972000,1),(491,-291852000,2),(491,-276732000,1),(491,-257983200,2),(491,-245282400,1),(491,-226533600,2),(491,-213228000,1),(491,-195084000,2),(491,-182383200,1),(491,-163634400,2),(491,-150933600,1),(491,-132184800,2),(491,-119484000,1),(491,-100735200,2),(491,-88034400,1),(491,-68680800,2),(491,-59004000,1),(491,-37242000,5),(491,57722400,7),(491,69818400,1),(491,89172000,2),(491,101268000,1),(491,120621600,2),(491,132717600,1),(491,152071200,2),(491,164167200,1),(491,183520800,2),(491,196221600,1),(491,214970400,2),(491,227671200,1),(491,246420000,2),(491,259120800,1),(491,278474400,2),(491,290570400,1),(491,309924000,2),(491,322020000,1),(491,341373600,2),(491,354675600,6),(491,372819600,7),(491,386125200,6),(491,404269200,7),(491,417574800,6),(491,435718800,7),(491,449024400,6),(491,467773200,7),(491,481078800,6),(491,499222800,7),(491,512528400,6),(491,530672400,7),(491,543978000,6),(491,562122000,7),(491,575427600,6),(491,593571600,7),(491,606877200,6),(491,625626000,7),(491,638326800,6),(491,657075600,7),(491,670381200,6),(491,688525200,7),(491,701830800,6),(491,719974800,7),(491,733280400,6),(491,751424400,7),(491,764730000,6),(491,782874000,7),(491,796179600,6),(491,814323600,7),(491,828234000,6),(491,846378000,7),(491,859683600,6),(491,877827600,7),(491,891133200,6),(491,909277200,7),(491,922582800,6),(491,941331600,7),(491,954032400,6),(491,972781200,7),(491,985482000,6),(491,1004230800,7),(491,1017536400,6),(491,1035680400,7),(491,1048986000,6),(491,1067130000,7),(491,1080435600,6),(491,1099184400,7),(491,1111885200,6),(491,1130634000,7),(491,1143334800,6),(491,1162083600,7),(491,1174784400,6),(491,1193533200,7),(491,1206838800,6),(491,1224982800,7),(491,1238288400,6),(491,1256432400,7),(491,1269738000,6),(491,1288486800,7),(491,1301187600,6),(491,1319936400,7),(491,1332637200,6),(491,1351386000,7),(491,1364691600,6),(491,1382835600,7),(491,1396141200,6),(491,1414285200,7),(491,1427590800,6),(491,1445734800,7),(491,1459040400,6),(491,1477789200,7),(491,1490490000,6),(491,1509238800,7),(491,1521939600,6),(491,1540688400,7),(491,1553994000,6),(491,1572138000,7),(491,1585443600,6),(491,1603587600,7),(491,1616893200,6),(491,1635642000,7),(491,1648342800,6),(491,1667091600,7),(491,1679792400,6),(491,1698541200,7),(491,1711846800,6),(491,1729990800,7),(491,1743296400,6),(491,1761440400,7),(491,1774746000,6),(491,1792890000,7),(491,1806195600,6),(491,1824944400,7),(491,1837645200,6),(491,1856394000,7),(491,1869094800,6),(491,1887843600,7),(491,1901149200,6),(491,1919293200,7),(491,1932598800,6),(491,1950742800,7),(491,1964048400,6),(491,1982797200,7),(491,1995498000,6),(491,2014246800,7),(491,2026947600,6),(491,2045696400,7),(491,2058397200,6),(491,2077146000,7),(491,2090451600,6),(491,2108595600,7),(491,2121901200,6),(491,2140045200,7),(498,-2056690800,1),(498,-900910800,2),(498,-891579600,3),(498,-884248200,4),(498,-761209200,7),(498,-747907200,2),(498,-728541000,5),(498,-717049800,6),(498,-697091400,5),(498,-683785800,6),(498,-668061000,5),(498,-654755400,2),(498,-636611400,5),(498,-623305800,2),(498,-605161800,5),(498,-591856200,2),(498,-573712200,5),(498,-559801800,2),(498,-541657800,5),(498,-528352200,2),(498,-510211800,7),(498,-498112200,2),(498,-478762200,7),(498,-466662600,2),(498,-446707800,7),(498,-435213000,2),(498,-415258200,7),(498,-403158600,2),(498,-383808600,7),(498,-371709000,2),(498,-352359000,7),(498,-340259400,2),(498,-320909400,7),(498,-308809800,2),(498,-288855000,7),(498,-277360200,2),(498,-257405400,7),(498,-245910600,2),(498,-225955800,7),(498,-213856200,2),(498,-194506200,7),(498,-182406600,2),(498,-163056600,7),(498,-148537800,2),(498,-132816600,7),(498,-117088200,2),(498,-101367000,7),(498,-85638600,2),(498,-69312600,7),(498,-53584200,2),(498,-37863000,7),(498,-22134600,2),(498,-6413400,7),(498,9315000,2),(498,25036200,7),(498,40764600,2),(498,56485800,7),(498,72214200,2),(498,88540200,7),(498,104268600,2),(498,119989800,7),(498,126041400,2),(498,151439400,7),(498,167167800,2),(498,182889000,7),(498,198617400,2),(498,214338600,7),(498,295385400,2),(498,309292200,7),(499,-1830383032,1),(500,-1946168836,1),(500,-1309746600,2),(500,-1261969200,1),(500,-1041388200,3),(500,-865305900,2),(501,-1988167780,1),(501,820436400,2),(501,2147483647,2),(502,-2147483648,1),(502,-1570084924,2),(502,2147483647,2),(503,-2147483648,1),(503,-1577946287,2),(503,-873268200,3),(503,-778410000,2),(503,2147483647,2),(504,-1946168836,1),(504,-1309746600,2),(504,-1261969200,1),(504,-1041388200,3),(504,-865305900,2),(505,-2147483648,1),(505,-315636840,2),(505,2147483647,2),(506,-1577936472,1),(506,2147483647,1),(507,-2147483648,1),(507,-315636840,2),(507,2147483647,2),(508,-1988164200,2),(508,403041600,1),(508,417034800,2),(508,1224972000,1),(508,1238274000,2),(508,2147483647,2),(509,-1946168836,1),(509,-1309746600,2),(509,-1261969200,1),(509,-1041388200,3),(509,-865305900,2),(510,-1577936472,1),(510,2147483647,1),(511,-1704165944,1),(511,-1090466744,3),(511,227820600,2),(511,246223800,5),(511,259617600,4),(511,271108800,5),(511,283982400,3),(511,296598600,2),(511,306531000,3),(511,322432200,2),(511,338499000,3),(511,673216200,2),(511,685481400,3),(511,701209800,2),(511,717103800,3),(511,732745800,2),(511,748639800,3),(511,764281800,2),(511,780175800,3),(511,795817800,2),(511,811711800,3),(511,827353800,2),(511,843247800,3),(511,858976200,2),(511,874870200,3),(511,890512200,2),(511,906406200,3),(511,922048200,2),(511,937942200,3),(511,953584200,2),(511,969478200,3),(511,985206600,2),(511,1001100600,3),(511,1016742600,2),(511,1032636600,3),(511,1048278600,2),(511,1064172600,3),(511,1079814600,2),(511,1095708600,3),(511,1111437000,2),(511,1127331000,3),(511,1206045000,2),(511,1221939000,3),(511,1237667400,2),(511,1253561400,3),(511,1269203400,2),(511,1285097400,3),(511,1300739400,2),(511,1316633400,3),(511,1332275400,2),(511,1348169400,3),(511,1363897800,2),(511,1379791800,3),(511,1395433800,2),(511,1411327800,3),(511,1426969800,2),(511,1442863800,3),(511,1458505800,2),(511,1474399800,3),(511,1490128200,2),(511,1506022200,3),(511,1521664200,2),(511,1537558200,3),(511,1553200200,2),(511,1569094200,3),(511,1584736200,2),(511,1600630200,3),(511,1616358600,2),(511,1632252600,3),(511,1647894600,2),(511,1663788600,3),(511,2147483647,3),(512,-2147483648,1),(512,-1641003640,6),(512,-933638400,2),(512,-923097600,3),(512,-919036800,2),(512,-857347200,3),(512,-844300800,2),(512,-825811200,3),(512,-812678400,2),(512,-794188800,3),(512,-779846400,2),(512,-762652800,3),(512,-748310400,2),(512,-731116800,3),(512,-681955200,4),(512,-673228800,2),(512,-667958400,3),(512,-652320000,2),(512,-636422400,3),(512,-622080000,2),(512,-608947200,3),(512,-591840000,2),(512,-572486400,3),(512,-558576000,2),(512,-542851200,3),(512,-527731200,2),(512,-514425600,3),(512,-490838400,2),(512,-482976000,3),(512,-459388800,2),(512,-451526400,3),(512,-428544000,2),(512,-418262400,3),(512,-400118400,2),(512,-387417600,3),(512,142380000,5),(512,150843600,6),(512,167176800,5),(512,178664400,6),(512,334101600,7),(512,337730400,8),(512,452642400,7),(512,462319200,8),(512,482277600,5),(512,494370000,6),(512,516751200,5),(512,526424400,6),(512,545436000,5),(512,558478800,6),(512,576626400,5),(512,589323600,6),(512,609890400,5),(512,620773200,6),(512,638316000,5),(512,651618000,6),(512,669765600,5),(512,683672400,6),(512,701820000,5),(512,715726800,6),(512,733701600,5),(512,747176400,6),(512,765151200,5),(512,778021200,6),(512,796600800,5),(512,810075600,6),(512,826840800,5),(512,842821200,6),(512,858895200,5),(512,874184400,6),(512,890344800,5),(512,905029200,6),(512,923011200,5),(512,936313200,6),(512,955670400,5),(512,970783200,6),(512,986770800,5),(512,1001282400,6),(512,1017356400,5),(512,1033941600,6),(512,1048806000,5),(512,1065132000,6),(512,1081292400,5),(512,1095804000,6),(512,1112313600,5),(512,1128812400,6),(512,1143763200,5),(512,1159657200,6),(512,1175212800,5),(512,1189897200,6),(512,1206662400,5),(512,1223161200,6),(512,1238112000,5),(512,1254006000,6),(512,1269561600,5),(512,1284246000,6),(512,1301616000,5),(512,1317510000,6),(512,1333065600,5),(512,1348354800,6),(512,1364515200,5),(512,1382828400,6),(512,1395964800,5),(512,1414278000,6),(512,1427414400,5),(512,1445727600,6),(512,1458864000,5),(512,1477782000,6),(512,1490313600,5),(512,1509231600,6),(512,1521763200,5),(512,1540681200,6),(512,1553817600,5),(512,1572130800,6),(512,1585267200,5),(512,1603580400,6),(512,1616716800,5),(512,1635634800,6),(512,1648166400,5),(512,1667084400,6),(512,1679616000,5),(512,1698534000,6),(512,1711670400,5),(512,1729983600,6),(512,1743120000,5),(512,1761433200,6),(512,1774569600,5),(512,1792882800,6),(512,1806019200,5),(512,1824937200,6),(512,1837468800,5),(512,1856386800,6),(512,1868918400,5),(512,1887836400,6),(512,1900972800,5),(512,1919286000,6),(512,1932422400,5),(512,1950735600,6),(512,1963872000,5),(512,1982790000,6),(512,1995321600,5),(512,2014239600,6),(512,2026771200,5),(512,2045689200,6),(512,2058220800,5),(512,2077138800,6),(512,2090275200,5),(512,2108588400,6),(512,2121724800,5),(512,2140038000,6),(513,-2147483648,1),(513,-1827687170,2),(513,126687600,3),(513,152085600,2),(513,162370800,3),(513,183535200,2),(513,199263600,3),(513,215589600,2),(513,230713200,3),(513,247039200,2),(513,262767600,3),(513,278488800,2),(513,294217200,3),(513,309938400,2),(513,325666800,3),(513,341388000,2),(513,357116400,3),(513,372837600,2),(513,388566000,3),(513,404892000,2),(513,420015600,3),(513,436341600,2),(514,-2147483648,3),(514,-683802000,1),(514,-672310800,2),(514,-654771600,1),(514,-640861200,2),(514,-620298000,1),(514,-609411600,2),(514,-588848400,1),(514,-577962000,2),(515,-2147483648,1),(515,-1041418800,2),(515,-907408800,3),(515,-817462800,1),(515,-7988400,4),(515,745934400,5),(515,2147483647,5),(516,-1577926364,2),(516,-574902000,1),(516,-568087200,2),(516,-512175600,1),(516,-504928800,2),(516,-449888400,1),(516,-441856800,2),(516,-347158800,3),(516,378684000,2),(516,386463600,1),(516,402271200,2),(516,417999600,1),(516,433807200,2),(516,449622000,1),(516,465429600,2),(516,481590000,1),(516,496965600,2),(516,512953200,1),(516,528674400,2),(516,544230000,1),(516,560037600,2),(516,575852400,1),(516,591660000,2),(516,607388400,1),(516,623196000,2),(516,641775600,3),(516,844034400,2),(516,860108400,1),(516,875916000,3),(516,1352505600,2),(516,1364515200,1),(516,1382659200,3),(517,-1693706400,1),(517,-1680483600,0),(517,-1663455600,2),(517,-1650150000,3),(517,-1632006000,2),(517,-1618700400,3),(517,-938905200,2),(517,-857257200,3),(517,-844556400,2),(517,-828226800,3),(517,-812502000,2),(517,-796777200,3),(517,-781052400,2),(517,-766623600,3),(517,228877200,2),(517,243997200,3),(517,260326800,2),(517,276051600,3),(517,291776400,2),(517,307501200,3),(517,323830800,2),(517,338950800,3),(517,354675600,2),(517,370400400,3),(517,386125200,2),(517,401850000,3),(517,417574800,2),(517,433299600,3),(517,449024400,2),(517,465354000,3),(517,481078800,2),(517,496803600,3),(517,512528400,2),(517,528253200,3),(517,543978000,2),(517,559702800,3),(517,575427600,2),(517,591152400,3),(517,606877200,2),(517,622602000,3),(517,638326800,2),(517,654656400,3),(517,670381200,2),(517,686106000,3),(517,701830800,2),(517,717555600,3),(517,733280400,2),(517,749005200,3),(517,764730000,2),(517,780454800,3),(517,796179600,2),(517,811904400,3),(517,828234000,2),(517,846378000,3),(517,859683600,2),(517,877827600,3),(517,891133200,2),(517,909277200,3),(517,922582800,2),(517,941331600,3),(517,954032400,2),(517,972781200,3),(517,985482000,2),(517,1004230800,3),(517,1017536400,2),(517,1035680400,3),(517,1048986000,2),(517,1067130000,3),(517,1080435600,2),(517,1099184400,3),(517,1111885200,2),(517,1130634000,3),(517,1143334800,2),(517,1162083600,3),(517,1174784400,2),(517,1193533200,3),(517,1206838800,2),(517,1224982800,3),(517,1238288400,2),(517,1256432400,3),(517,1269738000,2),(517,1288486800,3),(517,1301187600,2),(517,1319936400,3),(517,1332637200,2),(517,1351386000,3),(517,1364691600,2),(517,1382835600,3),(517,1396141200,2),(517,1414285200,3),(517,1427590800,2),(517,1445734800,3),(517,1459040400,2),(517,1477789200,3),(517,1490490000,2),(517,1509238800,3),(517,1521939600,2),(517,1540688400,3),(517,1553994000,2),(517,1572138000,3),(517,1585443600,2),(517,1603587600,3),(517,1616893200,2),(517,1635642000,3),(517,1648342800,2),(517,1667091600,3),(517,1679792400,2),(517,1698541200,3),(517,1711846800,2),(517,1729990800,3),(517,1743296400,2),(517,1761440400,3),(517,1774746000,2),(517,1792890000,3),(517,1806195600,2),(517,1824944400,3),(517,1837645200,2),(517,1856394000,3),(517,1869094800,2),(517,1887843600,3),(517,1901149200,2),(517,1919293200,3),(517,1932598800,2),(517,1950742800,3),(517,1964048400,2),(517,1982797200,3),(517,1995498000,2),(517,2014246800,3),(517,2026947600,2),(517,2045696400,3),(517,2058397200,2),(517,2077146000,3),(517,2090451600,2),(517,2108595600,3),(517,2121901200,2),(517,2140045200,3),(519,-1633273200,1),(519,-1615132800,0),(519,-1601823600,1),(519,-1583683200,0),(519,-880210800,2),(519,-769395600,3),(519,-765388800,0),(519,-84380400,1),(519,-68659200,0),(519,-52930800,1),(519,-37209600,0),(519,-21481200,1),(519,-5760000,0),(519,9968400,1),(519,25689600,0),(519,41418000,1),(519,57744000,0),(519,73472400,1),(519,89193600,0),(519,104922000,1),(519,120643200,0),(519,126694800,1),(519,152092800,0),(519,162378000,1),(519,183542400,0),(519,199270800,1),(519,215596800,0),(519,230720400,1),(519,247046400,0),(519,262774800,1),(519,278496000,0),(519,294224400,1),(519,309945600,0),(519,325674000,1),(519,341395200,0),(519,357123600,1),(519,372844800,0),(519,388573200,1),(519,404899200,0),(519,420022800,1),(519,436348800,0),(519,452077200,1),(519,467798400,0),(519,483526800,1),(519,499248000,0),(519,514976400,1),(519,530697600,0),(519,544611600,1),(519,562147200,0),(519,576061200,1),(519,594201600,0),(519,607510800,1),(519,625651200,0),(519,638960400,1),(519,657100800,0),(519,671014800,1),(519,688550400,0),(519,702464400,1),(519,720000000,0),(519,733914000,1),(519,752054400,0),(519,765363600,1),(519,783504000,0),(519,796813200,1),(519,814953600,0),(519,828867600,1),(519,846403200,0),(519,860317200,1),(519,877852800,0),(519,891766800,1),(519,909302400,0),(519,923216400,1),(519,941356800,0),(519,954666000,1),(519,972806400,0),(519,986115600,1),(519,1004256000,0),(519,1018170000,1),(519,1035705600,0),(519,1049619600,1),(519,1067155200,0),(519,1081069200,1),(519,1099209600,0),(519,1112518800,1),(519,1130659200,0),(519,1143968400,1),(519,1162108800,0),(519,1173603600,1),(519,1194163200,0),(519,1205053200,1),(519,1225612800,0),(519,1236502800,1),(519,1257062400,0),(519,1268557200,1),(519,1289116800,0),(519,1300006800,1),(519,1320566400,0),(519,1331456400,1),(519,1352016000,0),(519,1362906000,1),(519,1383465600,0),(519,1394355600,1),(519,1414915200,0),(519,1425805200,1),(519,1446364800,0),(519,1457859600,1),(519,1478419200,0),(519,1489309200,1),(519,1509868800,0),(519,1520758800,1),(519,1541318400,0),(519,1552208400,1),(519,1572768000,0),(519,1583658000,1),(519,1604217600,0),(519,1615712400,1),(519,1636272000,0),(519,1647162000,1),(519,1667721600,0),(519,1678611600,1),(519,1699171200,0),(519,1710061200,1),(519,1730620800,0),(519,1741510800,1),(519,1762070400,0),(519,1772960400,1),(519,1793520000,0),(519,1805014800,1),(519,1825574400,0),(519,1836464400,1),(519,1857024000,0),(519,1867914000,1),(519,1888473600,0),(519,1899363600,1),(519,1919923200,0),(519,1930813200,1),(519,1951372800,0),(519,1962867600,1),(519,1983427200,0),(519,1994317200,1),(519,2014876800,0),(519,2025766800,1),(519,2046326400,0),(519,2057216400,1),(519,2077776000,0),(519,2088666000,1),(519,2109225600,0),(519,2120115600,1),(519,2140675200,0),(520,-1514736000,1),(520,-1451667600,2),(520,-1343062800,1),(520,-1234803600,2),(520,-1222963200,3),(520,-1207242000,2),(520,-873820800,4),(520,-769395600,5),(520,-761677200,2),(520,-686073600,3),(520,-661539600,2),(520,-495039600,3),(520,-481734000,2),(520,-463590000,3),(520,-450284400,2),(520,-431535600,3),(520,-418230000,2),(520,-400086000,3),(520,-386780400,2),(520,-368636400,3),(520,-355330800,2),(520,-337186800,3),(520,-323881200,2),(520,-305737200,3),(520,-292431600,2),(520,199274400,3),(520,215600400,2),(520,230724000,3),(520,247050000,2),(520,262778400,3),(520,278499600,2),(520,294228000,3),(520,309949200,2),(520,325677600,3),(520,341398800,2),(520,357127200,3),(520,372848400,2),(520,388576800,3),(520,404902800,2),(520,420026400,3),(520,436352400,2),(520,452080800,3),(520,467802000,2),(520,483530400,3),(520,499251600,2),(520,514980000,3),(520,530701200,2),(520,544615200,3),(520,562150800,2),(520,576064800,3),(520,594205200,2),(520,607514400,3),(520,625654800,2),(520,638964000,3),(520,657104400,2),(520,671018400,3),(520,688554000,2),(520,702468000,3),(520,720003600,2),(520,733917600,3),(520,752058000,2),(520,765367200,3),(520,783507600,2),(520,796816800,3),(520,814957200,2),(520,828871200,3),(520,846406800,2),(520,860320800,3),(520,877856400,2),(520,891770400,3),(520,909306000,2),(520,923220000,3),(520,941360400,2),(520,954669600,3),(520,972810000,2),(520,986119200,3),(520,1004259600,2),(520,1018173600,3),(520,1035709200,2),(520,1049623200,3),(520,1067158800,2),(520,1081072800,3),(520,1099213200,2),(520,1112522400,3),(520,1130662800,2),(520,1143972000,3),(520,1162112400,2),(520,1175421600,3),(520,1193562000,2),(520,1207476000,3),(520,1225011600,2),(520,1238925600,3),(520,1256461200,2),(520,1268560800,3),(520,1289120400,2),(520,1300010400,3),(520,1320570000,2),(520,1331460000,3),(520,1352019600,2),(520,1362909600,3),(520,1383469200,2),(520,1394359200,3),(520,1414918800,2),(520,1425808800,3),(520,1446368400,2),(520,1457863200,3),(520,1478422800,2),(520,1489312800,3),(520,1509872400,2),(520,1520762400,3),(520,1541322000,2),(520,1552212000,3),(520,1572771600,2),(520,1583661600,3),(520,1604221200,2),(520,1615716000,3),(520,1636275600,2),(520,1647165600,3),(520,1667725200,2),(520,1678615200,3),(520,1699174800,2),(520,1710064800,3),(520,1730624400,2),(520,1741514400,3),(520,1762074000,2),(520,1772964000,3),(520,1793523600,2),(520,1805018400,3),(520,1825578000,2),(520,1836468000,3),(520,1857027600,2),(520,1867917600,3),(520,1888477200,2),(520,1899367200,3),(520,1919926800,2),(520,1930816800,3),(520,1951376400,2),(520,1962871200,3),(520,1983430800,2),(520,1994320800,3),(520,2014880400,2),(520,2025770400,3),(520,2046330000,2),(520,2057220000,3),(520,2077779600,2),(520,2088669600,3),(520,2109229200,2),(520,2120119200,3),(520,2140678800,2),(521,-1514739600,1),(521,-1343066400,2),(521,-1234807200,1),(521,-1220292000,2),(521,-1207159200,1),(521,-1191344400,2),(521,-873828000,1),(521,-661539600,3),(521,28800,1),(521,828867600,4),(521,846403200,1),(521,860317200,4),(521,877852800,1),(521,891766800,4),(521,909302400,1),(521,923216400,4),(521,941356800,1),(521,954666000,4),(521,972806400,1),(521,989139600,4),(521,1001836800,1),(521,1018170000,4),(521,1035705600,1),(521,1049619600,4),(521,1067155200,1),(521,1081069200,4),(521,1099209600,1),(521,1112518800,4),(521,1130659200,1),(521,1143968400,4),(521,1162108800,1),(521,1175418000,4),(521,1193558400,1),(521,1207472400,4),(521,1225008000,1),(521,1238922000,4),(521,1256457600,1),(521,1270371600,4),(521,1288512000,1),(521,1301821200,4),(521,1319961600,1),(521,1333270800,4),(521,1351411200,1),(521,1365325200,4),(521,1382860800,1),(521,1396774800,4),(521,1414310400,1),(521,1428224400,4),(521,1445760000,1),(521,1459674000,4),(521,1477814400,1),(521,1491123600,4),(521,1509264000,1),(521,1522573200,4),(521,1540713600,1),(521,1554627600,4),(521,1572163200,1),(521,1586077200,4),(521,1603612800,1),(521,1617526800,4),(521,1635667200,1),(521,1648976400,4),(521,1667116800,1),(521,1680426000,4),(521,1698566400,1),(521,1712480400,4),(521,1730016000,1),(521,1743930000,4),(521,1761465600,1),(521,1775379600,4),(521,1792915200,1),(521,1806829200,4),(521,1824969600,1),(521,1838278800,4),(521,1856419200,1),(521,1869728400,4),(521,1887868800,1),(521,1901782800,4),(521,1919318400,1),(521,1933232400,4),(521,1950768000,1),(521,1964682000,4),(521,1982822400,1),(521,1996131600,4),(521,2014272000,1),(521,2027581200,4),(521,2045721600,1),(521,2059030800,4),(521,2077171200,1),(521,2091085200,4),(521,2108620800,1),(521,2122534800,4),(521,2140070400,1),(522,-1514739600,1),(522,-1343066400,2),(522,-1234807200,1),(522,-1220292000,2),(522,-1207159200,1),(522,-1191344400,2),(522,-975261600,3),(522,-963169200,2),(522,-917114400,3),(522,-907354800,2),(522,-821901600,4),(522,-810068400,2),(522,-627501600,3),(522,-612990000,2),(522,828864000,3),(522,846399600,2),(522,860313600,3),(522,877849200,2),(522,891763200,3),(522,909298800,2),(522,923212800,3),(522,941353200,2),(522,954662400,3),(522,972802800,2),(522,989136000,3),(522,1001833200,2),(522,1018166400,3),(522,1035702000,2),(522,1049616000,3),(522,1067151600,2),(522,1081065600,3),(522,1099206000,2),(522,1112515200,3),(522,1130655600,2),(522,1143964800,3),(522,1162105200,2),(522,1175414400,3),(522,1193554800,2),(522,1207468800,3),(522,1225004400,2),(522,1238918400,3),(522,1256454000,2),(522,1270368000,3),(522,1288508400,2),(522,1301817600,3),(522,1319958000,2),(522,1333267200,3),(522,1351407600,2),(522,1365321600,3),(522,1382857200,2),(522,1396771200,3),(522,1414306800,2),(522,1428220800,3),(522,1445756400,2),(522,1459670400,3),(522,1477810800,2),(522,1491120000,3),(522,1509260400,2),(522,1522569600,3),(522,1540710000,2),(522,1554624000,3),(522,1572159600,2),(522,1586073600,3),(522,1603609200,2),(522,1617523200,3),(522,1635663600,2),(522,1648972800,3),(522,1667113200,2),(522,1680422400,3),(522,1698562800,2),(522,1712476800,3),(522,1730012400,2),(522,1743926400,3),(522,1761462000,2),(522,1775376000,3),(522,1792911600,2),(522,1806825600,3),(522,1824966000,2),(522,1838275200,3),(522,1856415600,2),(522,1869724800,3),(522,1887865200,2),(522,1901779200,3),(522,1919314800,2),(522,1933228800,3),(522,1950764400,2),(522,1964678400,3),(522,1982818800,2),(522,1996128000,3),(522,2014268400,2),(522,2027577600,3),(522,2045718000,2),(522,2059027200,3),(522,2077167600,2),(522,2091081600,3),(522,2108617200,2),(522,2122531200,3),(522,2140066800,2),(523,-2147483648,2),(523,-1330335000,1),(523,-1320057000,2),(523,-1300699800,3),(523,-1287396000,2),(523,-1269250200,3),(523,-1255946400,2),(523,-1237800600,3),(523,-1224496800,2),(523,-1206351000,3),(523,-1192442400,2),(523,-1174901400,3),(523,-1160992800,2),(523,-1143451800,3),(523,-1125914400,2),(523,-1112607000,3),(523,-1094464800,2),(523,-1081157400,3),(523,-1063015200,2),(523,-1049707800,3),(523,-1031565600,2),(523,-1018258200,3),(523,-1000116000,2),(523,-986808600,3),(523,-968061600,2),(523,-955359000,3),(523,-936612000,2),(523,-923304600,3),(523,-757425600,6),(523,152632800,4),(523,162309600,5),(523,183477600,4),(523,194968800,5),(523,215532000,4),(523,226418400,5),(523,246981600,4),(523,257868000,5),(523,278431200,4),(523,289317600,5),(523,309880800,4),(523,320767200,5),(523,341330400,4),(523,352216800,5),(523,372780000,4),(523,384271200,5),(523,404834400,4),(523,415720800,5),(523,436284000,4),(523,447170400,5),(523,467733600,4),(523,478620000,5),(523,499183200,4),(523,510069600,5),(523,530632800,4),(523,541519200,5),(523,562082400,4),(523,573573600,5),(523,594136800,4),(523,605023200,5),(523,623772000,4),(523,637682400,5),(523,655221600,4),(523,669132000,5),(523,686671200,4),(523,700581600,5),(523,718120800,4),(523,732636000,5),(523,749570400,4),(523,764085600,5),(523,781020000,4),(523,795535200,5),(523,812469600,4),(523,826984800,5),(523,844524000,4),(523,858434400,5),(523,875973600,4),(523,889884000,5),(523,907423200,4),(523,921938400,5),(523,938872800,4),(523,953388000,5),(523,970322400,4),(523,984837600,5),(523,1002376800,4),(523,1016287200,5),(523,1033826400,4),(523,1047736800,5),(523,1065276000,4),(523,1079791200,5),(523,1096725600,4),(523,1111240800,5),(523,1128175200,4),(523,1142690400,5),(523,1159624800,4),(523,1174140000,5),(523,1191074400,4),(523,1207404000,5),(523,1222524000,4),(523,1238853600,5),(523,1253973600,4),(523,1270303200,5),(523,1285423200,4),(523,1301752800,5),(523,1316872800,4),(523,1333202400,5),(523,1348927200,4),(523,1365256800,5),(523,1380376800,4),(523,1396706400,5),(523,1411826400,4),(523,1428156000,5),(523,1443276000,4),(523,1459605600,5),(523,1474725600,4),(523,1491055200,5),(523,1506175200,4),(523,1522504800,5),(523,1538229600,4),(523,1554559200,5),(523,1569679200,4),(523,1586008800,5),(523,1601128800,4),(523,1617458400,5),(523,1632578400,4),(523,1648908000,5),(523,1664028000,4),(523,1680357600,5),(523,1695477600,4),(523,1712412000,5),(523,1727532000,4),(523,1743861600,5),(523,1758981600,4),(523,1775311200,5),(523,1790431200,4),(523,1806760800,5),(523,1821880800,4),(523,1838210400,5),(523,1853330400,4),(523,1869660000,5),(523,1885384800,4),(523,1901714400,5),(523,1916834400,4),(523,1933164000,5),(523,1948284000,4),(523,1964613600,5),(523,1979733600,4),(523,1996063200,5),(523,2011183200,4),(523,2027512800,5),(523,2042632800,4),(523,2058962400,5),(523,2074687200,4),(523,2091016800,5),(523,2106136800,4),(523,2122466400,5),(523,2137586400,4),(524,-2147483648,1),(524,-757426500,4),(524,152632800,2),(524,162309600,3),(524,183477600,2),(524,194968800,3),(524,215532000,2),(524,226418400,3),(524,246981600,2),(524,257868000,3),(524,278431200,2),(524,289317600,3),(524,309880800,2),(524,320767200,3),(524,341330400,2),(524,352216800,3),(524,372780000,2),(524,384271200,3),(524,404834400,2),(524,415720800,3),(524,436284000,2),(524,447170400,3),(524,467733600,2),(524,478620000,3),(524,499183200,2),(524,510069600,3),(524,530632800,2),(524,541519200,3),(524,562082400,2),(524,573573600,3),(524,594136800,2),(524,605023200,3),(524,623772000,2),(524,637682400,3),(524,655221600,2),(524,669132000,3),(524,686671200,2),(524,700581600,3),(524,718120800,2),(524,732636000,3),(524,749570400,2),(524,764085600,3),(524,781020000,2),(524,795535200,3),(524,812469600,2),(524,826984800,3),(524,844524000,2),(524,858434400,3),(524,875973600,2),(524,889884000,3),(524,907423200,2),(524,921938400,3),(524,938872800,2),(524,953388000,3),(524,970322400,2),(524,984837600,3),(524,1002376800,2),(524,1016287200,3),(524,1033826400,2),(524,1047736800,3),(524,1065276000,2),(524,1079791200,3),(524,1096725600,2),(524,1111240800,3),(524,1128175200,2),(524,1142690400,3),(524,1159624800,2),(524,1174140000,3),(524,1191074400,2),(524,1207404000,3),(524,1222524000,2),(524,1238853600,3),(524,1253973600,2),(524,1270303200,3),(524,1285423200,2),(524,1301752800,3),(524,1316872800,2),(524,1333202400,3),(524,1348927200,2),(524,1365256800,3),(524,1380376800,2),(524,1396706400,3),(524,1411826400,2),(524,1428156000,3),(524,1443276000,2),(524,1459605600,3),(524,1474725600,2),(524,1491055200,3),(524,1506175200,2),(524,1522504800,3),(524,1538229600,2),(524,1554559200,3),(524,1569679200,2),(524,1586008800,3),(524,1601128800,2),(524,1617458400,3),(524,1632578400,2),(524,1648908000,3),(524,1664028000,2),(524,1680357600,3),(524,1695477600,2),(524,1712412000,3),(524,1727532000,2),(524,1743861600,3),(524,1758981600,2),(524,1775311200,3),(524,1790431200,2),(524,1806760800,3),(524,1821880800,2),(524,1838210400,3),(524,1853330400,2),(524,1869660000,3),(524,1885384800,2),(524,1901714400,3),(524,1916834400,2),(524,1933164000,3),(524,1948284000,2),(524,1964613600,3),(524,1979733600,2),(524,1996063200,3),(524,2011183200,2),(524,2027512800,3),(524,2042632800,2),(524,2058962400,3),(524,2074687200,2),(524,2091016800,3),(524,2106136800,2),(524,2122466400,3),(524,2137586400,2),(524,2147483647,2),(525,-2147483648,2),(525,-1633273200,1),(525,-1615132800,2),(525,-1601823600,1),(525,-1583683200,2),(525,-1570374000,1),(525,-1551628800,2),(525,-1538924400,1),(525,-1534089600,2),(525,-880210800,3),(525,-769395600,4),(525,-765388800,2),(525,-147884400,1),(525,-131558400,2),(525,-116434800,1),(525,-100108800,2),(525,-84380400,1),(525,-68659200,2),(525,-52930800,1),(525,-37209600,2),(525,-21481200,1),(525,-5760000,2),(525,9968400,1),(525,25689600,2),(525,41418000,1),(525,57744000,2),(525,73472400,1),(525,89193600,2),(525,104922000,1),(525,120643200,2),(525,126694800,1),(525,152092800,2),(525,162378000,1),(525,183542400,2),(525,199270800,1),(525,215596800,2),(525,230720400,1),(525,247046400,2),(525,262774800,1),(525,278496000,2),(525,294224400,1),(525,309945600,2),(525,325674000,1),(525,341395200,2),(525,357123600,1),(525,372844800,2),(525,388573200,1),(525,404899200,2),(525,420022800,1),(525,436348800,2),(525,452077200,1),(525,467798400,2),(525,483526800,1),(525,499248000,2),(525,514976400,1),(525,530697600,2),(525,544611600,1),(525,562147200,2),(525,576061200,1),(525,594201600,2),(525,607510800,1),(525,625651200,2),(525,638960400,1),(525,657100800,2),(525,671014800,1),(525,688550400,2),(525,702464400,1),(525,720000000,2),(525,733914000,1),(525,752054400,2),(525,765363600,1),(525,783504000,2),(525,796813200,1),(525,814953600,2),(525,828867600,1),(525,846403200,2),(525,860317200,1),(525,877852800,2),(525,891766800,1),(525,909302400,2),(525,923216400,1),(525,941356800,2),(525,954666000,1),(525,972806400,2),(525,986115600,1),(525,1004256000,2),(525,1018170000,1),(525,1035705600,2),(525,1049619600,1),(525,1067155200,2),(525,1081069200,1),(525,1099209600,2),(525,1112518800,1),(525,1130659200,2),(525,1143968400,1),(525,1162108800,2),(525,1173603600,1),(525,1194163200,2),(525,1205053200,1),(525,1225612800,2),(525,1236502800,1),(525,1257062400,2),(525,1268557200,1),(525,1289116800,2),(525,1300006800,1),(525,1320566400,2),(525,1331456400,1),(525,1352016000,2),(525,1362906000,1),(525,1383465600,2),(525,1394355600,1),(525,1414915200,2),(525,1425805200,1),(525,1446364800,2),(525,1457859600,1),(525,1478419200,2),(525,1489309200,1),(525,1509868800,2),(525,1520758800,1),(525,1541318400,2),(525,1552208400,1),(525,1572768000,2),(525,1583658000,1),(525,1604217600,2),(525,1615712400,1),(525,1636272000,2),(525,1647162000,1),(525,1667721600,2),(525,1678611600,1),(525,1699171200,2),(525,1710061200,1),(525,1730620800,2),(525,1741510800,1),(525,1762070400,2),(525,1772960400,1),(525,1793520000,2),(525,1805014800,1),(525,1825574400,2),(525,1836464400,1),(525,1857024000,2),(525,1867914000,1),(525,1888473600,2),(525,1899363600,1),(525,1919923200,2),(525,1930813200,1),(525,1951372800,2),(525,1962867600,1),(525,1983427200,2),(525,1994317200,1),(525,2014876800,2),(525,2025766800,1),(525,2046326400,2),(525,2057216400,1),(525,2077776000,2),(525,2088666000,1),(525,2109225600,2),(525,2120115600,1),(525,2140675200,2),(526,-2147483648,2),(526,-1600675200,1),(526,-1585904400,2),(526,-933667200,1),(526,-922093200,2),(526,-908870400,1),(526,-888829200,2),(526,-881049600,1),(526,-767869200,2),(526,-745833600,1),(526,-733827600,2),(526,-716889600,1),(526,-699613200,2),(526,-683884800,1),(526,-670669200,2),(526,-652348800,1),(526,-650019600,2),(526,515527200,1),(526,527014800,2),(526,545162400,1),(526,558464400,2),(526,577216800,1),(526,589914000,2),(526,608666400,1),(526,621968400,2),(526,640116000,1),(526,653418000,2),(526,671565600,1),(526,684867600,2),(527,-1633269600,1),(527,-1615129200,0),(527,-1601820000,1),(527,-1583679600,0),(527,-880207200,2),(527,-769395600,3),(527,-765385200,0),(527,-84376800,1),(527,-68655600,0),(527,-52927200,1),(527,-37206000,0),(527,-21477600,1),(527,-5756400,0),(527,9972000,1),(527,25693200,0),(527,41421600,1),(527,57747600,0),(527,73476000,1),(527,89197200,0),(527,104925600,1),(527,120646800,0),(527,126698400,1),(527,152096400,0),(527,162381600,1),(527,183546000,0),(527,199274400,1),(527,215600400,0),(527,230724000,1),(527,247050000,0),(527,262778400,1),(527,278499600,0),(527,294228000,1),(527,309949200,0),(527,325677600,1),(527,341398800,0),(527,357127200,1),(527,372848400,0),(527,388576800,1),(527,404902800,0),(527,420026400,1),(527,436352400,0),(527,452080800,1),(527,467802000,0),(527,483530400,1),(527,499251600,0),(527,514980000,1),(527,530701200,0),(527,544615200,1),(527,562150800,0),(527,576064800,1),(527,594205200,0),(527,607514400,1),(527,625654800,0),(527,638964000,1),(527,657104400,0),(527,671018400,1),(527,688554000,0),(527,702468000,1),(527,720003600,0),(527,733917600,1),(527,752058000,0),(527,765367200,1),(527,783507600,0),(527,796816800,1),(527,814957200,0),(527,828871200,1),(527,846406800,0),(527,860320800,1),(527,877856400,0),(527,891770400,1),(527,909306000,0),(527,923220000,1),(527,941360400,0),(527,954669600,1),(527,972810000,0),(527,986119200,1),(527,1004259600,0),(527,1018173600,1),(527,1035709200,0),(527,1049623200,1),(527,1067158800,0),(527,1081072800,1),(527,1099213200,0),(527,1112522400,1),(527,1130662800,0),(527,1143972000,1),(527,1162112400,0),(527,1173607200,1),(527,1194166800,0),(527,1205056800,1),(527,1225616400,0),(527,1236506400,1),(527,1257066000,0),(527,1268560800,1),(527,1289120400,0),(527,1300010400,1),(527,1320570000,0),(527,1331460000,1),(527,1352019600,0),(527,1362909600,1),(527,1383469200,0),(527,1394359200,1),(527,1414918800,0),(527,1425808800,1),(527,1446368400,0),(527,1457863200,1),(527,1478422800,0),(527,1489312800,1),(527,1509872400,0),(527,1520762400,1),(527,1541322000,0),(527,1552212000,1),(527,1572771600,0),(527,1583661600,1),(527,1604221200,0),(527,1615716000,1),(527,1636275600,0),(527,1647165600,1),(527,1667725200,0),(527,1678615200,1),(527,1699174800,0),(527,1710064800,1),(527,1730624400,0),(527,1741514400,1),(527,1762074000,0),(527,1772964000,1),(527,1793523600,0),(527,1805018400,1),(527,1825578000,0),(527,1836468000,1),(527,1857027600,0),(527,1867917600,1),(527,1888477200,0),(527,1899367200,1),(527,1919926800,0),(527,1930816800,1),(527,1951376400,0),(527,1962871200,1),(527,1983430800,0),(527,1994320800,1),(527,2014880400,0),(527,2025770400,1),(527,2046330000,0),(527,2057220000,1),(527,2077779600,0),(527,2088669600,1),(527,2109229200,0),(527,2120119200,1),(527,2140678800,0),(528,-2147483648,1),(528,-1861878784,2),(528,-631110600,4),(528,1285498800,3),(528,1301752800,4),(528,1316872800,3),(528,1325239200,6),(528,1333202400,5),(528,1348927200,6),(528,1365256800,5),(528,1380376800,6),(528,1396706400,5),(528,1411826400,6),(528,1428156000,5),(528,1443276000,6),(528,1459605600,5),(528,1474725600,6),(528,1491055200,5),(528,1506175200,6),(528,1522504800,5),(528,1538229600,6),(528,1554559200,5),(528,1569679200,6),(528,1586008800,5),(528,1601128800,6),(528,1617458400,5),(528,2147483647,5),(529,-2147483648,2),(529,-1330335000,1),(529,-1320057000,2),(529,-1300699800,3),(529,-1287396000,2),(529,-1269250200,3),(529,-1255946400,2),(529,-1237800600,3),(529,-1224496800,2),(529,-1206351000,3),(529,-1192442400,2),(529,-1174901400,3),(529,-1160992800,2),(529,-1143451800,3),(529,-1125914400,2),(529,-1112607000,3),(529,-1094464800,2),(529,-1081157400,3),(529,-1063015200,2),(529,-1049707800,3),(529,-1031565600,2),(529,-1018258200,3),(529,-1000116000,2),(529,-986808600,3),(529,-968061600,2),(529,-955359000,3),(529,-936612000,2),(529,-923304600,3),(529,-757425600,6),(529,152632800,4),(529,162309600,5),(529,183477600,4),(529,194968800,5),(529,215532000,4),(529,226418400,5),(529,246981600,4),(529,257868000,5),(529,278431200,4),(529,289317600,5),(529,309880800,4),(529,320767200,5),(529,341330400,4),(529,352216800,5),(529,372780000,4),(529,384271200,5),(529,404834400,4),(529,415720800,5),(529,436284000,4),(529,447170400,5),(529,467733600,4),(529,478620000,5),(529,499183200,4),(529,510069600,5),(529,530632800,4),(529,541519200,5),(529,562082400,4),(529,573573600,5),(529,594136800,4),(529,605023200,5),(529,623772000,4),(529,637682400,5),(529,655221600,4),(529,669132000,5),(529,686671200,4),(529,700581600,5),(529,718120800,4),(529,732636000,5),(529,749570400,4),(529,764085600,5),(529,781020000,4),(529,795535200,5),(529,812469600,4),(529,826984800,5),(529,844524000,4),(529,858434400,5),(529,875973600,4),(529,889884000,5),(529,907423200,4),(529,921938400,5),(529,938872800,4),(529,953388000,5),(529,970322400,4),(529,984837600,5),(529,1002376800,4),(529,1016287200,5),(529,1033826400,4),(529,1047736800,5),(529,1065276000,4),(529,1079791200,5),(529,1096725600,4),(529,1111240800,5),(529,1128175200,4),(529,1142690400,5),(529,1159624800,4),(529,1174140000,5),(529,1191074400,4),(529,1207404000,5),(529,1222524000,4),(529,1238853600,5),(529,1253973600,4),(529,1270303200,5),(529,1285423200,4),(529,1301752800,5),(529,1316872800,4),(529,1333202400,5),(529,1348927200,4),(529,1365256800,5),(529,1380376800,4),(529,1396706400,5),(529,1411826400,4),(529,1428156000,5),(529,1443276000,4),(529,1459605600,5),(529,1474725600,4),(529,1491055200,5),(529,1506175200,4),(529,1522504800,5),(529,1538229600,4),(529,1554559200,5),(529,1569679200,4),(529,1586008800,5),(529,1601128800,4),(529,1617458400,5),(529,1632578400,4),(529,1648908000,5),(529,1664028000,4),(529,1680357600,5),(529,1695477600,4),(529,1712412000,5),(529,1727532000,4),(529,1743861600,5),(529,1758981600,4),(529,1775311200,5),(529,1790431200,4),(529,1806760800,5),(529,1821880800,4),(529,1838210400,5),(529,1853330400,4),(529,1869660000,5),(529,1885384800,4),(529,1901714400,5),(529,1916834400,4),(529,1933164000,5),(529,1948284000,4),(529,1964613600,5),(529,1979733600,4),(529,1996063200,5),(529,2011183200,4),(529,2027512800,5),(529,2042632800,4),(529,2058962400,5),(529,2074687200,4),(529,2091016800,5),(529,2106136800,4),(529,2122466400,5),(529,2137586400,4),(530,-2147483648,1),(530,-868010400,2),(530,-768906000,1),(530,1419696000,3),(530,2147483647,3),(531,-2147483648,1),(531,-757426500,4),(531,152632800,2),(531,162309600,3),(531,183477600,2),(531,194968800,3),(531,215532000,2),(531,226418400,3),(531,246981600,2),(531,257868000,3),(531,278431200,2),(531,289317600,3),(531,309880800,2),(531,320767200,3),(531,341330400,2),(531,352216800,3),(531,372780000,2),(531,384271200,3),(531,404834400,2),(531,415720800,3),(531,436284000,2),(531,447170400,3),(531,467733600,2),(531,478620000,3),(531,499183200,2),(531,510069600,3),(531,530632800,2),(531,541519200,3),(531,562082400,2),(531,573573600,3),(531,594136800,2),(531,605023200,3),(531,623772000,2),(531,637682400,3),(531,655221600,2),(531,669132000,3),(531,686671200,2),(531,700581600,3),(531,718120800,2),(531,732636000,3),(531,749570400,2),(531,764085600,3),(531,781020000,2),(531,795535200,3),(531,812469600,2),(531,826984800,3),(531,844524000,2),(531,858434400,3),(531,875973600,2),(531,889884000,3),(531,907423200,2),(531,921938400,3),(531,938872800,2),(531,953388000,3),(531,970322400,2),(531,984837600,3),(531,1002376800,2),(531,1016287200,3),(531,1033826400,2),(531,1047736800,3),(531,1065276000,2),(531,1079791200,3),(531,1096725600,2),(531,1111240800,3),(531,1128175200,2),(531,1142690400,3),(531,1159624800,2),(531,1174140000,3),(531,1191074400,2),(531,1207404000,3),(531,1222524000,2),(531,1238853600,3),(531,1253973600,2),(531,1270303200,3),(531,1285423200,2),(531,1301752800,3),(531,1316872800,2),(531,1333202400,3),(531,1348927200,2),(531,1365256800,3),(531,1380376800,2),(531,1396706400,3),(531,1411826400,2),(531,1428156000,3),(531,1443276000,2),(531,1459605600,3),(531,1474725600,2),(531,1491055200,3),(531,1506175200,2),(531,1522504800,3),(531,1538229600,2),(531,1554559200,3),(531,1569679200,2),(531,1586008800,3),(531,1601128800,2),(531,1617458400,3),(531,1632578400,2),(531,1648908000,3),(531,1664028000,2),(531,1680357600,3),(531,1695477600,2),(531,1712412000,3),(531,1727532000,2),(531,1743861600,3),(531,1758981600,2),(531,1775311200,3),(531,1790431200,2),(531,1806760800,3),(531,1821880800,2),(531,1838210400,3),(531,1853330400,2),(531,1869660000,3),(531,1885384800,2),(531,1901714400,3),(531,1916834400,2),(531,1933164000,3),(531,1948284000,2),(531,1964613600,3),(531,1979733600,2),(531,1996063200,3),(531,2011183200,2),(531,2027512800,3),(531,2042632800,2),(531,2058962400,3),(531,2074687200,2),(531,2091016800,3),(531,2106136800,2),(531,2122466400,3),(531,2137586400,2),(531,2147483647,2),(532,-2147483648,1),(532,2147483647,1),(533,-2147483648,1),(533,-1178124152,4),(533,-36619200,2),(533,-23922000,3),(533,-3355200,2),(533,7527600,3),(533,24465600,2),(533,37767600,3),(533,55915200,2),(533,69217200,3),(533,87969600,2),(533,100666800,3),(533,118209600,2),(533,132116400,3),(533,150868800,2),(533,163566000,3),(533,182318400,2),(533,195620400,3),(533,213768000,2),(533,227070000,3),(533,245217600,2),(533,258519600,3),(533,277272000,2),(533,289969200,3),(533,308721600,2),(533,321418800,3),(533,340171200,2),(533,353473200,3),(533,371620800,2),(533,384922800,5),(533,403070400,6),(533,416372400,5),(533,434520000,6),(533,447822000,5),(533,466574400,6),(533,479271600,5),(533,498024000,6),(533,510721200,5),(533,529473600,6),(533,545194800,5),(533,560923200,6),(533,574225200,5),(533,592372800,6),(533,605674800,5),(533,624427200,6),(533,637124400,5),(533,653457600,6),(533,668574000,5),(533,687326400,6),(533,700628400,5),(533,718776000,6),(533,732078000,5),(533,750225600,6),(533,763527600,5),(533,781675200,6),(533,794977200,5),(533,813729600,6),(533,826426800,5),(533,845179200,6),(533,859690800,5),(533,876628800,6),(533,889930800,5),(533,906868800,6),(533,923194800,5),(533,939528000,6),(533,952830000,5),(533,971582400,6),(533,984279600,5),(533,1003032000,6),(533,1015729200,5),(533,1034481600,6),(533,1047178800,5),(533,1065931200,6),(533,1079233200,5),(533,1097380800,6),(533,1110682800,5),(533,1128830400,6),(533,1142132400,5),(533,1160884800,6),(533,1173582000,5),(533,1192334400,6),(533,1206846000,5),(533,1223784000,6),(533,1237086000,5),(533,1255233600,6),(533,1270350000,5),(533,1286683200,6),(533,1304823600,5),(533,1313899200,6),(533,1335668400,5),(533,1346558400,6),(533,1367118000,5),(533,1378612800,6),(533,1398567600,5),(533,1410062400,6),(533,1463281200,5),(533,1471147200,6),(533,1494730800,5),(533,1502596800,6),(533,1526180400,5),(533,1534046400,6),(533,1554606000,5),(533,1567915200,6),(533,1586055600,5),(533,1599364800,6),(533,1617505200,5),(533,1630814400,6),(533,1648954800,5),(533,1662868800,6),(533,1680404400,5),(533,1693713600,6),(533,1712458800,5),(533,1725768000,6),(533,1743908400,5),(533,1757217600,6),(533,1775358000,5),(533,1788667200,6),(533,1806807600,5),(533,1820116800,6),(533,1838257200,5),(533,1851566400,6),(533,1870311600,5),(533,1883016000,6),(533,1901761200,5),(533,1915070400,6),(533,1933210800,5),(533,1946520000,6),(533,1964660400,5),(533,1977969600,6),(533,1996110000,5),(533,2009419200,6),(533,2027559600,5),(533,2040868800,6),(533,2059614000,5),(533,2072318400,6),(533,2091063600,5),(533,2104372800,6),(533,2122513200,5),(533,2135822400,6),(533,2147483647,6),(534,-1829387596,4),(534,125409600,1),(534,133876800,2),(534,433256400,3),(534,448977600,4),(534,464706000,3),(534,480427200,4),(534,496760400,3),(534,511876800,4),(534,528210000,3),(534,543931200,4),(534,559659600,3),(534,575380800,4),(534,591109200,3),(534,606830400,4),(534,622558800,3),(534,638280000,4),(534,654008400,3),(534,669729600,4),(534,686062800,3),(534,696340800,4),(534,719931600,3),(534,727790400,4),(534,2147483647,4),(535,-1020470400,1),(535,307627200,2),(535,788871600,3),(535,2147483647,3),(536,-2147483648,1),(536,1325242800,2),(536,2147483647,2),(537,-1709985344,2),(537,909842400,1),(537,920124000,2),(537,941896800,1),(537,951573600,2),(537,1259416800,1),(537,1269698400,2),(537,1287842400,1),(537,1299333600,2),(537,1319292000,1),(537,1327154400,2),(537,1350741600,1),(537,1358604000,2),(537,1382796000,1),(537,1390050000,2),(537,1414850400,1),(537,1421503200,2),(537,1446300000,1),(537,1452952800,2),(537,1478354400,1),(537,1484402400,2),(537,1509804000,1),(537,1515852000,2),(537,1541253600,1),(537,1547301600,2),(537,1573308000,1),(537,1578751200,2),(537,1608386400,1),(537,1610805600,2),(537,1668261600,1),(537,1673704800,2),(537,1699711200,1),(537,1705154400,2),(537,1731160800,1),(537,1736604000,2),(537,1762610400,1),(537,1768658400,2),(537,1794060000,1),(537,1800108000,2),(537,1826114400,1),(537,1831557600,2),(537,1857564000,1),(537,1863007200,2),(537,1889013600,1),(537,1894456800,2),(537,1920463200,1),(537,1925906400,2),(537,1951912800,1),(537,1957960800,2),(537,1983967200,1),(537,1989410400,2),(537,2015416800,1),(537,2020860000,2),(537,2046866400,1),(537,2052309600,2),(537,2078316000,1),(537,2083759200,2),(537,2109765600,1),(537,2115813600,2),(537,2141215200,1),(537,2147263200,2),(537,2147483647,2),(538,-2147483648,1),(538,2147483647,1),(539,-1230746496,1),(539,504939600,3),(539,722930400,2),(539,728888400,3),(539,2147483647,3),(540,-1806678012,1),(540,2147483647,1),(541,-1806748788,1),(541,2147483647,1),(542,-2147483648,1),(542,-885549600,2),(542,-802256400,1),(542,-331891200,3),(542,-281610000,1),(542,-73728000,3),(542,-29415540,1),(542,-16704000,3),(542,-10659600,1),(542,9907200,3),(542,21394800,1),(542,41356800,3),(542,52844400,1),(542,124819200,3),(542,130863600,1),(542,201888000,3),(542,209487660,1),(542,230659200,3),(542,241542000,1),(542,977493600,4),(543,-2147483648,1),(543,-1157283000,2),(543,-1155436200,1),(543,-880198200,3),(543,-769395600,4),(543,-765376200,1),(543,-712150200,5),(544,-2147483648,1),(544,-1157283000,2),(544,-1155436200,1),(544,-880198200,3),(544,-769395600,4),(544,-765376200,1),(544,-712150200,5),(545,-1020470400,1),(545,307627200,2),(545,788871600,3),(545,2147483647,3),(546,-2147483648,1),(546,307622400,2),(546,788868000,3),(546,2147483647,3),(547,-2147483648,1),(547,-1743678000,2),(547,-1606813200,1),(547,-1041418800,3),(547,-907408800,2),(547,-770634000,1),(547,-7988400,4),(547,915105600,1),(547,2147483647,1),(548,-2147483648,1),(548,-1041418800,2),(548,-907408800,3),(548,-817462800,1),(548,-7988400,4),(548,745934400,5),(548,2147483647,5),(549,-2147483648,1),(549,2147483647,1),(550,-1806676920,1),(550,2147483647,1),(551,-2147483648,1),(551,-1861879032,2),(552,-1545131260,1),(552,-862918200,2),(552,-767350800,1),(552,287418600,3),(552,2147483647,3),(553,-543069620,1),(553,-173623200,2),(553,2147483647,2),(554,-2147483648,1),(554,-599656320,2),(554,152029800,3),(554,162916200,4),(554,1443882600,5),(554,1570287600,6),(554,1586012400,5),(554,1601737200,6),(554,1617462000,5),(554,1633186800,6),(554,1648911600,5),(554,1664636400,6),(554,1680361200,5),(554,1696086000,6),(554,1712415600,5),(554,1728140400,6),(554,1743865200,5),(554,1759590000,6),(554,1775314800,5),(554,1791039600,6),(554,1806764400,5),(554,1822489200,6),(554,1838214000,5),(554,1853938800,6),(554,1869663600,5),(554,1885993200,6),(554,1901718000,5),(554,1917442800,6),(554,1933167600,5),(554,1948892400,6),(554,1964617200,5),(554,1980342000,6),(554,1996066800,5),(554,2011791600,6),(554,2027516400,5),(554,2043241200,6),(554,2058966000,5),(554,2075295600,6),(554,2091020400,5),(554,2106745200,6),(554,2122470000,5),(554,2138194800,6),(554,2147483647,6),(555,-1829387148,2),(555,250002000,1),(555,257342400,2),(555,281451600,1),(555,288878400,2),(555,849366000,3),(555,857228400,4),(555,2147483647,4),(556,-2147483648,1),(556,-1861879032,2),(557,-2147483648,1),(557,2147483647,1),(558,-2147483648,1),(558,893665800,2),(558,2147483647,2),(559,-1806748788,1),(559,2147483647,1),(560,-1806748788,1),(560,2147483647,1),(561,-2147483648,1),(561,2147483647,1),(562,-2147483648,1),(562,-543072056,2),(562,279714600,4),(562,289387800,3),(562,309952800,4),(562,320837400,3),(562,341402400,4),(562,352287000,3),(562,372852000,4),(562,384341400,3),(562,404906400,4),(562,415791000,3),(562,436356000,4),(562,447240600,3),(562,467805600,4),(562,478690200,3),(562,499255200,4),(562,510139800,3),(562,530704800,4),(562,541589400,3),(562,562154400,4),(562,573643800,3),(562,594208800,4),(562,605093400,3),(562,625658400,4),(562,636543000,3),(562,657108000,4),(562,667992600,3),(562,2147483647,3),(563,-2147483648,1),(563,-885549600,2),(563,-802256400,1),(563,-331891200,3),(563,-281610000,1),(563,-73728000,3),(563,-29415540,1),(563,-16704000,3),(563,-10659600,1),(563,9907200,3),(563,21394800,1),(563,41356800,3),(563,52844400,1),(563,124819200,3),(563,130863600,1),(563,201888000,3),(563,209487660,1),(563,230659200,3),(563,241542000,1),(563,977493600,4),(564,-2147483648,1),(564,-1861879032,2),(565,-1806674504,1),(565,2147483647,1),(566,-2147483648,1),(566,2147483647,1),(567,-767189952,1),(567,-284041200,2),(567,939214800,3),(567,953384400,4),(567,973342800,5),(567,980596800,2),(567,1004792400,5),(567,1012046400,2),(567,1478350800,5),(567,1484398800,2),(567,2147483647,2),(568,-2147483648,1),(568,2147483647,1),(569,-2147483648,1),(569,2147483647,1),(570,-2147483648,1),(570,2147483647,1),(571,-2147483648,1),(571,2147483647,1),(572,-2147483648,1),(572,-1717032240,3),(572,-1693706400,2),(572,-1680483600,3),(572,-1663455600,4),(572,-1650150000,5),(572,-1632006000,4),(572,-1618700400,8),(572,-1600473600,6),(572,-1587168000,7),(572,-1501725600,3),(572,-931734000,2),(572,-857257200,5),(572,-844556400,4),(572,-828226800,5),(572,-812502000,4),(572,-796608000,3),(572,-778726800,2),(572,-762660000,3),(572,-748486800,4),(572,-733273200,5),(572,-715215600,4),(572,-701910000,5),(572,-684975600,4),(572,-670460400,5),(572,-654130800,4),(572,-639010800,5),(572,-397094400,4),(572,-386812800,5),(572,-371088000,4),(572,-355363200,5),(572,-334195200,4),(572,-323308800,5),(572,-307584000,4),(572,-291859200,5),(572,-271296000,4),(572,-260409600,5),(572,-239846400,4),(572,-228960000,5),(572,-208396800,4),(572,-197510400,5),(572,-176342400,4),(572,-166060800,5),(572,228873600,4),(572,243993600,5),(572,260323200,4),(572,276048000,5),(572,291772800,4),(572,307497600,5),(572,323827200,4),(572,338947200,5),(572,354672000,4),(572,370396800,5),(572,386121600,4),(572,401846400,5),(572,417571200,4),(572,433296000,5),(572,449020800,4),(572,465350400,5),(572,481075200,4),(572,496800000,5),(572,512524800,4),(572,528249600,5),(572,543974400,4),(572,559699200,5),(572,575427600,9),(572,591152400,10),(572,606877200,9),(572,622602000,10),(572,638326800,9),(572,654656400,10),(572,670381200,9),(572,686106000,10),(572,701830800,9),(572,717555600,10),(572,733280400,9),(572,749005200,10),(572,764730000,9),(572,780454800,10),(572,796179600,9),(572,811904400,10),(572,828234000,9),(572,846378000,10),(572,859683600,9),(572,877827600,10),(572,891133200,9),(572,909277200,10),(572,922582800,9),(572,941331600,10),(572,954032400,9),(572,972781200,10),(572,985482000,9),(572,1004230800,10),(572,1017536400,9),(572,1035680400,10),(572,1048986000,9),(572,1067130000,10),(572,1080435600,9),(572,1099184400,10),(572,1111885200,9),(572,1130634000,10),(572,1143334800,9),(572,1162083600,10),(572,1174784400,9),(572,1193533200,10),(572,1206838800,9),(572,1224982800,10),(572,1238288400,9),(572,1256432400,10),(572,1269738000,9),(572,1288486800,10),(572,1301187600,9),(572,1319936400,10),(572,1332637200,9),(572,1351386000,10),(572,1364691600,9),(572,1382835600,10),(572,1396141200,9),(572,1414285200,10),(572,1427590800,9),(572,1445734800,10),(572,1459040400,9),(572,1477789200,10),(572,1490490000,9),(572,1509238800,10),(572,1521939600,9),(572,1540688400,10),(572,1553994000,9),(572,1572138000,10),(572,1585443600,9),(572,1603587600,10),(572,1616893200,9),(572,1635642000,10),(572,1648342800,9),(572,1667091600,10),(572,1679792400,9),(572,1698541200,10),(572,1711846800,9),(572,1729990800,10),(572,1743296400,9),(572,1761440400,10),(572,1774746000,9),(572,1792890000,10),(572,1806195600,9),(572,1824944400,10),(572,1837645200,9),(572,1856394000,10),(572,1869094800,9),(572,1887843600,10),(572,1901149200,9),(572,1919293200,10),(572,1932598800,9),(572,1950742800,10),(572,1964048400,9),(572,1982797200,10),(572,1995498000,9),(572,2014246800,10),(572,2026947600,9),(572,2045696400,10),(572,2058397200,9),(572,2077146000,10),(572,2090451600,9),(572,2108595600,10),(572,2121901200,9),(572,2140045200,10),(573,-2147483648,0),(573,-1830384000,6),(573,-1689555600,1),(573,-1677801600,2),(573,-1667437200,3),(573,-1647738000,4),(573,-1635814800,3),(573,-1616202000,4),(573,-1604365200,3),(573,-1584666000,4),(573,-1572742800,3),(573,-1553043600,4),(573,-1541206800,3),(573,-1521507600,4),(573,-1442451600,3),(573,-1426813200,4),(573,-1379293200,3),(573,-1364778000,4),(573,-1348448400,3),(573,-1333328400,4),(573,-1316394000,3),(573,-1301274000,4),(573,-1284339600,3),(573,-1269824400,4),(573,-1221440400,3),(573,-1206925200,4),(573,-1191200400,3),(573,-1175475600,4),(573,-1127696400,3),(573,-1111971600,4),(573,-1096851600,3),(573,-1080522000,4),(573,-1063587600,3),(573,-1049072400,4),(573,-1033347600,3),(573,-1017622800,4),(573,-1002502800,3),(573,-986173200,4),(573,-969238800,3),(573,-950490000,4),(573,-942022800,3),(573,-922669200,4),(573,-906944400,3),(573,-891133200,4),(573,-877309200,3),(573,-873684000,5),(573,-864007200,3),(573,-857955600,4),(573,-845859600,3),(573,-842839200,5),(573,-831348000,3),(573,-825901200,4),(573,-814410000,3),(573,-810784800,5),(573,-799898400,3),(573,-794451600,4),(573,-782960400,3),(573,-779335200,5),(573,-768448800,3),(573,-763002000,4),(573,-749091600,3),(573,-733366800,4),(573,-717631200,3),(573,-701906400,4),(573,-686181600,3),(573,-670456800,4),(573,-654732000,3),(573,-639007200,4),(573,-623282400,3),(573,-607557600,4),(573,-591832800,3),(573,-575503200,4),(573,-559778400,3),(573,-544053600,4),(573,-528328800,3),(573,-512604000,4),(573,-496879200,3),(573,-481154400,4),(573,-465429600,3),(573,-449704800,4),(573,-433980000,3),(573,-417650400,4),(573,-401925600,3),(573,-386200800,4),(573,-370476000,3),(573,-354751200,4),(573,-339026400,3),(573,-323301600,4),(573,-307576800,3),(573,-291852000,4),(573,-276127200,3),(573,-260402400,4),(573,-244677600,3),(573,-228348000,4),(573,-212623200,3),(573,-196898400,4),(573,-181173600,3),(573,-165448800,4),(573,-149724000,3),(573,-133999200,4),(573,-118274400,7),(573,212544000,2),(573,228268800,3),(573,243993600,4),(573,260323200,3),(573,276048000,4),(573,291772800,3),(573,307501200,4),(573,323222400,3),(573,338950800,4),(573,354675600,3),(573,370400400,4),(573,386125200,3),(573,401850000,4),(573,417578400,3),(573,433299600,4),(573,449024400,3),(573,465354000,4),(573,481078800,3),(573,496803600,4),(573,512528400,3),(573,528253200,4),(573,543978000,3),(573,559702800,4),(573,575427600,3),(573,591152400,4),(573,606877200,3),(573,622602000,4),(573,638326800,3),(573,654656400,4),(573,670381200,3),(573,686106000,4),(573,701830800,3),(573,717555600,8),(573,733280400,9),(573,749005200,8),(573,764730000,9),(573,780454800,8),(573,796179600,9),(573,811904400,8),(573,828234000,10),(573,846378000,6),(573,859683600,10),(573,877827600,6),(573,891133200,10),(573,909277200,6),(573,922582800,10),(573,941331600,6),(573,954032400,10),(573,972781200,6),(573,985482000,10),(573,1004230800,6),(573,1017536400,10),(573,1035680400,6),(573,1048986000,10),(573,1067130000,6),(573,1080435600,10),(573,1099184400,6),(573,1111885200,10),(573,1130634000,6),(573,1143334800,10),(573,1162083600,6),(573,1174784400,10),(573,1193533200,6),(573,1206838800,10),(573,1224982800,6),(573,1238288400,10),(573,1256432400,6),(573,1269738000,10),(573,1288486800,6),(573,1301187600,10),(573,1319936400,6),(573,1332637200,10),(573,1351386000,6),(573,1364691600,10),(573,1382835600,6),(573,1396141200,10),(573,1414285200,6),(573,1427590800,10),(573,1445734800,6),(573,1459040400,10),(573,1477789200,6),(573,1490490000,10),(573,1509238800,6),(573,1521939600,10),(573,1540688400,6),(573,1553994000,10),(573,1572138000,6),(573,1585443600,10),(573,1603587600,6),(573,1616893200,10),(573,1635642000,6),(573,1648342800,10),(573,1667091600,6),(573,1679792400,10),(573,1698541200,6),(573,1711846800,10),(573,1729990800,6),(573,1743296400,10),(573,1761440400,6),(573,1774746000,10),(573,1792890000,6),(573,1806195600,10),(573,1824944400,6),(573,1837645200,10),(573,1856394000,6),(573,1869094800,10),(573,1887843600,6),(573,1901149200,10),(573,1919293200,6),(573,1932598800,10),(573,1950742800,6),(573,1964048400,10),(573,1982797200,6),(573,1995498000,10),(573,2014246800,6),(573,2026947600,10),(573,2045696400,6),(573,2058397200,10),(573,2077146000,6),(573,2090451600,10),(573,2108595600,6),(573,2121901200,10),(573,2140045200,6),(574,-2147483648,1),(574,-1017820800,2),(574,-766224000,1),(574,-745833600,3),(574,-733827600,1),(574,-716889600,3),(574,-699613200,1),(574,-683884800,3),(574,-670669200,1),(574,-652348800,3),(574,-639133200,1),(574,-620812800,3),(574,-607597200,1),(574,-589276800,3),(574,-576061200,1),(574,-562924800,3),(574,-541760400,1),(574,-528710400,3),(574,-510224400,1),(574,-497174400,3),(574,-478688400,1),(574,-465638400,3),(574,-449830800,1),(574,-434016000,3),(574,-418208400,1),(574,-402480000,3),(574,-386672400,1),(574,-370944000,3),(574,-355136400,1),(574,-339408000,3),(574,-323600400,1),(574,-302515200,3),(574,-291978000,1),(574,-270979200,3),(574,-260442000,1),(574,133977600,3),(574,149785200,1),(574,165513600,3),(574,181321200,1),(574,299606400,3),(574,307551600,1),(575,-1948782472,1),(575,-1830414600,2),(575,-767350800,4),(575,-681210000,3),(575,-672228000,4),(575,-654771600,3),(575,-640864800,4),(575,-623408400,3),(575,-609415200,4),(575,-588848400,3),(575,-577965600,4),(575,-498128400,1),(575,-462702600,5),(575,-451733400,1),(575,-429784200,5),(575,-418296600,1),(575,-399544200,5),(575,-387451800,1),(575,-368094600,5),(575,-356002200,1),(575,-336645000,5),(575,-324552600,1),(575,-305195400,5),(575,-293103000,1),(575,-264933000,4),(575,547578000,3),(575,560883600,4),(575,579027600,3),(575,592333200,4),(576,-2147483648,1),(576,-2038200925,2),(576,-1167634800,3),(576,-1073028000,4),(576,-894180000,5),(576,-879665400,6),(576,-767005200,5),(576,378664200,7),(576,2147483647,7),(577,-2147483648,1),(577,-1869875816,3),(577,-1693706400,2),(577,-1680490800,3),(577,-1570413600,2),(577,-1552186800,3),(577,-1538359200,2),(577,-1522551600,3),(577,-1507514400,2),(577,-1490583600,3),(577,-1440208800,2),(577,-1428030000,3),(577,-1409709600,2),(577,-1396494000,3),(577,-931053600,2),(577,-922676400,3),(577,-917834400,2),(577,-892436400,3),(577,-875844000,2),(577,-764737200,3),(577,-744343200,2),(577,-733806000,3),(577,-716436000,2),(577,-701924400,3),(577,-684986400,2),(577,-670474800,3),(577,-654141600,2),(577,-639025200,3),(577,-622087200,2),(577,-606970800,3),(577,-590032800,2),(577,-575521200,3),(577,-235620000,2),(577,-194842800,3),(577,-177732000,2),(577,-165726000,3),(577,107910000,2),(577,121215600,3),(577,133920000,2),(577,152665200,3),(577,164678400,2),(577,184114800,3),(577,196214400,2),(577,215564400,3),(577,228873600,2),(577,245804400,3),(577,260323200,2),(577,267915600,4),(577,428454000,5),(577,433893600,4),(577,468111600,3),(577,482799600,6),(577,496710000,7),(577,512521200,6),(577,528246000,7),(577,543970800,6),(577,559695600,7),(577,575420400,6),(577,591145200,7),(577,606870000,6),(577,622594800,7),(577,638319600,6),(577,654649200,7),(577,670374000,6),(577,686098800,7),(577,701823600,6),(577,717548400,7),(577,733273200,6),(577,748998000,7),(577,764118000,6),(577,780447600,7),(577,796172400,6),(577,811897200,7),(577,828226800,6),(577,846370800,7),(577,859676400,6),(577,877820400,7),(577,891126000,6),(577,909270000,7),(577,922575600,6),(577,941324400,7),(577,954025200,6),(577,972774000,7),(577,985474800,6),(577,1004223600,7),(577,1017529200,6),(577,1035673200,7),(577,1048978800,6),(577,1067122800,7),(577,1080428400,6),(577,1099177200,7),(577,1111878000,6),(577,1130626800,7),(577,1143327600,6),(577,1162076400,7),(577,1174784400,8),(577,1193533200,9),(577,1206838800,8),(577,1224982800,9),(577,1238288400,8),(577,1256432400,9),(577,1269738000,8),(577,1288486800,9),(577,1301274000,8),(577,1319936400,9),(577,1332637200,8),(577,1351386000,9),(577,1364691600,8),(577,1382835600,9),(577,1396227600,8),(577,1414285200,9),(577,1427590800,8),(577,1446944400,9),(577,1459040400,8),(577,1473195600,4),(577,2147483647,4),(579,-2147483648,1),(579,-880200000,2),(579,-769395600,3),(579,-765378000,1),(579,-86882400,4),(579,-21470400,5),(579,-5749200,4),(579,9979200,5),(579,25700400,4),(579,41428800,5),(579,57754800,4),(579,73483200,5),(579,89204400,4),(579,104932800,5),(579,120654000,4),(579,126705600,5),(579,152103600,4),(579,162388800,5),(579,183553200,4),(579,199281600,5),(579,215607600,4),(579,230731200,5),(579,247057200,4),(579,262785600,5),(579,278506800,4),(579,294235200,5),(579,309956400,4),(579,325684800,5),(579,341406000,4),(579,357134400,5),(579,372855600,4),(579,388584000,5),(579,404910000,4),(579,420033600,5),(579,436359600,6),(579,439030800,8),(579,452084400,7),(579,467805600,8),(579,483534000,7),(579,499255200,8),(579,514983600,7),(579,530704800,8),(579,544618800,7),(579,562154400,8),(579,576068400,7),(579,594208800,8),(579,607518000,7),(579,625658400,8),(579,638967600,7),(579,657108000,8),(579,671022000,7),(579,688557600,8),(579,702471600,7),(579,720007200,8),(579,733921200,7),(579,752061600,8),(579,765370800,7),(579,783511200,8),(579,796820400,7),(579,814960800,8),(579,828874800,7),(579,846410400,8),(579,860324400,7),(579,877860000,8),(579,891774000,7),(579,909309600,8),(579,923223600,7),(579,941364000,8),(579,954673200,7),(579,972813600,8),(579,986122800,7),(579,1004263200,8),(579,1018177200,7),(579,1035712800,8),(579,1049626800,7),(579,1067162400,8),(579,1081076400,7),(579,1099216800,8),(579,1112526000,7),(579,1130666400,8),(579,1143975600,7),(579,1162116000,8),(579,1173610800,7),(579,1194170400,8),(579,1205060400,7),(579,1225620000,8),(579,1236510000,7),(579,1257069600,8),(579,1268564400,7),(579,1289124000,8),(579,1300014000,7),(579,1320573600,8),(579,1331463600,7),(579,1352023200,8),(579,1362913200,7),(579,1383472800,8),(579,1394362800,7),(579,1414922400,8),(579,1425812400,7),(579,1446372000,8),(579,1457866800,7),(579,1478426400,8),(579,1489316400,7),(579,1509876000,8),(579,1520766000,7),(579,1541325600,8),(579,1552215600,7),(579,1572775200,8),(579,1583665200,7),(579,1604224800,8),(579,1615719600,7),(579,1636279200,8),(579,1647169200,7),(579,1667728800,8),(579,1678618800,7),(579,1699178400,8),(579,1710068400,7),(579,1730628000,8),(579,1741518000,7),(579,1762077600,8),(579,1772967600,7),(579,1793527200,8),(579,1805022000,7),(579,1825581600,8),(579,1836471600,7),(579,1857031200,8),(579,1867921200,7),(579,1888480800,8),(579,1899370800,7),(579,1919930400,8),(579,1930820400,7),(579,1951380000,8),(579,1962874800,7),(579,1983434400,8),(579,1994324400,7),(579,2014884000,8),(579,2025774000,7),(579,2046333600,8),(579,2057223600,7),(579,2077783200,8),(579,2088673200,7),(579,2109232800,8),(579,2120122800,7),(579,2140682400,8),(580,-2147483648,1),(580,-880196400,2),(580,-769395600,3),(580,-765374400,1),(580,-86878800,4),(580,-21466800,5),(580,-5745600,4),(580,9982800,5),(580,25704000,4),(580,41432400,5),(580,57758400,4),(580,73486800,5),(580,89208000,4),(580,104936400,5),(580,120657600,4),(580,126709200,5),(580,152107200,4),(580,162392400,5),(580,183556800,4),(580,199285200,5),(580,215611200,4),(580,230734800,5),(580,247060800,4),(580,262789200,5),(580,278510400,4),(580,294238800,5),(580,309960000,4),(580,325688400,5),(580,341409600,4),(580,357138000,5),(580,372859200,4),(580,388587600,5),(580,404913600,4),(580,420037200,5),(580,436363200,6),(580,439034400,8),(580,452088000,7),(580,467809200,8),(580,483537600,7),(580,499258800,8),(580,514987200,7),(580,530708400,8),(580,544622400,7),(580,562158000,8),(580,576072000,7),(580,594212400,8),(580,607521600,7),(580,625662000,8),(580,638971200,7),(580,657111600,8),(580,671025600,7),(580,688561200,8),(580,702475200,7),(580,720010800,8),(580,733924800,7),(580,752065200,8),(580,765374400,7),(580,783514800,8),(580,796824000,7),(580,814964400,8),(580,828878400,7),(580,846414000,8),(580,860328000,7),(580,877863600,8),(580,891777600,7),(580,909313200,8),(580,923227200,7),(580,941367600,8),(580,954676800,7),(580,972817200,8),(580,986126400,7),(580,1004266800,8),(580,1018180800,7),(580,1035716400,8),(580,1049630400,7),(580,1067166000,8),(580,1081080000,7),(580,1099220400,8),(580,1112529600,7),(580,1130670000,8),(580,1143979200,7),(580,1162119600,8),(580,1173614400,7),(580,1194174000,8),(580,1205064000,7),(580,1225623600,8),(580,1236513600,7),(580,1257073200,8),(580,1268568000,7),(580,1289127600,8),(580,1300017600,7),(580,1320577200,8),(580,1331467200,7),(580,1352026800,8),(580,1362916800,7),(580,1383476400,8),(580,1394366400,7),(580,1414926000,8),(580,1425816000,7),(580,1446375600,8),(580,1457870400,7),(580,1478430000,8),(580,1489320000,7),(580,1509879600,8),(580,1520769600,7),(580,1541329200,8),(580,1552219200,7),(580,1572778800,8),(580,1583668800,7),(580,1604228400,8),(580,1615723200,7),(580,1636282800,8),(580,1647172800,7),(580,1667732400,8),(580,1678622400,7),(580,1699182000,8),(580,1710072000,7),(580,1730631600,8),(580,1741521600,7),(580,1762081200,8),(580,1772971200,7),(580,1793530800,8),(580,1805025600,7),(580,1825585200,8),(580,1836475200,7),(580,1857034800,8),(580,1867924800,7),(580,1888484400,8),(580,1899374400,7),(580,1919934000,8),(580,1930824000,7),(580,1951383600,8),(580,1962878400,7),(580,1983438000,8),(580,1994328000,7),(580,2014887600,8),(580,2025777600,7),(580,2046337200,8),(580,2057227200,7),(580,2077786800,8),(580,2088676800,7),(580,2109236400,8),(580,2120126400,7),(580,2140686000,8),(581,-2147483648,2),(581,-1633273200,1),(581,-1615132800,2),(581,-1601823600,1),(581,-1583683200,2),(581,-880210800,3),(581,-820519140,2),(581,-812653140,3),(581,-796845540,2),(581,-84380400,1),(581,-68659200,2),(582,-2147483648,2),(582,-1633276800,1),(582,-1615136400,2),(582,-1601827200,1),(582,-1583686800,2),(582,-1563724800,1),(582,-1551632400,2),(582,-1538928000,1),(582,-1520182800,2),(582,-1504454400,1),(582,-1491757200,2),(582,-1473004800,1),(582,-1459702800,2),(582,-1441555200,1),(582,-1428253200,2),(582,-1410105600,1),(582,-1396803600,2),(582,-1378656000,1),(582,-1365354000,2),(582,-1347206400,1),(582,-1333904400,2),(582,-1315152000,1),(582,-1301850000,2),(582,-1283702400,1),(582,-1270400400,2),(582,-1252252800,1),(582,-1238950800,2),(582,-1220803200,1),(582,-1207501200,2),(582,-1189353600,1),(582,-1176051600,2),(582,-1157299200,1),(582,-1144602000,2),(582,-1125849600,1),(582,-1112547600,2),(582,-1094400000,1),(582,-1081098000,2),(582,-1067788800,3),(582,-1045414800,2),(582,-1031500800,1),(582,-1018198800,2),(582,-1000051200,1),(582,-986749200,2),(582,-967996800,1),(582,-955299600,2),(582,-936547200,1),(582,-923245200,2),(582,-905097600,1),(582,-891795600,2),(582,-880214400,4),(582,-769395600,5),(582,-765392400,2),(582,-747244800,1),(582,-733942800,2),(582,-715795200,1),(582,-702493200,2),(582,-684345600,1),(582,-671043600,2),(582,-652896000,1),(582,-639594000,2),(582,-620841600,1),(582,-608144400,2),(582,-589392000,1),(582,-576090000,2),(582,-557942400,1),(582,-544640400,2),(582,-526492800,1),(582,-513190800,2),(582,-495043200,1),(582,-481741200,2),(582,-463593600,1),(582,-447267600,2),(582,-431539200,1),(582,-415818000,2),(582,-400089600,1),(582,-384368400,2),(582,-368640000,1),(582,-352918800,2),(582,-337190400,1),(582,-321469200,2),(582,-305740800,1),(582,-289414800,2),(582,-273686400,1),(582,-257965200,2),(582,-242236800,1),(582,-226515600,2),(582,-210787200,1),(582,-195066000,2),(582,-179337600,1),(582,-163616400,2),(582,-147888000,1),(582,-131562000,2),(582,-116438400,1),(582,-100112400,2),(582,-84384000,1),(582,-68662800,2),(582,-52934400,1),(582,-37213200,2),(582,-21484800,1),(582,-5763600,2),(582,9964800,1),(582,25686000,2),(582,41414400,1),(582,57740400,2),(582,73468800,1),(582,89190000,2),(582,104918400,1),(582,120639600,2),(582,126691200,1),(582,152089200,2),(582,162374400,1),(582,183538800,2),(582,199267200,1),(582,215593200,2),(582,230716800,1),(582,247042800,2),(582,262771200,1),(582,278492400,2),(582,294220800,1),(582,309942000,2),(582,325670400,1),(582,341391600,2),(582,357120000,1),(582,372841200,2),(582,388569600,1),(582,404895600,2),(582,420019200,1),(582,436345200,2),(582,452073600,1),(582,467794800,2),(582,483523200,1),(582,499244400,2),(582,514972800,1),(582,530694000,2),(582,544608000,1),(582,562143600,2),(582,576057600,1),(582,594198000,2),(582,607507200,1),(582,625647600,2),(582,638956800,1),(582,657097200,2),(582,671011200,1),(582,688546800,2),(582,702460800,1),(582,719996400,2),(582,733910400,1),(582,752050800,2),(582,765360000,1),(582,783500400,2),(582,796809600,1),(582,814950000,2),(582,828864000,1),(582,846399600,2),(582,860313600,1),(582,877849200,2),(582,891763200,1),(582,909298800,2),(582,923212800,1),(582,941353200,2),(582,954662400,1),(582,972802800,2),(582,986112000,1),(582,1004252400,2),(582,1018166400,1),(582,1035702000,2),(582,1049616000,1),(582,1067151600,2),(582,1081065600,1),(582,1099206000,2),(582,1112515200,1),(582,1130655600,2),(582,1143964800,1),(582,1162105200,2),(582,1173600000,1),(582,1194159600,2),(582,1205049600,1),(582,1225609200,2),(582,1236499200,1),(582,1257058800,2),(582,1268553600,1),(582,1289113200,2),(582,1300003200,1),(582,1320562800,2),(582,1331452800,1),(582,1352012400,2),(582,1362902400,1),(582,1383462000,2),(582,1394352000,1),(582,1414911600,2),(582,1425801600,1),(582,1446361200,2),(582,1457856000,1),(582,1478415600,2),(582,1489305600,1),(582,1509865200,2),(582,1520755200,1),(582,1541314800,2),(582,1552204800,1),(582,1572764400,2),(582,1583654400,1),(582,1604214000,2),(582,1615708800,1),(582,1636268400,2),(582,1647158400,1),(582,1667718000,2),(582,1678608000,1),(582,1699167600,2),(582,1710057600,1),(582,1730617200,2),(582,1741507200,1),(582,1762066800,2),(582,1772956800,1),(582,1793516400,2),(582,1805011200,1),(582,1825570800,2),(582,1836460800,1),(582,1857020400,2),(582,1867910400,1),(582,1888470000,2),(582,1899360000,1),(582,1919919600,2),(582,1930809600,1),(582,1951369200,2),(582,1962864000,1),(582,1983423600,2),(582,1994313600,1),(582,2014873200,2),(582,2025763200,1),(582,2046322800,2),(582,2057212800,1),(582,2077772400,2),(582,2088662400,1),(582,2109222000,2),(582,2120112000,1),(582,2140671600,2),(583,-2147483648,2),(583,-1633276800,1),(583,-1615136400,2),(583,-1601827200,1),(583,-1583686800,2),(583,-900259200,1),(583,-891795600,2),(583,-880214400,3),(583,-769395600,4),(583,-765392400,2),(583,-747244800,1),(583,-733942800,2),(583,-715795200,1),(583,-702493200,2),(583,-684345600,1),(583,-671043600,2),(583,-652896000,1),(583,-639594000,2),(583,-620841600,1),(583,-608144400,2),(583,-589392000,1),(583,-576090000,2),(583,-557942400,1),(583,-544640400,2),(583,-526492800,1),(583,-513190800,2),(583,-495043200,1),(583,-481741200,2),(583,-463593600,5),(583,-386787600,2),(583,-368640000,5),(583,-21488400,6),(583,-5767200,5),(583,9961200,6),(583,25682400,5),(583,1143961200,6),(583,1162101600,5),(583,1173596400,6),(583,1194156000,5),(583,1205046000,6),(583,1225605600,5),(583,1236495600,6),(583,1257055200,5),(583,1268550000,6),(583,1289109600,5),(583,1299999600,6),(583,1320559200,5),(583,1331449200,6),(583,1352008800,5),(583,1362898800,6),(583,1383458400,5),(583,1394348400,6),(583,1414908000,5),(583,1425798000,6),(583,1446357600,5),(583,1457852400,6),(583,1478412000,5),(583,1489302000,6),(583,1509861600,5),(583,1520751600,6),(583,1541311200,5),(583,1552201200,6),(583,1572760800,5),(583,1583650800,6),(583,1604210400,5),(583,1615705200,6),(583,1636264800,5),(583,1647154800,6),(583,1667714400,5),(583,1678604400,6),(583,1699164000,5),(583,1710054000,6),(583,1730613600,5),(583,1741503600,6),(583,1762063200,5),(583,1772953200,6),(583,1793512800,5),(583,1805007600,6),(583,1825567200,5),(583,1836457200,6),(583,1857016800,5),(583,1867906800,6),(583,1888466400,5),(583,1899356400,6),(583,1919916000,5),(583,1930806000,6),(583,1951365600,5),(583,1962860400,6),(583,1983420000,5),(583,1994310000,6),(583,2014869600,5),(583,2025759600,6),(583,2046319200,5),(583,2057209200,6),(583,2077768800,5),(583,2088658800,6),(583,2109218400,5),(583,2120108400,6),(583,2140668000,5),(584,-2147483648,3),(584,-1633280400,1),(584,-1615140000,2),(584,-1601830800,1),(584,-1583690400,2),(584,-1570381200,1),(584,-1551636000,2),(584,-1536512400,1),(584,-1523210400,2),(584,-1504458000,1),(584,-1491760800,2),(584,-1473008400,1),(584,-1459706400,2),(584,-1441558800,1),(584,-1428256800,2),(584,-1410109200,1),(584,-1396807200,2),(584,-1378659600,1),(584,-1365357600,2),(584,-1347210000,1),(584,-1333908000,2),(584,-1315155600,1),(584,-1301853600,2),(584,-1283706000,1),(584,-1270404000,2),(584,-1252256400,1),(584,-1238954400,2),(584,-1220806800,1),(584,-1207504800,2),(584,-1189357200,1),(584,-1176055200,2),(584,-1157302800,1),(584,-1144605600,2),(584,-1125853200,1),(584,-1112551200,2),(584,-1094403600,1),(584,-1081101600,2),(584,-1062954000,1),(584,-1049652000,2),(584,-1031504400,1),(584,-1018202400,2),(584,-1000054800,1),(584,-986752800,2),(584,-968000400,1),(584,-955303200,2),(584,-936550800,1),(584,-923248800,2),(584,-905101200,1),(584,-891799200,2),(584,-880218000,4),(584,-769395600,5),(584,-765396000,2),(584,-747248400,1),(584,-733946400,2),(584,-715798800,1),(584,-702496800,2),(584,-684349200,1),(584,-671047200,2),(584,-652899600,1),(584,-639597600,2),(584,-620845200,1),(584,-608148000,2),(584,-589395600,1),(584,-576093600,2),(584,-557946000,1),(584,-544644000,2),(584,-526496400,1),(584,-513194400,2),(584,-495046800,1),(584,-481744800,2),(584,-463597200,1),(584,-447271200,2),(584,-431542800,1),(584,-415821600,2),(584,-400093200,1),(584,-384372000,2),(584,-368643600,1),(584,-352922400,2),(584,-337194000,1),(584,-321472800,2),(584,-305744400,1),(584,-289418400,2),(584,-273690000,1),(584,-257968800,2),(584,-242240400,1),(584,-226519200,2),(584,-210790800,1),(584,-195069600,2),(584,-179341200,1),(584,-163620000,2),(584,-147891600,1),(584,-131565600,2),(584,-116442000,1),(584,-100116000,2),(584,-84387600,1),(584,-68666400,2),(584,-52938000,1),(584,-37216800,2),(584,-21488400,1),(584,-5767200,2),(584,9961200,1),(584,25682400,2),(584,41410800,1),(584,57736800,2),(584,73465200,1),(584,89186400,2),(584,104914800,1),(584,120636000,2),(584,126687600,1),(584,152085600,2),(584,162370800,1),(584,183535200,2),(584,199263600,1),(584,215589600,2),(584,230713200,1),(584,247039200,2),(584,262767600,1),(584,278488800,2),(584,294217200,1),(584,309938400,2),(584,325666800,1),(584,341388000,2),(584,357116400,1),(584,372837600,2),(584,388566000,1),(584,404892000,2),(584,420015600,1),(584,436341600,2),(584,452070000,1),(584,467791200,2),(584,483519600,1),(584,499240800,2),(584,514969200,1),(584,530690400,2),(584,544604400,1),(584,562140000,2),(584,576054000,1),(584,594194400,2),(584,607503600,1),(584,625644000,2),(584,638953200,1),(584,657093600,2),(584,671007600,1),(584,688543200,2),(584,702457200,1),(584,719992800,2),(584,733906800,1),(584,752047200,2),(584,765356400,1),(584,783496800,2),(584,796806000,1),(584,814946400,2),(584,828860400,1),(584,846396000,2),(584,860310000,1),(584,877845600,2),(584,891759600,1),(584,909295200,2),(584,923209200,1),(584,941349600,2),(584,954658800,1),(584,972799200,2),(584,986108400,1),(584,1004248800,2),(584,1018162800,1),(584,1035698400,2),(584,1049612400,1),(584,1067148000,2),(584,1081062000,1),(584,1099202400,2),(584,1112511600,1),(584,1130652000,2),(584,1143961200,1),(584,1162101600,2),(584,1173596400,1),(584,1194156000,2),(584,1205046000,1),(584,1225605600,2),(584,1236495600,1),(584,1257055200,2),(584,1268550000,1),(584,1289109600,2),(584,1299999600,1),(584,1320559200,2),(584,1331449200,1),(584,1352008800,2),(584,1362898800,1),(584,1383458400,2),(584,1394348400,1),(584,1414908000,2),(584,1425798000,1),(584,1446357600,2),(584,1457852400,1),(584,1478412000,2),(584,1489302000,1),(584,1509861600,2),(584,1520751600,1),(584,1541311200,2),(584,1552201200,1),(584,1572760800,2),(584,1583650800,1),(584,1604210400,2),(584,1615705200,1),(584,1636264800,2),(584,1647154800,1),(584,1667714400,2),(584,1678604400,1),(584,1699164000,2),(584,1710054000,1),(584,1730613600,2),(584,1741503600,1),(584,1762063200,2),(584,1772953200,1),(584,1793512800,2),(584,1805007600,1),(584,1825567200,2),(584,1836457200,1),(584,1857016800,2),(584,1867906800,1),(584,1888466400,2),(584,1899356400,1),(584,1919916000,2),(584,1930806000,1),(584,1951365600,2),(584,1962860400,1),(584,1983420000,2),(584,1994310000,1),(584,2014869600,2),(584,2025759600,1),(584,2046319200,2),(584,2057209200,1),(584,2077768800,2),(584,2088658800,1),(584,2109218400,2),(584,2120108400,1),(584,2140668000,2),(585,-2147483648,1),(585,-1157283000,2),(585,-1155436200,1),(585,-880198200,3),(585,-769395600,4),(585,-765376200,1),(585,-712150200,5),(586,-2147483648,2),(586,-1633276800,1),(586,-1615136400,2),(586,-1601827200,1),(586,-1583686800,2),(586,-880214400,3),(586,-769395600,4),(586,-765392400,2),(586,-715795200,1),(586,-702493200,2),(586,-684345600,1),(586,-671043600,2),(586,-652896000,1),(586,-639594000,2),(586,-620841600,1),(586,-608144400,2),(586,-589392000,1),(586,-576090000,2),(586,-557942400,1),(586,-544640400,2),(586,-526492800,1),(586,-513190800,2),(586,-495043200,1),(586,-481741200,2),(586,-463593600,1),(586,-447267600,2),(586,-431539200,1),(586,-415818000,2),(586,-400089600,1),(586,-386787600,2),(586,-368640000,1),(586,-355338000,2),(586,-337190400,1),(586,-321469200,2),(586,-305740800,1),(586,-289414800,2),(586,-273686400,1),(586,-257965200,2),(586,-242236800,5),(586,-195066000,2),(586,-84384000,1),(586,-68662800,2),(586,-52934400,1),(586,-37213200,2),(586,-21484800,1),(586,-5763600,2),(586,9964800,1),(586,25686000,2),(586,41414400,1),(586,57740400,2),(586,73468800,1),(586,89190000,2),(586,104918400,1),(586,120639600,2),(586,126691200,1),(586,152089200,2),(586,162374400,1),(586,183538800,2),(586,199267200,1),(586,215593200,2),(586,230716800,1),(586,247042800,2),(586,262771200,1),(586,278492400,2),(586,294220800,1),(586,309942000,2),(586,325670400,1),(586,341391600,2),(586,357120000,1),(586,372841200,2),(586,388569600,1),(586,404895600,2),(586,420019200,1),(586,436345200,2),(586,452073600,1),(586,467794800,2),(586,483523200,1),(586,499244400,2),(586,514972800,1),(586,530694000,2),(586,544608000,1),(586,562143600,2),(586,576057600,1),(586,594198000,2),(586,607507200,1),(586,625647600,2),(586,638956800,1),(586,657097200,2),(586,671011200,1),(586,688546800,5),(586,1143961200,1),(586,1162105200,2),(586,1173600000,1),(586,1194159600,2),(586,1205049600,1),(586,1225609200,2),(586,1236499200,1),(586,1257058800,2),(586,1268553600,1),(586,1289113200,2),(586,1300003200,1),(586,1320562800,2),(586,1331452800,1),(586,1352012400,2),(586,1362902400,1),(586,1383462000,2),(586,1394352000,1),(586,1414911600,2),(586,1425801600,1),(586,1446361200,2),(586,1457856000,1),(586,1478415600,2),(586,1489305600,1),(586,1509865200,2),(586,1520755200,1),(586,1541314800,2),(586,1552204800,1),(586,1572764400,2),(586,1583654400,1),(586,1604214000,2),(586,1615708800,1),(586,1636268400,2),(586,1647158400,1),(586,1667718000,2),(586,1678608000,1),(586,1699167600,2),(586,1710057600,1),(586,1730617200,2),(586,1741507200,1),(586,1762066800,2),(586,1772956800,1),(586,1793516400,2),(586,1805011200,1),(586,1825570800,2),(586,1836460800,1),(586,1857020400,2),(586,1867910400,1),(586,1888470000,2),(586,1899360000,1),(586,1919919600,2),(586,1930809600,1),(586,1951369200,2),(586,1962864000,1),(586,1983423600,2),(586,1994313600,1),(586,2014873200,2),(586,2025763200,1),(586,2046322800,2),(586,2057212800,1),(586,2077772400,2),(586,2088662400,1),(586,2109222000,2),(586,2120112000,1),(586,2140671600,2),(587,-2051202469,1),(587,-1724083200,2),(587,-880218000,3),(587,-769395600,4),(587,-765396000,2),(587,-684349200,5),(587,-671047200,2),(587,-80506740,5),(587,-68666400,2),(587,-52938000,5),(587,-37216800,2),(587,104914800,5),(587,120636000,2),(587,126687600,5),(587,152085600,2),(587,167814000,5),(587,183535200,2),(587,199263600,5),(587,215589600,2),(587,230713200,5),(587,247039200,2),(587,262767600,5),(587,278488800,2),(587,294217200,5),(587,309938400,2),(587,325666800,5),(587,341388000,2),(587,357116400,5),(587,372837600,2),(587,388566000,5),(587,404892000,2),(587,420015600,5),(587,436341600,2),(587,452070000,5),(587,467791200,2),(587,483519600,5),(587,499240800,2),(587,514969200,5),(587,530690400,2),(587,544604400,5),(587,562140000,2),(587,576054000,5),(587,594194400,2),(587,607503600,5),(587,625644000,2),(587,638953200,5),(587,657093600,2),(587,671007600,5),(587,688543200,2),(587,702457200,5),(587,719992800,2),(587,733906800,5),(587,752047200,2),(587,765356400,5),(587,783496800,2),(587,796806000,5),(587,814946400,2),(587,828860400,5),(587,846396000,2),(587,860310000,5),(587,877845600,2),(587,891759600,5),(587,909295200,2),(587,923209200,5),(587,941349600,2),(587,954658800,5),(587,972799200,2),(587,986108400,5),(587,1004248800,2),(587,1018162800,5),(587,1035698400,2),(587,1049612400,5),(587,1067148000,2),(587,1081062000,5),(587,1099202400,2),(587,1112511600,5),(587,1130652000,2),(587,1143961200,5),(587,1162101600,2),(587,1173596400,5),(587,1194156000,2),(587,1205046000,5),(587,1225605600,2),(587,1236495600,5),(587,1257055200,2),(587,1268550000,5),(587,1289109600,2),(587,1299999600,5),(587,1320559200,2),(587,1331449200,5),(587,1352008800,2),(587,1362898800,5),(587,1383458400,2),(587,1394348400,5),(587,1414908000,2),(587,1425798000,5),(587,1446357600,2),(587,1457852400,5),(587,1478412000,2),(587,1489302000,5),(587,1509861600,2),(587,1520751600,5),(587,1541311200,2),(587,1552201200,5),(587,1572760800,2),(587,1583650800,5),(587,1604210400,2),(587,1615705200,5),(587,1636264800,2),(587,1647154800,5),(587,1667714400,2),(587,1678604400,5),(587,1699164000,2),(587,1710054000,5),(587,1730613600,2),(587,1741503600,5),(587,1762063200,2),(587,1772953200,5),(587,1793512800,2),(587,1805007600,5),(587,1825567200,2),(587,1836457200,5),(587,1857016800,2),(587,1867906800,5),(587,1888466400,2),(587,1899356400,5),(587,1919916000,2),(587,1930806000,5),(587,1951365600,2),(587,1962860400,5),(587,1983420000,2),(587,1994310000,5),(587,2014869600,2),(587,2025759600,5),(587,2046319200,2),(587,2057209200,5),(587,2077768800,2),(587,2088658800,5),(587,2109218400,2),(587,2120108400,5),(587,2140668000,2),(588,-2147483648,2),(588,-1633273200,1),(588,-1615132800,2),(588,-1601823600,1),(588,-1583683200,2),(588,-1570374000,1),(588,-1551628800,2),(588,-1538924400,1),(588,-1534089600,2),(588,-880210800,3),(588,-769395600,4),(588,-765388800,2),(588,-147884400,1),(588,-131558400,2),(588,-116434800,1),(588,-100108800,2),(588,-84380400,1),(588,-68659200,2),(588,-52930800,1),(588,-37209600,2),(588,-21481200,1),(588,-5760000,2),(588,9968400,1),(588,25689600,2),(588,41418000,1),(588,57744000,2),(588,73472400,1),(588,89193600,2),(588,104922000,1),(588,120643200,2),(588,126694800,1),(588,152092800,2),(588,162378000,1),(588,183542400,2),(588,199270800,1),(588,215596800,2),(588,230720400,1),(588,247046400,2),(588,262774800,1),(588,278496000,2),(588,294224400,1),(588,309945600,2),(588,325674000,1),(588,341395200,2),(588,357123600,1),(588,372844800,2),(588,388573200,1),(588,404899200,2),(588,420022800,1),(588,436348800,2),(588,452077200,1),(588,467798400,2),(588,483526800,1),(588,499248000,2),(588,514976400,1),(588,530697600,2),(588,544611600,1),(588,562147200,2),(588,576061200,1),(588,594201600,2),(588,607510800,1),(588,625651200,2),(588,638960400,1),(588,657100800,2),(588,671014800,1),(588,688550400,2),(588,702464400,1),(588,720000000,2),(588,733914000,1),(588,752054400,2),(588,765363600,1),(588,783504000,2),(588,796813200,1),(588,814953600,2),(588,828867600,1),(588,846403200,2),(588,860317200,1),(588,877852800,2),(588,891766800,1),(588,909302400,2),(588,923216400,1),(588,941356800,2),(588,954666000,1),(588,972806400,2),(588,986115600,1),(588,1004256000,2),(588,1018170000,1),(588,1035705600,2),(588,1049619600,1),(588,1067155200,2),(588,1081069200,1),(588,1099209600,2),(588,1112518800,1),(588,1130659200,2),(588,1143968400,1),(588,1162108800,2),(588,1173603600,1),(588,1194163200,2),(588,1205053200,1),(588,1225612800,2),(588,1236502800,1),(588,1257062400,2),(588,1268557200,1),(588,1289116800,2),(588,1300006800,1),(588,1320566400,2),(588,1331456400,1),(588,1352016000,2),(588,1362906000,1),(588,1383465600,2),(588,1394355600,1),(588,1414915200,2),(588,1425805200,1),(588,1446364800,2),(588,1457859600,1),(588,1478419200,2),(588,1489309200,1),(588,1509868800,2),(588,1520758800,1),(588,1541318400,2),(588,1552208400,1),(588,1572768000,2),(588,1583658000,1),(588,1604217600,2),(588,1615712400,1),(588,1636272000,2),(588,1647162000,1),(588,1667721600,2),(588,1678611600,1),(588,1699171200,2),(588,1710061200,1),(588,1730620800,2),(588,1741510800,1),(588,1762070400,2),(588,1772960400,1),(588,1793520000,2),(588,1805014800,1),(588,1825574400,2),(588,1836464400,1),(588,1857024000,2),(588,1867914000,1),(588,1888473600,2),(588,1899363600,1),(588,1919923200,2),(588,1930813200,1),(588,1951372800,2),(588,1962867600,1),(588,1983427200,2),(588,1994317200,1),(588,2014876800,2),(588,2025766800,1),(588,2046326400,2),(588,2057216400,1),(588,2077776000,2),(588,2088666000,1),(588,2109225600,2),(588,2120115600,1),(588,2140675200,2),(589,-2147483648,2),(589,-1633269600,1),(589,-1615129200,2),(589,-1601820000,1),(589,-1583679600,2),(589,-880207200,3),(589,-769395600,4),(589,-765385200,2),(589,-687967140,1),(589,-662655600,2),(589,-620838000,1),(589,-608137200,2),(589,-589388400,1),(589,-576082800,2),(589,-557938800,1),(589,-544633200,2),(589,-526489200,1),(589,-513183600,2),(589,-495039600,1),(589,-481734000,2),(589,-463590000,1),(589,-450284400,2),(589,-431535600,1),(589,-418230000,2),(589,-400086000,1),(589,-386780400,2),(589,-368636400,1),(589,-355330800,2),(589,-337186800,1),(589,-323881200,2),(589,-305737200,1),(589,-292431600,2),(589,-273682800,1),(589,-260982000,2),(589,-242233200,1),(589,-226508400,2),(589,-210783600,1),(589,-195058800,2),(589,-179334000,1),(589,-163609200,2),(589,-147884400,1),(589,-131554800,2),(589,-116434800,1),(589,-100105200,2),(589,-84376800,1),(589,-68655600,2),(589,-52927200,1),(589,-37206000,2),(589,-21477600,1),(589,-5756400,2),(589,9972000,1),(589,25693200,2),(589,41421600,1),(589,57747600,2),(589,73476000,1),(589,89197200,2),(589,104925600,1),(589,120646800,2),(589,126698400,1),(589,152096400,2),(589,162381600,1),(589,183546000,2),(589,199274400,1),(589,215600400,2),(589,230724000,1),(589,247050000,2),(589,262778400,1),(589,278499600,2),(589,294228000,1),(589,309949200,2),(589,325677600,1),(589,341398800,2),(589,357127200,1),(589,372848400,2),(589,388576800,1),(589,404902800,2),(589,420026400,1),(589,436352400,2),(589,452080800,1),(589,467802000,2),(589,483530400,1),(589,499251600,2),(589,514980000,1),(589,530701200,2),(589,544615200,1),(589,562150800,2),(589,576064800,1),(589,594205200,2),(589,607514400,1),(589,625654800,2),(589,638964000,1),(589,657104400,2),(589,671018400,1),(589,688554000,2),(589,702468000,1),(589,720003600,2),(589,733917600,1),(589,752058000,2),(589,765367200,1),(589,783507600,2),(589,796816800,1),(589,814957200,2),(589,828871200,1),(589,846406800,2),(589,860320800,1),(589,877856400,2),(589,891770400,1),(589,909306000,2),(589,923220000,1),(589,941360400,2),(589,954669600,1),(589,972810000,2),(589,986119200,1),(589,1004259600,2),(589,1018173600,1),(589,1035709200,2),(589,1049623200,1),(589,1067158800,2),(589,1081072800,1),(589,1099213200,2),(589,1112522400,1),(589,1130662800,2),(589,1143972000,1),(589,1162112400,2),(589,1173607200,1),(589,1194166800,2),(589,1205056800,1),(589,1225616400,2),(589,1236506400,1),(589,1257066000,2),(589,1268560800,1),(589,1289120400,2),(589,1300010400,1),(589,1320570000,2),(589,1331460000,1),(589,1352019600,2),(589,1362909600,1),(589,1383469200,2),(589,1394359200,1),(589,1414918800,2),(589,1425808800,1),(589,1446368400,2),(589,1457863200,1),(589,1478422800,2),(589,1489312800,1),(589,1509872400,2),(589,1520762400,1),(589,1541322000,2),(589,1552212000,1),(589,1572771600,2),(589,1583661600,1),(589,1604221200,2),(589,1615716000,1),(589,1636275600,2),(589,1647165600,1),(589,1667725200,2),(589,1678615200,1),(589,1699174800,2),(589,1710064800,1),(589,1730624400,2),(589,1741514400,1),(589,1762074000,2),(589,1772964000,1),(589,1793523600,2),(589,1805018400,1),(589,1825578000,2),(589,1836468000,1),(589,1857027600,2),(589,1867917600,1),(589,1888477200,2),(589,1899367200,1),(589,1919926800,2),(589,1930816800,1),(589,1951376400,2),(589,1962871200,1),(589,1983430800,2),(589,1994320800,1),(589,2014880400,2),(589,2025770400,1),(589,2046330000,2),(589,2057220000,1),(589,2077779600,2),(589,2088669600,1),(589,2109229200,2),(589,2120119200,1),(589,2140678800,2),(590,-2147483648,1),(590,-1861879032,2),(593,-2147483648,1),(593,-1688265017,3),(593,-1656819079,2),(593,-1641353479,3),(593,-1627965079,4),(593,-1618716679,2),(593,-1596429079,4),(593,-1593820800,5),(593,-1589860800,6),(593,-1542427200,7),(593,-1539493200,8),(593,-1525323600,7),(593,-1522728000,6),(593,-1491188400,9),(593,-1247536800,6),(593,354920400,7),(593,370728000,6),(593,386456400,7),(593,402264000,6),(593,417992400,7),(593,433800000,6),(593,449614800,7),(593,465346800,10),(593,481071600,11),(593,496796400,10),(593,512521200,11),(593,528246000,10),(593,543970800,11),(593,559695600,10),(593,575420400,11),(593,591145200,10),(593,606870000,11),(593,622594800,10),(593,638319600,11),(593,654649200,10),(593,670374000,12),(593,686102400,13),(593,695779200,10),(593,701823600,11),(593,717548400,10),(593,733273200,11),(593,748998000,10),(593,764722800,11),(593,780447600,10),(593,796172400,11),(593,811897200,10),(593,828226800,11),(593,846370800,10),(593,859676400,11),(593,877820400,10),(593,891126000,11),(593,909270000,10),(593,922575600,11),(593,941324400,10),(593,954025200,11),(593,972774000,10),(593,985474800,11),(593,1004223600,10),(593,1017529200,11),(593,1035673200,10),(593,1048978800,11),(593,1067122800,10),(593,1080428400,11),(593,1099177200,10),(593,1111878000,11),(593,1130626800,10),(593,1143327600,11),(593,1162076400,10),(593,1174777200,11),(593,1193526000,10),(593,1206831600,11),(593,1224975600,10),(593,1238281200,11),(593,1256425200,10),(593,1269730800,11),(593,1288479600,10),(593,1301180400,14),(593,1414274400,10),(594,228877200,1),(594,243997200,0),(594,260326800,1),(594,276051600,0),(594,291776400,1),(594,307501200,0),(594,323830800,1),(594,338950800,0),(594,354675600,1),(594,370400400,0),(594,386125200,1),(594,401850000,0),(594,417574800,1),(594,433299600,0),(594,449024400,1),(594,465354000,0),(594,481078800,1),(594,496803600,0),(594,512528400,1),(594,528253200,0),(594,543978000,1),(594,559702800,0),(594,575427600,1),(594,591152400,0),(594,606877200,1),(594,622602000,0),(594,638326800,1),(594,654656400,0),(594,670381200,1),(594,686106000,0),(594,701830800,1),(594,717555600,0),(594,733280400,1),(594,749005200,0),(594,764730000,1),(594,780454800,0),(594,796179600,1),(594,811904400,0),(594,828234000,1),(594,846378000,0),(594,859683600,1),(594,877827600,0),(594,891133200,1),(594,909277200,0),(594,922582800,1),(594,941331600,0),(594,954032400,1),(594,972781200,0),(594,985482000,1),(594,1004230800,0),(594,1017536400,1),(594,1035680400,0),(594,1048986000,1),(594,1067130000,0),(594,1080435600,1),(594,1099184400,0),(594,1111885200,1),(594,1130634000,0),(594,1143334800,1),(594,1162083600,0),(594,1174784400,1),(594,1193533200,0),(594,1206838800,1),(594,1224982800,0),(594,1238288400,1),(594,1256432400,0),(594,1269738000,1),(594,1288486800,0),(594,1301187600,1),(594,1319936400,0),(594,1332637200,1),(594,1351386000,0),(594,1364691600,1),(594,1382835600,0),(594,1396141200,1),(594,1414285200,0),(594,1427590800,1),(594,1445734800,0),(594,1459040400,1),(594,1477789200,0),(594,1490490000,1),(594,1509238800,0),(594,1521939600,1),(594,1540688400,0),(594,1553994000,1),(594,1572138000,0),(594,1585443600,1),(594,1603587600,0),(594,1616893200,1),(594,1635642000,0),(594,1648342800,1),(594,1667091600,0),(594,1679792400,1),(594,1698541200,0),(594,1711846800,1),(594,1729990800,0),(594,1743296400,1),(594,1761440400,0),(594,1774746000,1),(594,1792890000,0),(594,1806195600,1),(594,1824944400,0),(594,1837645200,1),(594,1856394000,0),(594,1869094800,1),(594,1887843600,0),(594,1901149200,1),(594,1919293200,0),(594,1932598800,1),(594,1950742800,0),(594,1964048400,1),(594,1982797200,0),(594,1995498000,1),(594,2014246800,0),(594,2026947600,1),(594,2045696400,0),(594,2058397200,1),(594,2077146000,0),(594,2090451600,1),(594,2108595600,0),(594,2121901200,1),(594,2140045200,0),(597,-1830383032,1),(598,-1830383032,1),(599,-1946168836,1),(599,-1309746600,2),(599,-1261969200,1),(599,-1041388200,3),(599,-865305900,2),(600,-2147483648,1),(600,-1855958961,4),(600,-1689814800,2),(600,-1680397200,3),(600,-1665363600,2),(600,-1648342800,3),(600,-1635123600,2),(600,-1616893200,3),(600,-1604278800,2),(600,-1585443600,3),(600,-1574038800,2),(600,-1552266000,3),(600,-1539997200,2),(600,-1531443600,3),(600,-956365200,2),(600,-950486400,4),(600,-942012000,6),(600,-812502000,5),(600,-796262400,6),(600,-781052400,5),(600,-766630800,6),(600,-733280400,4),(600,-439430400,6),(600,-212029200,4),(600,41468400,2),(600,54774000,3),(600,231724800,7),(600,246236400,6),(600,259545600,5),(600,275274000,6),(600,309740400,4),(600,325468800,7),(600,341802000,4),(600,357523200,6),(601,-1946168836,1),(601,-1309746600,2),(601,-1261969200,1),(601,-1041388200,3),(601,-865305900,2),(602,-1946168836,1),(602,-1309746600,2),(602,-1261969200,1),(602,-1041388200,3),(602,-865305900,2),(603,-1830383032,1),(604,-2035584815,1),(604,-1940889600,0),(604,-1767226415,2),(604,-1588465800,3),(605,-1830383032,1),(606,-1830380400,1),(606,157770000,2),(607,-2109291020,1),(608,-2035584815,1),(608,-1940889600,0),(608,-1767226415,2),(608,-1588465800,3),(609,-2109291020,1),(610,-2147483648,2),(610,-929844000,1),(610,-923108400,2),(610,-906170400,1),(610,-892868400,2),(610,-875844000,1),(610,-857790000,2),(610,-844308000,1),(610,-825822000,2),(610,-812685600,1),(610,-794199600,2),(610,-779853600,1),(610,-762663600,2),(610,-399088800,1),(610,-386650800,2),(610,-368330400,1),(610,-355114800,2),(610,-336790800,1),(610,-323654400,2),(610,-305168400,1),(610,-292032000,2),(610,-273632400,1),(610,-260496000,2),(610,-242096400,1),(610,-228960000,2),(610,-210560400,1),(610,-197424000,2),(610,-178938000,1),(610,-165801600,2),(610,-147402000,1),(610,-134265600,2),(610,-115866000,1),(610,-102643200,2),(610,-84330000,1),(610,-71107200,2),(610,-52707600,1),(610,-39484800,2),(610,-21171600,1),(610,-7948800,2),(610,10364400,1),(610,23587200,2),(610,41900400,1),(610,55123200,2),(610,73522800,1),(610,86745600,2),(610,105058800,1),(610,118281600,2),(610,136594800,1),(610,149817600,2),(610,168130800,1),(610,181353600,2),(610,199753200,1),(610,212976000,2),(610,231289200,1),(610,244512000,2),(610,262825200,1),(610,276048000,2),(610,294361200,1),(610,307584000,2),(610,325983600,1),(610,339206400,2),(610,357519600,1),(610,370742400,2),(610,396399600,1),(610,402278400,2),(610,426812400,1),(610,433814400,2),(610,452214000,1),(610,465436800,2),(610,483750000,1),(610,496972800,2),(610,515286000,1),(610,528508800,2),(610,546822000,1),(610,560044800,2),(610,578444400,1),(610,591667200,2),(610,610412400,1),(610,623203200,2),(610,641516400,1),(610,654739200,2),(610,673052400,1),(610,686275200,2),(610,704674800,1),(610,717897600,2),(610,736210800,1),(610,749433600,2),(610,767746800,1),(610,780969600,2),(610,799020000,3),(610,812322000,2),(610,830469600,3),(610,843771600,2),(610,861919200,3),(610,875221200,2),(610,893368800,3),(610,906670800,2),(610,925423200,3),(610,938725200,2),(610,956872800,3),(610,970174800,2),(610,988322400,3),(610,1001624400,2),(610,1019772000,3),(610,1033074000,2),(610,1051221600,3),(610,1064523600,2),(610,1083276000,3),(610,1096578000,2),(610,1114725600,3),(610,1128027600,2),(610,1146175200,3),(610,1158872400,2),(610,1177624800,3),(610,1189112400,2),(610,1209074400,3),(610,1219957200,2),(610,1240524000,3),(610,1250802000,2),(610,1272578400,3),(610,1281474000,2),(610,1284069600,1),(610,1285880400,2),(610,1400191200,1),(610,1403816400,2),(610,1406844000,1),(610,1411678800,2),(611,-1773012580,2),(611,-956361600,1),(611,-950490000,2),(611,-942019200,1),(611,-761187600,2),(611,-617241600,1),(611,-605149200,2),(611,-81432000,1),(611,-71110800,2),(611,141264000,1),(611,147222000,2),(611,199756800,1),(611,207702000,2),(611,231292800,1),(611,244249200,2),(611,265507200,1),(611,271033200,2),(611,448243200,3),(611,504918000,2),(611,1212278400,1),(611,1220223600,2),(611,1243814400,1),(611,1250809200,2),(611,1272758400,1),(611,1281222000,2),(611,1301788800,1),(611,1312066800,2),(611,1335664800,1),(611,1342749600,2),(611,1345428000,1),(611,1348970400,2),(611,1367114400,1),(611,1373162400,2),(611,1376100000,1),(611,1382839200,2),(611,1396144800,1),(611,1403920800,2),(611,1406944800,1),(611,1414288800,2),(611,1427594400,1),(611,1434247200,2),(611,1437271200,1),(611,1445738400,2),(611,1459044000,1),(611,1465092000,2),(611,1468116000,1),(611,1477792800,2),(611,1490493600,1),(611,1495332000,2),(611,1498960800,1),(611,1509242400,2),(611,1521943200,1),(611,1526176800,2),(611,1529200800,1),(611,1540692000,3),(611,1557021600,4),(611,1560045600,3),(611,1587261600,4),(611,1590890400,3),(611,1618106400,4),(611,1621130400,3),(611,1648346400,4),(611,1651975200,3),(611,1679191200,4),(611,1682820000,3),(611,1710036000,4),(611,1713060000,3),(611,1740276000,4),(611,1743904800,3),(611,1771120800,4),(611,1774144800,3),(611,1801965600,4),(611,1804989600,3),(611,1832205600,4),(611,1835834400,3),(611,1863050400,4),(611,1866074400,3),(611,1893290400,4),(611,1896919200,3),(611,1924135200,4),(611,1927764000,3),(611,1954980000,4),(611,1958004000,3),(611,1985220000,4),(611,1988848800,3),(611,2016064800,4),(611,2019088800,3),(611,2046304800,4),(611,2049933600,3),(611,2077149600,4),(611,2080778400,3),(611,2107994400,4),(611,2111018400,3),(611,2138234400,4),(611,2141863200,3),(612,-2147483648,1),(612,-1630112400,2),(612,-1616810400,1),(612,-1442451600,2),(612,-1427673600,3),(612,-1379293200,2),(612,-1364774400,3),(612,-1348448400,2),(612,-1333324800,3),(612,-1316390400,2),(612,-1301270400,3),(612,-81432000,2),(612,-71110800,1),(612,141264000,2),(612,147222000,1),(612,199756800,2),(612,207702000,1),(612,231292800,2),(612,244249200,1),(612,265507200,2),(612,271033200,1),(612,448243200,4),(612,512528400,5),(612,528253200,6),(612,543978000,5),(612,559702800,6),(612,575427600,5),(612,591152400,6),(612,606877200,5),(612,622602000,6),(612,638326800,5),(612,654656400,6),(612,670381200,5),(612,686106000,6),(612,701830800,5),(612,717555600,6),(612,733280400,5),(612,749005200,6),(612,764730000,5),(612,780454800,6),(612,796179600,5),(612,811904400,6),(612,828234000,5),(612,846378000,6),(612,859683600,5),(612,877827600,6),(612,891133200,5),(612,909277200,6),(612,922582800,5),(612,941331600,6),(612,954032400,5),(612,972781200,6),(612,985482000,5),(612,1004230800,6),(612,1017536400,5),(612,1035680400,6),(612,1048986000,5),(612,1067130000,6),(612,1080435600,5),(612,1099184400,6),(612,1111885200,5),(612,1130634000,6),(612,1143334800,5),(612,1162083600,6),(612,1174784400,5),(612,1193533200,6),(612,1206838800,5),(612,1224982800,6),(612,1238288400,5),(612,1256432400,6),(612,1269738000,5),(612,1288486800,6),(612,1301187600,5),(612,1319936400,6),(612,1332637200,5),(612,1351386000,6),(612,1364691600,5),(612,1382835600,6),(612,1396141200,5),(612,1414285200,6),(612,1427590800,5),(612,1445734800,6),(612,1459040400,5),(612,1477789200,6),(612,1490490000,5),(612,1509238800,6),(612,1521939600,5),(612,1540688400,6),(612,1553994000,5),(612,1572138000,6),(612,1585443600,5),(612,1603587600,6),(612,1616893200,5),(612,1635642000,6),(612,1648342800,5),(612,1667091600,6),(612,1679792400,5),(612,1698541200,6),(612,1711846800,5),(612,1729990800,6),(612,1743296400,5),(612,1761440400,6),(612,1774746000,5),(612,1792890000,6),(612,1806195600,5),(612,1824944400,6),(612,1837645200,5),(612,1856394000,6),(612,1869094800,5),(612,1887843600,6),(612,1901149200,5),(612,1919293200,6),(612,1932598800,5),(612,1950742800,6),(612,1964048400,5),(612,1982797200,6),(612,1995498000,5),(612,2014246800,6),(612,2026947600,5),(612,2045696400,6),(612,2058397200,5),(612,2077146000,6),(612,2090451600,5),(612,2108595600,6),(612,2121901200,5),(612,2140045200,6),(613,-1830383032,1),(614,-1830383032,1),(615,-1946168836,1),(615,-1309746600,2),(615,-1261969200,1),(615,-1041388200,3),(615,-865305900,2),(616,-1946168836,1),(616,-1309746600,2),(616,-1261969200,1),(616,-1041388200,3),(616,-865305900,2),(617,-2035584815,1),(617,-1940889600,0),(617,-1767226415,2),(617,-1588465800,3),(618,-1136070432,1),(618,198291600,3),(618,199756800,2),(618,207702000,3),(618,231292800,2),(618,244249200,3),(618,265507200,2),(618,271033200,3),(618,1212278400,2),(618,1220223600,3),(618,1243814400,2),(618,1250809200,3),(618,1272758400,2),(618,1281222000,3),(618,1301788800,2),(618,1312066800,3),(618,1335664800,2),(618,1342749600,3),(618,1345428000,2),(618,1348970400,3),(618,1367114400,2),(618,1373162400,3),(618,1376100000,2),(618,1382839200,3),(618,1396144800,2),(618,1403920800,3),(618,1406944800,2),(618,1414288800,3),(618,1427594400,2),(618,1434247200,3),(618,1437271200,2),(618,1445738400,3),(618,1459044000,2),(618,1465092000,3),(618,1468116000,2),(618,1477792800,3),(618,1490493600,2),(618,1495332000,3),(618,1498960800,2),(618,1509242400,3),(618,1521943200,2),(618,1526176800,3),(618,1529200800,2),(618,1540692000,5),(618,1557021600,4),(618,1560045600,5),(618,1587261600,4),(618,1590890400,5),(618,1618106400,4),(618,1621130400,5),(618,1648346400,4),(618,1651975200,5),(618,1679191200,4),(618,1682820000,5),(618,1710036000,4),(618,1713060000,5),(618,1740276000,4),(618,1743904800,5),(618,1771120800,4),(618,1774144800,5),(618,1801965600,4),(618,1804989600,5),(618,1832205600,4),(618,1835834400,5),(618,1863050400,4),(618,1866074400,5),(618,1893290400,4),(618,1896919200,5),(618,1924135200,4),(618,1927764000,5),(618,1954980000,4),(618,1958004000,5),(618,1985220000,4),(618,1988848800,5),(618,2016064800,4),(618,2019088800,5),(618,2046304800,4),(618,2049933600,5),(618,2077149600,4),(618,2080778400,5),(618,2107994400,4),(618,2111018400,5),(618,2138234400,4),(618,2141863200,5),(619,-1830383032,1),(620,-2109291020,1),(621,-2109291020,1),(622,-2147483648,1),(622,-2109288600,3),(622,-860976000,2),(622,-845254800,3),(622,-829526400,2),(622,-813805200,3),(623,-1230775588,2),(623,10360800,1),(623,24786000,2),(623,41810400,1),(623,56322000,2),(623,73432800,1),(623,87944400,2),(623,104882400,1),(623,119480400,2),(623,136332000,1),(623,151016400,2),(623,167781600,1),(623,182552400,2),(623,199231200,1),(623,214174800,2),(623,230680800,1),(623,245710800,2),(623,262735200,1),(623,277246800,2),(623,294184800,1),(623,308782800,2),(623,325634400,1),(623,340405200,2),(623,357084000,1),(623,371941200,2),(623,388533600,1),(623,403477200,2),(623,419983200,1),(623,435013200,2),(623,452037600,1),(623,466635600,2),(623,483487200,1),(623,498171600,2),(623,947930400,3),(623,1612126800,2),(624,-1946168836,1),(624,-1309746600,2),(624,-1261969200,1),(624,-1041388200,3),(624,-865305900,2),(625,-1230775808,2),(625,10360800,1),(625,24786000,2),(625,41810400,1),(625,56322000,2),(625,73432800,1),(625,87944400,2),(625,104882400,1),(625,119480400,2),(625,136332000,1),(625,151016400,2),(625,167781600,1),(625,182552400,2),(625,199231200,1),(625,214174800,2),(625,230680800,1),(625,245710800,2),(625,262735200,1),(625,277246800,2),(625,294184800,1),(625,308782800,2),(625,325634400,1),(625,340405200,2),(625,357084000,1),(625,371941200,2),(625,388533600,1),(625,403477200,2),(625,419983200,1),(625,435013200,2),(625,452037600,1),(625,466635600,2),(625,483487200,1),(625,498171600,2),(625,947930400,3),(625,1509483600,2),(626,-2109291020,1),(627,-2035584815,1),(627,-1940889600,0),(627,-1767226415,2),(627,-1588465800,3),(628,-2035584815,1),(628,-1940889600,0),(628,-1767226415,2),(628,-1588465800,3),(629,-2035584815,1),(629,-1940889600,0),(629,-1767226415,2),(629,-1588465800,3),(630,-1830383032,1),(631,-2035584815,1),(631,-1940889600,0),(631,-1767226415,2),(631,-1588465800,3),(632,-2109291020,1),(633,-2109291020,1),(634,-2035584815,1),(634,-1940889600,0),(634,-1767226415,2),(634,-1588465800,3),(635,-2109291020,1),(636,-2147483648,1),(636,-2109288600,3),(636,-860976000,2),(636,-845254800,3),(636,-829526400,2),(636,-813805200,3),(637,-2147483648,1),(637,-2109288600,3),(637,-860976000,2),(637,-845254800,3),(637,-829526400,2),(637,-813805200,3),(638,-1946168836,1),(638,-1309746600,2),(638,-1261969200,1),(638,-1041388200,3),(638,-865305900,2),(639,-2147483648,1),(639,-1604359012,2),(639,63593070,3),(640,-1946168836,1),(640,-1309746600,2),(640,-1261969200,1),(640,-1041388200,3),(640,-865305900,2),(641,-1830387612,1),(641,308703600,2),(641,321314400,1),(642,-2035584815,1),(642,-1940889600,0),(642,-1767226415,2),(642,-1588465800,3),(643,-1830383032,1),(644,-1830383032,1),(645,-2035584815,1),(645,-1940889600,0),(645,-1767226415,2),(645,-1588465800,3),(646,-2147483648,1),(646,-1830384000,2),(646,1514768400,3),(646,1546304400,4),(647,-1830383032,1),(648,-1577926364,2),(648,-574902000,1),(648,-568087200,2),(648,-512175600,1),(648,-504928800,2),(648,-449888400,1),(648,-441856800,2),(648,-347158800,3),(648,378684000,2),(648,386463600,1),(648,402271200,2),(648,417999600,1),(648,433807200,2),(648,449622000,1),(648,465429600,2),(648,481590000,1),(648,496965600,2),(648,512953200,1),(648,528674400,2),(648,544230000,1),(648,560037600,2),(648,575852400,1),(648,591660000,2),(648,607388400,1),(648,623196000,2),(648,641775600,3),(648,844034400,2),(648,860108400,1),(648,875916000,3),(648,1352505600,2),(648,1364515200,1),(648,1382659200,3),(649,-2147483648,1),(649,-1855958961,4),(649,-969242400,2),(649,-950493600,3),(649,-941940000,2),(649,-891136800,4),(649,-877827600,5),(649,-857257200,4),(649,-844556400,5),(649,-842918400,4),(649,-842223600,5),(649,-828230400,4),(649,-812502000,5),(649,-796269600,4),(649,-781052400,5),(649,-766634400,4),(649,231202800,2),(649,243903600,3),(649,262825200,2),(649,276044400,3),(649,581122800,2),(649,591145200,3),(649,606870000,2),(649,622594800,3),(649,641516400,2),(649,654649200,3),(649,1114902000,2),(649,1128038400,3),(649,1143334800,2),(649,1162083600,3),(649,1174784400,2),(649,1193533200,3),(649,1206838800,2),(649,1224982800,3),(650,-2147483648,1),(650,-2109288600,2),(650,-860976000,3),(650,-845254800,2),(650,637970400,5),(650,764200800,4),(650,778640400,5),(650,796780800,4),(650,810090000,5),(650,828835200,4),(650,841539600,5),(650,860284800,4),(650,873594000,5),(650,891734400,4),(650,905043600,5),(650,923184000,4),(650,936493200,5),(650,954633600,4),(650,967942800,5),(650,986083200,4),(650,999392400,5),(650,1018137600,4),(650,1030842000,5),(650,1049587200,4),(650,1062896400,5),(650,1081036800,4),(650,1094346000,5),(650,1112486400,4),(650,1125795600,5),(650,1143936000,4),(650,1157245200,5),(650,1175385600,4),(650,1188694800,5),(650,1207440000,4),(650,1220749200,5),(650,1238889600,4),(650,1252198800,5),(650,1270339200,4),(650,1283648400,5),(650,1301788800,4),(650,1315098000,5),(650,1333238400,4),(650,1346547600,5),(650,1365292800,4),(650,1377997200,5),(650,1396742400,4),(650,1410051600,5),(650,1428192000,4),(650,1441501200,5),(650,1459641600,4),(650,1472950800,5),(650,1491091200,4),(650,1504400400,5),(651,-2147483648,1),(651,-880196400,2),(651,-769395600,3),(651,-765374400,1),(651,-86878800,4),(651,-21466800,5),(651,-5745600,4),(651,9982800,5),(651,25704000,4),(651,41432400,5),(651,57758400,4),(651,73486800,5),(651,89208000,4),(651,104936400,5),(651,120657600,4),(651,126709200,5),(651,152107200,4),(651,162392400,5),(651,183556800,4),(651,199285200,5),(651,215611200,4),(651,230734800,5),(651,247060800,4),(651,262789200,5),(651,278510400,4),(651,294238800,5),(651,309960000,4),(651,325688400,5),(651,341409600,4),(651,357138000,5),(651,372859200,4),(651,388587600,5),(651,404913600,4),(651,420037200,5),(651,436363200,6),(651,439034400,8),(651,452088000,7),(651,467809200,8),(651,483537600,7),(651,499258800,8),(651,514987200,7),(651,530708400,8),(651,544622400,7),(651,562158000,8),(651,576072000,7),(651,594212400,8),(651,607521600,7),(651,625662000,8),(651,638971200,7),(651,657111600,8),(651,671025600,7),(651,688561200,8),(651,702475200,7),(651,720010800,8),(651,733924800,7),(651,752065200,8),(651,765374400,7),(651,783514800,8),(651,796824000,7),(651,814964400,8),(651,828878400,7),(651,846414000,8),(651,860328000,7),(651,877863600,8),(651,891777600,7),(651,909313200,8),(651,923227200,7),(651,941367600,8),(651,954676800,7),(651,972817200,8),(651,986126400,7),(651,1004266800,8),(651,1018180800,7),(651,1035716400,8),(651,1049630400,7),(651,1067166000,8),(651,1081080000,7),(651,1099220400,8),(651,1112529600,7),(651,1130670000,8),(651,1143979200,7),(651,1162119600,8),(651,1173614400,7),(651,1194174000,8),(651,1205064000,7),(651,1225623600,8),(651,1236513600,7),(651,1257073200,8),(651,1268568000,7),(651,1289127600,8),(651,1300017600,7),(651,1320577200,8),(651,1331467200,7),(651,1352026800,8),(651,1362916800,7),(651,1383476400,8),(651,1394366400,7),(651,1414926000,8),(651,1425816000,7),(651,1446375600,8),(651,1457870400,7),(651,1478430000,8),(651,1489320000,7),(651,1509879600,8),(651,1520769600,7),(651,1541329200,8),(651,1552219200,7),(651,1572778800,8),(651,1583668800,7),(651,1604228400,8),(651,1615723200,7),(651,1636282800,8),(651,1647172800,7),(651,1667732400,8),(651,1678622400,7),(651,1699182000,8),(651,1710072000,7),(651,1730631600,8),(651,1741521600,7),(651,1762081200,8),(651,1772971200,7),(651,1793530800,8),(651,1805025600,7),(651,1825585200,8),(651,1836475200,7),(651,1857034800,8),(651,1867924800,7),(651,1888484400,8),(651,1899374400,7),(651,1919934000,8),(651,1930824000,7),(651,1951383600,8),(651,1962878400,7),(651,1983438000,8),(651,1994328000,7),(651,2014887600,8),(651,2025777600,7),(651,2046337200,8),(651,2057227200,7),(651,2077786800,8),(651,2088676800,7),(651,2109236400,8),(651,2120126400,7),(651,2140686000,8),(652,-2147483648,1),(652,-880200000,2),(652,-769395600,3),(652,-765378000,1),(652,-86882400,4),(652,-21470400,5),(652,-5749200,4),(652,9979200,5),(652,25700400,4),(652,41428800,5),(652,57754800,4),(652,73483200,5),(652,89204400,4),(652,104932800,5),(652,120654000,4),(652,126705600,5),(652,152103600,4),(652,162388800,5),(652,183553200,4),(652,199281600,5),(652,215607600,4),(652,230731200,5),(652,247057200,4),(652,262785600,5),(652,278506800,4),(652,294235200,5),(652,309956400,4),(652,325684800,5),(652,341406000,4),(652,357134400,5),(652,372855600,4),(652,388584000,5),(652,404910000,4),(652,420033600,5),(652,436359600,6),(652,439030800,8),(652,452084400,7),(652,467805600,8),(652,483534000,7),(652,499255200,8),(652,514983600,7),(652,530704800,8),(652,544618800,7),(652,562154400,8),(652,576068400,7),(652,594208800,8),(652,607518000,7),(652,625658400,8),(652,638967600,7),(652,657108000,8),(652,671022000,7),(652,688557600,8),(652,702471600,7),(652,720007200,8),(652,733921200,7),(652,752061600,8),(652,765370800,7),(652,783511200,8),(652,796820400,7),(652,814960800,8),(652,828874800,7),(652,846410400,8),(652,860324400,7),(652,877860000,8),(652,891774000,7),(652,909309600,8),(652,923223600,7),(652,941364000,8),(652,954673200,7),(652,972813600,8),(652,986122800,7),(652,1004263200,8),(652,1018177200,7),(652,1035712800,8),(652,1049626800,7),(652,1067162400,8),(652,1081076400,7),(652,1099216800,8),(652,1112526000,7),(652,1130666400,8),(652,1143975600,7),(652,1162116000,8),(652,1173610800,7),(652,1194170400,8),(652,1205060400,7),(652,1225620000,8),(652,1236510000,7),(652,1257069600,8),(652,1268564400,7),(652,1289124000,8),(652,1300014000,7),(652,1320573600,8),(652,1331463600,7),(652,1352023200,8),(652,1362913200,7),(652,1383472800,8),(652,1394362800,7),(652,1414922400,8),(652,1425812400,7),(652,1446372000,8),(652,1457866800,7),(652,1478426400,8),(652,1489316400,7),(652,1509876000,8),(652,1520766000,7),(652,1541325600,8),(652,1552215600,7),(652,1572775200,8),(652,1583665200,7),(652,1604224800,8),(652,1615719600,7),(652,1636279200,8),(652,1647169200,7),(652,1667728800,8),(652,1678618800,7),(652,1699178400,8),(652,1710068400,7),(652,1730628000,8),(652,1741518000,7),(652,1762077600,8),(652,1772967600,7),(652,1793527200,8),(652,1805022000,7),(652,1825581600,8),(652,1836471600,7),(652,1857031200,8),(652,1867921200,7),(652,1888480800,8),(652,1899370800,7),(652,1919930400,8),(652,1930820400,7),(652,1951380000,8),(652,1962874800,7),(652,1983434400,8),(652,1994324400,7),(652,2014884000,8),(652,2025774000,7),(652,2046333600,8),(652,2057223600,7),(652,2077783200,8),(652,2088673200,7),(652,2109232800,8),(652,2120122800,7),(652,2140682400,8),(653,-2147483648,1),(653,-873057600,3),(653,-769395600,2),(653,-765399600,1),(654,-2147483648,1),(654,-873057600,3),(654,-769395600,2),(654,-765399600,1),(655,-1767214032,2),(655,-1206957600,1),(655,-1191362400,2),(655,-1175374800,1),(655,-1159826400,2),(655,-633819600,1),(655,-622069200,2),(655,-602283600,1),(655,-591832800,2),(655,-570747600,1),(655,-560210400,2),(655,-539125200,1),(655,-531352800,2),(655,-191365200,1),(655,-184197600,2),(655,-155163600,1),(655,-150069600,2),(655,-128898000,1),(655,-121125600,2),(655,-99954000,1),(655,-89589600,2),(655,-68418000,1),(655,-57967200,2),(655,499748400,1),(655,511236000,2),(655,530593200,1),(655,540266400,2),(655,562129200,1),(655,571197600,2),(655,592974000,1),(655,602042400,2),(655,624423600,1),(655,634701600,2),(655,813726000,1),(655,824004000,2),(655,844570800,1),(655,856058400,2),(655,876106800,1),(655,888717600,2),(655,908074800,1),(655,919562400,2),(655,938919600,1),(655,951616800,2),(655,970974000,1),(655,982461600,2),(655,1003028400,1),(655,1013911200,2),(655,1036292400,1),(655,1045360800,2),(655,1350788400,1),(655,1361066400,2),(655,2147483647,2),(656,-2147483648,1),(656,-1567453392,2),(656,-1233432000,3),(656,-1222981200,2),(656,-1205956800,3),(656,-1194037200,2),(656,-1172865600,3),(656,-1162501200,2),(656,-1141329600,3),(656,-1130965200,2),(656,-1109793600,3),(656,-1099429200,2),(656,-1078257600,3),(656,-1067806800,2),(656,-1046635200,3),(656,-1036270800,2),(656,-1015099200,3),(656,-1004734800,2),(656,-983563200,3),(656,-973198800,2),(656,-952027200,3),(656,-941576400,2),(656,-931032000,3),(656,-900882000,2),(656,-890337600,3),(656,-833749200,2),(656,-827265600,3),(656,-752274000,2),(656,-733780800,3),(656,-197326800,2),(656,-190843200,3),(656,-184194000,2),(656,-164491200,3),(656,-152658000,2),(656,-132955200,3),(656,-121122000,2),(656,-101419200,3),(656,-86821200,2),(656,-71092800,3),(656,-54766800,2),(656,-39038400,3),(656,-23317200,2),(656,-7588800,5),(656,128142000,4),(656,136605600,5),(656,596948400,4),(656,605066400,5),(656,624423600,4),(656,636516000,5),(656,656478000,4),(656,667965600,5),(656,687927600,4),(656,699415200,5),(656,719377200,4),(656,731469600,5),(656,938919600,3),(656,952052400,5),(656,1198983600,4),(656,1205632800,5),(656,1224385200,4),(656,1237082400,5),(656,2147483647,5),(657,-2147483648,1),(657,-1567453392,2),(657,-1233432000,3),(657,-1222981200,2),(657,-1205956800,3),(657,-1194037200,2),(657,-1172865600,3),(657,-1162501200,2),(657,-1141329600,3),(657,-1130965200,2),(657,-1109793600,3),(657,-1099429200,2),(657,-1078257600,3),(657,-1067806800,2),(657,-1046635200,3),(657,-1036270800,2),(657,-1015099200,3),(657,-1004734800,2),(657,-983563200,3),(657,-973198800,2),(657,-952027200,3),(657,-941576400,2),(657,-931032000,3),(657,-900882000,2),(657,-890337600,3),(657,-833749200,2),(657,-827265600,3),(657,-752274000,2),(657,-733780800,3),(657,-197326800,2),(657,-190843200,3),(657,-184194000,2),(657,-164491200,3),(657,-152658000,2),(657,-132955200,3),(657,-121122000,2),(657,-101419200,3),(657,-86821200,2),(657,-71092800,3),(657,-54766800,2),(657,-39038400,3),(657,-23317200,2),(657,-7588800,5),(657,128142000,4),(657,136605600,5),(657,596948400,4),(657,605066400,5),(657,624423600,4),(657,636516000,5),(657,656478000,4),(657,667965600,2),(657,687931200,4),(657,699415200,5),(657,719377200,4),(657,731469600,5),(657,938919600,3),(657,952052400,5),(657,1086058800,2),(657,1087704000,5),(657,1198983600,4),(657,1205632800,5),(657,2147483647,5),(658,-2147483648,1),(658,-1567453392,2),(658,-1233432000,3),(658,-1222981200,2),(658,-1205956800,3),(658,-1194037200,2),(658,-1172865600,3),(658,-1162501200,2),(658,-1141329600,3),(658,-1130965200,2),(658,-1109793600,3),(658,-1099429200,2),(658,-1078257600,3),(658,-1067806800,2),(658,-1046635200,3),(658,-1036270800,2),(658,-1015099200,3),(658,-1004734800,2),(658,-983563200,3),(658,-973198800,2),(658,-952027200,3),(658,-941576400,2),(658,-931032000,3),(658,-900882000,2),(658,-890337600,3),(658,-833749200,2),(658,-827265600,3),(658,-752274000,2),(658,-733780800,3),(658,-197326800,2),(658,-190843200,3),(658,-184194000,2),(658,-164491200,3),(658,-152658000,2),(658,-132955200,3),(658,-121122000,2),(658,-101419200,3),(658,-86821200,2),(658,-71092800,3),(658,-54766800,2),(658,-39038400,3),(658,-23317200,2),(658,-7588800,5),(658,128142000,4),(658,136605600,5),(658,596948400,4),(658,605066400,5),(658,624423600,4),(658,636516000,5),(658,656478000,4),(658,667965600,2),(658,687931200,4),(658,699415200,5),(658,719377200,4),(658,731469600,5),(658,938919600,3),(658,952052400,5),(658,1086058800,2),(658,1087704000,5),(658,1198983600,4),(658,1205632800,5),(658,2147483647,5),(659,-2147483648,1),(659,-1567453392,2),(659,-1233432000,3),(659,-1222981200,2),(659,-1205956800,3),(659,-1194037200,2),(659,-1172865600,3),(659,-1162501200,2),(659,-1141329600,3),(659,-1130965200,2),(659,-1109793600,3),(659,-1099429200,2),(659,-1078257600,3),(659,-1067806800,2),(659,-1046635200,3),(659,-1036270800,2),(659,-1015099200,3),(659,-1004734800,2),(659,-983563200,3),(659,-973198800,2),(659,-952027200,3),(659,-941576400,2),(659,-931032000,3),(659,-900882000,2),(659,-890337600,3),(659,-833749200,2),(659,-827265600,3),(659,-752274000,2),(659,-733780800,3),(659,-197326800,2),(659,-190843200,3),(659,-184194000,2),(659,-164491200,3),(659,-152658000,2),(659,-132955200,3),(659,-121122000,2),(659,-101419200,3),(659,-86821200,2),(659,-71092800,3),(659,-54766800,2),(659,-39038400,3),(659,-23317200,2),(659,-7588800,5),(659,128142000,4),(659,136605600,5),(659,596948400,4),(659,605066400,5),(659,624423600,4),(659,636516000,5),(659,656478000,4),(659,667965600,2),(659,687931200,4),(659,699415200,5),(659,719377200,4),(659,731469600,5),(659,938919600,3),(659,952052400,5),(659,1198983600,4),(659,1205632800,5),(659,1224385200,4),(659,1237082400,5),(659,2147483647,5),(660,-2147483648,1),(660,-1567453392,2),(660,-1233432000,3),(660,-1222981200,2),(660,-1205956800,3),(660,-1194037200,2),(660,-1172865600,3),(660,-1162501200,2),(660,-1141329600,3),(660,-1130965200,2),(660,-1109793600,3),(660,-1099429200,2),(660,-1078257600,3),(660,-1067806800,2),(660,-1046635200,3),(660,-1036270800,2),(660,-1015099200,3),(660,-1004734800,2),(660,-983563200,3),(660,-973198800,2),(660,-952027200,3),(660,-941576400,2),(660,-931032000,3),(660,-900882000,2),(660,-890337600,3),(660,-833749200,2),(660,-827265600,3),(660,-752274000,2),(660,-733780800,3),(660,-197326800,2),(660,-190843200,3),(660,-184194000,2),(660,-164491200,3),(660,-152658000,2),(660,-132955200,3),(660,-121122000,2),(660,-101419200,3),(660,-86821200,2),(660,-71092800,3),(660,-54766800,2),(660,-39038400,3),(660,-23317200,2),(660,-7588800,5),(660,128142000,4),(660,136605600,5),(660,596948400,4),(660,605066400,5),(660,624423600,4),(660,636516000,2),(660,657086400,3),(660,669178800,2),(660,686721600,4),(660,699415200,5),(660,719377200,4),(660,731469600,5),(660,938919600,3),(660,952052400,5),(660,1198983600,4),(660,1205632800,5),(660,2147483647,5),(661,-2147483648,1),(661,-1567453392,2),(661,-1233432000,3),(661,-1222981200,2),(661,-1205956800,3),(661,-1194037200,2),(661,-1172865600,3),(661,-1162501200,2),(661,-1141329600,3),(661,-1130965200,2),(661,-1109793600,3),(661,-1099429200,2),(661,-1078257600,3),(661,-1067806800,2),(661,-1046635200,3),(661,-1036270800,2),(661,-1015099200,3),(661,-1004734800,2),(661,-983563200,3),(661,-973198800,2),(661,-952027200,3),(661,-941576400,2),(661,-931032000,3),(661,-900882000,2),(661,-890337600,3),(661,-833749200,2),(661,-827265600,3),(661,-752274000,2),(661,-733780800,3),(661,-197326800,2),(661,-190843200,3),(661,-184194000,2),(661,-164491200,3),(661,-152658000,2),(661,-132955200,3),(661,-121122000,2),(661,-101419200,3),(661,-86821200,2),(661,-71092800,3),(661,-54766800,2),(661,-39038400,3),(661,-23317200,2),(661,-7588800,5),(661,128142000,4),(661,136605600,5),(661,596948400,4),(661,605066400,5),(661,624423600,4),(661,636516000,5),(661,656478000,4),(661,667792800,2),(661,673588800,5),(661,687927600,4),(661,699415200,5),(661,719377200,4),(661,731469600,5),(661,938919600,3),(661,952052400,5),(661,1086058800,2),(661,1087704000,5),(661,1198983600,4),(661,1205632800,5),(661,2147483647,5),(662,-2147483648,1),(662,-1567453392,2),(662,-1233432000,3),(662,-1222981200,2),(662,-1205956800,3),(662,-1194037200,2),(662,-1172865600,3),(662,-1162501200,2),(662,-1141329600,3),(662,-1130965200,2),(662,-1109793600,3),(662,-1099429200,2),(662,-1078257600,3),(662,-1067806800,2),(662,-1046635200,3),(662,-1036270800,2),(662,-1015099200,3),(662,-1004734800,2),(662,-983563200,3),(662,-973198800,2),(662,-952027200,3),(662,-941576400,2),(662,-931032000,3),(662,-900882000,2),(662,-890337600,3),(662,-833749200,2),(662,-827265600,3),(662,-752274000,2),(662,-733780800,3),(662,-197326800,2),(662,-190843200,3),(662,-184194000,2),(662,-164491200,3),(662,-152658000,2),(662,-132955200,3),(662,-121122000,2),(662,-101419200,3),(662,-86821200,2),(662,-71092800,3),(662,-54766800,2),(662,-39038400,3),(662,-23317200,2),(662,-7588800,5),(662,128142000,4),(662,136605600,5),(662,596948400,4),(662,605066400,5),(662,624423600,4),(662,636516000,2),(662,655963200,3),(662,667796400,2),(662,687499200,3),(662,699418800,2),(662,719380800,4),(662,731469600,5),(662,938919600,3),(662,952052400,5),(662,1085281200,2),(662,1096171200,5),(662,1198983600,4),(662,1205632800,5),(662,2147483647,5),(663,-2147483648,1),(663,-1567453392,2),(663,-1233432000,3),(663,-1222981200,2),(663,-1205956800,3),(663,-1194037200,2),(663,-1172865600,3),(663,-1162501200,2),(663,-1141329600,3),(663,-1130965200,2),(663,-1109793600,3),(663,-1099429200,2),(663,-1078257600,3),(663,-1067806800,2),(663,-1046635200,3),(663,-1036270800,2),(663,-1015099200,3),(663,-1004734800,2),(663,-983563200,3),(663,-973198800,2),(663,-952027200,3),(663,-941576400,2),(663,-931032000,3),(663,-900882000,2),(663,-890337600,3),(663,-833749200,2),(663,-827265600,3),(663,-752274000,2),(663,-733780800,3),(663,-197326800,2),(663,-190843200,3),(663,-184194000,2),(663,-164491200,3),(663,-152658000,2),(663,-132955200,3),(663,-121122000,2),(663,-101419200,3),(663,-86821200,2),(663,-71092800,3),(663,-54766800,2),(663,-39038400,3),(663,-23317200,2),(663,-7588800,5),(663,128142000,4),(663,136605600,5),(663,596948400,4),(663,605066400,5),(663,624423600,4),(663,636516000,5),(663,656478000,4),(663,667965600,5),(663,687927600,4),(663,699415200,5),(663,719377200,4),(663,731469600,5),(663,938919600,3),(663,952052400,5),(663,1086058800,2),(663,1087704000,5),(663,1198983600,4),(663,1205632800,5),(663,2147483647,5),(664,-2147483648,1),(664,-1567453392,2),(664,-1233432000,3),(664,-1222981200,2),(664,-1205956800,3),(664,-1194037200,2),(664,-1172865600,3),(664,-1162501200,2),(664,-1141329600,3),(664,-1130965200,2),(664,-1109793600,3),(664,-1099429200,2),(664,-1078257600,3),(664,-1067806800,2),(664,-1046635200,3),(664,-1036270800,2),(664,-1015099200,3),(664,-1004734800,2),(664,-983563200,3),(664,-973198800,2),(664,-952027200,3),(664,-941576400,2),(664,-931032000,3),(664,-900882000,2),(664,-890337600,3),(664,-833749200,2),(664,-827265600,3),(664,-752274000,2),(664,-733780800,3),(664,-197326800,2),(664,-190843200,3),(664,-184194000,2),(664,-164491200,3),(664,-152658000,2),(664,-132955200,3),(664,-121122000,2),(664,-101419200,3),(664,-86821200,2),(664,-71092800,3),(664,-54766800,2),(664,-39038400,3),(664,-23317200,2),(664,-7588800,5),(664,128142000,4),(664,136605600,5),(664,596948400,4),(664,605066400,5),(664,624423600,4),(664,636516000,5),(664,656478000,4),(664,667965600,2),(664,687931200,4),(664,699415200,5),(664,719377200,4),(664,731469600,5),(664,938919600,3),(664,952052400,5),(664,1198983600,4),(664,1205632800,5),(664,2147483647,5),(665,-2147483648,1),(665,-1567453392,2),(665,-1233432000,3),(665,-1222981200,2),(665,-1205956800,3),(665,-1194037200,2),(665,-1172865600,3),(665,-1162501200,2),(665,-1141329600,3),(665,-1130965200,2),(665,-1109793600,3),(665,-1099429200,2),(665,-1078257600,3),(665,-1067806800,2),(665,-1046635200,3),(665,-1036270800,2),(665,-1015099200,3),(665,-1004734800,2),(665,-983563200,3),(665,-973198800,2),(665,-952027200,3),(665,-941576400,2),(665,-931032000,3),(665,-900882000,2),(665,-890337600,3),(665,-833749200,2),(665,-827265600,3),(665,-752274000,2),(665,-733780800,3),(665,-197326800,2),(665,-190843200,3),(665,-184194000,2),(665,-164491200,3),(665,-152658000,2),(665,-132955200,3),(665,-121122000,2),(665,-101419200,3),(665,-86821200,2),(665,-71092800,3),(665,-54766800,2),(665,-39038400,3),(665,-23317200,2),(665,-7588800,5),(665,128142000,4),(665,136605600,5),(665,596948400,4),(665,605066400,5),(665,624423600,4),(665,636516000,5),(665,656478000,4),(665,667792800,2),(665,673588800,5),(665,687927600,4),(665,699415200,5),(665,719377200,4),(665,731469600,5),(665,938919600,3),(665,952052400,5),(665,1085972400,2),(665,1090728000,5),(665,1198983600,4),(665,1205632800,5),(665,2147483647,5),(666,-2147483648,1),(666,-1567453392,2),(666,-1233432000,3),(666,-1222981200,2),(666,-1205956800,3),(666,-1194037200,2),(666,-1172865600,3),(666,-1162501200,2),(666,-1141329600,3),(666,-1130965200,2),(666,-1109793600,3),(666,-1099429200,2),(666,-1078257600,3),(666,-1067806800,2),(666,-1046635200,3),(666,-1036270800,2),(666,-1015099200,3),(666,-1004734800,2),(666,-983563200,3),(666,-973198800,2),(666,-952027200,3),(666,-941576400,2),(666,-931032000,3),(666,-900882000,2),(666,-890337600,3),(666,-833749200,2),(666,-827265600,3),(666,-752274000,2),(666,-733780800,3),(666,-197326800,2),(666,-190843200,3),(666,-184194000,2),(666,-164491200,3),(666,-152658000,2),(666,-132955200,3),(666,-121122000,2),(666,-101419200,3),(666,-86821200,2),(666,-71092800,3),(666,-54766800,2),(666,-39038400,3),(666,-23317200,2),(666,-7588800,5),(666,128142000,4),(666,136605600,5),(666,596948400,4),(666,605066400,5),(666,624423600,4),(666,637380000,2),(666,655963200,3),(666,667796400,2),(666,675748800,5),(666,938919600,3),(666,952052400,5),(666,1085972400,2),(666,1090728000,5),(666,1198983600,4),(666,1200880800,3),(666,1205031600,2),(666,1223784000,3),(666,1236481200,2),(666,1255233600,5),(666,2147483647,5),(667,-2147483648,1),(667,-1567453392,2),(667,-1233432000,3),(667,-1222981200,2),(667,-1205956800,3),(667,-1194037200,2),(667,-1172865600,3),(667,-1162501200,2),(667,-1141329600,3),(667,-1130965200,2),(667,-1109793600,3),(667,-1099429200,2),(667,-1078257600,3),(667,-1067806800,2),(667,-1046635200,3),(667,-1036270800,2),(667,-1015099200,3),(667,-1004734800,2),(667,-983563200,3),(667,-973198800,2),(667,-952027200,3),(667,-941576400,2),(667,-931032000,3),(667,-900882000,2),(667,-890337600,3),(667,-833749200,2),(667,-827265600,3),(667,-752274000,2),(667,-733780800,3),(667,-197326800,2),(667,-190843200,3),(667,-184194000,2),(667,-164491200,3),(667,-152658000,2),(667,-132955200,3),(667,-121122000,2),(667,-101419200,3),(667,-86821200,2),(667,-71092800,3),(667,-54766800,2),(667,-39038400,3),(667,-23317200,2),(667,-7588800,5),(667,128142000,4),(667,136605600,5),(667,596948400,4),(667,605066400,5),(667,624423600,4),(667,636516000,5),(667,656478000,4),(667,667965600,2),(667,687931200,4),(667,699415200,5),(667,719377200,4),(667,731469600,5),(667,938919600,3),(667,952052400,5),(667,1086058800,2),(667,1087099200,5),(667,1198983600,4),(667,1205632800,5),(667,1224385200,4),(667,1237082400,5),(667,2147483647,5),(668,-2147483648,1),(668,-1567453392,2),(668,-1233432000,3),(668,-1222981200,2),(668,-1205956800,3),(668,-1194037200,2),(668,-1172865600,3),(668,-1162501200,2),(668,-1141329600,3),(668,-1130965200,2),(668,-1109793600,3),(668,-1099429200,2),(668,-1078257600,3),(668,-1067806800,2),(668,-1046635200,3),(668,-1036270800,2),(668,-1015099200,3),(668,-1004734800,2),(668,-983563200,3),(668,-973198800,2),(668,-952027200,3),(668,-941576400,2),(668,-931032000,3),(668,-900882000,2),(668,-890337600,3),(668,-833749200,2),(668,-827265600,3),(668,-752274000,2),(668,-733780800,3),(668,-197326800,2),(668,-190843200,3),(668,-184194000,2),(668,-164491200,3),(668,-152658000,2),(668,-132955200,3),(668,-121122000,2),(668,-101419200,3),(668,-86821200,2),(668,-71092800,3),(668,-54766800,2),(668,-39038400,3),(668,-23317200,2),(668,-7588800,5),(668,128142000,4),(668,136605600,5),(668,596948400,4),(668,605066400,5),(668,624423600,4),(668,636516000,5),(668,656478000,4),(668,667965600,5),(668,687927600,4),(668,699415200,5),(668,719377200,4),(668,731469600,5),(668,938919600,3),(668,952052400,5),(668,1085886000,2),(668,1087704000,5),(668,1198983600,4),(668,1205632800,5),(668,2147483647,5),(669,-2147483648,1),(669,-873057600,3),(669,-769395600,2),(669,-765399600,1),(670,-2147483648,1),(670,-1206389360,2),(670,86760000,3),(670,134017200,2),(670,181368000,4),(670,194497200,2),(670,212990400,4),(670,226033200,2),(670,244526400,4),(670,257569200,2),(670,276062400,4),(670,291783600,2),(670,307598400,4),(670,323406000,2),(670,339220800,4),(670,354942000,2),(670,370756800,4),(670,386478000,2),(670,402292800,4),(670,418014000,2),(670,433828800,4),(670,449636400,2),(670,465451200,4),(670,481172400,2),(670,496987200,4),(670,512708400,2),(670,528523200,4),(670,544244400,2),(670,560059200,4),(670,575866800,2),(670,591681600,4),(670,607402800,2),(670,625032000,4),(670,638938800,2),(670,654753600,4),(670,670474800,2),(670,686721600,4),(670,699418800,2),(670,718257600,4),(670,733546800,2),(670,749448000,4),(670,762318000,2),(670,780984000,4),(670,793767600,2),(670,812520000,4),(670,825649200,2),(670,844574400,4),(670,856666800,2),(670,876024000,4),(670,888721200,2),(670,907473600,4),(670,920775600,2),(670,938923200,4),(670,952225200,2),(670,970372800,4),(670,983674800,2),(670,1002427200,4),(670,1018148400,2),(670,1030852800,4),(670,1049598000,2),(670,1062907200,4),(670,1081047600,2),(670,1097985600,4),(670,1110682800,2),(670,1129435200,4),(670,1142132400,2),(670,1160884800,4),(670,1173582000,2),(670,1192939200,4),(670,1205031600,2),(670,1224388800,4),(670,1236481200,2),(670,1255838400,4),(670,1270954800,2),(670,1286078400,4),(670,1302404400,2),(670,1317528000,4),(670,1333854000,2),(670,1349582400,4),(670,1364094000,2),(670,1381032000,4),(670,1395543600,2),(670,1412481600,4),(670,1426993200,2),(670,1443931200,4),(670,1459047600,2),(670,1475380800,4),(670,1490497200,2),(670,1506830400,4),(670,1521946800,2),(670,1538884800,4),(670,1553396400,2),(670,1570334400,4),(670,1584846000,2),(670,1601784000,4),(670,1616900400,2),(670,1633233600,4),(670,1648350000,2),(670,1664683200,4),(670,1679799600,2),(670,1696132800,4),(670,1711249200,2),(670,1728187200,4),(670,1742698800,2),(670,1759636800,4),(670,1774148400,2),(670,1791086400,4),(670,1806202800,2),(670,1822536000,4),(670,1837652400,2),(670,1853985600,4),(670,1869102000,2),(670,1886040000,4),(670,1900551600,2),(670,1917489600,4),(670,1932001200,2),(670,1948939200,4),(670,1964055600,2),(670,1980388800,4),(670,1995505200,2),(670,2011838400,4),(670,2026954800,2),(670,2043288000,4),(670,2058404400,2),(670,2075342400,4),(670,2089854000,2),(670,2106792000,4),(670,2121303600,2),(670,2138241600,4),(670,2147483647,4),(671,-2147483648,1),(671,-1946918424,2),(672,-2147483648,1),(672,-880196400,2),(672,-769395600,3),(672,-765374400,1),(672,-86878800,4),(672,-21466800,5),(672,-5745600,4),(672,9982800,5),(672,25704000,4),(672,41432400,5),(672,57758400,4),(672,73486800,5),(672,89208000,4),(672,104936400,5),(672,120657600,4),(672,126709200,5),(672,152107200,4),(672,162392400,5),(672,183556800,4),(672,199285200,5),(672,215611200,4),(672,230734800,5),(672,247060800,4),(672,262789200,5),(672,278510400,4),(672,294238800,5),(672,309960000,4),(672,325688400,5),(672,341409600,4),(672,357138000,5),(672,372859200,4),(672,388587600,5),(672,404913600,4),(672,420037200,5),(672,436363200,6),(672,439034400,8),(672,452088000,7),(672,467809200,8),(672,483537600,7),(672,499258800,8),(672,514987200,7),(672,530708400,8),(672,544622400,7),(672,562158000,8),(672,576072000,7),(672,594212400,8),(672,607521600,7),(672,625662000,8),(672,638971200,7),(672,657111600,8),(672,671025600,7),(672,688561200,8),(672,702475200,7),(672,720010800,8),(672,733924800,7),(672,752065200,8),(672,765374400,7),(672,783514800,8),(672,796824000,7),(672,814964400,8),(672,828878400,7),(672,846414000,8),(672,860328000,7),(672,877863600,8),(672,891777600,7),(672,909313200,8),(672,923227200,7),(672,941367600,8),(672,954676800,7),(672,972817200,8),(672,986126400,7),(672,1004266800,8),(672,1018180800,7),(672,1035716400,8),(672,1049630400,7),(672,1067166000,8),(672,1081080000,7),(672,1099220400,8),(672,1112529600,7),(672,1130670000,8),(672,1143979200,7),(672,1162119600,8),(672,1173614400,7),(672,1194174000,8),(672,1205064000,7),(672,1225623600,8),(672,1236513600,7),(672,1257073200,8),(672,1268568000,7),(672,1289127600,8),(672,1300017600,7),(672,1320577200,8),(672,1331467200,7),(672,1352026800,8),(672,1362916800,7),(672,1383476400,8),(672,1394366400,7),(672,1414926000,8),(672,1425816000,7),(672,1446375600,8),(672,1457870400,7),(672,1478430000,8),(672,1489320000,7),(672,1509879600,8),(672,1520769600,7),(672,1541329200,8),(672,1552219200,7),(672,1572778800,8),(672,1583668800,7),(672,1604228400,8),(672,1615723200,7),(672,1636282800,8),(672,1647172800,7),(672,1667732400,8),(672,1678622400,7),(672,1699182000,8),(672,1710072000,7),(672,1730631600,8),(672,1741521600,7),(672,1762081200,8),(672,1772971200,7),(672,1793530800,8),(672,1805025600,7),(672,1825585200,8),(672,1836475200,7),(672,1857034800,8),(672,1867924800,7),(672,1888484400,8),(672,1899374400,7),(672,1919934000,8),(672,1930824000,7),(672,1951383600,8),(672,1962878400,7),(672,1983438000,8),(672,1994328000,7),(672,2014887600,8),(672,2025777600,7),(672,2046337200,8),(672,2057227200,7),(672,2077786800,8),(672,2088676800,7),(672,2109236400,8),(672,2120126400,7),(672,2140686000,8),(673,-1767216356,2),(673,-1206957600,1),(673,-1191362400,2),(673,-1175374800,1),(673,-1159826400,2),(673,-633819600,1),(673,-622069200,2),(673,-602283600,1),(673,-591832800,2),(673,-570747600,1),(673,-560210400,2),(673,-539125200,1),(673,-531352800,2),(673,-191365200,1),(673,-184197600,2),(673,-155163600,1),(673,-150069600,2),(673,-128898000,1),(673,-121125600,2),(673,-99954000,1),(673,-89589600,2),(673,-68418000,1),(673,-57967200,2),(673,499748400,1),(673,511236000,2),(673,530593200,1),(673,540266400,2),(673,562129200,1),(673,571197600,2),(673,592974000,1),(673,602042400,2),(673,624423600,1),(673,634701600,2),(673,656478000,1),(673,666756000,2),(673,687927600,1),(673,697600800,2),(673,719982000,1),(673,728445600,2),(673,750826800,1),(673,761709600,2),(673,782276400,1),(673,793159200,2),(673,813726000,1),(673,824004000,2),(673,844570800,1),(673,856058400,2),(673,876106800,1),(673,888717600,2),(673,908074800,1),(673,919562400,2),(673,938919600,1),(673,951616800,2),(673,970974000,1),(673,982461600,2),(673,1003028400,1),(673,1013911200,2),(673,1036292400,1),(673,1045360800,2),(673,1318734000,1),(673,1330221600,2),(673,2147483647,2),(674,-1514739600,1),(674,-1343066400,2),(674,-1234807200,1),(674,-1220292000,2),(674,-1207159200,1),(674,-1191344400,2),(674,-873828000,1),(674,-661539600,3),(674,28800,1),(674,828867600,4),(674,846403200,1),(674,860317200,4),(674,877852800,1),(674,891766800,4),(674,909302400,1),(674,923216400,4),(674,941356800,1),(674,954666000,4),(674,972806400,1),(674,989139600,4),(674,1001836800,1),(674,1018170000,4),(674,1035705600,1),(674,1049619600,4),(674,1067155200,1),(674,1081069200,4),(674,1099209600,1),(674,1112518800,4),(674,1130659200,1),(674,1143968400,4),(674,1162108800,1),(674,1175418000,4),(674,1193558400,1),(674,1207472400,4),(674,1225008000,1),(674,1238922000,4),(674,1256457600,1),(674,1270371600,5),(674,1288508400,2),(674,1301817600,5),(674,1319958000,2),(674,1333267200,5),(674,1351407600,2),(674,1365321600,5),(674,1382857200,2),(674,1396771200,5),(674,1414306800,2),(674,1428220800,5),(674,1445756400,2),(674,1459670400,5),(674,1477810800,2),(674,1491120000,5),(674,1509260400,2),(674,1522569600,5),(674,1540710000,2),(674,1554624000,5),(674,1572159600,2),(674,1586073600,5),(674,1603609200,2),(674,1617523200,5),(674,1635663600,2),(674,1648972800,5),(674,1667113200,2),(674,1680422400,5),(674,1698562800,2),(674,1712476800,5),(674,1730012400,2),(674,1743926400,5),(674,1761462000,2),(674,1775376000,5),(674,1792911600,2),(674,1806825600,5),(674,1824966000,2),(674,1838275200,5),(674,1856415600,2),(674,1869724800,5),(674,1887865200,2),(674,1901779200,5),(674,1919314800,2),(674,1933228800,5),(674,1950764400,2),(674,1964678400,5),(674,1982818800,2),(674,1996128000,5),(674,2014268400,2),(674,2027577600,5),(674,2045718000,2),(674,2059027200,5),(674,2077167600,2),(674,2091081600,5),(674,2108617200,2),(674,2122531200,5),(674,2140066800,2),(675,-1841256091,3),(675,-874263600,1),(675,-862682400,2),(675,-841604400,1),(675,-830714400,2),(675,-811882800,4),(675,-798660000,2),(675,234943200,5),(675,244616400,3),(675,261554400,5),(675,276066000,3),(675,293004000,5),(675,307515600,3),(675,325058400,5),(675,338706000,3),(676,-1767213964,2),(676,-1206957600,1),(676,-1191362400,2),(676,-1175374800,1),(676,-1159826400,2),(676,-633819600,1),(676,-622069200,2),(676,-602283600,1),(676,-591832800,2),(676,-570747600,1),(676,-560210400,2),(676,-539125200,1),(676,-531352800,2),(676,-191365200,1),(676,-184197600,2),(676,-155163600,1),(676,-150069600,2),(676,-128898000,1),(676,-121125600,2),(676,-99954000,1),(676,-89589600,2),(676,-68418000,1),(676,-57967200,2),(676,499748400,1),(676,511236000,2),(676,530593200,1),(676,540266400,2),(676,562129200,1),(676,571197600,2),(676,2147483647,2),(677,-1822500432,2),(677,-1616954400,1),(677,-1606069800,2),(677,-1585504800,1),(677,-1574015400,2),(677,-1554055200,1),(677,-1542565800,2),(677,-1522605600,1),(677,-1511116200,2),(677,-1490551200,1),(677,-1479666600,2),(677,-1459101600,1),(677,-1448217000,2),(677,-1427652000,1),(677,-1416162600,2),(677,-1396202400,1),(677,-1384713000,2),(677,-1364752800,1),(677,-1353263400,2),(677,-1333303200,1),(677,-1321813800,2),(677,-1301248800,1),(677,-1290364200,2),(677,-1269799200,1),(677,-1258914600,2),(677,-1238349600,1),(677,-1226860200,2),(677,-1206900000,1),(677,-1195410600,2),(677,-1175450400,1),(677,-1163961000,2),(677,-1143396000,1),(677,-1132511400,2),(677,-1111946400,1),(677,-1101061800,2),(677,-1080496800,1),(677,-1069612200,2),(677,-1049047200,1),(677,-1037557800,2),(677,-1017597600,1),(677,-1006108200,2),(677,-986148000,1),(677,-974658600,2),(677,-954093600,1),(677,-943209000,2),(677,-922644000,1),(677,-911759400,2),(677,-891194400,1),(677,-879705000,2),(677,-868212000,3),(677,-769395600,4),(677,-758746800,2),(677,-701892000,1),(677,-690402600,2),(677,-670442400,1),(677,-658953000,2),(677,-638992800,1),(677,-627503400,2),(677,-606938400,1),(677,-596053800,2),(677,-575488800,1),(677,-564604200,2),(677,-544039200,1),(677,-532549800,2),(677,-512589600,1),(677,-501100200,2),(677,-481140000,1),(677,-469650600,2),(677,-449690400,1),(677,-438201000,2),(677,-417636000,1),(677,-406751400,2),(677,-386186400,1),(677,-375301800,2),(677,-354736800,1),(677,-343247400,2),(677,-323287200,1),(677,-311797800,2),(677,-291837600,1),(677,-280348200,2),(677,-259783200,1),(677,-248898600,2),(677,-228333600,1),(677,-217449000,2),(677,-196884000,1),(677,-185999400,2),(677,-165434400,1),(677,-153945000,2),(677,-133984800,1),(677,-122495400,2),(677,-102535200,1),(677,-91045800,2),(677,-70480800,1),(677,-59596200,2),(677,123919200,5),(677,129618000,2),(677,409039200,5),(677,413874000,2),(678,-2147483648,1),(678,-873057600,3),(678,-769395600,2),(678,-765399600,1),(679,-1767211040,2),(679,-1206954000,1),(679,-1191358800,2),(679,-1175371200,1),(679,-1159822800,2),(679,-633816000,1),(679,-622065600,2),(679,-602280000,1),(679,-591829200,2),(679,-570744000,1),(679,-560206800,2),(679,-539121600,1),(679,-531349200,2),(679,-191361600,1),(679,-184194000,2),(679,-155160000,1),(679,-150066000,2),(679,-128894400,1),(679,-121122000,2),(679,-99950400,1),(679,-89586000,2),(679,-68414400,1),(679,-57963600,2),(679,499752000,1),(679,511239600,2),(679,530596800,1),(679,540270000,2),(679,562132800,1),(679,571201200,2),(679,938923200,1),(679,951620400,2),(679,970977600,1),(679,971578800,2),(679,2147483647,2),(680,-2147483648,1),(680,-1739041424,3),(680,704869200,2),(680,733896000,3),(680,2147483647,3),(681,-2147483648,2),(681,-1633269600,1),(681,-1615129200,2),(681,-1601820000,1),(681,-1583679600,2),(681,-1471788000,5),(681,-880210800,3),(681,-769395600,4),(681,-765388800,5),(681,-84380400,6),(681,-68659200,5),(681,-52930800,6),(681,-37209600,5),(681,-21481200,6),(681,-5760000,5),(681,9968400,6),(681,25689600,5),(681,41418000,6),(681,57744000,5),(681,73472400,6),(681,89193600,5),(681,104922000,6),(681,120643200,5),(681,129114000,6),(681,152092800,5),(681,162378000,6),(681,183542400,5),(681,199270800,6),(681,215596800,5),(681,230720400,6),(681,247046400,5),(681,262774800,6),(681,278496000,5),(681,294224400,6),(681,309945600,5),(681,325674000,6),(681,341395200,5),(681,357123600,6),(681,372844800,5),(681,388573200,6),(681,404899200,5),(681,420022800,6),(681,436348800,5),(681,452077200,6),(681,467798400,5),(681,483526800,6),(681,499248000,5),(681,514976400,6),(681,530697600,5),(681,544611600,6),(681,562147200,5),(681,576061200,6),(681,594201600,5),(681,607510800,6),(681,625651200,5),(681,638960400,6),(681,657100800,5),(681,671014800,6),(681,688550400,5),(681,702464400,6),(681,720000000,5),(681,733914000,6),(681,752054400,5),(681,765363600,6),(681,783504000,5),(681,796813200,6),(681,814953600,5),(681,828867600,6),(681,846403200,5),(681,860317200,6),(681,877852800,5),(681,891766800,6),(681,909302400,5),(681,923216400,6),(681,941356800,5),(681,954666000,6),(681,972806400,5),(681,986115600,6),(681,1004256000,5),(681,1018170000,6),(681,1035705600,5),(681,1049619600,6),(681,1067155200,5),(681,1081069200,6),(681,1099209600,5),(681,1112518800,6),(681,1130659200,5),(681,1143968400,6),(681,1162108800,5),(681,1173603600,6),(681,1194163200,5),(681,1205053200,6),(681,1225612800,5),(681,1236502800,6),(681,1257062400,5),(681,1268557200,6),(681,1289116800,5),(681,1300006800,6),(681,1320566400,5),(681,1331456400,6),(681,1352016000,5),(681,1362906000,6),(681,1383465600,5),(681,1394355600,6),(681,1414915200,5),(681,1425805200,6),(681,1446364800,5),(681,1457859600,6),(681,1478419200,5),(681,1489309200,6),(681,1509868800,5),(681,1520758800,6),(681,1541318400,5),(681,1552208400,6),(681,1572768000,5),(681,1583658000,6),(681,1604217600,5),(681,1615712400,6),(681,1636272000,5),(681,1647162000,6),(681,1667721600,5),(681,1678611600,6),(681,1699171200,5),(681,1710061200,6),(681,1730620800,5),(681,1741510800,6),(681,1762070400,5),(681,1772960400,6),(681,1793520000,5),(681,1805014800,6),(681,1825574400,5),(681,1836464400,6),(681,1857024000,5),(681,1867914000,6),(681,1888473600,5),(681,1899363600,6),(681,1919923200,5),(681,1930813200,6),(681,1951372800,5),(681,1962867600,6),(681,1983427200,5),(681,1994317200,6),(681,2014876800,5),(681,2025766800,6),(681,2046326400,5),(681,2057216400,6),(681,2077776000,5),(681,2088666000,6),(681,2109225600,5),(681,2120115600,6),(681,2140675200,5),(682,-2147483648,1),(682,-1567453392,2),(682,-1233432000,3),(682,-1222981200,2),(682,-1205956800,3),(682,-1194037200,2),(682,-1172865600,3),(682,-1162501200,2),(682,-1141329600,3),(682,-1130965200,2),(682,-1109793600,3),(682,-1099429200,2),(682,-1078257600,3),(682,-1067806800,2),(682,-1046635200,3),(682,-1036270800,2),(682,-1015099200,3),(682,-1004734800,2),(682,-983563200,3),(682,-973198800,2),(682,-952027200,3),(682,-941576400,2),(682,-931032000,3),(682,-900882000,2),(682,-890337600,3),(682,-833749200,2),(682,-827265600,3),(682,-752274000,2),(682,-733780800,3),(682,-197326800,2),(682,-190843200,3),(682,-184194000,2),(682,-164491200,3),(682,-152658000,2),(682,-132955200,3),(682,-121122000,2),(682,-101419200,3),(682,-86821200,2),(682,-71092800,3),(682,-54766800,2),(682,-39038400,3),(682,-23317200,2),(682,-7588800,5),(682,128142000,4),(682,136605600,5),(682,596948400,4),(682,605066400,5),(682,624423600,4),(682,636516000,5),(682,656478000,4),(682,667965600,5),(682,687927600,4),(682,699415200,5),(682,719377200,4),(682,731469600,5),(682,938919600,3),(682,952052400,5),(682,1198983600,4),(682,1205632800,5),(682,1224385200,4),(682,1237082400,5),(682,2147483647,5),(683,-1577923200,3),(683,-880210800,1),(683,-769395600,2),(683,-765388800,3),(683,-147891600,4),(683,-131562000,3),(683,325674000,5),(683,341395200,3),(683,357123600,5),(683,372844800,3),(683,388573200,5),(683,404899200,3),(683,420022800,5),(683,436348800,3),(683,452077200,5),(683,467798400,3),(683,483526800,5),(683,499248000,3),(683,514976400,5),(683,530697600,3),(683,544611600,5),(683,562147200,3),(683,576061200,5),(683,594201600,3),(683,607510800,5),(683,625651200,3),(683,638960400,5),(683,657100800,3),(683,671014800,5),(683,688550400,3),(683,702464400,5),(683,720000000,3),(683,733914000,5),(683,752054400,3),(683,765363600,5),(683,783504000,3),(683,796813200,5),(683,814953600,3),(683,828867600,5),(683,846403200,3),(683,860317200,5),(683,877852800,3),(683,891766800,5),(683,909302400,3),(683,923216400,5),(683,941356800,7),(683,954662400,6),(683,972802800,8),(683,973400400,7),(683,986115600,5),(683,1004256000,3),(683,1018170000,5),(683,1035705600,3),(683,1049619600,5),(683,1067155200,3),(683,1081069200,5),(683,1099209600,3),(683,1112518800,5),(683,1130659200,3),(683,1143968400,5),(683,1162108800,3),(683,1173603600,5),(683,1194163200,3),(683,1205053200,5),(683,1225612800,3),(683,1236502800,5),(683,1257062400,3),(683,1268557200,5),(683,1289116800,3),(683,1300006800,5),(683,1320566400,3),(683,1331456400,5),(683,1352016000,3),(683,1362906000,5),(683,1383465600,3),(683,1394355600,5),(683,1414915200,3),(683,1425805200,5),(683,1446364800,3),(683,1457859600,5),(683,1478419200,3),(683,1489309200,5),(683,1509868800,3),(683,1520758800,5),(683,1541318400,3),(683,1552208400,5),(683,1572768000,3),(683,1583658000,5),(683,1604217600,3),(683,1615712400,5),(683,1636272000,3),(683,1647162000,5),(683,1667721600,3),(683,1678611600,5),(683,1699171200,3),(683,1710061200,5),(683,1730620800,3),(683,1741510800,5),(683,1762070400,3),(683,1772960400,5),(683,1793520000,3),(683,1805014800,5),(683,1825574400,3),(683,1836464400,5),(683,1857024000,3),(683,1867914000,5),(683,1888473600,3),(683,1899363600,5),(683,1919923200,3),(683,1930813200,5),(683,1951372800,3),(683,1962867600,5),(683,1983427200,3),(683,1994317200,5),(683,2014876800,3),(683,2025766800,5),(683,2046326400,3),(683,2057216400,5),(683,2077776000,3),(683,2088666000,5),(683,2109225600,3),(683,2120115600,5),(683,2140675200,3),(684,-1767212492,2),(684,-1206954000,1),(684,-1191358800,2),(684,-1175371200,1),(684,-1159822800,2),(684,-633816000,1),(684,-622065600,2),(684,-602280000,1),(684,-591829200,2),(684,-570744000,1),(684,-560206800,2),(684,-539121600,1),(684,-531349200,2),(684,-191361600,1),(684,-184194000,2),(684,-155160000,1),(684,-150066000,2),(684,-128894400,1),(684,-121122000,2),(684,-99950400,1),(684,-89586000,2),(684,-68414400,1),(684,-57963600,2),(684,499752000,1),(684,511239600,2),(684,530596800,1),(684,540270000,2),(684,562132800,1),(684,571201200,2),(684,592977600,1),(684,602046000,2),(684,624427200,1),(684,634705200,2),(684,656481600,1),(684,666759600,2),(684,687931200,1),(684,697604400,2),(684,719985600,1),(684,728449200,2),(684,750830400,1),(684,761713200,2),(684,782280000,1),(684,793162800,2),(684,813729600,1),(684,824007600,2),(684,844574400,1),(684,856062000,2),(684,876110400,1),(684,888721200,2),(684,908078400,1),(684,919566000,2),(684,938923200,1),(684,951620400,2),(684,970977600,1),(684,982465200,2),(684,1003032000,1),(684,1013914800,2),(684,1036296000,1),(684,1045364400,2),(684,1066536000,1),(684,1076814000,2),(684,1099368000,1),(684,1108868400,2),(684,1129435200,1),(684,1140318000,2),(684,1162699200,1),(684,1172372400,2),(684,1192334400,1),(684,1203217200,2),(684,1224388800,1),(684,1234666800,2),(684,1255838400,1),(684,1266721200,2),(684,1287288000,1),(684,1298170800,2),(684,1318737600,1),(684,1330225200,2),(684,1350792000,1),(684,1361070000,2),(684,1382241600,1),(684,1392519600,2),(684,1413691200,1),(684,1424574000,2),(684,1445140800,1),(684,1456023600,2),(684,1476590400,1),(684,1487473200,2),(684,1508040000,1),(684,1518922800,2),(684,1541304000,1),(684,1550372400,2),(684,2147483647,2),(685,-1514743200,1),(685,377935200,3),(685,828860400,2),(685,846396000,3),(685,860310000,2),(685,877845600,3),(685,891759600,2),(685,902037600,4),(685,909298800,1),(685,923212800,4),(685,941353200,1),(685,954662400,4),(685,972802800,1),(685,989136000,4),(685,1001833200,1),(685,1018166400,4),(685,1035702000,1),(685,1049616000,4),(685,1067151600,1),(685,1081065600,4),(685,1099206000,1),(685,1112515200,4),(685,1130655600,1),(685,1143964800,4),(685,1162105200,1),(685,1175414400,4),(685,1193554800,1),(685,1207468800,4),(685,1225004400,1),(685,1238918400,4),(685,1256454000,1),(685,1270368000,4),(685,1288508400,1),(685,1301817600,4),(685,1319958000,1),(685,1333267200,4),(685,1351407600,1),(685,1365321600,4),(685,1382857200,1),(685,1396771200,4),(685,1414306800,1),(685,1422777600,3),(686,-2147483648,1),(686,-1826739140,2),(686,-157750200,3),(686,1197183600,2),(686,1462086000,3),(686,2147483647,3),(687,-2147483648,1),(687,-1567453392,2),(687,-1233432000,3),(687,-1222981200,2),(687,-1205956800,3),(687,-1194037200,2),(687,-1172865600,3),(687,-1162501200,2),(687,-1141329600,3),(687,-1130965200,2),(687,-1109793600,3),(687,-1099429200,2),(687,-1078257600,3),(687,-1067806800,2),(687,-1046635200,3),(687,-1036270800,2),(687,-1015099200,3),(687,-1004734800,2),(687,-983563200,3),(687,-973198800,2),(687,-952027200,3),(687,-941576400,2),(687,-931032000,3),(687,-900882000,2),(687,-890337600,3),(687,-833749200,2),(687,-827265600,3),(687,-752274000,2),(687,-733780800,3),(687,-197326800,2),(687,-190843200,3),(687,-184194000,2),(687,-164491200,3),(687,-152658000,2),(687,-132955200,3),(687,-121122000,2),(687,-101419200,3),(687,-86821200,2),(687,-71092800,3),(687,-54766800,2),(687,-39038400,3),(687,-23317200,2),(687,-7588800,5),(687,128142000,4),(687,136605600,5),(687,596948400,4),(687,605066400,5),(687,624423600,4),(687,636516000,5),(687,656478000,4),(687,667965600,2),(687,687931200,4),(687,699415200,5),(687,719377200,4),(687,731469600,5),(687,938919600,3),(687,952052400,5),(687,1086058800,2),(687,1087704000,5),(687,1198983600,4),(687,1205632800,5),(687,2147483647,5),(688,-1846269040,1),(688,-71092800,2),(688,2147483647,2),(689,-2147483648,1),(689,-1946918424,2),(690,-2147483648,2),(690,-1633276800,1),(690,-1615136400,2),(690,-1601827200,1),(690,-1583686800,2),(690,-1563724800,1),(690,-1551632400,2),(690,-1538928000,1),(690,-1520182800,2),(690,-1504454400,1),(690,-1491757200,2),(690,-1473004800,1),(690,-1459702800,2),(690,-1441555200,1),(690,-1428253200,2),(690,-1410105600,1),(690,-1396803600,2),(690,-1378656000,1),(690,-1365354000,2),(690,-1347206400,1),(690,-1333904400,2),(690,-1315152000,1),(690,-1301850000,2),(690,-1283702400,1),(690,-1270400400,2),(690,-1252252800,1),(690,-1238950800,2),(690,-1220803200,1),(690,-1207501200,2),(690,-1189353600,1),(690,-1176051600,2),(690,-1157299200,1),(690,-1144602000,2),(690,-1125849600,1),(690,-1112547600,2),(690,-1094400000,1),(690,-1081098000,2),(690,-1067788800,3),(690,-1045414800,2),(690,-1031500800,1),(690,-1018198800,2),(690,-1000051200,1),(690,-986749200,2),(690,-967996800,1),(690,-955299600,2),(690,-936547200,1),(690,-923245200,2),(690,-905097600,1),(690,-891795600,2),(690,-880214400,4),(690,-769395600,5),(690,-765392400,2),(690,-747244800,1),(690,-733942800,2),(690,-715795200,1),(690,-702493200,2),(690,-684345600,1),(690,-671043600,2),(690,-652896000,1),(690,-639594000,2),(690,-620841600,1),(690,-608144400,2),(690,-589392000,1),(690,-576090000,2),(690,-557942400,1),(690,-544640400,2),(690,-526492800,1),(690,-513190800,2),(690,-495043200,1),(690,-481741200,2),(690,-463593600,1),(690,-447267600,2),(690,-431539200,1),(690,-415818000,2),(690,-400089600,1),(690,-384368400,2),(690,-368640000,1),(690,-352918800,2),(690,-337190400,1),(690,-321469200,2),(690,-305740800,1),(690,-289414800,2),(690,-273686400,1),(690,-257965200,2),(690,-242236800,1),(690,-226515600,2),(690,-210787200,1),(690,-195066000,2),(690,-179337600,1),(690,-163616400,2),(690,-147888000,1),(690,-131562000,2),(690,-116438400,1),(690,-100112400,2),(690,-84384000,1),(690,-68662800,2),(690,-52934400,1),(690,-37213200,2),(690,-21484800,1),(690,-5763600,2),(690,9964800,1),(690,25686000,2),(690,41414400,1),(690,57740400,2),(690,73468800,1),(690,89190000,2),(690,104918400,1),(690,120639600,2),(690,126691200,1),(690,152089200,2),(690,162374400,1),(690,183538800,2),(690,199267200,1),(690,215593200,2),(690,230716800,1),(690,247042800,2),(690,262771200,1),(690,278492400,2),(690,294220800,1),(690,309942000,2),(690,325670400,1),(690,341391600,2),(690,357120000,1),(690,372841200,2),(690,388569600,1),(690,404895600,2),(690,420019200,1),(690,436345200,2),(690,452073600,1),(690,467794800,2),(690,483523200,1),(690,499244400,2),(690,514972800,1),(690,530694000,2),(690,544608000,1),(690,562143600,2),(690,576057600,1),(690,594198000,2),(690,607507200,1),(690,625647600,2),(690,638956800,1),(690,657097200,2),(690,671011200,1),(690,688546800,2),(690,702460800,1),(690,719996400,2),(690,733910400,1),(690,752050800,2),(690,765360000,1),(690,783500400,2),(690,796809600,1),(690,814950000,2),(690,828864000,1),(690,846399600,2),(690,860313600,1),(690,877849200,2),(690,891763200,1),(690,909298800,2),(690,923212800,1),(690,941353200,2),(690,954662400,1),(690,972802800,2),(690,986112000,1),(690,1004252400,2),(690,1018166400,1),(690,1035702000,2),(690,1049616000,1),(690,1067151600,2),(690,1081065600,1),(690,1099206000,2),(690,1112515200,1),(690,1130655600,2),(690,1143964800,1),(690,1162105200,2),(690,1173600000,1),(690,1194159600,2),(690,1205049600,1),(690,1225609200,2),(690,1236499200,1),(690,1257058800,2),(690,1268553600,1),(690,1289113200,2),(690,1300003200,1),(690,1320562800,2),(690,1331452800,1),(690,1352012400,2),(690,1362902400,1),(690,1383462000,2),(690,1394352000,1),(690,1414911600,2),(690,1425801600,1),(690,1446361200,2),(690,1457856000,1),(690,1478415600,2),(690,1489305600,1),(690,1509865200,2),(690,1520755200,1),(690,1541314800,2),(690,1552204800,1),(690,1572764400,2),(690,1583654400,1),(690,1604214000,2),(690,1615708800,1),(690,1636268400,2),(690,1647158400,1),(690,1667718000,2),(690,1678608000,1),(690,1699167600,2),(690,1710057600,1),(690,1730617200,2),(690,1741507200,1),(690,1762066800,2),(690,1772956800,1),(690,1793516400,2),(690,1805011200,1),(690,1825570800,2),(690,1836460800,1),(690,1857020400,2),(690,1867910400,1),(690,1888470000,2),(690,1899360000,1),(690,1919919600,2),(690,1930809600,1),(690,1951369200,2),(690,1962864000,1),(690,1983423600,2),(690,1994313600,1),(690,2014873200,2),(690,2025763200,1),(690,2046322800,2),(690,2057212800,1),(690,2077772400,2),(690,2088662400,1),(690,2109222000,2),(690,2120112000,1),(690,2140671600,2),(691,-1514739600,1),(691,-1343066400,2),(691,-1234807200,1),(691,-1220292000,2),(691,-1207159200,1),(691,-1191344400,2),(691,828864000,3),(691,846399600,2),(691,860313600,3),(691,877849200,2),(691,891766800,4),(691,909302400,1),(691,923216400,4),(691,941356800,1),(691,954666000,4),(691,972806400,1),(691,989139600,4),(691,1001836800,1),(691,1018170000,4),(691,1035705600,1),(691,1049619600,4),(691,1067155200,1),(691,1081069200,4),(691,1099209600,1),(691,1112518800,4),(691,1130659200,1),(691,1143968400,4),(691,1162108800,1),(691,1175418000,4),(691,1193558400,1),(691,1207472400,4),(691,1225008000,1),(691,1238922000,4),(691,1256457600,1),(691,1270371600,4),(691,1288512000,1),(691,1301821200,4),(691,1319961600,1),(691,1333270800,4),(691,1351411200,1),(691,1365325200,4),(691,1382860800,1),(691,1396774800,4),(691,1414310400,1),(691,1428224400,4),(691,1445760000,1),(691,1459674000,4),(691,1477814400,1),(691,1491123600,4),(691,1509264000,1),(691,1522573200,4),(691,1540713600,1),(691,1554627600,4),(691,1572163200,1),(691,1586077200,4),(691,1603612800,1),(691,1617526800,4),(691,1635667200,1),(691,1648976400,4),(691,1667116800,1),(691,1680426000,4),(691,1698566400,1),(691,1712480400,4),(691,1730016000,1),(691,1743930000,4),(691,1761465600,1),(691,1775379600,4),(691,1792915200,1),(691,1806829200,4),(691,1824969600,1),(691,1838278800,4),(691,1856419200,1),(691,1869728400,4),(691,1887868800,1),(691,1901782800,4),(691,1919318400,1),(691,1933232400,4),(691,1950768000,1),(691,1964682000,4),(691,1982822400,1),(691,1996131600,4),(691,2014272000,1),(691,2027581200,4),(691,2045721600,1),(691,2059030800,4),(691,2077171200,1),(691,2091085200,4),(691,2108620800,1),(691,2122534800,4),(691,2140070400,1),(692,-2147483648,1),(692,-1946918424,2),(693,-2147483648,1),(693,-1567453392,2),(693,-1233432000,3),(693,-1222981200,2),(693,-1205956800,3),(693,-1194037200,2),(693,-1172865600,3),(693,-1162501200,2),(693,-1141329600,3),(693,-1130965200,2),(693,-1109793600,3),(693,-1099429200,2),(693,-1078257600,3),(693,-1067806800,2),(693,-1046635200,3),(693,-1036270800,2),(693,-1015099200,3),(693,-1004734800,2),(693,-983563200,3),(693,-973198800,2),(693,-952027200,3),(693,-941576400,2),(693,-931032000,3),(693,-900882000,2),(693,-890337600,3),(693,-833749200,2),(693,-827265600,3),(693,-752274000,2),(693,-733780800,3),(693,-197326800,2),(693,-190843200,3),(693,-184194000,2),(693,-164491200,3),(693,-152658000,2),(693,-132955200,3),(693,-121122000,2),(693,-101419200,3),(693,-86821200,2),(693,-71092800,3),(693,-54766800,2),(693,-39038400,3),(693,-23317200,2),(693,-7588800,5),(693,128142000,4),(693,136605600,5),(693,596948400,4),(693,605066400,5),(693,624423600,4),(693,636516000,5),(693,656478000,4),(693,667965600,2),(693,687931200,4),(693,699415200,5),(693,719377200,4),(693,731469600,5),(693,938919600,3),(693,952052400,5),(693,1198983600,4),(693,1205632800,5),(693,1224385200,4),(693,1237082400,5),(693,2147483647,5),(694,-2147483648,1),(694,-1545071027,3),(694,288770400,2),(694,297234000,3),(694,320220000,2),(694,328683600,3),(694,664264800,2),(694,678344400,3),(694,695714400,2),(694,700635600,3),(695,-2147483648,2),(695,-1633273200,1),(695,-1615132800,2),(695,-1601823600,1),(695,-1583683200,2),(695,-880210800,3),(695,-820519140,2),(695,-812653140,3),(695,-796845540,2),(695,-84380400,1),(695,-68659200,2),(696,-1767212140,2),(696,-1206954000,1),(696,-1191358800,2),(696,-1175371200,1),(696,-1159822800,2),(696,-633816000,1),(696,-622065600,2),(696,-602280000,1),(696,-591829200,2),(696,-570744000,1),(696,-560206800,2),(696,-539121600,1),(696,-531349200,2),(696,-191361600,1),(696,-184194000,2),(696,-155160000,1),(696,-150066000,2),(696,-128894400,1),(696,-121122000,2),(696,-99950400,1),(696,-89586000,2),(696,-68414400,1),(696,-57963600,2),(696,499752000,1),(696,511239600,2),(696,530596800,1),(696,540270000,2),(696,562132800,1),(696,571201200,2),(696,592977600,1),(696,602046000,2),(696,624427200,1),(696,634705200,2),(696,656481600,1),(696,666759600,2),(696,687931200,1),(696,697604400,2),(696,719985600,1),(696,728449200,2),(696,750830400,1),(696,761713200,2),(696,782280000,1),(696,793162800,2),(696,813729600,1),(696,824007600,2),(696,844574400,1),(696,856062000,2),(696,876110400,1),(696,888721200,2),(696,908078400,1),(696,919566000,2),(696,938923200,1),(696,951620400,2),(696,970977600,1),(696,982465200,2),(696,1003032000,1),(696,1013914800,2),(696,1036296000,1),(696,1045364400,2),(696,1099368000,1),(696,1108868400,2),(696,1129435200,1),(696,1140318000,2),(696,1162699200,1),(696,1172372400,2),(696,1192334400,1),(696,1203217200,2),(696,1224388800,1),(696,1234666800,2),(696,1255838400,1),(696,1266721200,2),(696,1287288000,1),(696,1298170800,2),(696,1318737600,1),(696,1330225200,2),(696,1350792000,1),(696,1361070000,2),(696,1382241600,1),(696,1392519600,2),(696,1413691200,1),(696,1424574000,2),(696,1445140800,1),(696,1456023600,2),(696,1476590400,1),(696,1487473200,2),(696,1508040000,1),(696,1518922800,2),(696,1541304000,1),(696,1550372400,2),(696,2147483647,2),(697,-2147483648,1),(697,-873057600,3),(697,-769395600,2),(697,-765399600,1),(698,-1686091520,1),(698,323845200,4),(698,338950800,2),(698,354675600,3),(698,370400400,2),(698,386125200,3),(698,401850000,2),(698,417574800,3),(698,433299600,2),(698,449024400,3),(698,465354000,2),(698,481078800,3),(698,496803600,2),(698,512528400,3),(698,528253200,2),(698,543978000,3),(698,559702800,2),(698,575427600,3),(698,591152400,2),(698,606877200,3),(698,622602000,2),(698,638326800,3),(698,654656400,2),(698,670381200,3),(698,686106000,2),(698,701830800,3),(698,717555600,2),(698,733280400,3),(698,749005200,2),(698,764730000,3),(698,780454800,2),(698,796179600,3),(698,811904400,2),(698,820465200,5),(699,-2147483648,2),(699,-1632056400,1),(699,-1615125600,2),(699,-1596978000,1),(699,-1583164800,2),(699,-880203600,3),(699,-769395600,4),(699,-765381600,2),(699,-147884400,5),(699,-131554800,2),(699,120646800,6),(699,325677600,7),(699,341398800,6),(699,357127200,7),(699,372848400,6),(699,388576800,7),(699,404902800,6),(699,420026400,7),(699,436352400,6),(699,452080800,7),(699,467802000,6),(699,483530400,7),(699,499251600,6),(699,514980000,7),(699,530701200,6),(699,544615200,7),(699,562150800,6),(699,576064800,7),(699,594205200,6),(699,607514400,7),(699,625654800,6),(699,638964000,7),(699,657104400,6),(699,671018400,7),(699,688554000,6),(699,702468000,7),(699,720003600,6),(699,733917600,7),(699,752058000,6),(699,765367200,7),(699,783507600,6),(699,796816800,7),(699,814957200,6),(699,828871200,7),(699,846406800,6),(699,860320800,7),(699,877856400,6),(699,891770400,7),(699,909306000,6),(699,923220000,7),(699,941360400,6),(699,954669600,7),(699,972810000,6),(699,986119200,7),(699,1004259600,6),(699,1018173600,7),(699,1035709200,6),(699,1049623200,7),(699,1067158800,6),(699,1081072800,7),(699,1099213200,6),(699,1112522400,7),(699,1130662800,6),(699,1143972000,7),(699,1162112400,6),(699,1173607200,7),(699,1194166800,6),(699,1205056800,7),(699,1225616400,6),(699,1236506400,7),(699,1257066000,6),(699,1268560800,7),(699,1289120400,6),(699,1300010400,7),(699,1320570000,6),(699,1331460000,7),(699,1352019600,6),(699,1362909600,7),(699,1383469200,6),(699,1394359200,7),(699,1414918800,6),(699,1425808800,7),(699,1446368400,6),(699,1457863200,7),(699,1478422800,6),(699,1489312800,7),(699,1509872400,6),(699,1520762400,7),(699,1541322000,6),(699,1552212000,7),(699,1572771600,6),(699,1583661600,7),(699,1604214000,8),(700,-2147483648,2),(700,-1632060000,1),(700,-1615129200,2),(700,-880207200,3),(700,-769395600,4),(700,-765385200,2),(700,-715788000,1),(700,-702486000,2),(700,-684338400,1),(700,-671036400,2),(700,-652888800,1),(700,-639586800,2),(700,-620834400,1),(700,-608137200,2),(700,-589384800,1),(700,-576082800,2),(700,-557935200,1),(700,-544633200,2),(700,-526485600,1),(700,-513183600,2),(700,-495036000,1),(700,-481734000,2),(700,-463586400,1),(700,-450284400,2),(700,-431532000,1),(700,-418230000,2),(700,-400082400,1),(700,-386780400,2),(700,-368632800,1),(700,-355330800,2),(700,-337183200,1),(700,-323881200,2),(700,-305733600,1),(700,-292431600,2),(700,-273679200,1),(700,-260982000,2),(700,-242229600,1),(700,-226508400,2),(700,-210780000,1),(700,-195058800,2),(700,-179330400,1),(700,-163609200,2),(700,-147880800,1),(700,-131554800,2),(700,-116431200,1),(700,-100105200,2),(700,-84376800,1),(700,-68655600,2),(700,-52927200,1),(700,-37206000,2),(700,-21477600,1),(700,-5756400,2),(700,9972000,1),(700,25693200,2),(700,41421600,1),(700,57747600,2),(700,73476000,1),(700,84013200,5),(701,-2147483648,2),(701,-1633273200,1),(701,-1615132800,2),(701,-1601823600,1),(701,-1583683200,2),(701,-1570374000,1),(701,-1551628800,2),(701,-1538924400,1),(701,-1534089600,2),(701,-880210800,3),(701,-769395600,4),(701,-765388800,2),(701,-147884400,1),(701,-131558400,2),(701,-116434800,1),(701,-100108800,2),(701,-84380400,1),(701,-68659200,2),(701,-52930800,1),(701,-37209600,2),(701,-21481200,1),(701,-5760000,2),(701,9968400,1),(701,25689600,2),(701,41418000,1),(701,57744000,2),(701,73472400,1),(701,89193600,2),(701,104922000,1),(701,120643200,2),(701,126694800,1),(701,152092800,2),(701,162378000,1),(701,183542400,2),(701,199270800,1),(701,215596800,2),(701,230720400,1),(701,247046400,2),(701,262774800,1),(701,278496000,2),(701,294224400,1),(701,309945600,2),(701,325674000,1),(701,341395200,2),(701,357123600,1),(701,372844800,2),(701,388573200,1),(701,404899200,2),(701,420022800,1),(701,436348800,2),(701,452077200,1),(701,467798400,2),(701,483526800,1),(701,499248000,2),(701,514976400,1),(701,530697600,2),(701,544611600,1),(701,562147200,2),(701,576061200,1),(701,594201600,2),(701,607510800,1),(701,625651200,2),(701,638960400,1),(701,657100800,2),(701,671014800,1),(701,688550400,2),(701,702464400,1),(701,720000000,2),(701,733914000,1),(701,752054400,2),(701,765363600,1),(701,783504000,2),(701,796813200,1),(701,814953600,2),(701,828867600,1),(701,846403200,2),(701,860317200,1),(701,877852800,2),(701,891766800,1),(701,909302400,2),(701,923216400,1),(701,941356800,2),(701,954666000,1),(701,972806400,2),(701,986115600,1),(701,1004256000,2),(701,1018170000,1),(701,1035705600,2),(701,1049619600,1),(701,1067155200,2),(701,1081069200,1),(701,1099209600,2),(701,1112518800,1),(701,1130659200,2),(701,1143968400,1),(701,1162108800,2),(701,1173603600,1),(701,1194163200,2),(701,1205053200,1),(701,1225612800,2),(701,1236502800,1),(701,1257062400,2),(701,1268557200,1),(701,1289116800,2),(701,1300006800,1),(701,1320566400,2),(701,1331456400,1),(701,1352016000,2),(701,1362906000,1),(701,1383465600,2),(701,1394355600,1),(701,1414915200,2),(701,1425805200,1),(701,1446364800,2),(701,1457859600,1),(701,1478419200,2),(701,1489309200,1),(701,1509868800,2),(701,1520758800,1),(701,1541318400,2),(701,1552208400,1),(701,1572768000,2),(701,1583658000,1),(701,1604217600,2),(701,1615712400,1),(701,1636272000,2),(701,1647162000,1),(701,1667721600,2),(701,1678611600,1),(701,1699171200,2),(701,1710061200,1),(701,1730620800,2),(701,1741510800,1),(701,1762070400,2),(701,1772960400,1),(701,1793520000,2),(701,1805014800,1),(701,1825574400,2),(701,1836464400,1),(701,1857024000,2),(701,1867914000,1),(701,1888473600,2),(701,1899363600,1),(701,1919923200,2),(701,1930813200,1),(701,1951372800,2),(701,1962867600,1),(701,1983427200,2),(701,1994317200,1),(701,2014876800,2),(701,2025766800,1),(701,2046326400,2),(701,2057216400,1),(701,2077776000,2),(701,2088666000,1),(701,2109225600,2),(701,2120115600,1),(701,2140675200,2),(702,-2051202469,1),(702,-1724083200,2),(702,-880218000,3),(702,-769395600,4),(702,-765396000,2),(702,-684349200,5),(702,-671047200,2),(702,-80506740,5),(702,-68666400,2),(702,-52938000,5),(702,-37216800,2),(702,104914800,5),(702,120636000,2),(702,126687600,5),(702,152085600,2),(702,167814000,5),(702,183535200,2),(702,199263600,5),(702,215589600,2),(702,230713200,5),(702,247039200,2),(702,262767600,5),(702,278488800,2),(702,294217200,5),(702,309938400,2),(702,325666800,5),(702,341388000,2),(702,357116400,5),(702,372837600,2),(702,388566000,5),(702,404892000,2),(702,420015600,5),(702,436341600,2),(702,452070000,5),(702,467791200,2),(702,483519600,5),(702,499240800,2),(702,514969200,5),(702,530690400,2),(702,544604400,5),(702,562140000,2),(702,576054000,5),(702,594194400,2),(702,607503600,5),(702,625644000,2),(702,638953200,5),(702,657093600,2),(702,671007600,5),(702,688543200,2),(702,702457200,5),(702,719992800,2),(702,733906800,5),(702,752047200,2),(702,765356400,5),(702,783496800,2),(702,796806000,5),(702,814946400,2),(702,828860400,5),(702,846396000,2),(702,860310000,5),(702,877845600,2),(702,891759600,5),(702,909295200,2),(702,923209200,5),(702,941349600,2),(702,954658800,5),(702,972799200,2),(702,986108400,5),(702,1004248800,2),(702,1018162800,5),(702,1035698400,2),(702,1049612400,5),(702,1067148000,2),(702,1081062000,5),(702,1099202400,2),(702,1112511600,5),(702,1130652000,2),(702,1143961200,5),(702,1162101600,2),(702,1173596400,5),(702,1194156000,2),(702,1205046000,5),(702,1225605600,2),(702,1236495600,5),(702,1257055200,2),(702,1268550000,5),(702,1289109600,2),(702,1299999600,5),(702,1320559200,2),(702,1331449200,5),(702,1352008800,2),(702,1362898800,5),(702,1383458400,2),(702,1394348400,5),(702,1414908000,2),(702,1425798000,5),(702,1446357600,2),(702,1457852400,5),(702,1478412000,2),(702,1489302000,5),(702,1509861600,2),(702,1520751600,5),(702,1541311200,2),(702,1552201200,5),(702,1572760800,2),(702,1583650800,5),(702,1604210400,2),(702,1615705200,5),(702,1636264800,2),(702,1647154800,5),(702,1667714400,2),(702,1678604400,5),(702,1699164000,2),(702,1710054000,5),(702,1730613600,2),(702,1741503600,5),(702,1762063200,2),(702,1772953200,5),(702,1793512800,2),(702,1805007600,5),(702,1825567200,2),(702,1836457200,5),(702,1857016800,2),(702,1867906800,5),(702,1888466400,2),(702,1899356400,5),(702,1919916000,2),(702,1930806000,5),(702,1951365600,2),(702,1962860400,5),(702,1983420000,2),(702,1994310000,5),(702,2014869600,2),(702,2025759600,5),(702,2046319200,2),(702,2057209200,5),(702,2077768800,2),(702,2088658800,5),(702,2109218400,2),(702,2120108400,5),(702,2140668000,2),(703,-2147483648,1),(703,-873057600,3),(703,-769395600,2),(703,-765399600,1),(704,-1998663968,2),(704,-1632063600,1),(704,-1615132800,2),(704,-1600614000,1),(704,-1596816000,2),(704,-1567954800,1),(704,-1551628800,2),(704,-1536505200,1),(704,-1523203200,2),(704,-1504450800,1),(704,-1491753600,2),(704,-1473001200,1),(704,-1459699200,2),(704,-880210800,3),(704,-769395600,4),(704,-765388800,2),(704,-715791600,1),(704,-702489600,2),(704,73472400,1),(704,89193600,2),(704,104922000,1),(704,120643200,2),(704,136371600,1),(704,152092800,2),(704,167821200,1),(704,183542400,2),(704,199270800,1),(704,215596800,2),(704,230720400,1),(704,247046400,2),(704,262774800,1),(704,278496000,2),(704,294224400,1),(704,309945600,2),(704,325674000,1),(704,341395200,2),(704,357123600,1),(704,372844800,2),(704,388573200,1),(704,404899200,2),(704,420022800,1),(704,436348800,2),(704,452077200,1),(704,467798400,2),(704,483526800,1),(704,499248000,2),(704,514976400,1),(704,530697600,2),(704,544611600,1),(704,562147200,2),(704,576061200,1),(704,594201600,2),(704,607510800,1),(704,625651200,2),(704,638960400,1),(704,657100800,2),(704,671014800,1),(704,688550400,2),(704,702464400,1),(704,720000000,2),(704,733914000,1),(704,752054400,2),(704,765363600,1),(704,783504000,2),(704,796813200,1),(704,814953600,2),(704,828867600,1),(704,846403200,2),(704,860317200,1),(704,877852800,2),(704,891766800,1),(704,909302400,2),(704,923216400,1),(704,941356800,2),(704,954666000,1),(704,972806400,2),(704,986115600,1),(704,1004256000,2),(704,1018170000,1),(704,1035705600,2),(704,1049619600,1),(704,1067155200,2),(704,1081069200,1),(704,1099209600,2),(704,1112518800,1),(704,1130659200,2),(704,1143968400,1),(704,1162108800,2),(704,1173603600,1),(704,1194163200,2),(704,1205053200,1),(704,1225612800,2),(704,1236502800,1),(704,1257062400,2),(704,1268557200,1),(704,1289116800,2),(704,1300006800,1),(704,1320566400,2),(704,1331456400,1),(704,1352016000,2),(704,1362906000,1),(704,1383465600,2),(704,1394355600,1),(704,1414915200,2),(704,1425805200,1),(704,1446364800,2),(704,1457859600,1),(704,1478419200,2),(704,1489309200,1),(704,1509868800,2),(704,1520758800,1),(704,1541318400,2),(704,1552208400,1),(704,1572768000,2),(704,1583658000,1),(704,1604217600,2),(704,1615712400,1),(704,1636272000,2),(704,1647162000,1),(704,1667721600,2),(704,1678611600,1),(704,1699171200,2),(704,1710061200,1),(704,1730620800,2),(704,1741510800,1),(704,1762070400,2),(704,1772960400,1),(704,1793520000,2),(704,1805014800,1),(704,1825574400,2),(704,1836464400,1),(704,1857024000,2),(704,1867914000,1),(704,1888473600,2),(704,1899363600,1),(704,1919923200,2),(704,1930813200,1),(704,1951372800,2),(704,1962867600,1),(704,1983427200,2),(704,1994317200,1),(704,2014876800,2),(704,2025766800,1),(704,2046326400,2),(704,2057216400,1),(704,2077776000,2),(704,2088666000,1),(704,2109225600,2),(704,2120115600,1),(704,2140675200,2),(705,-1767208832,2),(705,-1206950400,1),(705,-1191355200,2),(705,-1175367600,1),(705,-1159819200,2),(705,-633812400,1),(705,-622062000,2),(705,-602276400,1),(705,-591825600,2),(705,-570740400,1),(705,-560203200,2),(705,-539118000,1),(705,-531345600,2),(705,-191358000,1),(705,-184190400,2),(705,-155156400,1),(705,-150062400,2),(705,-128890800,1),(705,-121118400,2),(705,-99946800,1),(705,-89582400,2),(705,-68410800,1),(705,-57960000,2),(705,499755600,1),(705,511243200,2),(705,530600400,1),(705,540273600,2),(705,562136400,1),(705,571204800,2),(705,750834000,1),(705,761716800,2),(705,1214283600,3),(705,1384056000,2),(705,2147483647,2),(706,-1546279392,2),(706,547020000,1),(706,559717200,2),(706,578469600,1),(706,591166800,2),(707,-1514736000,1),(707,-1451667600,2),(707,-1343062800,1),(707,-1234803600,2),(707,-1222963200,3),(707,-1207242000,2),(707,-873820800,4),(707,-769395600,5),(707,-761677200,2),(707,-686073600,3),(707,-661539600,2),(707,-495039600,3),(707,-481734000,2),(707,-463590000,3),(707,-450284400,2),(707,-431535600,3),(707,-418230000,2),(707,-400086000,3),(707,-386780400,2),(707,-368636400,3),(707,-355330800,2),(707,-337186800,3),(707,-323881200,2),(707,-305737200,3),(707,-292431600,2),(707,199274400,3),(707,215600400,2),(707,230724000,3),(707,247050000,2),(707,262778400,3),(707,278499600,2),(707,294228000,3),(707,309949200,2),(707,325677600,3),(707,341398800,2),(707,357127200,3),(707,372848400,2),(707,388576800,3),(707,404902800,2),(707,420026400,3),(707,436352400,2),(707,452080800,3),(707,467802000,2),(707,483530400,3),(707,499251600,2),(707,514980000,3),(707,530701200,2),(707,544615200,3),(707,562150800,2),(707,576064800,3),(707,594205200,2),(707,607514400,3),(707,625654800,2),(707,638964000,3),(707,657104400,2),(707,671018400,3),(707,688554000,2),(707,702468000,3),(707,720003600,2),(707,733917600,3),(707,752058000,2),(707,765367200,3),(707,783507600,2),(707,796816800,3),(707,814957200,2),(707,828871200,3),(707,846406800,2),(707,860320800,3),(707,877856400,2),(707,891770400,3),(707,909306000,2),(707,923220000,3),(707,941360400,2),(707,954669600,3),(707,972810000,2),(707,986119200,3),(707,1004259600,2),(707,1018173600,3),(707,1035709200,2),(707,1049623200,3),(707,1067158800,2),(707,1081072800,3),(707,1099213200,2),(707,1112522400,3),(707,1130662800,2),(707,1143972000,3),(707,1162112400,2),(707,1175421600,3),(707,1193562000,2),(707,1207476000,3),(707,1225011600,2),(707,1238925600,3),(707,1256461200,2),(707,1268560800,3),(707,1289120400,2),(707,1300010400,3),(707,1320570000,2),(707,1331460000,3),(707,1352019600,2),(707,1362909600,3),(707,1383469200,2),(707,1394359200,3),(707,1414918800,2),(707,1425808800,3),(707,1446368400,2),(707,1457863200,3),(707,1478422800,2),(707,1489312800,3),(707,1509872400,2),(707,1520762400,3),(707,1541322000,2),(707,1552212000,3),(707,1572771600,2),(707,1583661600,3),(707,1604221200,2),(707,1615716000,3),(707,1636275600,2),(707,1647165600,3),(707,1667725200,2),(707,1678615200,3),(707,1699174800,2),(707,1710064800,3),(707,1730624400,2),(707,1741514400,3),(707,1762074000,2),(707,1772964000,3),(707,1793523600,2),(707,1805018400,3),(707,1825578000,2),(707,1836468000,3),(707,1857027600,2),(707,1867917600,3),(707,1888477200,2),(707,1899367200,3),(707,1919926800,2),(707,1930816800,3),(707,1951376400,2),(707,1962871200,3),(707,1983430800,2),(707,1994320800,3),(707,2014880400,2),(707,2025770400,3),(707,2046330000,2),(707,2057220000,3),(707,2077779600,2),(707,2088669600,3),(707,2109229200,2),(707,2120119200,3),(707,2140678800,2),(708,-2147483648,2),(708,-1632060000,1),(708,-1615129200,2),(708,-880207200,3),(708,-769395600,4),(708,-765385200,2),(708,-715788000,1),(708,-702486000,2),(708,-684338400,1),(708,-671036400,2),(708,-652888800,1),(708,-639586800,2),(708,-620834400,1),(708,-608137200,2),(708,-589384800,1),(708,-576082800,2),(708,-557935200,1),(708,-544633200,2),(708,-526485600,1),(708,-513183600,2),(708,-495036000,1),(708,-481734000,2),(708,-463586400,1),(708,-450284400,2),(708,-431532000,1),(708,-418230000,2),(708,-400082400,1),(708,-386780400,2),(708,-368632800,1),(708,-355330800,2),(708,-337183200,1),(708,-323881200,2),(708,-305733600,1),(708,-292431600,2),(708,-273679200,1),(708,-260982000,2),(708,-242229600,1),(708,-226508400,2),(708,-210780000,1),(708,-195058800,2),(708,-179330400,1),(708,-163609200,2),(708,-147880800,1),(708,-131554800,2),(708,-116431200,1),(708,-100105200,2),(708,-84376800,1),(708,-68655600,2),(708,-52927200,1),(708,-37206000,2),(708,-21477600,1),(708,-5756400,2),(708,9972000,1),(708,25693200,2),(708,41421600,1),(708,57747600,2),(708,73476000,1),(708,89197200,2),(708,104925600,1),(708,120646800,2),(708,136375200,1),(708,152096400,2),(708,167824800,1),(708,183546000,2),(708,199274400,1),(708,215600400,2),(708,230724000,1),(708,247050000,2),(708,262778400,1),(708,278499600,2),(708,294228000,1),(708,309949200,2),(708,325677600,1),(708,341398800,2),(708,357127200,1),(708,372848400,2),(708,388576800,1),(708,404902800,2),(708,420026400,1),(708,436352400,2),(708,452080800,1),(708,467802000,2),(708,483530400,1),(708,499251600,2),(708,514980000,1),(708,530701200,2),(708,544615200,1),(708,562150800,2),(708,576064800,1),(708,594205200,2),(708,607514400,1),(708,625654800,2),(708,638964000,1),(708,657104400,2),(708,671018400,1),(708,688554000,2),(708,702468000,1),(708,720003600,2),(708,733917600,1),(708,752058000,2),(708,765367200,1),(708,783507600,2),(708,796816800,1),(708,814957200,2),(708,828871200,1),(708,846406800,2),(708,860320800,1),(708,877856400,2),(708,891770400,1),(708,909306000,2),(708,923220000,1),(708,941360400,2),(708,954669600,1),(708,972810000,2),(708,986119200,1),(708,1004259600,2),(708,1018173600,1),(708,1035709200,2),(708,1049623200,1),(708,1067158800,2),(708,1081072800,1),(708,1099213200,2),(708,1112522400,1),(708,1130662800,2),(708,1143972000,1),(708,1162112400,2),(708,1173607200,1),(708,1194166800,2),(708,1205056800,1),(708,1225616400,2),(708,1236506400,1),(708,1257066000,2),(708,1268560800,1),(708,1289120400,2),(708,1300010400,1),(708,1320570000,2),(708,1331460000,1),(708,1352019600,2),(708,1362909600,1),(708,1383469200,2),(708,1394359200,1),(708,1414918800,2),(708,1425808800,5),(709,-2147483648,2),(709,-1633276800,1),(709,-1615136400,2),(709,-1601827200,1),(709,-1583686800,2),(709,-900259200,1),(709,-891795600,2),(709,-880214400,3),(709,-769395600,4),(709,-765392400,2),(709,-747244800,1),(709,-733942800,2),(709,-715795200,1),(709,-702493200,2),(709,-684345600,1),(709,-671043600,2),(709,-652896000,1),(709,-639594000,2),(709,-620841600,1),(709,-608144400,2),(709,-589392000,1),(709,-576090000,2),(709,-557942400,1),(709,-544640400,2),(709,-526492800,1),(709,-513190800,2),(709,-495043200,1),(709,-481741200,2),(709,-463593600,5),(709,-386787600,2),(709,-368640000,5),(709,-21488400,6),(709,-5767200,5),(709,9961200,6),(709,25682400,5),(709,1143961200,6),(709,1162101600,5),(709,1173596400,6),(709,1194156000,5),(709,1205046000,6),(709,1225605600,5),(709,1236495600,6),(709,1257055200,5),(709,1268550000,6),(709,1289109600,5),(709,1299999600,6),(709,1320559200,5),(709,1331449200,6),(709,1352008800,5),(709,1362898800,6),(709,1383458400,5),(709,1394348400,6),(709,1414908000,5),(709,1425798000,6),(709,1446357600,5),(709,1457852400,6),(709,1478412000,5),(709,1489302000,6),(709,1509861600,5),(709,1520751600,6),(709,1541311200,5),(709,1552201200,6),(709,1572760800,5),(709,1583650800,6),(709,1604210400,5),(709,1615705200,6),(709,1636264800,5),(709,1647154800,6),(709,1667714400,5),(709,1678604400,6),(709,1699164000,5),(709,1710054000,6),(709,1730613600,5),(709,1741503600,6),(709,1762063200,5),(709,1772953200,6),(709,1793512800,5),(709,1805007600,6),(709,1825567200,5),(709,1836457200,6),(709,1857016800,5),(709,1867906800,6),(709,1888466400,5),(709,1899356400,6),(709,1919916000,5),(709,1930806000,6),(709,1951365600,5),(709,1962860400,6),(709,1983420000,5),(709,1994310000,6),(709,2014869600,5),(709,2025759600,6),(709,2046319200,5),(709,2057209200,6),(709,2077768800,5),(709,2088658800,6),(709,2109218400,5),(709,2120108400,6),(709,2140668000,5),(710,-1767216360,2),(710,-1206957600,1),(710,-1191362400,2),(710,-1175374800,1),(710,-1159826400,2),(710,-633819600,1),(710,-622069200,2),(710,-602283600,1),(710,-591832800,2),(710,-570747600,1),(710,-560210400,2),(710,-539125200,1),(710,-531352800,2),(710,-191365200,1),(710,-184197600,2),(710,-155163600,1),(710,-150069600,2),(710,-128898000,1),(710,-121125600,2),(710,-99954000,1),(710,-89589600,2),(710,-68418000,1),(710,-57967200,2),(710,499748400,1),(710,511236000,2),(710,530593200,1),(710,540266400,2),(710,562129200,1),(710,571197600,2),(710,592974000,1),(710,602042400,2),(710,624423600,1),(710,634701600,2),(710,938919600,1),(710,951616800,2),(710,970974000,1),(710,972180000,2),(710,1003028400,1),(710,1013911200,2),(710,2147483647,2),(711,-2131646412,2),(711,-1632074400,1),(711,-1615143600,2),(711,-880221600,3),(711,-769395600,4),(711,-765399600,2),(711,-526500000,1),(711,-513198000,2),(711,73461600,1),(711,89182800,2),(711,104911200,1),(711,120632400,2),(711,136360800,1),(711,152082000,2),(711,167810400,1),(711,183531600,2),(711,199260000,1),(711,215586000,2),(711,230709600,1),(711,247035600,2),(711,262764000,1),(711,278485200,2),(711,294213600,1),(711,309934800,2),(711,325663200,1),(711,341384400,2),(711,357112800,1),(711,372834000,2),(711,388562400,1),(711,404888400,2),(711,420012000,1),(711,436338000,2),(711,452066400,1),(711,467787600,2),(711,483516000,1),(711,499237200,2),(711,514965600,1),(711,530686800,2),(711,544600800,1),(711,562136400,2),(711,576050400,1),(711,594190800,2),(711,607500000,1),(711,625640400,2),(711,638949600,1),(711,657090000,2),(711,671004000,1),(711,688539600,2),(711,702453600,1),(711,719989200,2),(711,733903200,1),(711,752043600,2),(711,765352800,1),(711,783493200,2),(711,796802400,1),(711,814942800,2),(711,828856800,1),(711,846392400,2),(711,860306400,1),(711,877842000,2),(711,891756000,1),(711,909291600,2),(711,923205600,1),(711,941346000,2),(711,954655200,1),(711,972795600,2),(711,986104800,1),(711,1004245200,2),(711,1018159200,1),(711,1035694800,2),(711,1049608800,1),(711,1067144400,2),(711,1081058400,1),(711,1099198800,2),(711,1112508000,1),(711,1130648400,2),(711,1143957600,1),(711,1162098000,2),(711,1173592800,1),(711,1194152400,2),(711,1205042400,1),(711,1225602000,2),(711,1236492000,1),(711,1257051600,2),(711,1268546400,1),(711,1289106000,2),(711,1299996000,1),(711,1320555600,2),(711,1331445600,1),(711,1352005200,2),(711,1362895200,1),(711,1383454800,2),(711,1394344800,1),(711,1414904400,2),(711,1425794400,1),(711,1446354000,2),(711,1457848800,1),(711,1478408400,2),(711,1489298400,1),(711,1509858000,2),(711,1520748000,1),(711,1541307600,2),(711,1552197600,1),(711,1572757200,2),(711,1583647200,1),(711,1604206800,2),(711,1615701600,1),(711,1636261200,2),(711,1647151200,1),(711,1667710800,2),(711,1678600800,1),(711,1699160400,2),(711,1710050400,1),(711,1730610000,2),(711,1741500000,1),(711,1762059600,2),(711,1772949600,1),(711,1793509200,2),(711,1805004000,1),(711,1825563600,2),(711,1836453600,1),(711,1857013200,2),(711,1867903200,1),(711,1888462800,2),(711,1899352800,1),(711,1919912400,2),(711,1930802400,1),(711,1951362000,2),(711,1962856800,1),(711,1983416400,2),(711,1994306400,1),(711,2014866000,2),(711,2025756000,1),(711,2046315600,2),(711,2057205600,1),(711,2077765200,2),(711,2088655200,1),(711,2109214800,2),(711,2120104800,1),(711,2140664400,2),(712,-1686083584,1),(712,323845200,4),(712,338950800,2),(712,354675600,3),(712,370400400,2),(712,386125200,3),(712,401850000,2),(712,417574800,3),(712,433299600,2),(712,449024400,3),(712,465354000,2),(712,481078800,3),(712,496803600,2),(712,512528400,3),(712,528253200,2),(712,543978000,3),(712,559702800,2),(712,575427600,3),(712,591152400,2),(712,606877200,3),(712,622602000,2),(712,638326800,3),(712,654656400,2),(712,670381200,3),(712,686106000,2),(712,701830800,3),(712,717555600,2),(712,733280400,3),(712,749005200,2),(712,764730000,3),(712,780454800,2),(712,796179600,3),(712,811904400,2),(712,828234000,3),(712,846378000,2),(712,859683600,3),(712,877827600,2),(712,891133200,3),(712,909277200,2),(712,922582800,3),(712,941331600,2),(712,954032400,3),(712,972781200,2),(712,985482000,3),(712,1004230800,2),(712,1017536400,3),(712,1035680400,2),(712,1048986000,3),(712,1067130000,2),(712,1080435600,3),(712,1099184400,2),(712,1111885200,3),(712,1130634000,2),(712,1143334800,3),(712,1162083600,2),(712,1174784400,3),(712,1193533200,2),(712,1206838800,3),(712,1224982800,2),(712,1238288400,3),(712,1256432400,2),(712,1269738000,3),(712,1288486800,2),(712,1301187600,3),(712,1319936400,2),(712,1332637200,3),(712,1351386000,2),(712,1364691600,3),(712,1382835600,2),(712,1396141200,3),(712,1414285200,2),(712,1427590800,3),(712,1445734800,2),(712,1459040400,3),(712,1477789200,2),(712,1490490000,3),(712,1509238800,2),(712,1521939600,3),(712,1540688400,2),(712,1553994000,3),(712,1572138000,2),(712,1585443600,3),(712,1603587600,2),(712,1616893200,3),(712,1635642000,2),(712,1648342800,3),(712,1667091600,2),(712,1679792400,3),(712,1698541200,2),(712,1711846800,3),(712,1729990800,2),(712,1743296400,3),(712,1761440400,2),(712,1774746000,3),(712,1792890000,2),(712,1806195600,3),(712,1824944400,2),(712,1837645200,3),(712,1856394000,2),(712,1869094800,3),(712,1887843600,2),(712,1901149200,3),(712,1919293200,2),(712,1932598800,3),(712,1950742800,2),(712,1964048400,3),(712,1982797200,2),(712,1995498000,3),(712,2014246800,2),(712,2026947600,3),(712,2045696400,2),(712,2058397200,3),(712,2077146000,2),(712,2090451600,3),(712,2108595600,2),(712,2121901200,3),(712,2140045200,2),(712,2147483647,2),(713,-2147483648,1),(713,-1632076148,2),(713,-1615145348,1),(713,-1096921748,3),(713,-1061670600,4),(713,-1048973400,3),(713,-1030221000,4),(713,-1017523800,3),(713,-998771400,4),(713,-986074200,3),(713,-966717000,4),(713,-954624600,3),(713,-935267400,4),(713,-922570200,3),(713,-903817800,4),(713,-891120600,3),(713,-872368200,6),(713,-769395600,5),(713,-765401400,3),(713,-746044200,4),(713,-733347000,3),(713,-714594600,4),(713,-701897400,3),(713,-683145000,4),(713,-670447800,3),(713,-651695400,4),(713,-638998200,3),(713,-619641000,4),(713,-606943800,3),(713,-589401000,4),(713,-576099000,3),(713,-557951400,4),(713,-544649400,3),(713,-526501800,4),(713,-513199800,3),(713,-495052200,4),(713,-481750200,3),(713,-463602600,4),(713,-450300600,3),(713,-431548200,4),(713,-418246200,3),(713,-400098600,4),(713,-386796600,3),(713,-368649000,4),(713,-355347000,3),(713,-337199400,4),(713,-323897400,3),(713,-305749800,4),(713,-289423800,3),(713,-273695400,4),(713,-257974200,3),(713,-242245800,4),(713,-226524600,3),(713,-210796200,4),(713,-195075000,3),(713,-179346600,4),(713,-163625400,3),(713,-147897000,4),(713,-131571000,3),(713,-119903400,8),(713,-116445600,7),(713,-100119600,8),(713,-84391200,7),(713,-68670000,8),(713,-52941600,7),(713,-37220400,8),(713,-21492000,7),(713,-5770800,8),(713,9957600,7),(713,25678800,8),(713,41407200,7),(713,57733200,8),(713,73461600,7),(713,89182800,8),(713,104911200,7),(713,120632400,8),(713,136360800,7),(713,152082000,8),(713,167810400,7),(713,183531600,8),(713,199260000,7),(713,215586000,8),(713,230709600,7),(713,247035600,8),(713,262764000,7),(713,278485200,8),(713,294213600,7),(713,309934800,8),(713,325663200,7),(713,341384400,8),(713,357112800,7),(713,372834000,8),(713,388562400,7),(713,404888400,8),(713,420012000,7),(713,436338000,8),(713,452066400,7),(713,467787600,8),(713,483516000,7),(713,499237200,8),(713,514965600,7),(713,530686800,8),(713,544593660,7),(713,562129260,8),(713,576043260,9),(713,594180060,8),(713,607492860,7),(713,625633260,8),(713,638942460,7),(713,657082860,8),(713,670996860,7),(713,688532460,8),(713,702446460,7),(713,719982060,8),(713,733896060,7),(713,752036460,8),(713,765345660,7),(713,783486060,8),(713,796795260,7),(713,814935660,8),(713,828849660,7),(713,846385260,8),(713,860299260,7),(713,877834860,8),(713,891748860,7),(713,909284460,8),(713,923198460,7),(713,941338860,8),(713,954648060,7),(713,972788460,8),(713,986097660,7),(713,1004238060,8),(713,1018152060,7),(713,1035687660,8),(713,1049601660,7),(713,1067137260,8),(713,1081051260,7),(713,1099191660,8),(713,1112500860,7),(713,1130641260,8),(713,1143950460,7),(713,1162090860,8),(713,1173585660,7),(713,1194145260,8),(713,1205035260,7),(713,1225594860,8),(713,1236484860,7),(713,1257044460,8),(713,1268539260,7),(713,1289098860,8),(713,1299988860,7),(713,1320555600,8),(713,1331445600,7),(713,1352005200,8),(713,1362895200,7),(713,1383454800,8),(713,1394344800,7),(713,1414904400,8),(713,1425794400,7),(713,1446354000,8),(713,1457848800,7),(713,1478408400,8),(713,1489298400,7),(713,1509858000,8),(713,1520748000,7),(713,1541307600,8),(713,1552197600,7),(713,1572757200,8),(713,1583647200,7),(713,1604206800,8),(713,1615701600,7),(713,1636261200,8),(713,1647151200,7),(713,1667710800,8),(713,1678600800,7),(713,1699160400,8),(713,1710050400,7),(713,1730610000,8),(713,1741500000,7),(713,1762059600,8),(713,1772949600,7),(713,1793509200,8),(713,1805004000,7),(713,1825563600,8),(713,1836453600,7),(713,1857013200,8),(713,1867903200,7),(713,1888462800,8),(713,1899352800,7),(713,1919912400,8),(713,1930802400,7),(713,1951362000,8),(713,1962856800,7),(713,1983416400,8),(713,1994306400,7),(713,2014866000,8),(713,2025756000,7),(713,2046315600,8),(713,2057205600,7),(713,2077765200,8),(713,2088655200,7),(713,2109214800,8),(713,2120104800,7),(713,2140664400,8),(714,-2147483648,1),(714,-1827687170,2),(714,294217200,3),(714,309938400,2),(714,325666800,3),(714,341388000,2),(714,357116400,3),(714,372837600,2),(714,388566000,3),(714,404892000,2),(714,420015600,3),(714,436341600,2),(714,452070000,3),(714,467791200,2),(714,483519600,3),(714,499240800,2),(714,514969200,3),(714,530690400,2),(714,544604400,3);
/*!40000 ALTER TABLE `time_zone_transition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition_type`
--

DROP TABLE IF EXISTS `time_zone_transition_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition_type` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  `Offset` int(11) NOT NULL DEFAULT 0,
  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT 0,
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) ENGINE=Aria DEFAULT CHARSET=utf8mb3 PAGE_CHECKSUM=1 TRANSACTIONAL=1 COMMENT='Time zone transition types';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition_type`
--

LOCK TABLES `time_zone_transition_type` WRITE;
/*!40000 ALTER TABLE `time_zone_transition_type` DISABLE KEYS */;
INSERT INTO `time_zone_transition_type` VALUES (1,0,-968,0,'LMT'),(1,1,0,0,'GMT'),(2,0,-968,0,'LMT'),(2,1,0,0,'GMT'),(3,0,8836,0,'LMT'),(3,1,9000,0,'+0230'),(3,2,10800,0,'EAT'),(3,3,9900,0,'+0245'),(3,4,10800,0,'EAT'),(4,0,732,0,'LMT'),(4,1,561,0,'PMT'),(4,2,3600,1,'WEST'),(4,3,0,0,'WET'),(4,4,0,0,'WET'),(4,5,7200,1,'CEST'),(4,6,3600,0,'CET'),(4,7,3600,1,'WEST'),(5,0,8836,0,'LMT'),(5,1,9000,0,'+0230'),(5,2,10800,0,'EAT'),(5,3,9900,0,'+0245'),(5,4,10800,0,'EAT'),(6,0,8836,0,'LMT'),(6,1,9000,0,'+0230'),(6,2,10800,0,'EAT'),(6,3,9900,0,'+0245'),(6,4,10800,0,'EAT'),(7,0,-968,0,'LMT'),(7,1,0,0,'GMT'),(8,0,815,0,'LMT'),(8,1,0,0,'GMT'),(8,2,1800,0,'+0030'),(8,3,3600,0,'WAT'),(9,0,-968,0,'LMT'),(9,1,0,0,'GMT'),(10,0,-3740,0,'LMT'),(10,1,-3600,0,'-01'),(10,2,0,0,'GMT'),(11,0,7820,0,'LMT'),(11,1,7200,0,'CAT'),(12,0,815,0,'LMT'),(12,1,0,0,'GMT'),(12,2,1800,0,'+0030'),(12,3,3600,0,'WAT'),(13,0,7820,0,'LMT'),(13,1,7200,0,'CAT'),(14,0,7509,0,'LMT'),(14,1,10800,1,'EEST'),(14,2,7200,0,'EET'),(14,3,10800,1,'EEST'),(15,0,-1820,0,'LMT'),(15,1,3600,1,'+01'),(15,2,0,0,'+00'),(15,3,3600,0,'+01'),(15,4,0,1,'+00'),(16,0,-1276,0,'LMT'),(16,1,0,0,'WET'),(16,2,3600,1,'WEST'),(16,3,0,0,'WET'),(16,4,3600,0,'CET'),(16,5,7200,1,'CEST'),(16,6,3600,0,'CET'),(17,0,-968,0,'LMT'),(17,1,0,0,'GMT'),(18,0,-968,0,'LMT'),(18,1,0,0,'GMT'),(19,0,8836,0,'LMT'),(19,1,9000,0,'+0230'),(19,2,10800,0,'EAT'),(19,3,9900,0,'+0245'),(19,4,10800,0,'EAT'),(20,0,8836,0,'LMT'),(20,1,9000,0,'+0230'),(20,2,10800,0,'EAT'),(20,3,9900,0,'+0245'),(20,4,10800,0,'EAT'),(21,0,815,0,'LMT'),(21,1,0,0,'GMT'),(21,2,1800,0,'+0030'),(21,3,3600,0,'WAT'),(22,0,-3168,0,'LMT'),(22,1,-3600,0,'-01'),(22,2,3600,1,'+01'),(22,3,0,0,'+00'),(22,4,0,1,'+00'),(22,5,3600,0,'+01'),(23,0,-968,0,'LMT'),(23,1,0,0,'GMT'),(24,0,7820,0,'LMT'),(24,1,7200,0,'CAT'),(25,0,7820,0,'LMT'),(25,1,7200,0,'CAT'),(26,0,6720,0,'LMT'),(26,1,5400,0,'SAST'),(26,2,10800,1,'SAST'),(26,3,7200,0,'SAST'),(27,0,7588,0,'LMT'),(27,1,10800,1,'CAST'),(27,2,7200,0,'CAT'),(27,3,10800,0,'EAT'),(27,4,7200,0,'CAT'),(28,0,8836,0,'LMT'),(28,1,9000,0,'+0230'),(28,2,10800,0,'EAT'),(28,3,9900,0,'+0245'),(28,4,10800,0,'EAT'),(29,0,7808,0,'LMT'),(29,1,10800,1,'CAST'),(29,2,7200,0,'CAT'),(29,3,10800,0,'EAT'),(29,4,7200,0,'CAT'),(30,0,7820,0,'LMT'),(30,1,7200,0,'CAT'),(31,0,815,0,'LMT'),(31,1,0,0,'GMT'),(31,2,1800,0,'+0030'),(31,3,3600,0,'WAT'),(32,0,815,0,'LMT'),(32,1,0,0,'GMT'),(32,2,1800,0,'+0030'),(32,3,3600,0,'WAT'),(33,0,815,0,'LMT'),(33,1,0,0,'GMT'),(33,2,1800,0,'+0030'),(33,3,3600,0,'WAT'),(34,0,-968,0,'LMT'),(34,1,0,0,'GMT'),(35,0,815,0,'LMT'),(35,1,0,0,'GMT'),(35,2,1800,0,'+0030'),(35,3,3600,0,'WAT'),(36,0,7820,0,'LMT'),(36,1,7200,0,'CAT'),(37,0,7820,0,'LMT'),(37,1,7200,0,'CAT'),(38,0,815,0,'LMT'),(38,1,0,0,'GMT'),(38,2,1800,0,'+0030'),(38,3,3600,0,'WAT'),(39,0,7820,0,'LMT'),(39,1,7200,0,'CAT'),(40,0,6720,0,'LMT'),(40,1,5400,0,'SAST'),(40,2,10800,1,'SAST'),(40,3,7200,0,'SAST'),(41,0,6720,0,'LMT'),(41,1,5400,0,'SAST'),(41,2,10800,1,'SAST'),(41,3,7200,0,'SAST'),(42,0,8836,0,'LMT'),(42,1,9000,0,'+0230'),(42,2,10800,0,'EAT'),(42,3,9900,0,'+0245'),(42,4,10800,0,'EAT'),(43,0,-2588,0,'LMT'),(43,1,-2588,0,'MMT'),(43,2,-2670,0,'MMT'),(43,3,0,0,'GMT'),(44,0,8836,0,'LMT'),(44,1,9000,0,'+0230'),(44,2,10800,0,'EAT'),(44,3,9900,0,'+0245'),(44,4,10800,0,'EAT'),(45,0,3612,0,'LMT'),(45,1,3600,0,'WAT'),(45,2,7200,1,'WAST'),(46,0,815,0,'LMT'),(46,1,0,0,'GMT'),(46,2,1800,0,'+0030'),(46,3,3600,0,'WAT'),(47,0,-968,0,'LMT'),(47,1,0,0,'GMT'),(48,0,-968,0,'LMT'),(48,1,0,0,'GMT'),(49,0,815,0,'LMT'),(49,1,0,0,'GMT'),(49,2,1800,0,'+0030'),(49,3,3600,0,'WAT'),(50,0,1616,0,'LMT'),(50,1,-2205,0,'LMT'),(50,2,0,0,'GMT'),(50,3,3600,0,'WAT'),(50,4,0,0,'GMT'),(51,0,-968,0,'LMT'),(51,1,0,0,'GMT'),(52,0,3164,0,'LMT'),(52,1,7200,1,'CEST'),(52,2,3600,0,'CET'),(52,3,7200,0,'EET'),(53,0,2444,0,'LMT'),(53,1,561,0,'PMT'),(53,2,7200,1,'CEST'),(53,3,3600,0,'CET'),(53,4,3600,0,'CET'),(53,5,7200,1,'CEST'),(54,0,4104,0,'LMT'),(54,1,5400,0,'+0130'),(54,2,7200,0,'SAST'),(54,3,10800,1,'SAST'),(54,4,3600,1,'WAT'),(54,5,7200,0,'CAT'),(55,0,44002,0,'LMT'),(55,1,-39600,0,'NST'),(55,2,-36000,1,'NWT'),(55,3,-36000,1,'NPT'),(55,4,-39600,0,'BST'),(55,5,-36000,1,'BDT'),(55,6,-36000,0,'AHST'),(55,7,-32400,1,'HDT'),(55,8,-36000,0,'HST'),(56,0,50424,0,'LMT'),(56,1,-36000,0,'AST'),(56,2,-32400,1,'AWT'),(56,3,-32400,1,'APT'),(56,4,-36000,0,'AHST'),(56,5,-32400,1,'AHDT'),(56,6,-32400,0,'YST'),(56,7,-28800,1,'AKDT'),(56,8,-32400,0,'AKST'),(57,0,-15865,0,'LMT'),(57,1,-14400,0,'AST'),(57,2,-10800,1,'APT'),(57,3,-10800,1,'AWT'),(58,0,-15865,0,'LMT'),(58,1,-14400,0,'AST'),(58,2,-10800,1,'APT'),(58,3,-10800,1,'AWT'),(59,0,-11568,0,'LMT'),(59,1,-7200,1,'-02'),(59,2,-10800,0,'-03'),(60,0,-14028,0,'LMT'),(60,1,-15408,0,'CMT'),(60,2,-14400,0,'-04'),(60,3,-10800,1,'-03'),(60,4,-7200,1,'-02'),(60,5,-10800,0,'-03'),(61,0,-15788,0,'LMT'),(61,1,-15408,0,'CMT'),(61,2,-14400,0,'-04'),(61,3,-10800,1,'-03'),(61,4,-7200,1,'-02'),(61,5,-10800,0,'-03'),(62,0,-15788,0,'LMT'),(62,1,-15408,0,'CMT'),(62,2,-14400,0,'-04'),(62,3,-10800,1,'-03'),(62,4,-7200,1,'-02'),(62,5,-10800,0,'-03'),(63,0,-15408,0,'LMT'),(63,1,-15408,0,'CMT'),(63,2,-14400,0,'-04'),(63,3,-10800,1,'-03'),(63,4,-7200,1,'-02'),(63,5,-10800,0,'-03'),(64,0,-15672,0,'LMT'),(64,1,-15408,0,'CMT'),(64,2,-14400,0,'-04'),(64,3,-10800,1,'-03'),(64,4,-7200,1,'-02'),(64,5,-10800,0,'-03'),(65,0,-16044,0,'LMT'),(65,1,-15408,0,'CMT'),(65,2,-14400,0,'-04'),(65,3,-10800,1,'-03'),(65,4,-7200,1,'-02'),(65,5,-10800,0,'-03'),(66,0,-16516,0,'LMT'),(66,1,-15408,0,'CMT'),(66,2,-14400,0,'-04'),(66,3,-10800,1,'-03'),(66,4,-7200,1,'-02'),(66,5,-10800,0,'-03'),(67,0,-16612,0,'LMT'),(67,1,-15408,0,'CMT'),(67,2,-14400,0,'-04'),(67,3,-10800,1,'-03'),(67,4,-7200,1,'-02'),(67,5,-10800,0,'-03'),(68,0,-15700,0,'LMT'),(68,1,-15408,0,'CMT'),(68,2,-14400,0,'-04'),(68,3,-10800,1,'-03'),(68,4,-7200,1,'-02'),(68,5,-10800,0,'-03'),(69,0,-16444,0,'LMT'),(69,1,-15408,0,'CMT'),(69,2,-14400,0,'-04'),(69,3,-10800,1,'-03'),(69,4,-7200,1,'-02'),(69,5,-10800,0,'-03'),(70,0,-15924,0,'LMT'),(70,1,-15408,0,'CMT'),(70,2,-14400,0,'-04'),(70,3,-10800,1,'-03'),(70,4,-7200,1,'-02'),(70,5,-10800,0,'-03'),(70,6,-10800,1,'-03'),(71,0,-15652,0,'LMT'),(71,1,-15408,0,'CMT'),(71,2,-14400,0,'-04'),(71,3,-10800,1,'-03'),(71,4,-7200,1,'-02'),(71,5,-10800,0,'-03'),(72,0,-16392,0,'LMT'),(72,1,-15408,0,'CMT'),(72,2,-14400,0,'-04'),(72,3,-10800,1,'-03'),(72,4,-7200,1,'-02'),(72,5,-10800,0,'-03'),(73,0,-15865,0,'LMT'),(73,1,-14400,0,'AST'),(73,2,-10800,1,'APT'),(73,3,-10800,1,'AWT'),(74,0,-13840,0,'LMT'),(74,1,-13840,0,'AMT'),(74,2,-14400,0,'-04'),(74,3,-10800,0,'-03'),(74,4,-10800,1,'-03'),(74,5,-14400,0,'-04'),(75,0,-19088,0,'LMT'),(75,1,-19176,0,'CMT'),(75,2,-18000,0,'EST'),(76,0,44002,0,'LMT'),(76,1,-39600,0,'NST'),(76,2,-36000,1,'NWT'),(76,3,-36000,1,'NPT'),(76,4,-39600,0,'BST'),(76,5,-36000,1,'BDT'),(76,6,-36000,0,'AHST'),(76,7,-32400,1,'HDT'),(76,8,-36000,0,'HST'),(77,0,-9244,0,'LMT'),(77,1,-7200,1,'-02'),(77,2,-10800,0,'-03'),(78,0,-25260,0,'LMT'),(78,1,-25200,0,'MST'),(78,2,-21600,0,'CST'),(78,3,-28800,0,'PST'),(78,4,-21600,1,'MDT'),(78,5,-18000,1,'CDT'),(78,6,-21600,0,'CST'),(79,0,-14309,0,'LMT'),(79,1,-10800,1,'ADT'),(79,2,-14400,0,'AST'),(79,3,-14400,0,'AST'),(79,4,-12600,1,'-0330'),(79,5,-10800,1,'ADT'),(80,0,-11636,0,'LMT'),(80,1,-7200,1,'-02'),(80,2,-10800,0,'-03'),(81,0,-21168,0,'LMT'),(81,1,-19800,1,'-0530'),(81,2,-21600,0,'CST'),(81,3,-18000,1,'CWT'),(81,4,-18000,1,'CPT'),(81,5,-18000,1,'CDT'),(82,0,-15865,0,'LMT'),(82,1,-14400,0,'AST'),(82,2,-10800,1,'APT'),(82,3,-10800,1,'AWT'),(83,0,-14560,0,'LMT'),(83,1,-10800,1,'-03'),(83,2,-14400,0,'-04'),(84,0,-17776,0,'LMT'),(84,1,-17776,0,'BMT'),(84,2,-14400,1,'-04'),(84,3,-18000,0,'-05'),(85,0,-27889,0,'LMT'),(85,1,-25200,1,'PDT'),(85,2,-28800,0,'PST'),(85,3,-21600,1,'MWT'),(85,4,-21600,1,'MPT'),(85,5,-25200,0,'MST'),(85,6,-21600,1,'MDT'),(86,0,-14028,0,'LMT'),(86,1,-15408,0,'CMT'),(86,2,-14400,0,'-04'),(86,3,-10800,1,'-03'),(86,4,-7200,1,'-02'),(86,5,-10800,0,'-03'),(87,0,0,0,'-00'),(87,1,-21600,1,'MWT'),(87,2,-21600,1,'MPT'),(87,3,-25200,0,'MST'),(87,4,-18000,1,'MDDT'),(87,5,-21600,1,'MDT'),(87,6,-18000,1,'CDT'),(87,7,-21600,0,'CST'),(87,8,-18000,0,'EST'),(87,9,-21600,1,'MDT'),(87,10,-25200,0,'MST'),(88,0,-13108,0,'LMT'),(88,1,-10800,1,'-03'),(88,2,-14400,0,'-04'),(89,0,-20824,0,'LMT'),(89,1,-21600,0,'CST'),(89,2,-14400,1,'EDT'),(89,3,-18000,0,'EST'),(89,4,-18000,1,'CDT'),(90,0,-16064,0,'LMT'),(90,1,-16060,0,'CMT'),(90,2,-16200,0,'-0430'),(90,3,-14400,0,'-04'),(91,0,-15788,0,'LMT'),(91,1,-15408,0,'CMT'),(91,2,-14400,0,'-04'),(91,3,-10800,1,'-03'),(91,4,-7200,1,'-02'),(91,5,-10800,0,'-03'),(92,0,-12560,0,'LMT'),(92,1,-14400,0,'-04'),(92,2,-10800,0,'-03'),(93,0,-19088,0,'LMT'),(93,1,-19176,0,'CMT'),(93,2,-18000,0,'EST'),(94,0,-21036,0,'LMT'),(94,1,-18000,1,'CDT'),(94,2,-21600,0,'CST'),(94,3,-18000,0,'EST'),(94,4,-18000,1,'CWT'),(94,5,-18000,1,'CPT'),(94,6,-21600,0,'CST'),(95,0,-25460,0,'LMT'),(95,1,-25200,0,'MST'),(95,2,-21600,0,'CST'),(95,3,-18000,1,'CDT'),(95,4,-21600,1,'MDT'),(95,5,-25200,0,'MST'),(96,0,-19088,0,'LMT'),(96,1,-19176,0,'CMT'),(96,2,-18000,0,'EST'),(97,0,-15408,0,'LMT'),(97,1,-15408,0,'CMT'),(97,2,-14400,0,'-04'),(97,3,-10800,1,'-03'),(97,4,-7200,1,'-02'),(97,5,-10800,0,'-03'),(98,0,-20173,0,'LMT'),(98,1,-20173,0,'SJMT'),(98,2,-18000,1,'CDT'),(98,3,-21600,0,'CST'),(99,0,-26898,0,'LMT'),(99,1,-21600,1,'MDT'),(99,2,-25200,0,'MST'),(99,3,-21600,1,'MWT'),(100,0,-13460,0,'LMT'),(100,1,-10800,1,'-03'),(100,2,-14400,0,'-04'),(101,0,-15865,0,'LMT'),(101,1,-14400,0,'AST'),(101,2,-10800,1,'APT'),(101,3,-10800,1,'AWT'),(102,0,-4480,0,'LMT'),(102,1,-10800,0,'-03'),(102,2,-10800,0,'-03'),(102,3,-7200,1,'-02'),(102,4,-7200,1,'-02'),(102,5,0,0,'GMT'),(103,0,-33460,0,'LMT'),(103,1,-28800,1,'YDT'),(103,2,-32400,0,'YST'),(103,3,-28800,1,'YWT'),(103,4,-28800,1,'YPT'),(103,5,-25200,1,'YDDT'),(103,6,-28800,0,'PST'),(103,7,-25200,1,'PDT'),(103,8,-25200,0,'MST'),(104,0,-28856,0,'LMT'),(104,1,-25200,1,'PDT'),(104,2,-28800,0,'PST'),(104,3,-25200,1,'PWT'),(104,4,-25200,1,'PPT'),(104,5,-25200,0,'MST'),(105,0,-25196,0,'LMT'),(105,1,-21600,1,'MDT'),(105,2,-25200,0,'MST'),(105,3,-21600,1,'MWT'),(105,4,-21600,1,'MPT'),(106,0,-19931,0,'LMT'),(106,1,-21600,0,'CST'),(106,2,-18000,0,'EST'),(106,3,-14400,1,'EWT'),(106,4,-14400,1,'EPT'),(106,5,-14400,1,'EDT'),(107,0,-15865,0,'LMT'),(107,1,-14400,0,'AST'),(107,2,-10800,1,'APT'),(107,3,-10800,1,'AWT'),(108,0,-27232,0,'LMT'),(108,1,-21600,1,'MDT'),(108,2,-25200,0,'MST'),(108,3,-21600,1,'MWT'),(108,4,-21600,1,'MPT'),(109,0,-16768,0,'LMT'),(109,1,-14400,1,'-04'),(109,2,-18000,0,'-05'),(109,3,-14400,0,'-04'),(109,4,-18000,0,'-05'),(110,0,-21408,0,'LMT'),(110,1,-18000,1,'CDT'),(110,2,-21600,0,'CST'),(111,0,-28084,0,'LMT'),(111,1,-25200,0,'MST'),(111,2,-28800,0,'PST'),(111,3,-25200,1,'PDT'),(111,4,-25200,1,'PWT'),(111,5,-25200,1,'PPT'),(112,0,-29447,0,'LMT'),(112,1,-25200,1,'PDT'),(112,2,-28800,0,'PST'),(112,3,-25200,1,'PWT'),(112,4,-25200,1,'PPT'),(112,5,-25200,0,'MST'),(113,0,-20678,0,'LMT'),(113,1,-18000,1,'CDT'),(113,2,-21600,0,'CST'),(113,3,-18000,1,'CWT'),(113,4,-18000,1,'CPT'),(113,5,-18000,0,'EST'),(113,6,-14400,1,'EDT'),(114,0,-9240,0,'LMT'),(114,1,-7200,1,'-02'),(114,2,-10800,0,'-03'),(115,0,-14388,0,'LMT'),(115,1,-10800,1,'ADT'),(115,2,-14400,0,'AST'),(115,3,-10800,1,'AWT'),(115,4,-10800,1,'APT'),(116,0,-12416,0,'LMT'),(116,1,-10800,0,'-03'),(116,2,-10800,0,'-03'),(116,3,-7200,1,'-02'),(116,4,-7200,1,'-02'),(117,0,-14500,0,'LMT'),(117,1,-12652,0,'NST'),(117,2,-9052,1,'NDT'),(117,3,-12600,0,'NST'),(117,4,-9000,1,'NDT'),(117,5,-9000,1,'NPT'),(117,6,-9000,1,'NWT'),(117,7,-10800,1,'ADT'),(117,8,-14400,0,'AST'),(117,9,-7200,1,'ADDT'),(117,10,-10800,1,'ADT'),(118,0,-17072,0,'LMT'),(118,1,-18430,0,'KMT'),(118,2,-18000,0,'EST'),(118,3,-14400,1,'EDT'),(118,4,-14400,0,'AST'),(118,5,-18000,0,'EST'),(119,0,-15865,0,'LMT'),(119,1,-14400,0,'AST'),(119,2,-10800,1,'APT'),(119,3,-10800,1,'AWT'),(120,0,-15865,0,'LMT'),(120,1,-14400,0,'AST'),(120,2,-10800,1,'APT'),(120,3,-10800,1,'AWT'),(121,0,-21724,0,'LMT'),(121,1,-18000,1,'CDT'),(121,2,-21600,0,'CST'),(122,0,-19160,0,'LMT'),(122,1,-18840,0,'QMT'),(122,2,-14400,1,'-04'),(122,3,-18000,0,'-05'),(123,0,-13959,0,'LMT'),(123,1,-14400,0,'-04'),(123,2,-13500,0,'-0345'),(123,3,-10800,0,'-03'),(123,4,-14400,0,'-04'),(124,0,-15264,0,'LMT'),(124,1,-10800,1,'ADT'),(124,2,-14400,0,'AST'),(124,3,-10800,1,'AWT'),(124,4,-10800,1,'APT'),(125,0,-19768,0,'LMT'),(125,1,-19776,0,'HMT'),(125,2,-14400,1,'CDT'),(125,3,-18000,0,'CST'),(125,4,-18000,0,'CST'),(125,5,-14400,1,'CDT'),(126,0,-26632,0,'LMT'),(126,1,-25200,0,'MST'),(126,2,-21600,0,'CST'),(126,3,-28800,0,'PST'),(126,4,-21600,1,'MDT'),(126,5,-25200,0,'MST'),(127,0,-20678,0,'LMT'),(127,1,-18000,1,'CDT'),(127,2,-21600,0,'CST'),(127,3,-18000,1,'CWT'),(127,4,-18000,1,'CPT'),(127,5,-18000,0,'EST'),(127,6,-14400,1,'EDT'),(128,0,-20790,0,'LMT'),(128,1,-18000,1,'CDT'),(128,2,-21600,0,'CST'),(128,3,-18000,1,'CWT'),(128,4,-18000,1,'CPT'),(128,5,-18000,0,'EST'),(128,6,-21600,0,'CST'),(129,0,-20723,0,'LMT'),(129,1,-18000,1,'CDT'),(129,2,-21600,0,'CST'),(129,3,-18000,1,'CWT'),(129,4,-18000,1,'CPT'),(129,5,-18000,0,'EST'),(129,6,-14400,1,'EDT'),(130,0,-20947,0,'LMT'),(130,1,-18000,1,'CDT'),(130,2,-21600,0,'CST'),(130,3,-18000,1,'CWT'),(130,4,-18000,1,'CPT'),(130,5,-18000,0,'EST'),(130,6,-14400,1,'EDT'),(131,0,-20823,0,'LMT'),(131,1,-18000,1,'CDT'),(131,2,-21600,0,'CST'),(131,3,-18000,1,'CWT'),(131,4,-18000,1,'CPT'),(131,5,-18000,0,'EST'),(131,6,-14400,1,'EDT'),(131,7,-18000,1,'CDT'),(131,8,-21600,0,'CST'),(132,0,-20416,0,'LMT'),(132,1,-18000,1,'CDT'),(132,2,-21600,0,'CST'),(132,3,-18000,1,'CWT'),(132,4,-18000,1,'CPT'),(132,5,-18000,0,'EST'),(132,6,-14400,1,'EDT'),(133,0,-21007,0,'LMT'),(133,1,-18000,1,'CDT'),(133,2,-21600,0,'CST'),(133,3,-18000,1,'CWT'),(133,4,-18000,1,'CPT'),(133,5,-18000,0,'EST'),(133,6,-14400,1,'EDT'),(134,0,-20785,0,'LMT'),(134,1,-18000,1,'CDT'),(134,2,-21600,0,'CST'),(134,3,-18000,1,'CWT'),(134,4,-18000,1,'CPT'),(134,5,-18000,0,'EST'),(134,6,-14400,1,'EDT'),(135,0,-20678,0,'LMT'),(135,1,-18000,1,'CDT'),(135,2,-21600,0,'CST'),(135,3,-18000,1,'CWT'),(135,4,-18000,1,'CPT'),(135,5,-18000,0,'EST'),(135,6,-14400,1,'EDT'),(136,0,0,0,'-00'),(136,1,-21600,1,'PDDT'),(136,2,-28800,0,'PST'),(136,3,-25200,0,'MST'),(136,4,-21600,1,'MDT'),(137,0,0,0,'-00'),(137,1,-14400,1,'EPT'),(137,2,-18000,0,'EST'),(137,3,-10800,1,'EDDT'),(137,4,-14400,1,'EDT'),(137,5,-14400,1,'EWT'),(137,6,-21600,0,'CST'),(137,7,-18000,1,'CDT'),(137,8,-14400,1,'EDT'),(137,9,-18000,0,'EST'),(138,0,-18430,0,'LMT'),(138,1,-18430,0,'KMT'),(138,2,-18000,0,'EST'),(138,3,-14400,1,'EDT'),(139,0,-15672,0,'LMT'),(139,1,-15408,0,'CMT'),(139,2,-14400,0,'-04'),(139,3,-10800,1,'-03'),(139,4,-7200,1,'-02'),(139,5,-10800,0,'-03'),(140,0,54139,0,'LMT'),(140,1,-28800,0,'PST'),(140,2,-25200,1,'PWT'),(140,3,-25200,1,'PPT'),(140,4,-25200,1,'PDT'),(140,5,-28800,1,'YDT'),(140,6,-32400,0,'YST'),(140,7,-28800,1,'AKDT'),(140,8,-32400,0,'AKST'),(141,0,-20582,0,'LMT'),(141,1,-18000,1,'CDT'),(141,2,-21600,0,'CST'),(141,3,-18000,1,'CWT'),(141,4,-18000,1,'CPT'),(141,5,-18000,0,'EST'),(141,6,-14400,1,'EDT'),(142,0,-20364,0,'LMT'),(142,1,-18000,1,'CDT'),(142,2,-21600,0,'CST'),(142,3,-18000,1,'CWT'),(142,4,-18000,1,'CPT'),(142,5,-14400,1,'EDT'),(142,6,-18000,0,'EST'),(143,0,-20790,0,'LMT'),(143,1,-18000,1,'CDT'),(143,2,-21600,0,'CST'),(143,3,-18000,1,'CWT'),(143,4,-18000,1,'CPT'),(143,5,-18000,0,'EST'),(143,6,-21600,0,'CST'),(144,0,-15865,0,'LMT'),(144,1,-14400,0,'AST'),(144,2,-10800,1,'APT'),(144,3,-10800,1,'AWT'),(145,0,-16356,0,'LMT'),(145,1,-16356,0,'CMT'),(145,2,-12756,1,'BST'),(145,3,-14400,0,'-04'),(146,0,-18492,0,'LMT'),(146,1,-18516,0,'LMT'),(146,2,-14400,1,'-04'),(146,3,-18000,0,'-05'),(147,0,-28378,0,'LMT'),(147,1,-25200,1,'PDT'),(147,2,-28800,0,'PST'),(147,3,-25200,1,'PWT'),(147,4,-25200,1,'PPT'),(148,0,-20582,0,'LMT'),(148,1,-18000,1,'CDT'),(148,2,-21600,0,'CST'),(148,3,-18000,1,'CWT'),(148,4,-18000,1,'CPT'),(148,5,-18000,0,'EST'),(148,6,-14400,1,'EDT'),(149,0,-15865,0,'LMT'),(149,1,-14400,0,'AST'),(149,2,-10800,1,'APT'),(149,3,-10800,1,'AWT'),(150,0,-8572,0,'LMT'),(150,1,-7200,1,'-02'),(150,2,-10800,0,'-03'),(151,0,-20708,0,'LMT'),(151,1,-20712,0,'MMT'),(151,2,-21600,0,'CST'),(151,3,-18000,0,'EST'),(151,4,-18000,1,'CDT'),(151,5,-21600,0,'CST'),(152,0,-14404,0,'LMT'),(152,1,-10800,1,'-03'),(152,2,-14400,0,'-04'),(153,0,-15865,0,'LMT'),(153,1,-14400,0,'AST'),(153,2,-10800,1,'APT'),(153,3,-10800,1,'AWT'),(154,0,-14660,0,'LMT'),(154,1,-14660,0,'FFMT'),(154,2,-14400,0,'AST'),(154,3,-10800,1,'ADT'),(155,0,-24000,0,'LMT'),(155,1,-21600,0,'CST'),(155,2,-18000,1,'CDT'),(156,0,-25540,0,'LMT'),(156,1,-25200,0,'MST'),(156,2,-21600,0,'CST'),(156,3,-28800,0,'PST'),(156,4,-21600,1,'MDT'),(156,5,-25200,0,'MST'),(157,0,-16516,0,'LMT'),(157,1,-15408,0,'CMT'),(157,2,-14400,0,'-04'),(157,3,-10800,1,'-03'),(157,4,-7200,1,'-02'),(157,5,-10800,0,'-03'),(158,0,-21027,0,'LMT'),(158,1,-18000,1,'CDT'),(158,2,-21600,0,'CST'),(158,3,-18000,1,'CWT'),(158,4,-18000,1,'CPT'),(158,5,-18000,0,'EST'),(158,6,-21600,0,'CST'),(159,0,-21508,0,'LMT'),(159,1,-21600,0,'CST'),(159,2,-18000,0,'EST'),(159,3,-18000,1,'CDT'),(159,4,-21600,0,'CST'),(160,0,54822,0,'LMT'),(160,1,-28800,0,'PST'),(160,2,-25200,1,'PWT'),(160,3,-25200,1,'PPT'),(160,4,-25200,1,'PDT'),(160,5,-32400,0,'AKST'),(160,6,-28800,1,'AKDT'),(161,0,-23796,0,'LMT'),(161,1,-25200,0,'MST'),(161,2,-21600,0,'CST'),(161,3,-18000,1,'CDT'),(161,4,-18000,1,'CWT'),(162,0,-13480,0,'LMT'),(162,1,-14400,0,'AST'),(162,2,-10800,0,'-03'),(162,3,-7200,1,'-02'),(163,0,-15548,0,'LMT'),(163,1,-18000,0,'EST'),(163,2,-10800,1,'ADT'),(163,3,-14400,0,'AST'),(163,4,-10800,1,'AWT'),(163,5,-10800,1,'APT'),(164,0,-24076,0,'LMT'),(164,1,-21600,0,'CST'),(164,2,-18000,1,'CDT'),(165,0,-13491,0,'LMT'),(165,1,-13491,0,'MMT'),(165,2,-14400,0,'-04'),(165,3,-12600,0,'-0330'),(165,4,-10800,1,'-03'),(165,5,-10800,0,'-03'),(165,6,-9000,1,'-0230'),(165,7,-7200,1,'-02'),(165,8,-5400,1,'-0130'),(165,9,-7200,1,'-02'),(166,0,-19052,0,'LMT'),(166,1,-14400,1,'EDT'),(166,2,-18000,0,'EST'),(166,3,-14400,1,'EWT'),(166,4,-14400,1,'EPT'),(167,0,-15865,0,'LMT'),(167,1,-14400,0,'AST'),(167,2,-10800,1,'APT'),(167,3,-10800,1,'AWT'),(168,0,-19052,0,'LMT'),(168,1,-14400,1,'EDT'),(168,2,-18000,0,'EST'),(168,3,-14400,1,'EWT'),(168,4,-14400,1,'EPT'),(169,0,-17762,0,'LMT'),(169,1,-14400,1,'EDT'),(169,2,-18000,0,'EST'),(169,3,-18000,0,'EST'),(169,4,-14400,1,'EWT'),(169,5,-14400,1,'EPT'),(170,0,-21184,0,'LMT'),(170,1,-14400,1,'EDT'),(170,2,-18000,0,'EST'),(170,3,-14400,1,'EWT'),(170,4,-14400,1,'EPT'),(171,0,46702,0,'LMT'),(171,1,-39600,0,'NST'),(171,2,-36000,1,'NWT'),(171,3,-36000,1,'NPT'),(171,4,-39600,0,'BST'),(171,5,-36000,1,'BDT'),(171,6,-32400,0,'YST'),(171,7,-28800,1,'AKDT'),(171,8,-32400,0,'AKST'),(172,0,-7780,0,'LMT'),(172,1,-3600,1,'-01'),(172,2,-7200,0,'-02'),(173,0,-24427,0,'LMT'),(173,1,-21600,1,'MDT'),(173,2,-25200,0,'MST'),(173,3,-21600,1,'MWT'),(173,4,-21600,1,'MPT'),(173,5,-18000,1,'CDT'),(173,6,-21600,0,'CST'),(174,0,-24312,0,'LMT'),(174,1,-21600,1,'MDT'),(174,2,-25200,0,'MST'),(174,3,-21600,1,'MWT'),(174,4,-21600,1,'MPT'),(174,5,-18000,1,'CDT'),(174,6,-21600,0,'CST'),(175,0,-24339,0,'LMT'),(175,1,-21600,1,'MDT'),(175,2,-25200,0,'MST'),(175,3,-21600,1,'MWT'),(175,4,-21600,1,'MPT'),(175,5,-18000,1,'CDT'),(175,6,-21600,0,'CST'),(176,0,-12416,0,'LMT'),(176,1,-10800,0,'-03'),(176,2,-10800,0,'-03'),(176,3,-7200,1,'-02'),(176,4,-7200,1,'-02'),(177,0,-25060,0,'LMT'),(177,1,-25200,0,'MST'),(177,2,-21600,0,'CST'),(177,3,-18000,1,'CDT'),(177,4,-21600,1,'MDT'),(177,5,-25200,0,'MST'),(178,0,-19088,0,'LMT'),(178,1,-19176,0,'CMT'),(178,2,-18000,0,'EST'),(179,0,0,0,'-00'),(179,1,-10800,1,'AWT'),(179,2,-10800,1,'APT'),(179,3,-14400,0,'AST'),(179,4,-7200,1,'ADDT'),(179,5,-10800,1,'ADT'),(179,6,-14400,1,'EDT'),(179,7,-18000,0,'EST'),(179,8,-21600,0,'CST'),(179,9,-18000,1,'CDT'),(179,10,-14400,1,'EDT'),(179,11,-18000,0,'EST'),(180,0,-13240,0,'LMT'),(180,1,-13252,0,'PMT'),(180,2,-13236,0,'PMT'),(180,3,-12600,0,'-0330'),(180,4,-10800,0,'-03'),(181,0,-26898,0,'LMT'),(181,1,-21600,1,'MDT'),(181,2,-25200,0,'MST'),(181,3,-21600,1,'MWT'),(182,0,-17360,0,'LMT'),(182,1,-17340,0,'PPMT'),(182,2,-14400,1,'EDT'),(182,3,-18000,0,'EST'),(182,4,-14400,1,'EDT'),(182,5,-18000,0,'EST'),(183,0,-15865,0,'LMT'),(183,1,-14400,0,'AST'),(183,2,-10800,1,'APT'),(183,3,-10800,1,'AWT'),(184,0,-16272,0,'LMT'),(184,1,-14400,1,'-04'),(184,2,-18000,0,'-05'),(184,3,-14400,0,'-04'),(184,4,-18000,0,'-05'),(185,0,-15336,0,'LMT'),(185,1,-10800,1,'-03'),(185,2,-14400,0,'-04'),(186,0,-15865,0,'LMT'),(186,1,-14400,0,'AST'),(186,2,-10800,1,'APT'),(186,3,-10800,1,'AWT'),(187,0,-17020,0,'LMT'),(187,1,-16965,0,'SMT'),(187,2,-18000,0,'-05'),(187,3,-14400,0,'-04'),(187,4,-14400,1,'-04'),(187,5,-10800,1,'-03'),(187,6,-14400,0,'-04'),(187,7,-10800,0,'-03'),(188,0,-22696,0,'LMT'),(188,1,-18000,1,'CDT'),(188,2,-21600,0,'CST'),(188,3,-18000,1,'CWT'),(188,4,-18000,1,'CPT'),(189,0,0,0,'-00'),(189,1,-14400,1,'CDDT'),(189,2,-21600,0,'CST'),(189,3,-18000,1,'CDT'),(189,4,-18000,0,'EST'),(189,5,-21600,0,'CST'),(190,0,-8376,0,'LMT'),(190,1,-7200,1,'-02'),(190,2,-10800,0,'-03'),(191,0,-25116,0,'LMT'),(191,1,-21600,1,'MDT'),(191,2,-25200,0,'MST'),(191,3,-21600,1,'MWT'),(191,4,-21600,1,'MPT'),(191,5,-21600,0,'CST'),(192,0,0,0,'-00'),(192,1,-14400,1,'CDDT'),(192,2,-21600,0,'CST'),(192,3,-18000,1,'CDT'),(192,4,-18000,0,'EST'),(192,5,-21600,0,'CST'),(193,0,-16272,0,'LMT'),(193,1,-14400,1,'-04'),(193,2,-18000,0,'-05'),(193,3,-14400,0,'-04'),(193,4,-18000,0,'-05'),(194,0,-15408,0,'LMT'),(194,1,-15408,0,'CMT'),(194,2,-14400,0,'-04'),(194,3,-10800,1,'-03'),(194,4,-7200,1,'-02'),(194,5,-10800,0,'-03'),(195,0,-28084,0,'LMT'),(195,1,-25200,0,'MST'),(195,2,-28800,0,'PST'),(195,3,-25200,1,'PDT'),(195,4,-25200,1,'PWT'),(195,5,-25200,1,'PPT'),(196,0,-13128,0,'LMT'),(196,1,-10800,1,'-03'),(196,2,-14400,0,'-04'),(196,3,-10800,0,'-03'),(197,0,-16965,0,'LMT'),(197,1,-16965,0,'SMT'),(197,2,-18000,0,'-05'),(197,3,-14400,0,'-04'),(197,4,-14400,1,'-04'),(197,5,-10800,1,'-03'),(197,6,-10800,1,'-03'),(197,7,-14400,0,'-04'),(198,0,-16776,0,'LMT'),(198,1,-16800,0,'SDMT'),(198,2,-14400,1,'EDT'),(198,3,-18000,0,'EST'),(198,4,-16200,1,'-0430'),(198,5,-14400,0,'AST'),(199,0,-11188,0,'LMT'),(199,1,-7200,1,'-02'),(199,2,-10800,0,'-03'),(200,0,-5272,0,'LMT'),(200,1,-7200,0,'-02'),(200,2,-3600,1,'-01'),(200,3,-7200,0,'-02'),(200,4,-3600,0,'-01'),(200,5,0,1,'+00'),(200,6,0,1,'+00'),(201,0,-25196,0,'LMT'),(201,1,-21600,1,'MDT'),(201,2,-25200,0,'MST'),(201,3,-21600,1,'MWT'),(201,4,-21600,1,'MPT'),(202,0,53927,0,'LMT'),(202,1,-28800,0,'PST'),(202,2,-25200,1,'PWT'),(202,3,-25200,1,'PPT'),(202,4,-25200,1,'PDT'),(202,5,-32400,0,'YST'),(202,6,-28800,1,'AKDT'),(202,7,-32400,0,'AKST'),(203,0,-15865,0,'LMT'),(203,1,-14400,0,'AST'),(203,2,-10800,1,'APT'),(203,3,-10800,1,'AWT'),(204,0,-12652,0,'LMT'),(204,1,-9052,1,'NDT'),(204,2,-12652,0,'NST'),(204,3,-9000,1,'NDT'),(204,4,-12600,0,'NST'),(204,5,-9000,1,'NPT'),(204,6,-9000,1,'NWT'),(204,7,-5400,1,'NDDT'),(204,8,-9000,1,'NDT'),(205,0,-15865,0,'LMT'),(205,1,-14400,0,'AST'),(205,2,-10800,1,'APT'),(205,3,-10800,1,'AWT'),(206,0,-15865,0,'LMT'),(206,1,-14400,0,'AST'),(206,2,-10800,1,'APT'),(206,3,-10800,1,'AWT'),(207,0,-15865,0,'LMT'),(207,1,-14400,0,'AST'),(207,2,-10800,1,'APT'),(207,3,-10800,1,'AWT'),(208,0,-15865,0,'LMT'),(208,1,-14400,0,'AST'),(208,2,-10800,1,'APT'),(208,3,-10800,1,'AWT'),(209,0,-25880,0,'LMT'),(209,1,-21600,1,'MDT'),(209,2,-25200,0,'MST'),(209,3,-21600,1,'MWT'),(209,4,-21600,1,'MPT'),(209,5,-21600,0,'CST'),(210,0,-20932,0,'LMT'),(210,1,-18000,1,'CDT'),(210,2,-21600,0,'CST'),(211,0,-16508,0,'LMT'),(211,1,-10800,1,'ADT'),(211,2,-14400,0,'AST'),(212,0,-21420,0,'LMT'),(212,1,-21600,0,'CST'),(212,2,-18000,0,'EST'),(212,3,-14400,1,'EWT'),(212,4,-14400,1,'EPT'),(212,5,-14400,1,'EDT'),(213,0,-28084,0,'LMT'),(213,1,-25200,0,'MST'),(213,2,-28800,0,'PST'),(213,3,-25200,1,'PDT'),(213,4,-25200,1,'PWT'),(213,5,-25200,1,'PPT'),(214,0,-19052,0,'LMT'),(214,1,-14400,1,'EDT'),(214,2,-18000,0,'EST'),(214,3,-14400,1,'EWT'),(214,4,-14400,1,'EPT'),(215,0,-15865,0,'LMT'),(215,1,-14400,0,'AST'),(215,2,-10800,1,'APT'),(215,3,-10800,1,'AWT'),(216,0,-29548,0,'LMT'),(216,1,-25200,1,'PDT'),(216,2,-28800,0,'PST'),(216,3,-25200,1,'PWT'),(216,4,-25200,1,'PPT'),(217,0,-15865,0,'LMT'),(217,1,-14400,0,'AST'),(217,2,-10800,1,'APT'),(217,3,-10800,1,'AWT'),(218,0,-32412,0,'LMT'),(218,1,-28800,1,'YDT'),(218,2,-32400,0,'YST'),(218,3,-28800,1,'YWT'),(218,4,-28800,1,'YPT'),(218,5,-25200,1,'YDDT'),(218,6,-28800,0,'PST'),(218,7,-25200,1,'PDT'),(218,8,-25200,0,'MST'),(219,0,-23316,0,'LMT'),(219,1,-18000,1,'CDT'),(219,2,-21600,0,'CST'),(219,3,-18000,1,'CWT'),(219,4,-18000,1,'CPT'),(219,5,-18000,1,'CDT'),(219,6,-21600,0,'CST'),(220,0,52865,0,'LMT'),(220,1,-32400,0,'YST'),(220,2,-28800,1,'YWT'),(220,3,-28800,1,'YPT'),(220,4,-28800,1,'YDT'),(220,5,-28800,1,'AKDT'),(220,6,-32400,0,'AKST'),(221,0,0,0,'-00'),(221,1,-21600,1,'MWT'),(221,2,-21600,1,'MPT'),(221,3,-25200,0,'MST'),(221,4,-18000,1,'MDDT'),(221,5,-21600,1,'MDT'),(222,0,0,0,'-00'),(222,1,28800,0,'+08'),(222,2,39600,0,'+11'),(222,3,28800,0,'+08'),(222,4,39600,0,'+11'),(223,0,0,0,'-00'),(223,1,25200,0,'+07'),(223,2,18000,0,'+05'),(223,3,25200,0,'+07'),(224,0,35320,0,'LMT'),(224,1,36000,0,'+10'),(225,0,0,0,'-00'),(225,1,36000,0,'AEST'),(225,2,39600,1,'AEDT'),(225,3,36000,0,'AEST'),(225,4,0,0,'-00'),(225,5,39600,1,'AEDT'),(225,6,36000,0,'AEST'),(226,0,0,0,'-00'),(226,1,21600,0,'+06'),(226,2,18000,0,'+05'),(227,0,41944,0,'LMT'),(227,1,45000,1,'NZST'),(227,2,41400,0,'NZMT'),(227,3,43200,1,'NZST'),(227,4,46800,1,'NZDT'),(227,5,43200,0,'NZST'),(227,6,43200,0,'NZST'),(228,0,0,0,'-00'),(228,1,-14400,0,'-04'),(228,2,-10800,1,'-03'),(228,3,-7200,1,'-02'),(228,4,-10800,0,'-03'),(228,5,-10800,1,'-03'),(228,6,-14400,0,'-04'),(228,7,-10800,0,'-03'),(229,0,0,0,'-00'),(229,1,-10800,0,'-03'),(230,0,41944,0,'LMT'),(230,1,45000,1,'NZST'),(230,2,41400,0,'NZMT'),(230,3,43200,1,'NZST'),(230,4,46800,1,'NZDT'),(230,5,43200,0,'NZST'),(230,6,43200,0,'NZST'),(231,0,11212,0,'LMT'),(231,1,10800,0,'+03'),(232,0,0,0,'-00'),(232,1,7200,1,'+02'),(232,2,0,0,'+00'),(232,3,0,0,'+00'),(233,0,21020,0,'LMT'),(233,1,21600,0,'+06'),(234,0,3208,0,'LMT'),(234,1,7200,1,'CEST'),(234,2,3600,0,'CET'),(234,3,7200,1,'CEST'),(234,4,3600,0,'CET'),(234,5,10800,1,'CEMT'),(234,6,10800,1,'CEMT'),(234,7,7200,1,'CEST'),(234,8,3600,0,'CET'),(235,0,11212,0,'LMT'),(235,1,10800,0,'+03'),(236,0,18468,0,'LMT'),(236,1,18000,0,'+05'),(236,2,25200,1,'+07'),(236,3,21600,0,'+06'),(236,4,21600,0,'+06'),(236,5,25200,1,'+07'),(236,6,21600,1,'+06'),(236,7,18000,0,'+05'),(236,8,25200,1,'+07'),(236,9,21600,0,'+06'),(237,0,8624,0,'LMT'),(237,1,10800,1,'EEST'),(237,2,7200,0,'EET'),(237,3,7200,0,'EET'),(237,4,10800,1,'EEST'),(238,0,42596,0,'LMT'),(238,1,43200,0,'+12'),(238,2,50400,1,'+14'),(238,3,46800,0,'+13'),(238,4,46800,1,'+13'),(238,5,43200,0,'+12'),(238,6,46800,1,'+13'),(238,7,43200,1,'+12'),(238,8,39600,0,'+11'),(238,9,43200,0,'+12'),(239,0,12064,0,'LMT'),(239,1,14400,0,'+04'),(239,2,18000,0,'+05'),(239,3,21600,0,'+06'),(239,4,21600,1,'+06'),(239,5,18000,0,'+05'),(239,6,21600,1,'+06'),(239,7,18000,1,'+05'),(239,8,14400,0,'+04'),(239,9,18000,0,'+05'),(240,0,13720,0,'LMT'),(240,1,14400,0,'+04'),(240,2,18000,0,'+05'),(240,3,21600,1,'+06'),(240,4,21600,0,'+06'),(240,5,18000,0,'+05'),(240,6,21600,1,'+06'),(240,7,18000,1,'+05'),(240,8,14400,0,'+04'),(240,9,21600,1,'+06'),(240,10,18000,0,'+05'),(241,0,14012,0,'LMT'),(241,1,14400,0,'+04'),(241,2,21600,1,'+06'),(241,3,18000,0,'+05'),(241,4,18000,0,'+05'),(241,5,21600,1,'+06'),(241,6,18000,1,'+05'),(241,7,14400,0,'+04'),(241,8,18000,0,'+05'),(242,0,14012,0,'LMT'),(242,1,14400,0,'+04'),(242,2,21600,1,'+06'),(242,3,18000,0,'+05'),(242,4,18000,0,'+05'),(242,5,21600,1,'+06'),(242,6,18000,1,'+05'),(242,7,14400,0,'+04'),(242,8,18000,0,'+05'),(243,0,12464,0,'LMT'),(243,1,10800,0,'+03'),(243,2,18000,0,'+05'),(243,3,21600,0,'+06'),(243,4,21600,1,'+06'),(243,5,18000,0,'+05'),(243,6,21600,1,'+06'),(243,7,18000,1,'+05'),(243,8,14400,0,'+04'),(243,9,18000,0,'+05'),(244,0,10660,0,'LMT'),(244,1,10656,0,'BMT'),(244,2,10800,0,'+03'),(244,3,14400,1,'+04'),(244,4,10800,0,'+03'),(244,5,14400,1,'+04'),(245,0,12368,0,'LMT'),(245,1,14400,0,'+04'),(245,2,10800,0,'+03'),(246,0,11964,0,'LMT'),(246,1,10800,0,'+03'),(246,2,18000,1,'+05'),(246,3,14400,0,'+04'),(246,4,14400,0,'+04'),(246,5,18000,1,'+05'),(246,6,14400,1,'+04'),(246,7,10800,0,'+03'),(246,8,18000,1,'+05'),(246,9,14400,0,'+04'),(247,0,24124,0,'LMT'),(247,1,24124,0,'BMT'),(247,2,25200,0,'+07'),(248,0,20100,0,'LMT'),(248,1,21600,0,'+06'),(248,2,28800,1,'+08'),(248,3,25200,0,'+07'),(248,4,25200,0,'+07'),(248,5,28800,1,'+08'),(248,6,25200,1,'+07'),(248,7,21600,0,'+06'),(248,8,25200,1,'+07'),(248,9,25200,0,'+07'),(249,0,8520,0,'LMT'),(249,1,10800,1,'EEST'),(249,2,7200,0,'EET'),(250,0,17904,0,'LMT'),(250,1,18000,0,'+05'),(250,2,25200,1,'+07'),(250,3,21600,0,'+06'),(250,4,21600,0,'+06'),(250,5,25200,1,'+07'),(250,6,21600,1,'+06'),(250,7,21600,1,'+06'),(251,0,26480,0,'LMT'),(251,1,27000,0,'+0730'),(251,2,30000,1,'+0820'),(251,3,28800,0,'+08'),(251,4,32400,0,'+09'),(251,5,28800,0,'+08'),(252,0,21208,0,'LMT'),(252,1,19270,0,'MMT'),(252,2,19800,0,'IST'),(252,3,23400,1,'+0630'),(253,0,27232,0,'LMT'),(253,1,28800,0,'+08'),(253,2,36000,1,'+10'),(253,3,32400,0,'+09'),(253,4,32400,0,'+09'),(253,5,36000,1,'+10'),(253,6,32400,1,'+09'),(253,7,28800,0,'+08'),(253,8,36000,0,'+10'),(253,9,36000,1,'+10'),(253,10,32400,0,'+09'),(254,0,27480,0,'LMT'),(254,1,25200,0,'+07'),(254,2,28800,0,'+08'),(254,3,32400,0,'+09'),(254,4,36000,1,'+10'),(254,5,32400,1,'+09'),(254,6,28800,0,'+08'),(255,0,29143,0,'LMT'),(255,1,32400,1,'CDT'),(255,2,28800,0,'CST'),(256,0,29143,0,'LMT'),(256,1,32400,1,'CDT'),(256,2,28800,0,'CST'),(257,0,19164,0,'LMT'),(257,1,19172,0,'MMT'),(257,2,19800,0,'+0530'),(257,3,21600,1,'+06'),(257,4,23400,1,'+0630'),(257,5,23400,0,'+0630'),(257,6,21600,0,'+06'),(257,7,19800,0,'+0530'),(258,0,21700,0,'LMT'),(258,1,21200,0,'HMT'),(258,2,23400,0,'+0630'),(258,3,19800,0,'+0530'),(258,4,21600,0,'+06'),(258,5,25200,1,'+07'),(259,0,8712,0,'LMT'),(259,1,10800,1,'EEST'),(259,2,7200,0,'EET'),(260,0,21700,0,'LMT'),(260,1,21200,0,'HMT'),(260,2,23400,0,'+0630'),(260,3,19800,0,'+0530'),(260,4,21600,0,'+06'),(260,5,25200,1,'+07'),(261,0,30140,0,'LMT'),(261,1,28800,0,'+08'),(261,2,32400,0,'+09'),(262,0,13272,0,'LMT'),(262,1,14400,0,'+04'),(263,0,16512,0,'LMT'),(263,1,18000,0,'+05'),(263,2,25200,1,'+07'),(263,3,21600,0,'+06'),(263,4,21600,0,'+06'),(263,5,25200,1,'+07'),(263,6,21600,1,'+06'),(263,7,18000,0,'+05'),(264,0,8148,0,'LMT'),(264,1,10800,1,'EEST'),(264,2,7200,0,'EET'),(264,3,7200,0,'EET'),(264,4,10800,1,'EEST'),(264,5,10800,0,'+03'),(264,6,7200,0,'EET'),(265,0,8272,0,'LMT'),(265,1,10800,1,'EEST'),(265,2,7200,0,'EET'),(265,3,7200,0,'EET'),(265,4,10800,1,'EEST'),(265,5,10800,1,'IDT'),(265,6,7200,0,'IST'),(265,7,10800,1,'IDT'),(265,8,7200,0,'IST'),(265,9,7200,0,'EET'),(266,0,29143,0,'LMT'),(266,1,32400,1,'CDT'),(266,2,28800,0,'CST'),(267,0,8423,0,'LMT'),(267,1,10800,1,'EEST'),(267,2,7200,0,'EET'),(267,3,7200,0,'EET'),(267,4,10800,1,'EEST'),(267,5,10800,1,'IDT'),(267,6,7200,0,'IST'),(267,7,10800,1,'IDT'),(267,8,7200,0,'IST'),(267,9,7200,0,'EET'),(268,0,25590,0,'LMT'),(268,1,25590,0,'PLMT'),(268,2,25200,0,'+07'),(268,3,28800,0,'+08'),(268,4,32400,0,'+09'),(268,5,25200,0,'+07'),(269,0,27402,0,'LMT'),(269,1,28800,0,'HKT'),(269,2,32400,1,'HKST'),(269,3,30600,1,'HKWT'),(269,4,32400,0,'JST'),(269,5,28800,0,'HKT'),(269,6,32400,1,'HKST'),(269,7,28800,0,'HKT'),(270,0,21996,0,'LMT'),(270,1,21600,0,'+06'),(270,2,28800,1,'+08'),(270,3,25200,0,'+07'),(271,0,25025,0,'LMT'),(271,1,25025,0,'IMT'),(271,2,25200,0,'+07'),(271,3,32400,1,'+09'),(271,4,28800,0,'+08'),(271,5,28800,0,'+08'),(271,6,32400,1,'+09'),(271,7,28800,1,'+08'),(271,8,25200,0,'+07'),(271,9,32400,0,'+09'),(271,10,32400,1,'+09'),(271,11,28800,0,'+08'),(272,0,6952,0,'LMT'),(272,1,7016,0,'IMT'),(272,2,10800,1,'EEST'),(272,3,7200,0,'EET'),(272,4,10800,0,'+03'),(272,5,14400,1,'+04'),(272,6,10800,1,'EEST'),(272,7,7200,0,'EET'),(272,8,10800,1,'EEST'),(272,9,7200,0,'EET'),(272,10,10800,0,'+03'),(273,0,25632,0,'LMT'),(273,1,25632,0,'BMT'),(273,2,26400,0,'+0720'),(273,3,27000,0,'+0730'),(273,4,32400,0,'+09'),(273,5,28800,0,'+08'),(273,6,25200,0,'WIB'),(274,0,33768,0,'LMT'),(274,1,32400,0,'+09'),(274,2,34200,0,'+0930'),(274,3,32400,0,'WIT'),(275,0,8454,0,'LMT'),(275,1,8440,0,'JMT'),(275,2,10800,1,'IDT'),(275,3,7200,0,'IST'),(275,4,14400,1,'IDDT'),(275,5,10800,1,'IDT'),(275,6,7200,0,'IST'),(275,7,10800,1,'IDT'),(275,8,7200,0,'IST'),(276,0,16608,0,'LMT'),(276,1,14400,0,'+04'),(276,2,16200,0,'+0430'),(277,0,38076,0,'LMT'),(277,1,39600,0,'+11'),(277,2,46800,1,'+13'),(277,3,43200,0,'+12'),(277,4,43200,0,'+12'),(277,5,46800,1,'+13'),(277,6,43200,1,'+12'),(277,7,39600,0,'+11'),(277,8,43200,0,'+12'),(278,0,16092,0,'LMT'),(278,1,19800,0,'+0530'),(278,2,23400,1,'+0630'),(278,3,18000,0,'+05'),(278,4,21600,1,'PKST'),(278,5,18000,0,'PKT'),(279,0,21020,0,'LMT'),(279,1,21600,0,'+06'),(280,0,20476,0,'LMT'),(280,1,19800,0,'+0530'),(280,2,20700,0,'+0545'),(281,0,20476,0,'LMT'),(281,1,19800,0,'+0530'),(281,2,20700,0,'+0545'),(282,0,32533,0,'LMT'),(282,1,28800,0,'+08'),(282,2,36000,1,'+10'),(282,3,32400,0,'+09'),(282,4,32400,0,'+09'),(282,5,36000,1,'+10'),(282,6,32400,1,'+09'),(282,7,28800,0,'+08'),(282,8,39600,1,'+11'),(282,9,36000,0,'+10'),(282,10,36000,0,'+10'),(282,11,39600,0,'+11'),(282,12,32400,0,'+09'),(283,0,21208,0,'LMT'),(283,1,19270,0,'MMT'),(283,2,19800,0,'IST'),(283,3,23400,1,'+0630'),(284,0,22286,0,'LMT'),(284,1,21600,0,'+06'),(284,2,28800,1,'+08'),(284,3,25200,0,'+07'),(284,4,25200,0,'+07'),(284,5,28800,1,'+08'),(284,6,25200,1,'+07'),(284,7,21600,0,'+06'),(284,8,28800,0,'+08'),(284,9,28800,1,'+08'),(284,10,25200,0,'+07'),(285,0,24925,0,'LMT'),(285,1,24925,0,'SMT'),(285,2,25200,0,'+07'),(285,3,26400,1,'+0720'),(285,4,26400,0,'+0720'),(285,5,27000,0,'+0730'),(285,6,32400,0,'+09'),(285,7,28800,0,'+08'),(286,0,26480,0,'LMT'),(286,1,27000,0,'+0730'),(286,2,30000,1,'+0820'),(286,3,28800,0,'+08'),(286,4,32400,0,'+09'),(286,5,28800,0,'+08'),(287,0,11212,0,'LMT'),(287,1,10800,0,'+03'),(288,0,27250,0,'LMT'),(288,1,28800,0,'CST'),(288,2,36000,1,'+10'),(288,3,32400,0,'+09'),(288,4,32400,1,'CDT'),(288,5,28800,0,'CST'),(288,6,32400,1,'CDT'),(289,0,27250,0,'LMT'),(289,1,28800,0,'CST'),(289,2,36000,1,'+10'),(289,3,32400,0,'+09'),(289,4,32400,1,'CDT'),(289,5,28800,0,'CST'),(289,6,32400,1,'CDT'),(290,0,36192,0,'LMT'),(290,1,36000,0,'+10'),(290,2,43200,1,'+12'),(290,3,39600,0,'+11'),(290,4,39600,0,'+11'),(290,5,43200,1,'+12'),(290,6,39600,1,'+11'),(290,7,36000,0,'+10'),(290,8,43200,0,'+12'),(290,9,43200,1,'+12'),(290,10,39600,0,'+11'),(291,0,28656,0,'LMT'),(291,1,28656,0,'MMT'),(291,2,28800,0,'+08'),(291,3,32400,0,'+09'),(291,4,28800,0,'WITA'),(292,0,-57360,0,'LMT'),(292,1,32400,1,'PDT'),(292,2,28800,0,'PST'),(292,3,32400,0,'JST'),(292,4,28800,0,'PST'),(293,0,13272,0,'LMT'),(293,1,14400,0,'+04'),(294,0,8008,0,'LMT'),(294,1,10800,1,'EEST'),(294,2,7200,0,'EET'),(294,3,7200,0,'EET'),(294,4,10800,1,'EEST'),(295,0,20928,0,'LMT'),(295,1,21600,0,'+06'),(295,2,28800,1,'+08'),(295,3,25200,0,'+07'),(295,4,25200,0,'+07'),(295,5,28800,1,'+08'),(295,6,25200,1,'+07'),(295,7,21600,0,'+06'),(295,8,25200,0,'+07'),(296,0,19900,0,'LMT'),(296,1,21600,0,'+06'),(296,2,28800,1,'+08'),(296,3,25200,0,'+07'),(296,4,25200,0,'+07'),(296,5,28800,1,'+08'),(296,6,25200,1,'+07'),(296,7,21600,0,'+06'),(296,8,25200,1,'+07'),(296,9,25200,0,'+07'),(297,0,17610,0,'LMT'),(297,1,18000,0,'+05'),(297,2,25200,1,'+07'),(297,3,21600,0,'+06'),(297,4,21600,0,'+06'),(297,5,25200,1,'+07'),(297,6,21600,1,'+06'),(297,7,18000,0,'+05'),(297,8,25200,0,'+07'),(297,9,25200,1,'+07'),(297,10,21600,0,'+06'),(298,0,12324,0,'LMT'),(298,1,10800,0,'+03'),(298,2,18000,0,'+05'),(298,3,21600,1,'+06'),(298,4,21600,0,'+06'),(298,5,18000,0,'+05'),(298,6,21600,1,'+06'),(298,7,18000,1,'+05'),(298,8,14400,0,'+04'),(298,9,18000,0,'+05'),(299,0,24124,0,'LMT'),(299,1,24124,0,'BMT'),(299,2,25200,0,'+07'),(300,0,26240,0,'LMT'),(300,1,26240,0,'PMT'),(300,2,27000,0,'+0730'),(300,3,32400,0,'+09'),(300,4,28800,0,'+08'),(300,5,28800,0,'WITA'),(300,6,25200,0,'WIB'),(301,0,30180,0,'LMT'),(301,1,30600,0,'KST'),(301,2,32400,0,'JST'),(301,3,32400,0,'KST'),(302,0,12368,0,'LMT'),(302,1,14400,0,'+04'),(302,2,10800,0,'+03'),(303,0,15268,0,'LMT'),(303,1,14400,0,'+04'),(303,2,18000,0,'+05'),(303,3,21600,1,'+06'),(303,4,21600,0,'+06'),(303,5,18000,0,'+05'),(303,6,21600,1,'+06'),(303,7,18000,1,'+05'),(303,8,14400,0,'+04'),(303,9,21600,0,'+06'),(303,10,21600,1,'+06'),(304,0,15712,0,'LMT'),(304,1,14400,0,'+04'),(304,2,18000,0,'+05'),(304,3,21600,1,'+06'),(304,4,21600,0,'+06'),(304,5,18000,0,'+05'),(304,6,21600,1,'+06'),(304,7,18000,1,'+05'),(304,8,21600,0,'+06'),(304,9,21600,1,'+06'),(304,10,18000,0,'+05'),(305,0,23087,0,'LMT'),(305,1,23087,0,'RMT'),(305,2,23400,0,'+0630'),(305,3,32400,0,'+09'),(305,4,23400,0,'+0630'),(306,0,11212,0,'LMT'),(306,1,10800,0,'+03'),(307,0,25590,0,'LMT'),(307,1,25590,0,'PLMT'),(307,2,25200,0,'+07'),(307,3,28800,0,'+08'),(307,4,32400,0,'+09'),(307,5,25200,0,'+07'),(308,0,34248,0,'LMT'),(308,1,32400,0,'+09'),(308,2,43200,1,'+12'),(308,3,39600,0,'+11'),(308,4,39600,0,'+11'),(308,5,43200,1,'+12'),(308,6,39600,1,'+11'),(308,7,36000,0,'+10'),(308,8,39600,0,'+11'),(309,0,16073,0,'LMT'),(309,1,14400,0,'+04'),(309,2,18000,0,'+05'),(309,3,21600,1,'+06'),(309,4,21600,0,'+06'),(309,5,18000,0,'+05'),(309,6,21600,1,'+06'),(310,0,30472,0,'LMT'),(310,1,30600,0,'KST'),(310,2,32400,0,'JST'),(310,3,36000,1,'KDT'),(310,4,32400,0,'KST'),(310,5,34200,1,'KDT'),(310,6,36000,1,'KDT'),(311,0,29143,0,'LMT'),(311,1,32400,1,'CDT'),(311,2,28800,0,'CST'),(312,0,24925,0,'LMT'),(312,1,24925,0,'SMT'),(312,2,25200,0,'+07'),(312,3,26400,1,'+0720'),(312,4,26400,0,'+0720'),(312,5,27000,0,'+0730'),(312,6,32400,0,'+09'),(312,7,28800,0,'+08'),(313,0,36892,0,'LMT'),(313,1,36000,0,'+10'),(313,2,43200,1,'+12'),(313,3,39600,0,'+11'),(313,4,39600,0,'+11'),(313,5,43200,1,'+12'),(313,6,39600,1,'+11'),(313,7,36000,0,'+10'),(313,8,43200,0,'+12'),(313,9,43200,1,'+12'),(313,10,39600,0,'+11'),(314,0,29160,0,'LMT'),(314,1,28800,0,'CST'),(314,2,32400,0,'JST'),(314,3,32400,1,'CDT'),(314,4,28800,0,'CST'),(315,0,16631,0,'LMT'),(315,1,18000,0,'+05'),(315,2,25200,1,'+07'),(315,3,21600,0,'+06'),(315,4,21600,0,'+06'),(315,5,25200,1,'+07'),(315,6,21600,1,'+06'),(315,7,18000,0,'+05'),(316,0,10751,0,'LMT'),(316,1,10751,0,'TBMT'),(316,2,10800,0,'+03'),(316,3,18000,1,'+05'),(316,4,14400,0,'+04'),(316,5,14400,0,'+04'),(316,6,18000,1,'+05'),(316,7,14400,1,'+04'),(316,8,10800,0,'+03'),(316,9,14400,1,'+04'),(316,10,14400,0,'+04'),(317,0,12344,0,'LMT'),(317,1,12344,0,'TMT'),(317,2,16200,1,'+0430'),(317,3,12600,0,'+0330'),(317,4,18000,1,'+05'),(317,5,14400,0,'+04'),(317,6,16200,1,'+0430'),(317,7,12600,0,'+0330'),(318,0,8454,0,'LMT'),(318,1,8440,0,'JMT'),(318,2,10800,1,'IDT'),(318,3,7200,0,'IST'),(318,4,14400,1,'IDDT'),(318,5,10800,1,'IDT'),(318,6,7200,0,'IST'),(318,7,10800,1,'IDT'),(318,8,7200,0,'IST'),(319,0,21516,0,'LMT'),(319,1,19800,0,'+0530'),(319,2,21600,0,'+06'),(320,0,21516,0,'LMT'),(320,1,19800,0,'+0530'),(320,2,21600,0,'+06'),(321,0,33539,0,'LMT'),(321,1,36000,1,'JDT'),(321,2,32400,0,'JST'),(321,3,32400,0,'JST'),(322,0,20391,0,'LMT'),(322,1,21600,0,'+06'),(322,2,28800,1,'+08'),(322,3,25200,0,'+07'),(322,4,25200,0,'+07'),(322,5,28800,1,'+08'),(322,6,25200,1,'+07'),(322,7,21600,0,'+06'),(322,8,25200,1,'+07'),(322,9,25200,0,'+07'),(323,0,28656,0,'LMT'),(323,1,28656,0,'MMT'),(323,2,28800,0,'+08'),(323,3,32400,0,'+09'),(323,4,28800,0,'WITA'),(324,0,25652,0,'LMT'),(324,1,25200,0,'+07'),(324,2,32400,1,'+09'),(324,3,28800,0,'+08'),(325,0,25652,0,'LMT'),(325,1,25200,0,'+07'),(325,2,32400,1,'+09'),(325,3,28800,0,'+08'),(326,0,21020,0,'LMT'),(326,1,21600,0,'+06'),(327,0,34374,0,'LMT'),(327,1,28800,0,'+08'),(327,2,32400,0,'+09'),(327,3,39600,0,'+11'),(327,4,43200,1,'+12'),(327,5,39600,0,'+11'),(327,6,43200,1,'+12'),(327,7,39600,1,'+11'),(327,8,36000,0,'+10'),(327,9,43200,0,'+12'),(327,10,43200,1,'+12'),(327,11,36000,0,'+10'),(328,0,24124,0,'LMT'),(328,1,24124,0,'BMT'),(328,2,25200,0,'+07'),(329,0,31651,0,'LMT'),(329,1,32400,0,'+09'),(329,2,39600,1,'+11'),(329,3,36000,0,'+10'),(329,4,36000,0,'+10'),(329,5,39600,1,'+11'),(329,6,36000,1,'+10'),(329,7,32400,0,'+09'),(329,8,39600,0,'+11'),(329,9,39600,1,'+11'),(329,10,36000,0,'+10'),(330,0,31138,0,'LMT'),(330,1,28800,0,'+08'),(330,2,36000,1,'+10'),(330,3,32400,0,'+09'),(330,4,32400,0,'+09'),(330,5,36000,1,'+10'),(330,6,32400,1,'+09'),(330,7,28800,0,'+08'),(330,8,36000,0,'+10'),(330,9,36000,1,'+10'),(330,10,32400,0,'+09'),(331,0,23087,0,'LMT'),(331,1,23087,0,'RMT'),(331,2,23400,0,'+0630'),(331,3,32400,0,'+09'),(331,4,23400,0,'+0630'),(332,0,14553,0,'LMT'),(332,1,13505,0,'PMT'),(332,2,14400,0,'+04'),(332,3,21600,1,'+06'),(332,4,18000,0,'+05'),(332,5,18000,0,'+05'),(332,6,21600,1,'+06'),(332,7,18000,1,'+05'),(332,8,14400,0,'+04'),(332,9,21600,0,'+06'),(332,10,21600,1,'+06'),(332,11,18000,0,'+05'),(333,0,10680,0,'LMT'),(333,1,10800,0,'+03'),(333,2,18000,1,'+05'),(333,3,14400,0,'+04'),(333,4,14400,0,'+04'),(333,5,18000,1,'+05'),(333,6,14400,1,'+04'),(333,7,10800,0,'+03'),(333,8,18000,1,'+05'),(333,9,14400,0,'+04'),(334,0,-6160,0,'LMT'),(334,1,-6872,0,'HMT'),(334,2,-3600,1,'-01'),(334,3,-7200,0,'-02'),(334,4,-3600,1,'-01'),(334,5,-7200,0,'-02'),(334,6,-7200,0,'-02'),(334,7,0,1,'+00'),(334,8,-3600,0,'-01'),(334,9,-3600,0,'-01'),(334,10,0,0,'WET'),(334,11,0,1,'+00'),(334,12,-3600,0,'-01'),(335,0,-15558,0,'LMT'),(335,1,-11958,1,'BST'),(335,2,-15558,0,'BMT'),(335,3,-10800,1,'ADT'),(335,4,-14400,0,'AST'),(336,0,-3696,0,'LMT'),(336,1,-3600,0,'-01'),(336,2,0,0,'WET'),(336,3,3600,1,'WEST'),(336,4,0,0,'WET'),(336,5,3600,1,'WEST'),(337,0,-5644,0,'LMT'),(337,1,-7200,0,'-02'),(337,2,-3600,1,'-01'),(337,3,-7200,0,'-02'),(337,4,-3600,0,'-01'),(338,0,-1624,0,'LMT'),(338,1,0,0,'WET'),(338,2,3600,1,'WEST'),(338,3,0,0,'WET'),(339,0,-1624,0,'LMT'),(339,1,0,0,'WET'),(339,2,3600,1,'WEST'),(339,3,0,0,'WET'),(340,0,3208,0,'LMT'),(340,1,7200,1,'CEST'),(340,2,3600,0,'CET'),(340,3,7200,1,'CEST'),(340,4,3600,0,'CET'),(340,5,10800,1,'CEMT'),(340,6,10800,1,'CEMT'),(340,7,7200,1,'CEST'),(340,8,3600,0,'CET'),(341,0,-4056,0,'LMT'),(341,1,-4056,0,'FMT'),(341,2,0,1,'+00'),(341,3,-3600,0,'-01'),(341,4,0,1,'+00'),(341,5,-3600,0,'-01'),(341,6,-3600,0,'-01'),(341,7,3600,1,'+01'),(341,8,3600,1,'WEST'),(341,9,0,0,'WET'),(341,10,0,0,'WET'),(341,11,0,0,'WET'),(341,12,3600,1,'WEST'),(342,0,-968,0,'LMT'),(342,1,0,0,'GMT'),(343,0,-8768,0,'LMT'),(343,1,-7200,0,'-02'),(344,0,-968,0,'LMT'),(344,1,0,0,'GMT'),(345,0,-13884,0,'LMT'),(345,1,-13884,0,'SMT'),(345,2,-10800,1,'-03'),(345,3,-14400,0,'-04'),(345,4,-7200,1,'-02'),(345,5,-10800,0,'-03'),(345,6,-10800,1,'-03'),(346,0,36292,0,'LMT'),(346,1,39600,1,'AEDT'),(346,2,36000,0,'AEST'),(346,3,36000,0,'AEST'),(347,0,33260,0,'LMT'),(347,1,37800,1,'ACDT'),(347,2,34200,0,'ACST'),(347,3,34200,0,'ACST'),(348,0,36728,0,'LMT'),(348,1,39600,1,'AEDT'),(348,2,36000,0,'AEST'),(348,3,36000,0,'AEST'),(349,0,33948,0,'LMT'),(349,1,37800,1,'ACDT'),(349,2,34200,0,'ACST'),(349,3,34200,0,'ACST'),(350,0,36292,0,'LMT'),(350,1,39600,1,'AEDT'),(350,2,36000,0,'AEST'),(350,3,36000,0,'AEST'),(351,0,35356,0,'LMT'),(351,1,39600,1,'AEDT'),(351,2,36000,0,'AEST'),(351,3,36000,0,'AEST'),(352,0,31400,0,'LMT'),(352,1,37800,1,'ACDT'),(352,2,34200,0,'ACST'),(352,3,34200,0,'ACST'),(353,0,30928,0,'LMT'),(353,1,35100,1,'+0945'),(353,2,31500,0,'+0845'),(353,3,31500,0,'+0845'),(354,0,35356,0,'LMT'),(354,1,39600,1,'AEDT'),(354,2,36000,0,'AEST'),(354,3,36000,0,'AEST'),(355,0,38180,0,'LMT'),(355,1,36000,0,'AEST'),(355,2,41400,1,'+1130'),(355,3,37800,0,'+1030'),(355,4,39600,1,'+11'),(356,0,35756,0,'LMT'),(356,1,39600,1,'AEDT'),(356,2,36000,0,'AEST'),(356,3,36000,0,'AEST'),(357,0,38180,0,'LMT'),(357,1,36000,0,'AEST'),(357,2,41400,1,'+1130'),(357,3,37800,0,'+1030'),(357,4,39600,1,'+11'),(358,0,34792,0,'LMT'),(358,1,39600,1,'AEDT'),(358,2,36000,0,'AEST'),(358,3,36000,0,'AEST'),(359,0,36292,0,'LMT'),(359,1,39600,1,'AEDT'),(359,2,36000,0,'AEST'),(359,3,36000,0,'AEST'),(360,0,31400,0,'LMT'),(360,1,37800,1,'ACDT'),(360,2,34200,0,'ACST'),(360,3,34200,0,'ACST'),(361,0,27804,0,'LMT'),(361,1,32400,1,'AWDT'),(361,2,28800,0,'AWST'),(361,3,28800,0,'AWST'),(362,0,36728,0,'LMT'),(362,1,39600,1,'AEDT'),(362,2,36000,0,'AEST'),(362,3,36000,0,'AEST'),(363,0,33260,0,'LMT'),(363,1,37800,1,'ACDT'),(363,2,34200,0,'ACST'),(363,3,34200,0,'ACST'),(364,0,36292,0,'LMT'),(364,1,39600,1,'AEDT'),(364,2,36000,0,'AEST'),(364,3,36000,0,'AEST'),(365,0,35356,0,'LMT'),(365,1,39600,1,'AEDT'),(365,2,36000,0,'AEST'),(365,3,36000,0,'AEST'),(366,0,34792,0,'LMT'),(366,1,39600,1,'AEDT'),(366,2,36000,0,'AEST'),(366,3,36000,0,'AEST'),(367,0,27804,0,'LMT'),(367,1,32400,1,'AWDT'),(367,2,28800,0,'AWST'),(367,3,28800,0,'AWST'),(368,0,33948,0,'LMT'),(368,1,37800,1,'ACDT'),(368,2,34200,0,'ACST'),(368,3,34200,0,'ACST'),(369,0,-16272,0,'LMT'),(369,1,-14400,1,'-04'),(369,2,-18000,0,'-05'),(369,3,-14400,0,'-04'),(369,4,-18000,0,'-05'),(370,0,-7780,0,'LMT'),(370,1,-3600,1,'-01'),(370,2,-7200,0,'-02'),(371,0,-11188,0,'LMT'),(371,1,-7200,1,'-02'),(371,2,-10800,0,'-03'),(372,0,-14404,0,'LMT'),(372,1,-10800,1,'-03'),(372,2,-14400,0,'-04'),(373,0,3600,0,'CET'),(373,1,7200,1,'CEST'),(373,2,7200,1,'CEST'),(373,3,3600,0,'CET'),(374,0,-21600,0,'CST'),(374,1,-18000,1,'CDT'),(374,2,-18000,1,'CWT'),(374,3,-18000,1,'CPT'),(374,4,-21600,0,'CST'),(375,0,-15264,0,'LMT'),(375,1,-10800,1,'ADT'),(375,2,-14400,0,'AST'),(375,3,-10800,1,'AWT'),(375,4,-10800,1,'APT'),(376,0,-23316,0,'LMT'),(376,1,-18000,1,'CDT'),(376,2,-21600,0,'CST'),(376,3,-18000,1,'CWT'),(376,4,-18000,1,'CPT'),(376,5,-18000,1,'CDT'),(376,6,-21600,0,'CST'),(377,0,-19052,0,'LMT'),(377,1,-14400,1,'EDT'),(377,2,-18000,0,'EST'),(377,3,-14400,1,'EWT'),(377,4,-14400,1,'EPT'),(378,0,-27232,0,'LMT'),(378,1,-21600,1,'MDT'),(378,2,-25200,0,'MST'),(378,3,-21600,1,'MWT'),(378,4,-21600,1,'MPT'),(379,0,-12652,0,'LMT'),(379,1,-9052,1,'NDT'),(379,2,-12652,0,'NST'),(379,3,-9000,1,'NDT'),(379,4,-12600,0,'NST'),(379,5,-9000,1,'NPT'),(379,6,-9000,1,'NWT'),(379,7,-5400,1,'NDDT'),(379,8,-9000,1,'NDT'),(380,0,-29548,0,'LMT'),(380,1,-25200,1,'PDT'),(380,2,-28800,0,'PST'),(380,3,-25200,1,'PWT'),(380,4,-25200,1,'PPT'),(381,0,-25116,0,'LMT'),(381,1,-21600,1,'MDT'),(381,2,-25200,0,'MST'),(381,3,-21600,1,'MWT'),(381,4,-21600,1,'MPT'),(381,5,-21600,0,'CST'),(382,0,-32412,0,'LMT'),(382,1,-28800,1,'YDT'),(382,2,-32400,0,'YST'),(382,3,-28800,1,'YWT'),(382,4,-28800,1,'YPT'),(382,5,-25200,1,'YDDT'),(382,6,-28800,0,'PST'),(382,7,-25200,1,'PDT'),(382,8,-25200,0,'MST'),(383,0,-16965,0,'LMT'),(383,1,-16965,0,'SMT'),(383,2,-18000,0,'-05'),(383,3,-14400,0,'-04'),(383,4,-14400,1,'-04'),(383,5,-10800,1,'-03'),(383,6,-10800,1,'-03'),(383,7,-14400,0,'-04'),(384,0,-26248,0,'LMT'),(384,1,-26248,0,'EMT'),(384,2,-21600,1,'-06'),(384,3,-25200,0,'-07'),(384,4,-25200,0,'-07'),(384,5,-21600,0,'-06'),(384,6,-18000,1,'-05'),(385,0,-19768,0,'LMT'),(385,1,-19776,0,'HMT'),(385,2,-14400,1,'CDT'),(385,3,-18000,0,'CST'),(385,4,-18000,0,'CST'),(385,5,-14400,1,'CDT'),(386,0,7200,0,'EET'),(386,1,10800,1,'EEST'),(386,2,10800,1,'EEST'),(386,3,7200,0,'EET'),(387,0,-18000,0,'EST'),(388,0,-18000,0,'EST'),(388,1,-14400,1,'EDT'),(388,2,-14400,1,'EWT'),(388,3,-14400,1,'EPT'),(388,4,-18000,0,'EST'),(389,0,7509,0,'LMT'),(389,1,10800,1,'EEST'),(389,2,7200,0,'EET'),(389,3,10800,1,'EEST'),(390,0,-1521,0,'LMT'),(390,1,-1521,0,'DMT'),(390,2,2079,1,'IST'),(390,3,3600,1,'BST'),(390,4,0,0,'GMT'),(390,5,3600,1,'IST'),(390,6,0,1,'GMT'),(390,7,3600,0,'IST'),(390,8,3600,0,'IST'),(391,0,0,0,'GMT'),(392,0,0,0,'GMT'),(393,0,-3600,0,'-01'),(394,0,-36000,0,'-10'),(395,0,-39600,0,'-11'),(396,0,-43200,0,'-12'),(397,0,-7200,0,'-02'),(398,0,-10800,0,'-03'),(399,0,-14400,0,'-04'),(400,0,-18000,0,'-05'),(401,0,-21600,0,'-06'),(402,0,-25200,0,'-07'),(403,0,-28800,0,'-08'),(404,0,-32400,0,'-09'),(405,0,0,0,'GMT'),(406,0,3600,0,'+01'),(407,0,36000,0,'+10'),(408,0,39600,0,'+11'),(409,0,43200,0,'+12'),(410,0,46800,0,'+13'),(411,0,50400,0,'+14'),(412,0,7200,0,'+02'),(413,0,10800,0,'+03'),(414,0,14400,0,'+04'),(415,0,18000,0,'+05'),(416,0,21600,0,'+06'),(417,0,25200,0,'+07'),(418,0,28800,0,'+08'),(419,0,32400,0,'+09'),(420,0,0,0,'GMT'),(421,0,0,0,'GMT'),(422,0,0,0,'UTC'),(423,0,0,0,'UTC'),(424,0,0,0,'UTC'),(425,0,0,0,'UTC'),(426,0,1050,0,'LMT'),(426,1,0,0,'WET'),(426,2,3600,0,'CET'),(426,3,7200,1,'CEST'),(426,4,3600,0,'CET'),(426,5,7200,1,'CEST'),(426,6,3600,1,'WEST'),(426,7,0,0,'WET'),(426,8,0,0,'WET'),(426,9,7200,1,'CEST'),(426,10,3600,0,'CET'),(427,0,364,0,'LMT'),(427,1,0,0,'WET'),(427,2,3600,0,'CET'),(427,3,7200,1,'CEST'),(427,4,3600,0,'CET'),(428,0,11532,0,'LMT'),(428,1,10800,0,'+03'),(428,2,18000,1,'+05'),(428,3,14400,0,'+04'),(428,4,14400,0,'+04'),(428,5,18000,1,'+05'),(428,6,14400,1,'+04'),(428,7,10800,0,'+03'),(428,8,14400,0,'+04'),(429,0,5692,0,'LMT'),(429,1,5692,0,'AMT'),(429,2,10800,1,'EEST'),(429,3,7200,0,'EET'),(429,4,3600,0,'CET'),(429,5,7200,1,'CEST'),(429,6,10800,1,'EEST'),(429,7,7200,0,'EET'),(429,8,10800,1,'EEST'),(429,9,7200,0,'EET'),(430,0,-75,0,'LMT'),(430,1,3600,1,'BST'),(430,2,0,0,'GMT'),(430,3,7200,1,'BDST'),(430,4,0,0,'GMT'),(430,5,3600,0,'BST'),(430,6,3600,1,'BST'),(430,7,0,0,'GMT'),(431,0,4920,0,'LMT'),(431,1,3600,0,'CET'),(431,2,3600,0,'CET'),(431,3,7200,1,'CEST'),(431,4,7200,1,'CEST'),(431,5,7200,1,'CEST'),(431,6,3600,0,'CET'),(432,0,3208,0,'LMT'),(432,1,7200,1,'CEST'),(432,2,3600,0,'CET'),(432,3,7200,1,'CEST'),(432,4,3600,0,'CET'),(432,5,10800,1,'CEMT'),(432,6,10800,1,'CEMT'),(432,7,7200,1,'CEST'),(432,8,3600,0,'CET'),(433,0,3464,0,'LMT'),(433,1,7200,1,'CEST'),(433,2,3600,0,'CET'),(433,3,7200,1,'CEST'),(433,4,3600,0,'CET'),(433,5,0,1,'GMT'),(433,6,7200,1,'CEST'),(433,7,3600,0,'CET'),(434,0,1050,0,'LMT'),(434,1,0,0,'WET'),(434,2,3600,0,'CET'),(434,3,7200,1,'CEST'),(434,4,3600,0,'CET'),(434,5,7200,1,'CEST'),(434,6,3600,1,'WEST'),(434,7,0,0,'WET'),(434,8,0,0,'WET'),(434,9,7200,1,'CEST'),(434,10,3600,0,'CET'),(435,0,6264,0,'LMT'),(435,1,6264,0,'BMT'),(435,2,10800,1,'EEST'),(435,3,7200,0,'EET'),(435,4,10800,1,'EEST'),(435,5,7200,0,'EET'),(435,6,10800,1,'EEST'),(435,7,7200,0,'EET'),(436,0,4580,0,'LMT'),(436,1,7200,1,'CEST'),(436,2,3600,0,'CET'),(436,3,7200,1,'CEST'),(436,4,3600,0,'CET'),(436,5,7200,1,'CEST'),(436,6,3600,0,'CET'),(437,0,2048,0,'LMT'),(437,1,7200,1,'CEST'),(437,2,3600,0,'CET'),(437,3,7200,1,'CEST'),(437,4,3600,0,'CET'),(438,0,6920,0,'LMT'),(438,1,6900,0,'CMT'),(438,2,6264,0,'BMT'),(438,3,10800,1,'EEST'),(438,4,7200,0,'EET'),(438,5,7200,0,'EET'),(438,6,10800,1,'EEST'),(438,7,3600,0,'CET'),(438,8,7200,1,'CEST'),(438,9,7200,1,'CEST'),(438,10,14400,1,'MSD'),(438,11,10800,0,'MSK'),(438,12,10800,0,'MSK'),(438,13,14400,1,'MSD'),(438,14,10800,1,'EEST'),(438,15,7200,0,'EET'),(439,0,3208,0,'LMT'),(439,1,7200,1,'CEST'),(439,2,3600,0,'CET'),(439,3,7200,1,'CEST'),(439,4,3600,0,'CET'),(439,5,10800,1,'CEMT'),(439,6,10800,1,'CEMT'),(439,7,7200,1,'CEST'),(439,8,3600,0,'CET'),(440,0,-1521,0,'LMT'),(440,1,-1521,0,'DMT'),(440,2,2079,1,'IST'),(440,3,3600,1,'BST'),(440,4,0,0,'GMT'),(440,5,3600,1,'IST'),(440,6,0,1,'GMT'),(440,7,3600,0,'IST'),(440,8,3600,0,'IST'),(441,0,-1284,0,'LMT'),(441,1,3600,1,'BST'),(441,2,0,0,'GMT'),(441,3,7200,1,'BDST'),(441,4,0,0,'GMT'),(441,5,3600,0,'CET'),(441,6,7200,1,'CEST'),(441,7,3600,0,'CET'),(442,0,-75,0,'LMT'),(442,1,3600,1,'BST'),(442,2,0,0,'GMT'),(442,3,7200,1,'BDST'),(442,4,0,0,'GMT'),(442,5,3600,0,'BST'),(442,6,3600,1,'BST'),(442,7,0,0,'GMT'),(443,0,5989,0,'LMT'),(443,1,5989,0,'HMT'),(443,2,10800,1,'EEST'),(443,3,7200,0,'EET'),(443,4,10800,1,'EEST'),(443,5,7200,0,'EET'),(444,0,-75,0,'LMT'),(444,1,3600,1,'BST'),(444,2,0,0,'GMT'),(444,3,7200,1,'BDST'),(444,4,0,0,'GMT'),(444,5,3600,0,'BST'),(444,6,3600,1,'BST'),(444,7,0,0,'GMT'),(445,0,6952,0,'LMT'),(445,1,7016,0,'IMT'),(445,2,10800,1,'EEST'),(445,3,7200,0,'EET'),(445,4,10800,0,'+03'),(445,5,14400,1,'+04'),(445,6,10800,1,'EEST'),(445,7,7200,0,'EET'),(445,8,10800,1,'EEST'),(445,9,7200,0,'EET'),(445,10,10800,0,'+03'),(446,0,-75,0,'LMT'),(446,1,3600,1,'BST'),(446,2,0,0,'GMT'),(446,3,7200,1,'BDST'),(446,4,0,0,'GMT'),(446,5,3600,0,'BST'),(446,6,3600,1,'BST'),(446,7,0,0,'GMT'),(447,0,4920,0,'LMT'),(447,1,7200,1,'CEST'),(447,2,3600,0,'CET'),(447,3,7200,1,'CEST'),(447,4,3600,0,'CET'),(447,5,10800,1,'EEST'),(447,6,7200,0,'EET'),(447,7,14400,1,'MSD'),(447,8,10800,0,'MSK'),(447,9,10800,0,'MSK'),(447,10,14400,1,'MSD'),(447,11,10800,1,'EEST'),(447,12,7200,0,'EET'),(447,13,10800,0,'+03'),(447,14,7200,0,'EET'),(448,0,7324,0,'LMT'),(448,1,7324,0,'KMT'),(448,2,7200,0,'EET'),(448,3,10800,0,'MSK'),(448,4,3600,0,'CET'),(448,5,7200,1,'CEST'),(448,6,7200,1,'CEST'),(448,7,14400,1,'MSD'),(448,8,10800,0,'MSK'),(448,9,14400,1,'MSD'),(448,10,10800,1,'EEST'),(448,11,7200,0,'EET'),(448,12,10800,1,'EEST'),(448,13,7200,0,'EET'),(448,14,10800,1,'EEST'),(449,0,11928,0,'LMT'),(449,1,10800,0,'+03'),(449,2,18000,1,'+05'),(449,3,14400,0,'+04'),(449,4,14400,0,'+04'),(449,5,18000,1,'+05'),(449,6,14400,1,'+04'),(449,7,10800,0,'+03'),(450,0,7324,0,'LMT'),(450,1,7324,0,'KMT'),(450,2,7200,0,'EET'),(450,3,10800,0,'MSK'),(450,4,3600,0,'CET'),(450,5,7200,1,'CEST'),(450,6,7200,1,'CEST'),(450,7,14400,1,'MSD'),(450,8,10800,0,'MSK'),(450,9,14400,1,'MSD'),(450,10,10800,1,'EEST'),(450,11,7200,0,'EET'),(450,12,10800,1,'EEST'),(450,13,7200,0,'EET'),(450,14,10800,1,'EEST'),(451,0,-2205,0,'LMT'),(451,1,3600,1,'WEST'),(451,2,0,0,'WET'),(451,3,3600,1,'WEST'),(451,4,0,0,'WET'),(451,5,7200,1,'WEMT'),(451,6,0,0,'WET'),(451,7,3600,0,'CET'),(451,8,3600,0,'CET'),(451,9,7200,1,'CEST'),(451,10,3600,1,'WEST'),(451,11,0,0,'WET'),(452,0,4920,0,'LMT'),(452,1,3600,0,'CET'),(452,2,3600,0,'CET'),(452,3,7200,1,'CEST'),(452,4,7200,1,'CEST'),(452,5,7200,1,'CEST'),(452,6,3600,0,'CET'),(453,0,-75,0,'LMT'),(453,1,3600,1,'BST'),(453,2,0,0,'GMT'),(453,3,7200,1,'BDST'),(453,4,0,0,'GMT'),(453,5,3600,0,'BST'),(453,6,3600,1,'BST'),(453,7,0,0,'GMT'),(454,0,1050,0,'LMT'),(454,1,0,0,'WET'),(454,2,3600,0,'CET'),(454,3,7200,1,'CEST'),(454,4,3600,0,'CET'),(454,5,7200,1,'CEST'),(454,6,3600,1,'WEST'),(454,7,0,0,'WET'),(454,8,0,0,'WET'),(454,9,7200,1,'CEST'),(454,10,3600,0,'CET'),(455,0,-884,0,'LMT'),(455,1,3600,1,'WEST'),(455,2,0,0,'WET'),(455,3,7200,1,'WEMT'),(455,4,0,0,'WET'),(455,5,7200,1,'CEST'),(455,6,3600,0,'CET'),(455,7,7200,1,'CEST'),(455,8,3600,0,'CET'),(455,9,7200,1,'CEST'),(455,10,3600,0,'CET'),(456,0,3484,0,'LMT'),(456,1,7200,1,'CEST'),(456,2,3600,0,'CET'),(456,3,3600,0,'CET'),(456,4,7200,1,'CEST'),(456,5,7200,1,'CEST'),(456,6,3600,0,'CET'),(457,0,5989,0,'LMT'),(457,1,5989,0,'HMT'),(457,2,10800,1,'EEST'),(457,3,7200,0,'EET'),(457,4,10800,1,'EEST'),(457,5,7200,0,'EET'),(458,0,6616,0,'LMT'),(458,1,6600,0,'MMT'),(458,2,7200,0,'EET'),(458,3,10800,0,'MSK'),(458,4,3600,0,'CET'),(458,5,7200,1,'CEST'),(458,6,7200,1,'CEST'),(458,7,14400,1,'MSD'),(458,8,10800,0,'MSK'),(458,9,14400,1,'MSD'),(458,10,10800,1,'EEST'),(458,11,7200,0,'EET'),(458,12,10800,0,'+03'),(459,0,561,0,'LMT'),(459,1,561,0,'PMT'),(459,2,3600,1,'WEST'),(459,3,0,0,'WET'),(459,4,3600,1,'WEST'),(459,5,0,0,'WET'),(459,6,3600,0,'CET'),(459,7,7200,1,'CEST'),(459,8,7200,1,'CEST'),(459,9,7200,1,'WEMT'),(459,10,3600,0,'CET'),(459,11,7200,1,'CEST'),(459,12,3600,0,'CET'),(460,0,9017,0,'LMT'),(460,1,9017,0,'MMT'),(460,2,12679,1,'MST'),(460,3,9079,0,'MMT'),(460,4,16279,1,'MDST'),(460,5,14400,1,'MSD'),(460,6,10800,0,'MSK'),(460,7,14400,1,'MSD'),(460,8,18000,1,'+05'),(460,9,7200,0,'EET'),(460,10,10800,0,'MSK'),(460,11,14400,1,'MSD'),(460,12,10800,1,'EEST'),(460,13,7200,0,'EET'),(460,14,14400,0,'MSK'),(460,15,14400,1,'MSD'),(460,16,10800,0,'MSK'),(461,0,8008,0,'LMT'),(461,1,10800,1,'EEST'),(461,2,7200,0,'EET'),(461,3,7200,0,'EET'),(461,4,10800,1,'EEST'),(462,0,3208,0,'LMT'),(462,1,7200,1,'CEST'),(462,2,3600,0,'CET'),(462,3,7200,1,'CEST'),(462,4,3600,0,'CET'),(462,5,10800,1,'CEMT'),(462,6,10800,1,'CEMT'),(462,7,7200,1,'CEST'),(462,8,3600,0,'CET'),(463,0,561,0,'LMT'),(463,1,561,0,'PMT'),(463,2,3600,1,'WEST'),(463,3,0,0,'WET'),(463,4,3600,1,'WEST'),(463,5,0,0,'WET'),(463,6,3600,0,'CET'),(463,7,7200,1,'CEST'),(463,8,7200,1,'CEST'),(463,9,7200,1,'WEMT'),(463,10,3600,0,'CET'),(463,11,7200,1,'CEST'),(463,12,3600,0,'CET'),(464,0,4920,0,'LMT'),(464,1,3600,0,'CET'),(464,2,3600,0,'CET'),(464,3,7200,1,'CEST'),(464,4,7200,1,'CEST'),(464,5,7200,1,'CEST'),(464,6,3600,0,'CET'),(465,0,3464,0,'LMT'),(465,1,7200,1,'CEST'),(465,2,3600,0,'CET'),(465,3,7200,1,'CEST'),(465,4,3600,0,'CET'),(465,5,0,1,'GMT'),(465,6,7200,1,'CEST'),(465,7,3600,0,'CET'),(466,0,5794,0,'LMT'),(466,1,5794,0,'RMT'),(466,2,9394,1,'LST'),(466,3,7200,0,'EET'),(466,4,10800,0,'MSK'),(466,5,3600,0,'CET'),(466,6,7200,1,'CEST'),(466,7,7200,1,'CEST'),(466,8,14400,1,'MSD'),(466,9,10800,0,'MSK'),(466,10,14400,1,'MSD'),(466,11,10800,1,'EEST'),(466,12,7200,0,'EET'),(466,13,10800,1,'EEST'),(466,14,7200,0,'EET'),(467,0,2996,0,'LMT'),(467,1,7200,1,'CEST'),(467,2,3600,0,'CET'),(467,3,3600,0,'CET'),(467,4,7200,1,'CEST'),(467,5,3600,0,'CET'),(467,6,7200,1,'CEST'),(468,0,12020,0,'LMT'),(468,1,10800,0,'+03'),(468,2,14400,0,'+04'),(468,3,18000,1,'+05'),(468,4,14400,0,'+04'),(468,5,18000,1,'+05'),(468,6,14400,1,'+04'),(468,7,10800,0,'+03'),(468,8,10800,1,'+03'),(468,9,14400,1,'+04'),(468,10,14400,0,'+04'),(469,0,2996,0,'LMT'),(469,1,7200,1,'CEST'),(469,2,3600,0,'CET'),(469,3,3600,0,'CET'),(469,4,7200,1,'CEST'),(469,5,3600,0,'CET'),(469,6,7200,1,'CEST'),(470,0,4920,0,'LMT'),(470,1,3600,0,'CET'),(470,2,3600,0,'CET'),(470,3,7200,1,'CEST'),(470,4,7200,1,'CEST'),(470,5,7200,1,'CEST'),(470,6,3600,0,'CET'),(471,0,11058,0,'LMT'),(471,1,10800,0,'+03'),(471,2,18000,1,'+05'),(471,3,14400,0,'+04'),(471,4,14400,0,'+04'),(471,5,18000,1,'+05'),(471,6,14400,1,'+04'),(471,7,10800,0,'+03'),(471,8,14400,0,'+04'),(472,0,8184,0,'LMT'),(472,1,8160,0,'SMT'),(472,2,7200,0,'EET'),(472,3,10800,0,'MSK'),(472,4,3600,0,'CET'),(472,5,7200,1,'CEST'),(472,6,7200,1,'CEST'),(472,7,14400,1,'MSD'),(472,8,10800,0,'MSK'),(472,9,14400,1,'MSD'),(472,10,10800,1,'EEST'),(472,11,7200,0,'EET'),(472,12,10800,1,'EEST'),(472,13,7200,0,'EET'),(472,14,14400,0,'MSK'),(472,15,10800,0,'MSK'),(473,0,4920,0,'LMT'),(473,1,3600,0,'CET'),(473,2,3600,0,'CET'),(473,3,7200,1,'CEST'),(473,4,7200,1,'CEST'),(473,5,7200,1,'CEST'),(473,6,3600,0,'CET'),(474,0,5596,0,'LMT'),(474,1,7200,0,'EET'),(474,2,3600,0,'CET'),(474,3,7200,1,'CEST'),(474,4,10800,1,'EEST'),(474,5,7200,0,'EET'),(474,6,10800,1,'EEST'),(474,7,10800,1,'EEST'),(474,8,7200,0,'EET'),(475,0,3208,0,'LMT'),(475,1,7200,1,'CEST'),(475,2,3600,0,'CET'),(475,3,7200,1,'CEST'),(475,4,3600,0,'CET'),(475,5,10800,1,'CEMT'),(475,6,10800,1,'CEMT'),(475,7,7200,1,'CEST'),(475,8,3600,0,'CET'),(476,0,5940,0,'LMT'),(476,1,5940,0,'TMT'),(476,2,7200,1,'CEST'),(476,3,3600,0,'CET'),(476,4,3600,0,'CET'),(476,5,7200,0,'EET'),(476,6,10800,0,'MSK'),(476,7,7200,1,'CEST'),(476,8,14400,1,'MSD'),(476,9,10800,0,'MSK'),(476,10,14400,1,'MSD'),(476,11,10800,1,'EEST'),(476,12,7200,0,'EET'),(476,13,7200,0,'EET'),(476,14,10800,1,'EEST'),(477,0,4760,0,'LMT'),(477,1,3600,0,'CET'),(477,2,7200,1,'CEST'),(477,3,3600,0,'CET'),(477,4,7200,1,'CEST'),(478,0,6920,0,'LMT'),(478,1,6900,0,'CMT'),(478,2,6264,0,'BMT'),(478,3,10800,1,'EEST'),(478,4,7200,0,'EET'),(478,5,7200,0,'EET'),(478,6,10800,1,'EEST'),(478,7,3600,0,'CET'),(478,8,7200,1,'CEST'),(478,9,7200,1,'CEST'),(478,10,14400,1,'MSD'),(478,11,10800,0,'MSK'),(478,12,10800,0,'MSK'),(478,13,14400,1,'MSD'),(478,14,10800,1,'EEST'),(478,15,7200,0,'EET'),(479,0,11616,0,'LMT'),(479,1,10800,0,'+03'),(479,2,18000,1,'+05'),(479,3,14400,0,'+04'),(479,4,14400,0,'+04'),(479,5,18000,1,'+05'),(479,6,14400,1,'+04'),(479,7,10800,0,'+03'),(479,8,10800,1,'+03'),(479,9,7200,0,'+02'),(479,10,14400,1,'+04'),(479,11,14400,0,'+04'),(480,0,5352,0,'LMT'),(480,1,3600,0,'CET'),(480,2,7200,1,'CEST'),(480,3,3600,0,'CET'),(480,4,14400,1,'MSD'),(480,5,10800,0,'MSK'),(480,6,10800,0,'MSK'),(480,7,14400,1,'MSD'),(480,8,7200,0,'EET'),(480,9,10800,1,'EEST'),(480,10,7200,0,'EET'),(480,11,7200,0,'EET'),(480,12,10800,1,'EEST'),(481,0,2048,0,'LMT'),(481,1,7200,1,'CEST'),(481,2,3600,0,'CET'),(481,3,7200,1,'CEST'),(481,4,3600,0,'CET'),(482,0,2996,0,'LMT'),(482,1,7200,1,'CEST'),(482,2,3600,0,'CET'),(482,3,3600,0,'CET'),(482,4,7200,1,'CEST'),(482,5,3600,0,'CET'),(482,6,7200,1,'CEST'),(483,0,3921,0,'LMT'),(483,1,7200,1,'CEST'),(483,2,3600,0,'CET'),(483,3,7200,1,'CEST'),(483,4,3600,0,'CET'),(483,5,7200,1,'CEST'),(483,6,3600,0,'CET'),(484,0,6076,0,'LMT'),(484,1,5040,0,'WMT'),(484,2,5736,0,'KMT'),(484,3,3600,0,'CET'),(484,4,7200,0,'EET'),(484,5,10800,0,'MSK'),(484,6,3600,0,'CET'),(484,7,7200,1,'CEST'),(484,8,7200,1,'CEST'),(484,9,14400,1,'MSD'),(484,10,10800,0,'MSK'),(484,11,14400,1,'MSD'),(484,12,10800,1,'EEST'),(484,13,7200,0,'EET'),(484,14,7200,1,'CEST'),(484,15,3600,0,'CET'),(484,16,7200,0,'EET'),(484,17,10800,1,'EEST'),(485,0,10660,0,'LMT'),(485,1,10800,0,'+03'),(485,2,14400,0,'+04'),(485,3,18000,1,'+05'),(485,4,14400,0,'+04'),(485,5,18000,1,'+05'),(485,6,14400,1,'+04'),(485,7,10800,0,'+03'),(486,0,5040,0,'LMT'),(486,1,5040,0,'WMT'),(486,2,7200,1,'CEST'),(486,3,3600,0,'CET'),(486,4,7200,1,'CEST'),(486,5,3600,0,'CET'),(486,6,10800,1,'EEST'),(486,7,7200,0,'EET'),(486,8,7200,0,'EET'),(486,9,7200,1,'CEST'),(486,10,3600,0,'CET'),(487,0,4920,0,'LMT'),(487,1,3600,0,'CET'),(487,2,3600,0,'CET'),(487,3,7200,1,'CEST'),(487,4,7200,1,'CEST'),(487,5,7200,1,'CEST'),(487,6,3600,0,'CET'),(488,0,8440,0,'LMT'),(488,1,8400,0,'+0220'),(488,2,7200,0,'EET'),(488,3,10800,0,'MSK'),(488,4,3600,0,'CET'),(488,5,7200,1,'CEST'),(488,6,7200,1,'CEST'),(488,7,14400,1,'MSD'),(488,8,10800,0,'MSK'),(488,9,14400,1,'MSD'),(488,10,10800,1,'EEST'),(488,11,10800,1,'EEST'),(488,12,7200,0,'EET'),(488,13,7200,0,'EET'),(488,14,10800,1,'EEST'),(489,0,2048,0,'LMT'),(489,1,7200,1,'CEST'),(489,2,3600,0,'CET'),(489,3,7200,1,'CEST'),(489,4,3600,0,'CET'),(490,0,-75,0,'LMT'),(490,1,3600,1,'BST'),(490,2,0,0,'GMT'),(490,3,7200,1,'BDST'),(490,4,0,0,'GMT'),(490,5,3600,0,'BST'),(490,6,3600,1,'BST'),(490,7,0,0,'GMT'),(491,0,-75,0,'LMT'),(491,1,3600,1,'BST'),(491,2,0,0,'GMT'),(491,3,7200,1,'BDST'),(491,4,0,0,'GMT'),(491,5,3600,0,'BST'),(491,6,3600,1,'BST'),(491,7,0,0,'GMT'),(492,0,0,0,'GMT'),(493,0,0,0,'GMT'),(494,0,0,0,'GMT'),(495,0,0,0,'GMT'),(496,0,0,0,'GMT'),(497,0,-36000,0,'HST'),(498,0,27402,0,'LMT'),(498,1,28800,0,'HKT'),(498,2,32400,1,'HKST'),(498,3,30600,1,'HKWT'),(498,4,32400,0,'JST'),(498,5,28800,0,'HKT'),(498,6,32400,1,'HKST'),(498,7,28800,0,'HKT'),(499,0,-968,0,'LMT'),(499,1,0,0,'GMT'),(500,0,8836,0,'LMT'),(500,1,9000,0,'+0230'),(500,2,10800,0,'EAT'),(500,3,9900,0,'+0245'),(500,4,10800,0,'EAT'),(501,0,17380,0,'LMT'),(501,1,18000,0,'+05'),(501,2,21600,0,'+06'),(502,0,24124,0,'LMT'),(502,1,24124,0,'BMT'),(502,2,25200,0,'+07'),(503,0,23087,0,'LMT'),(503,1,23087,0,'RMT'),(503,2,23400,0,'+0630'),(503,3,32400,0,'+09'),(503,4,23400,0,'+0630'),(504,0,8836,0,'LMT'),(504,1,9000,0,'+0230'),(504,2,10800,0,'EAT'),(504,3,9900,0,'+0245'),(504,4,10800,0,'EAT'),(505,0,17640,0,'LMT'),(505,1,17640,0,'MMT'),(505,2,18000,0,'+05'),(506,0,13272,0,'LMT'),(506,1,14400,0,'+04'),(507,0,17640,0,'LMT'),(507,1,17640,0,'MMT'),(507,2,18000,0,'+05'),(508,0,13800,0,'LMT'),(508,1,18000,1,'+05'),(508,2,14400,0,'+04'),(509,0,8836,0,'LMT'),(509,1,9000,0,'+0230'),(509,2,10800,0,'EAT'),(509,3,9900,0,'+0245'),(509,4,10800,0,'EAT'),(510,0,13272,0,'LMT'),(510,1,14400,0,'+04'),(511,0,12344,0,'LMT'),(511,1,12344,0,'TMT'),(511,2,16200,1,'+0430'),(511,3,12600,0,'+0330'),(511,4,18000,1,'+05'),(511,5,14400,0,'+04'),(511,6,16200,1,'+0430'),(511,7,12600,0,'+0330'),(512,0,8454,0,'LMT'),(512,1,8440,0,'JMT'),(512,2,10800,1,'IDT'),(512,3,7200,0,'IST'),(512,4,14400,1,'IDDT'),(512,5,10800,1,'IDT'),(512,6,7200,0,'IST'),(512,7,10800,1,'IDT'),(512,8,7200,0,'IST'),(513,0,-18430,0,'LMT'),(513,1,-18430,0,'KMT'),(513,2,-18000,0,'EST'),(513,3,-14400,1,'EDT'),(514,0,33539,0,'LMT'),(514,1,36000,1,'JDT'),(514,2,32400,0,'JST'),(514,3,32400,0,'JST'),(515,0,40160,0,'LMT'),(515,1,39600,0,'+11'),(515,2,36000,0,'+10'),(515,3,32400,0,'+09'),(515,4,-43200,0,'-12'),(515,5,43200,0,'+12'),(516,0,3164,0,'LMT'),(516,1,7200,1,'CEST'),(516,2,3600,0,'CET'),(516,3,7200,0,'EET'),(517,0,3600,0,'MET'),(517,1,7200,1,'MEST'),(517,2,7200,1,'MEST'),(517,3,3600,0,'MET'),(518,0,-25200,0,'MST'),(519,0,-25200,0,'MST'),(519,1,-21600,1,'MDT'),(519,2,-21600,1,'MWT'),(519,3,-21600,1,'MPT'),(519,4,-25200,0,'MST'),(520,0,-28084,0,'LMT'),(520,1,-25200,0,'MST'),(520,2,-28800,0,'PST'),(520,3,-25200,1,'PDT'),(520,4,-25200,1,'PWT'),(520,5,-25200,1,'PPT'),(521,0,-25540,0,'LMT'),(521,1,-25200,0,'MST'),(521,2,-21600,0,'CST'),(521,3,-28800,0,'PST'),(521,4,-21600,1,'MDT'),(521,5,-25200,0,'MST'),(522,0,-23796,0,'LMT'),(522,1,-25200,0,'MST'),(522,2,-21600,0,'CST'),(522,3,-18000,1,'CDT'),(522,4,-18000,1,'CWT'),(523,0,41944,0,'LMT'),(523,1,45000,1,'NZST'),(523,2,41400,0,'NZMT'),(523,3,43200,1,'NZST'),(523,4,46800,1,'NZDT'),(523,5,43200,0,'NZST'),(523,6,43200,0,'NZST'),(524,0,44028,0,'LMT'),(524,1,44100,0,'+1215'),(524,2,49500,1,'+1345'),(524,3,45900,0,'+1245'),(524,4,45900,0,'+1245'),(525,0,-25196,0,'LMT'),(525,1,-21600,1,'MDT'),(525,2,-25200,0,'MST'),(525,3,-21600,1,'MWT'),(525,4,-21600,1,'MPT'),(526,0,29143,0,'LMT'),(526,1,32400,1,'CDT'),(526,2,28800,0,'CST'),(527,0,-28800,0,'PST'),(527,1,-25200,1,'PDT'),(527,2,-25200,1,'PWT'),(527,3,-25200,1,'PPT'),(527,4,-28800,0,'PST'),(528,0,45184,0,'LMT'),(528,1,-41216,0,'LMT'),(528,2,-41400,0,'-1130'),(528,3,-36000,1,'-10'),(528,4,-39600,0,'-11'),(528,5,46800,0,'+13'),(528,6,50400,1,'+14'),(529,0,41944,0,'LMT'),(529,1,45000,1,'NZST'),(529,2,41400,0,'NZMT'),(529,3,43200,1,'NZST'),(529,4,46800,1,'NZDT'),(529,5,43200,0,'NZST'),(529,6,43200,0,'NZST'),(530,0,37336,0,'LMT'),(530,1,36000,0,'+10'),(530,2,32400,0,'+09'),(530,3,39600,0,'+11'),(531,0,44028,0,'LMT'),(531,1,44100,0,'+1215'),(531,2,49500,1,'+1345'),(531,3,45900,0,'+1245'),(531,4,45900,0,'+1245'),(532,0,35320,0,'LMT'),(532,1,36000,0,'+10'),(533,0,-26248,0,'LMT'),(533,1,-26248,0,'EMT'),(533,2,-21600,1,'-06'),(533,3,-25200,0,'-07'),(533,4,-25200,0,'-07'),(533,5,-21600,0,'-06'),(533,6,-18000,1,'-05'),(534,0,40396,0,'LMT'),(534,1,43200,1,'+12'),(534,2,39600,0,'+11'),(534,3,43200,1,'+12'),(534,4,39600,0,'+11'),(535,0,0,0,'-00'),(535,1,-43200,0,'-12'),(535,2,-39600,0,'-11'),(535,3,46800,0,'+13'),(536,0,-41096,0,'LMT'),(536,1,-39600,0,'-11'),(536,2,46800,0,'+13'),(537,0,42944,0,'LMT'),(537,1,46800,1,'+13'),(537,2,43200,0,'+12'),(538,0,41524,0,'LMT'),(538,1,43200,0,'+12'),(539,0,-21504,0,'LMT'),(539,1,-18000,0,'-05'),(539,2,-18000,1,'-05'),(539,3,-21600,0,'-06'),(540,0,-32388,0,'LMT'),(540,1,-32400,0,'-09'),(541,0,38388,0,'LMT'),(541,1,39600,0,'+11'),(542,0,-51660,0,'LMT'),(542,1,36000,0,'GST'),(542,2,32400,0,'+09'),(542,3,39600,1,'GDT'),(542,4,36000,0,'ChST'),(543,0,-37886,0,'LMT'),(543,1,-37800,0,'HST'),(543,2,-34200,1,'HDT'),(543,3,-34200,1,'HWT'),(543,4,-34200,1,'HPT'),(543,5,-36000,0,'HST'),(544,0,-37886,0,'LMT'),(544,1,-37800,0,'HST'),(544,2,-34200,1,'HDT'),(544,3,-34200,1,'HWT'),(544,4,-34200,1,'HPT'),(544,5,-36000,0,'HST'),(545,0,0,0,'-00'),(545,1,-43200,0,'-12'),(545,2,-39600,0,'-11'),(545,3,46800,0,'+13'),(546,0,-37760,0,'LMT'),(546,1,-38400,0,'-1040'),(546,2,-36000,0,'-10'),(546,3,50400,0,'+14'),(547,0,-47284,0,'LMT'),(547,1,39600,0,'+11'),(547,2,32400,0,'+09'),(547,3,36000,0,'+10'),(547,4,43200,0,'+12'),(547,5,39600,0,'+11'),(548,0,40160,0,'LMT'),(548,1,39600,0,'+11'),(548,2,36000,0,'+10'),(548,3,32400,0,'+09'),(548,4,-43200,0,'-12'),(548,5,43200,0,'+12'),(549,0,41524,0,'LMT'),(549,1,43200,0,'+12'),(550,0,-33480,0,'LMT'),(550,1,-34200,0,'-0930'),(551,0,45432,0,'LMT'),(551,1,-40968,0,'LMT'),(551,2,-39600,0,'SST'),(552,0,40060,0,'LMT'),(552,1,41400,0,'+1130'),(552,2,32400,0,'+09'),(552,3,43200,0,'+12'),(553,0,-40780,0,'LMT'),(553,1,-40800,0,'-1120'),(553,2,-39600,0,'-11'),(554,0,40312,0,'LMT'),(554,1,40320,0,'+1112'),(554,2,41400,0,'+1130'),(554,3,45000,1,'+1230'),(554,4,41400,0,'+1130'),(554,5,39600,0,'+11'),(554,6,43200,1,'+12'),(555,0,39948,0,'LMT'),(555,1,43200,1,'+12'),(555,2,39600,0,'+11'),(555,3,43200,1,'+12'),(555,4,39600,0,'+11'),(556,0,45432,0,'LMT'),(556,1,-40968,0,'LMT'),(556,2,-39600,0,'SST'),(557,0,-54124,0,'LMT'),(557,1,32400,0,'+09'),(558,0,-31220,0,'LMT'),(558,1,-30600,0,'-0830'),(558,2,-28800,0,'-08'),(559,0,38388,0,'LMT'),(559,1,39600,0,'+11'),(560,0,38388,0,'LMT'),(560,1,39600,0,'+11'),(561,0,35320,0,'LMT'),(561,1,36000,0,'+10'),(562,0,48056,0,'LMT'),(562,1,-38344,0,'LMT'),(562,2,-37800,0,'-1030'),(562,3,-36000,0,'-10'),(562,4,-34200,1,'-0930'),(563,0,-51660,0,'LMT'),(563,1,36000,0,'GST'),(563,2,32400,0,'+09'),(563,3,39600,1,'GDT'),(563,4,36000,0,'ChST'),(564,0,45432,0,'LMT'),(564,1,-40968,0,'LMT'),(564,2,-39600,0,'SST'),(565,0,-35896,0,'LMT'),(565,1,-36000,0,'-10'),(566,0,41524,0,'LMT'),(566,1,43200,0,'+12'),(567,0,44352,0,'LMT'),(567,1,44400,0,'+1220'),(567,2,46800,0,'+13'),(567,3,50400,1,'+14'),(567,4,46800,0,'+13'),(567,5,50400,1,'+14'),(568,0,35320,0,'LMT'),(568,1,36000,0,'+10'),(569,0,41524,0,'LMT'),(569,1,43200,0,'+12'),(570,0,41524,0,'LMT'),(570,1,43200,0,'+12'),(571,0,35320,0,'LMT'),(571,1,36000,0,'+10'),(572,0,5040,0,'LMT'),(572,1,5040,0,'WMT'),(572,2,7200,1,'CEST'),(572,3,3600,0,'CET'),(572,4,7200,1,'CEST'),(572,5,3600,0,'CET'),(572,6,10800,1,'EEST'),(572,7,7200,0,'EET'),(572,8,7200,0,'EET'),(572,9,7200,1,'CEST'),(572,10,3600,0,'CET'),(573,0,-2205,0,'LMT'),(573,1,3600,1,'WEST'),(573,2,0,0,'WET'),(573,3,3600,1,'WEST'),(573,4,0,0,'WET'),(573,5,7200,1,'WEMT'),(573,6,0,0,'WET'),(573,7,3600,0,'CET'),(573,8,3600,0,'CET'),(573,9,7200,1,'CEST'),(573,10,3600,1,'WEST'),(573,11,0,0,'WET'),(574,0,29160,0,'LMT'),(574,1,28800,0,'CST'),(574,2,32400,0,'JST'),(574,3,32400,1,'CDT'),(574,4,28800,0,'CST'),(575,0,30472,0,'LMT'),(575,1,30600,0,'KST'),(575,2,32400,0,'JST'),(575,3,36000,1,'KDT'),(575,4,32400,0,'KST'),(575,5,34200,1,'KDT'),(575,6,36000,1,'KDT'),(576,0,24925,0,'LMT'),(576,1,24925,0,'SMT'),(576,2,25200,0,'+07'),(576,3,26400,1,'+0720'),(576,4,26400,0,'+0720'),(576,5,27000,0,'+0730'),(576,6,32400,0,'+09'),(576,7,28800,0,'+08'),(577,0,6952,0,'LMT'),(577,1,7016,0,'IMT'),(577,2,10800,1,'EEST'),(577,3,7200,0,'EET'),(577,4,10800,0,'+03'),(577,5,14400,1,'+04'),(577,6,10800,1,'EEST'),(577,7,7200,0,'EET'),(577,8,10800,1,'EEST'),(577,9,7200,0,'EET'),(577,10,10800,0,'+03'),(578,0,0,0,'UTC'),(579,0,50424,0,'LMT'),(579,1,-36000,0,'AST'),(579,2,-32400,1,'AWT'),(579,3,-32400,1,'APT'),(579,4,-36000,0,'AHST'),(579,5,-32400,1,'AHDT'),(579,6,-32400,0,'YST'),(579,7,-28800,1,'AKDT'),(579,8,-32400,0,'AKST'),(580,0,44002,0,'LMT'),(580,1,-39600,0,'NST'),(580,2,-36000,1,'NWT'),(580,3,-36000,1,'NPT'),(580,4,-39600,0,'BST'),(580,5,-36000,1,'BDT'),(580,6,-36000,0,'AHST'),(580,7,-32400,1,'HDT'),(580,8,-36000,0,'HST'),(581,0,-26898,0,'LMT'),(581,1,-21600,1,'MDT'),(581,2,-25200,0,'MST'),(581,3,-21600,1,'MWT'),(582,0,-21036,0,'LMT'),(582,1,-18000,1,'CDT'),(582,2,-21600,0,'CST'),(582,3,-18000,0,'EST'),(582,4,-18000,1,'CWT'),(582,5,-18000,1,'CPT'),(582,6,-21600,0,'CST'),(583,0,-20678,0,'LMT'),(583,1,-18000,1,'CDT'),(583,2,-21600,0,'CST'),(583,3,-18000,1,'CWT'),(583,4,-18000,1,'CPT'),(583,5,-18000,0,'EST'),(583,6,-14400,1,'EDT'),(584,0,-17762,0,'LMT'),(584,1,-14400,1,'EDT'),(584,2,-18000,0,'EST'),(584,3,-18000,0,'EST'),(584,4,-14400,1,'EWT'),(584,5,-14400,1,'EPT'),(585,0,-37886,0,'LMT'),(585,1,-37800,0,'HST'),(585,2,-34200,1,'HDT'),(585,3,-34200,1,'HWT'),(585,4,-34200,1,'HPT'),(585,5,-36000,0,'HST'),(586,0,-20790,0,'LMT'),(586,1,-18000,1,'CDT'),(586,2,-21600,0,'CST'),(586,3,-18000,1,'CWT'),(586,4,-18000,1,'CPT'),(586,5,-18000,0,'EST'),(586,6,-21600,0,'CST'),(587,0,-19931,0,'LMT'),(587,1,-21600,0,'CST'),(587,2,-18000,0,'EST'),(587,3,-14400,1,'EWT'),(587,4,-14400,1,'EPT'),(587,5,-14400,1,'EDT'),(588,0,-25196,0,'LMT'),(588,1,-21600,1,'MDT'),(588,2,-25200,0,'MST'),(588,3,-21600,1,'MWT'),(588,4,-21600,1,'MPT'),(589,0,-28378,0,'LMT'),(589,1,-25200,1,'PDT'),(589,2,-28800,0,'PST'),(589,3,-25200,1,'PWT'),(589,4,-25200,1,'PPT'),(590,0,45432,0,'LMT'),(590,1,-40968,0,'LMT'),(590,2,-39600,0,'SST'),(591,0,0,0,'UTC'),(592,0,0,0,'UTC'),(593,0,9017,0,'LMT'),(593,1,9017,0,'MMT'),(593,2,12679,1,'MST'),(593,3,9079,0,'MMT'),(593,4,16279,1,'MDST'),(593,5,14400,1,'MSD'),(593,6,10800,0,'MSK'),(593,7,14400,1,'MSD'),(593,8,18000,1,'+05'),(593,9,7200,0,'EET'),(593,10,10800,0,'MSK'),(593,11,14400,1,'MSD'),(593,12,10800,1,'EEST'),(593,13,7200,0,'EET'),(593,14,14400,0,'MSK'),(593,15,14400,1,'MSD'),(593,16,10800,0,'MSK'),(594,0,0,0,'WET'),(594,1,3600,1,'WEST'),(594,2,3600,1,'WEST'),(594,3,0,0,'WET'),(595,0,0,0,'UTC'),(596,0,0,0,'UTC'),(597,0,-968,0,'LMT'),(597,1,0,0,'GMT'),(598,0,-968,0,'LMT'),(598,1,0,0,'GMT'),(599,0,8836,0,'LMT'),(599,1,9000,0,'+0230'),(599,2,10800,0,'EAT'),(599,3,9900,0,'+0245'),(599,4,10800,0,'EAT'),(600,0,732,0,'LMT'),(600,1,561,0,'PMT'),(600,2,3600,1,'WEST'),(600,3,0,0,'WET'),(600,4,0,0,'WET'),(600,5,7200,1,'CEST'),(600,6,3600,0,'CET'),(600,7,3600,1,'WEST'),(601,0,8836,0,'LMT'),(601,1,9000,0,'+0230'),(601,2,10800,0,'EAT'),(601,3,9900,0,'+0245'),(601,4,10800,0,'EAT'),(602,0,8836,0,'LMT'),(602,1,9000,0,'+0230'),(602,2,10800,0,'EAT'),(602,3,9900,0,'+0245'),(602,4,10800,0,'EAT'),(603,0,-968,0,'LMT'),(603,1,0,0,'GMT'),(604,0,815,0,'LMT'),(604,1,0,0,'GMT'),(604,2,1800,0,'+0030'),(604,3,3600,0,'WAT'),(605,0,-968,0,'LMT'),(605,1,0,0,'GMT'),(606,0,-3740,0,'LMT'),(606,1,-3600,0,'-01'),(606,2,0,0,'GMT'),(607,0,7820,0,'LMT'),(607,1,7200,0,'CAT'),(608,0,815,0,'LMT'),(608,1,0,0,'GMT'),(608,2,1800,0,'+0030'),(608,3,3600,0,'WAT'),(609,0,7820,0,'LMT'),(609,1,7200,0,'CAT'),(610,0,7509,0,'LMT'),(610,1,10800,1,'EEST'),(610,2,7200,0,'EET'),(610,3,10800,1,'EEST'),(611,0,-1820,0,'LMT'),(611,1,3600,1,'+01'),(611,2,0,0,'+00'),(611,3,3600,0,'+01'),(611,4,0,1,'+00'),(612,0,-1276,0,'LMT'),(612,1,0,0,'WET'),(612,2,3600,1,'WEST'),(612,3,0,0,'WET'),(612,4,3600,0,'CET'),(612,5,7200,1,'CEST'),(612,6,3600,0,'CET'),(613,0,-968,0,'LMT'),(613,1,0,0,'GMT'),(614,0,-968,0,'LMT'),(614,1,0,0,'GMT'),(615,0,8836,0,'LMT'),(615,1,9000,0,'+0230'),(615,2,10800,0,'EAT'),(615,3,9900,0,'+0245'),(615,4,10800,0,'EAT'),(616,0,8836,0,'LMT'),(616,1,9000,0,'+0230'),(616,2,10800,0,'EAT'),(616,3,9900,0,'+0245'),(616,4,10800,0,'EAT'),(617,0,815,0,'LMT'),(617,1,0,0,'GMT'),(617,2,1800,0,'+0030'),(617,3,3600,0,'WAT'),(618,0,-3168,0,'LMT'),(618,1,-3600,0,'-01'),(618,2,3600,1,'+01'),(618,3,0,0,'+00'),(618,4,0,1,'+00'),(618,5,3600,0,'+01'),(619,0,-968,0,'LMT'),(619,1,0,0,'GMT'),(620,0,7820,0,'LMT'),(620,1,7200,0,'CAT'),(621,0,7820,0,'LMT'),(621,1,7200,0,'CAT'),(622,0,6720,0,'LMT'),(622,1,5400,0,'SAST'),(622,2,10800,1,'SAST'),(622,3,7200,0,'SAST'),(623,0,7588,0,'LMT'),(623,1,10800,1,'CAST'),(623,2,7200,0,'CAT'),(623,3,10800,0,'EAT'),(623,4,7200,0,'CAT'),(624,0,8836,0,'LMT'),(624,1,9000,0,'+0230'),(624,2,10800,0,'EAT'),(624,3,9900,0,'+0245'),(624,4,10800,0,'EAT'),(625,0,7808,0,'LMT'),(625,1,10800,1,'CAST'),(625,2,7200,0,'CAT'),(625,3,10800,0,'EAT'),(625,4,7200,0,'CAT'),(626,0,7820,0,'LMT'),(626,1,7200,0,'CAT'),(627,0,815,0,'LMT'),(627,1,0,0,'GMT'),(627,2,1800,0,'+0030'),(627,3,3600,0,'WAT'),(628,0,815,0,'LMT'),(628,1,0,0,'GMT'),(628,2,1800,0,'+0030'),(628,3,3600,0,'WAT'),(629,0,815,0,'LMT'),(629,1,0,0,'GMT'),(629,2,1800,0,'+0030'),(629,3,3600,0,'WAT'),(630,0,-968,0,'LMT'),(630,1,0,0,'GMT'),(631,0,815,0,'LMT'),(631,1,0,0,'GMT'),(631,2,1800,0,'+0030'),(631,3,3600,0,'WAT'),(632,0,7820,0,'LMT'),(632,1,7200,0,'CAT'),(633,0,7820,0,'LMT'),(633,1,7200,0,'CAT'),(634,0,815,0,'LMT'),(634,1,0,0,'GMT'),(634,2,1800,0,'+0030'),(634,3,3600,0,'WAT'),(635,0,7820,0,'LMT'),(635,1,7200,0,'CAT'),(636,0,6720,0,'LMT'),(636,1,5400,0,'SAST'),(636,2,10800,1,'SAST'),(636,3,7200,0,'SAST'),(637,0,6720,0,'LMT'),(637,1,5400,0,'SAST'),(637,2,10800,1,'SAST'),(637,3,7200,0,'SAST'),(638,0,8836,0,'LMT'),(638,1,9000,0,'+0230'),(638,2,10800,0,'EAT'),(638,3,9900,0,'+0245'),(638,4,10800,0,'EAT'),(639,0,-2588,0,'LMT'),(639,1,-2588,0,'MMT'),(639,2,-2670,0,'MMT'),(639,3,0,0,'GMT'),(640,0,8836,0,'LMT'),(640,1,9000,0,'+0230'),(640,2,10800,0,'EAT'),(640,3,9900,0,'+0245'),(640,4,10800,0,'EAT'),(641,0,3612,0,'LMT'),(641,1,3600,0,'WAT'),(641,2,7200,1,'WAST'),(642,0,815,0,'LMT'),(642,1,0,0,'GMT'),(642,2,1800,0,'+0030'),(642,3,3600,0,'WAT'),(643,0,-968,0,'LMT'),(643,1,0,0,'GMT'),(644,0,-968,0,'LMT'),(644,1,0,0,'GMT'),(645,0,815,0,'LMT'),(645,1,0,0,'GMT'),(645,2,1800,0,'+0030'),(645,3,3600,0,'WAT'),(646,0,1616,0,'LMT'),(646,1,-2205,0,'LMT'),(646,2,0,0,'GMT'),(646,3,3600,0,'WAT'),(646,4,0,0,'GMT'),(647,0,-968,0,'LMT'),(647,1,0,0,'GMT'),(648,0,3164,0,'LMT'),(648,1,7200,1,'CEST'),(648,2,3600,0,'CET'),(648,3,7200,0,'EET'),(649,0,2444,0,'LMT'),(649,1,561,0,'PMT'),(649,2,7200,1,'CEST'),(649,3,3600,0,'CET'),(649,4,3600,0,'CET'),(649,5,7200,1,'CEST'),(650,0,4104,0,'LMT'),(650,1,5400,0,'+0130'),(650,2,7200,0,'SAST'),(650,3,10800,1,'SAST'),(650,4,3600,1,'WAT'),(650,5,7200,0,'CAT'),(651,0,44002,0,'LMT'),(651,1,-39600,0,'NST'),(651,2,-36000,1,'NWT'),(651,3,-36000,1,'NPT'),(651,4,-39600,0,'BST'),(651,5,-36000,1,'BDT'),(651,6,-36000,0,'AHST'),(651,7,-32400,1,'HDT'),(651,8,-36000,0,'HST'),(652,0,50424,0,'LMT'),(652,1,-36000,0,'AST'),(652,2,-32400,1,'AWT'),(652,3,-32400,1,'APT'),(652,4,-36000,0,'AHST'),(652,5,-32400,1,'AHDT'),(652,6,-32400,0,'YST'),(652,7,-28800,1,'AKDT'),(652,8,-32400,0,'AKST'),(653,0,-15865,0,'LMT'),(653,1,-14400,0,'AST'),(653,2,-10800,1,'APT'),(653,3,-10800,1,'AWT'),(654,0,-15865,0,'LMT'),(654,1,-14400,0,'AST'),(654,2,-10800,1,'APT'),(654,3,-10800,1,'AWT'),(655,0,-11568,0,'LMT'),(655,1,-7200,1,'-02'),(655,2,-10800,0,'-03'),(656,0,-14028,0,'LMT'),(656,1,-15408,0,'CMT'),(656,2,-14400,0,'-04'),(656,3,-10800,1,'-03'),(656,4,-7200,1,'-02'),(656,5,-10800,0,'-03'),(657,0,-15788,0,'LMT'),(657,1,-15408,0,'CMT'),(657,2,-14400,0,'-04'),(657,3,-10800,1,'-03'),(657,4,-7200,1,'-02'),(657,5,-10800,0,'-03'),(658,0,-15788,0,'LMT'),(658,1,-15408,0,'CMT'),(658,2,-14400,0,'-04'),(658,3,-10800,1,'-03'),(658,4,-7200,1,'-02'),(658,5,-10800,0,'-03'),(659,0,-15408,0,'LMT'),(659,1,-15408,0,'CMT'),(659,2,-14400,0,'-04'),(659,3,-10800,1,'-03'),(659,4,-7200,1,'-02'),(659,5,-10800,0,'-03'),(660,0,-15672,0,'LMT'),(660,1,-15408,0,'CMT'),(660,2,-14400,0,'-04'),(660,3,-10800,1,'-03'),(660,4,-7200,1,'-02'),(660,5,-10800,0,'-03'),(661,0,-16044,0,'LMT'),(661,1,-15408,0,'CMT'),(661,2,-14400,0,'-04'),(661,3,-10800,1,'-03'),(661,4,-7200,1,'-02'),(661,5,-10800,0,'-03'),(662,0,-16516,0,'LMT'),(662,1,-15408,0,'CMT'),(662,2,-14400,0,'-04'),(662,3,-10800,1,'-03'),(662,4,-7200,1,'-02'),(662,5,-10800,0,'-03'),(663,0,-16612,0,'LMT'),(663,1,-15408,0,'CMT'),(663,2,-14400,0,'-04'),(663,3,-10800,1,'-03'),(663,4,-7200,1,'-02'),(663,5,-10800,0,'-03'),(664,0,-15700,0,'LMT'),(664,1,-15408,0,'CMT'),(664,2,-14400,0,'-04'),(664,3,-10800,1,'-03'),(664,4,-7200,1,'-02'),(664,5,-10800,0,'-03'),(665,0,-16444,0,'LMT'),(665,1,-15408,0,'CMT'),(665,2,-14400,0,'-04'),(665,3,-10800,1,'-03'),(665,4,-7200,1,'-02'),(665,5,-10800,0,'-03'),(666,0,-15924,0,'LMT'),(666,1,-15408,0,'CMT'),(666,2,-14400,0,'-04'),(666,3,-10800,1,'-03'),(666,4,-7200,1,'-02'),(666,5,-10800,0,'-03'),(666,6,-10800,1,'-03'),(667,0,-15652,0,'LMT'),(667,1,-15408,0,'CMT'),(667,2,-14400,0,'-04'),(667,3,-10800,1,'-03'),(667,4,-7200,1,'-02'),(667,5,-10800,0,'-03'),(668,0,-16392,0,'LMT'),(668,1,-15408,0,'CMT'),(668,2,-14400,0,'-04'),(668,3,-10800,1,'-03'),(668,4,-7200,1,'-02'),(668,5,-10800,0,'-03'),(669,0,-15865,0,'LMT'),(669,1,-14400,0,'AST'),(669,2,-10800,1,'APT'),(669,3,-10800,1,'AWT'),(670,0,-13840,0,'LMT'),(670,1,-13840,0,'AMT'),(670,2,-14400,0,'-04'),(670,3,-10800,0,'-03'),(670,4,-10800,1,'-03'),(670,5,-14400,0,'-04'),(671,0,-19088,0,'LMT'),(671,1,-19176,0,'CMT'),(671,2,-18000,0,'EST'),(672,0,44002,0,'LMT'),(672,1,-39600,0,'NST'),(672,2,-36000,1,'NWT'),(672,3,-36000,1,'NPT'),(672,4,-39600,0,'BST'),(672,5,-36000,1,'BDT'),(672,6,-36000,0,'AHST'),(672,7,-32400,1,'HDT'),(672,8,-36000,0,'HST'),(673,0,-9244,0,'LMT'),(673,1,-7200,1,'-02'),(673,2,-10800,0,'-03'),(674,0,-25260,0,'LMT'),(674,1,-25200,0,'MST'),(674,2,-21600,0,'CST'),(674,3,-28800,0,'PST'),(674,4,-21600,1,'MDT'),(674,5,-18000,1,'CDT'),(674,6,-21600,0,'CST'),(675,0,-14309,0,'LMT'),(675,1,-10800,1,'ADT'),(675,2,-14400,0,'AST'),(675,3,-14400,0,'AST'),(675,4,-12600,1,'-0330'),(675,5,-10800,1,'ADT'),(676,0,-11636,0,'LMT'),(676,1,-7200,1,'-02'),(676,2,-10800,0,'-03'),(677,0,-21168,0,'LMT'),(677,1,-19800,1,'-0530'),(677,2,-21600,0,'CST'),(677,3,-18000,1,'CWT'),(677,4,-18000,1,'CPT'),(677,5,-18000,1,'CDT'),(678,0,-15865,0,'LMT'),(678,1,-14400,0,'AST'),(678,2,-10800,1,'APT'),(678,3,-10800,1,'AWT'),(679,0,-14560,0,'LMT'),(679,1,-10800,1,'-03'),(679,2,-14400,0,'-04'),(680,0,-17776,0,'LMT'),(680,1,-17776,0,'BMT'),(680,2,-14400,1,'-04'),(680,3,-18000,0,'-05'),(681,0,-27889,0,'LMT'),(681,1,-25200,1,'PDT'),(681,2,-28800,0,'PST'),(681,3,-21600,1,'MWT'),(681,4,-21600,1,'MPT'),(681,5,-25200,0,'MST'),(681,6,-21600,1,'MDT'),(682,0,-14028,0,'LMT'),(682,1,-15408,0,'CMT'),(682,2,-14400,0,'-04'),(682,3,-10800,1,'-03'),(682,4,-7200,1,'-02'),(682,5,-10800,0,'-03'),(683,0,0,0,'-00'),(683,1,-21600,1,'MWT'),(683,2,-21600,1,'MPT'),(683,3,-25200,0,'MST'),(683,4,-18000,1,'MDDT'),(683,5,-21600,1,'MDT'),(683,6,-18000,1,'CDT'),(683,7,-21600,0,'CST'),(683,8,-18000,0,'EST'),(683,9,-21600,1,'MDT'),(683,10,-25200,0,'MST'),(684,0,-13108,0,'LMT'),(684,1,-10800,1,'-03'),(684,2,-14400,0,'-04'),(685,0,-20824,0,'LMT'),(685,1,-21600,0,'CST'),(685,2,-14400,1,'EDT'),(685,3,-18000,0,'EST'),(685,4,-18000,1,'CDT'),(686,0,-16064,0,'LMT'),(686,1,-16060,0,'CMT'),(686,2,-16200,0,'-0430'),(686,3,-14400,0,'-04'),(687,0,-15788,0,'LMT'),(687,1,-15408,0,'CMT'),(687,2,-14400,0,'-04'),(687,3,-10800,1,'-03'),(687,4,-7200,1,'-02'),(687,5,-10800,0,'-03'),(688,0,-12560,0,'LMT'),(688,1,-14400,0,'-04'),(688,2,-10800,0,'-03'),(689,0,-19088,0,'LMT'),(689,1,-19176,0,'CMT'),(689,2,-18000,0,'EST'),(690,0,-21036,0,'LMT'),(690,1,-18000,1,'CDT'),(690,2,-21600,0,'CST'),(690,3,-18000,0,'EST'),(690,4,-18000,1,'CWT'),(690,5,-18000,1,'CPT'),(690,6,-21600,0,'CST'),(691,0,-25460,0,'LMT'),(691,1,-25200,0,'MST'),(691,2,-21600,0,'CST'),(691,3,-18000,1,'CDT'),(691,4,-21600,1,'MDT'),(691,5,-25200,0,'MST'),(692,0,-19088,0,'LMT'),(692,1,-19176,0,'CMT'),(692,2,-18000,0,'EST'),(693,0,-15408,0,'LMT'),(693,1,-15408,0,'CMT'),(693,2,-14400,0,'-04'),(693,3,-10800,1,'-03'),(693,4,-7200,1,'-02'),(693,5,-10800,0,'-03'),(694,0,-20173,0,'LMT'),(694,1,-20173,0,'SJMT'),(694,2,-18000,1,'CDT'),(694,3,-21600,0,'CST'),(695,0,-26898,0,'LMT'),(695,1,-21600,1,'MDT'),(695,2,-25200,0,'MST'),(695,3,-21600,1,'MWT'),(696,0,-13460,0,'LMT'),(696,1,-10800,1,'-03'),(696,2,-14400,0,'-04'),(697,0,-15865,0,'LMT'),(697,1,-14400,0,'AST'),(697,2,-10800,1,'APT'),(697,3,-10800,1,'AWT'),(698,0,-4480,0,'LMT'),(698,1,-10800,0,'-03'),(698,2,-10800,0,'-03'),(698,3,-7200,1,'-02'),(698,4,-7200,1,'-02'),(698,5,0,0,'GMT'),(699,0,-33460,0,'LMT'),(699,1,-28800,1,'YDT'),(699,2,-32400,0,'YST'),(699,3,-28800,1,'YWT'),(699,4,-28800,1,'YPT'),(699,5,-25200,1,'YDDT'),(699,6,-28800,0,'PST'),(699,7,-25200,1,'PDT'),(699,8,-25200,0,'MST'),(700,0,-28856,0,'LMT'),(700,1,-25200,1,'PDT'),(700,2,-28800,0,'PST'),(700,3,-25200,1,'PWT'),(700,4,-25200,1,'PPT'),(700,5,-25200,0,'MST'),(701,0,-25196,0,'LMT'),(701,1,-21600,1,'MDT'),(701,2,-25200,0,'MST'),(701,3,-21600,1,'MWT'),(701,4,-21600,1,'MPT'),(702,0,-19931,0,'LMT'),(702,1,-21600,0,'CST'),(702,2,-18000,0,'EST'),(702,3,-14400,1,'EWT'),(702,4,-14400,1,'EPT'),(702,5,-14400,1,'EDT'),(703,0,-15865,0,'LMT'),(703,1,-14400,0,'AST'),(703,2,-10800,1,'APT'),(703,3,-10800,1,'AWT'),(704,0,-27232,0,'LMT'),(704,1,-21600,1,'MDT'),(704,2,-25200,0,'MST'),(704,3,-21600,1,'MWT'),(704,4,-21600,1,'MPT'),(705,0,-16768,0,'LMT'),(705,1,-14400,1,'-04'),(705,2,-18000,0,'-05'),(705,3,-14400,0,'-04'),(705,4,-18000,0,'-05'),(706,0,-21408,0,'LMT'),(706,1,-18000,1,'CDT'),(706,2,-21600,0,'CST'),(707,0,-28084,0,'LMT'),(707,1,-25200,0,'MST'),(707,2,-28800,0,'PST'),(707,3,-25200,1,'PDT'),(707,4,-25200,1,'PWT'),(707,5,-25200,1,'PPT'),(708,0,-29447,0,'LMT'),(708,1,-25200,1,'PDT'),(708,2,-28800,0,'PST'),(708,3,-25200,1,'PWT'),(708,4,-25200,1,'PPT'),(708,5,-25200,0,'MST'),(709,0,-20678,0,'LMT'),(709,1,-18000,1,'CDT'),(709,2,-21600,0,'CST'),(709,3,-18000,1,'CWT'),(709,4,-18000,1,'CPT'),(709,5,-18000,0,'EST'),(709,6,-14400,1,'EDT'),(710,0,-9240,0,'LMT'),(710,1,-7200,1,'-02'),(710,2,-10800,0,'-03'),(711,0,-14388,0,'LMT'),(711,1,-10800,1,'ADT'),(711,2,-14400,0,'AST'),(711,3,-10800,1,'AWT'),(711,4,-10800,1,'APT'),(712,0,-12416,0,'LMT'),(712,1,-10800,0,'-03'),(712,2,-10800,0,'-03'),(712,3,-7200,1,'-02'),(712,4,-7200,1,'-02'),(713,0,-14500,0,'LMT'),(713,1,-12652,0,'NST'),(713,2,-9052,1,'NDT'),(713,3,-12600,0,'NST'),(713,4,-9000,1,'NDT'),(713,5,-9000,1,'NPT'),(713,6,-9000,1,'NWT'),(713,7,-10800,1,'ADT'),(713,8,-14400,0,'AST'),(713,9,-7200,1,'ADDT'),(713,10,-10800,1,'ADT'),(714,0,-17072,0,'LMT'),(714,1,-18430,0,'KMT'),(714,2,-18000,0,'EST'),(714,3,-14400,1,'EDT'),(714,4,-14400,0,'AST'),(714,5,-18000,0,'EST'),(715,0,-15865,0,'LMT'),(715,1,-14400,0,'AST'),(715,2,-10800,1,'APT'),(715,3,-10800,1,'AWT'),(716,0,-15865,0,'LMT'),(716,1,-14400,0,'AST'),(716,2,-10800,1,'APT'),(716,3,-10800,1,'AWT'),(717,0,-21724,0,'LMT'),(717,1,-18000,1,'CDT'),(717,2,-21600,0,'CST'),(718,0,-19160,0,'LMT'),(718,1,-18840,0,'QMT'),(718,2,-14400,1,'-04'),(718,3,-18000,0,'-05'),(719,0,-13959,0,'LMT'),(719,1,-14400,0,'-04'),(719,2,-13500,0,'-0345'),(719,3,-10800,0,'-03'),(719,4,-14400,0,'-04'),(720,0,-15264,0,'LMT'),(720,1,-10800,1,'ADT'),(720,2,-14400,0,'AST'),(720,3,-10800,1,'AWT'),(720,4,-10800,1,'APT'),(721,0,-19768,0,'LMT'),(721,1,-19776,0,'HMT'),(721,2,-14400,1,'CDT'),(721,3,-18000,0,'CST'),(721,4,-18000,0,'CST'),(721,5,-14400,1,'CDT'),(722,0,-26632,0,'LMT'),(722,1,-25200,0,'MST'),(722,2,-21600,0,'CST'),(722,3,-28800,0,'PST'),(722,4,-21600,1,'MDT'),(722,5,-25200,0,'MST'),(723,0,-20678,0,'LMT'),(723,1,-18000,1,'CDT'),(723,2,-21600,0,'CST'),(723,3,-18000,1,'CWT'),(723,4,-18000,1,'CPT'),(723,5,-18000,0,'EST'),(723,6,-14400,1,'EDT'),(724,0,-20790,0,'LMT'),(724,1,-18000,1,'CDT'),(724,2,-21600,0,'CST'),(724,3,-18000,1,'CWT'),(724,4,-18000,1,'CPT'),(724,5,-18000,0,'EST'),(724,6,-21600,0,'CST'),(725,0,-20723,0,'LMT'),(725,1,-18000,1,'CDT'),(725,2,-21600,0,'CST'),(725,3,-18000,1,'CWT'),(725,4,-18000,1,'CPT'),(725,5,-18000,0,'EST'),(725,6,-14400,1,'EDT'),(726,0,-20947,0,'LMT'),(726,1,-18000,1,'CDT'),(726,2,-21600,0,'CST'),(726,3,-18000,1,'CWT'),(726,4,-18000,1,'CPT'),(726,5,-18000,0,'EST'),(726,6,-14400,1,'EDT'),(727,0,-20823,0,'LMT'),(727,1,-18000,1,'CDT'),(727,2,-21600,0,'CST'),(727,3,-18000,1,'CWT'),(727,4,-18000,1,'CPT'),(727,5,-18000,0,'EST'),(727,6,-14400,1,'EDT'),(727,7,-18000,1,'CDT'),(727,8,-21600,0,'CST'),(728,0,-20416,0,'LMT'),(728,1,-18000,1,'CDT'),(728,2,-21600,0,'CST'),(728,3,-18000,1,'CWT'),(728,4,-18000,1,'CPT'),(728,5,-18000,0,'EST'),(728,6,-14400,1,'EDT'),(729,0,-21007,0,'LMT'),(729,1,-18000,1,'CDT'),(729,2,-21600,0,'CST'),(729,3,-18000,1,'CWT'),(729,4,-18000,1,'CPT'),(729,5,-18000,0,'EST'),(729,6,-14400,1,'EDT'),(730,0,-20785,0,'LMT'),(730,1,-18000,1,'CDT'),(730,2,-21600,0,'CST'),(730,3,-18000,1,'CWT'),(730,4,-18000,1,'CPT'),(730,5,-18000,0,'EST'),(730,6,-14400,1,'EDT'),(731,0,-20678,0,'LMT'),(731,1,-18000,1,'CDT'),(731,2,-21600,0,'CST'),(731,3,-18000,1,'CWT'),(731,4,-18000,1,'CPT'),(731,5,-18000,0,'EST'),(731,6,-14400,1,'EDT'),(732,0,0,0,'-00'),(732,1,-21600,1,'PDDT'),(732,2,-28800,0,'PST'),(732,3,-25200,0,'MST'),(732,4,-21600,1,'MDT'),(733,0,0,0,'-00'),(733,1,-14400,1,'EPT'),(733,2,-18000,0,'EST'),(733,3,-10800,1,'EDDT'),(733,4,-14400,1,'EDT'),(733,5,-14400,1,'EWT'),(733,6,-21600,0,'CST'),(733,7,-18000,1,'CDT'),(733,8,-14400,1,'EDT'),(733,9,-18000,0,'EST'),(734,0,-18430,0,'LMT'),(734,1,-18430,0,'KMT'),(734,2,-18000,0,'EST'),(734,3,-14400,1,'EDT'),(735,0,-15672,0,'LMT'),(735,1,-15408,0,'CMT'),(735,2,-14400,0,'-04'),(735,3,-10800,1,'-03'),(735,4,-7200,1,'-02'),(735,5,-10800,0,'-03'),(736,0,54139,0,'LMT'),(736,1,-28800,0,'PST'),(736,2,-25200,1,'PWT'),(736,3,-25200,1,'PPT'),(736,4,-25200,1,'PDT'),(736,5,-28800,1,'YDT'),(736,6,-32400,0,'YST'),(736,7,-28800,1,'AKDT'),(736,8,-32400,0,'AKST'),(737,0,-20582,0,'LMT'),(737,1,-18000,1,'CDT'),(737,2,-21600,0,'CST'),(737,3,-18000,1,'CWT'),(737,4,-18000,1,'CPT'),(737,5,-18000,0,'EST'),(737,6,-14400,1,'EDT'),(738,0,-20364,0,'LMT'),(738,1,-18000,1,'CDT'),(738,2,-21600,0,'CST'),(738,3,-18000,1,'CWT'),(738,4,-18000,1,'CPT'),(738,5,-14400,1,'EDT'),(738,6,-18000,0,'EST'),(739,0,-20790,0,'LMT'),(739,1,-18000,1,'CDT'),(739,2,-21600,0,'CST'),(739,3,-18000,1,'CWT'),(739,4,-18000,1,'CPT'),(739,5,-18000,0,'EST'),(739,6,-21600,0,'CST'),(740,0,-15865,0,'LMT'),(740,1,-14400,0,'AST'),(740,2,-10800,1,'APT'),(740,3,-10800,1,'AWT'),(741,0,-16356,0,'LMT'),(741,1,-16356,0,'CMT'),(741,2,-12756,1,'BST'),(741,3,-14400,0,'-04'),(742,0,-18492,0,'LMT'),(742,1,-18516,0,'LMT'),(742,2,-14400,1,'-04'),(742,3,-18000,0,'-05'),(743,0,-28378,0,'LMT'),(743,1,-25200,1,'PDT'),(743,2,-28800,0,'PST'),(743,3,-25200,1,'PWT'),(743,4,-25200,1,'PPT'),(744,0,-20582,0,'LMT'),(744,1,-18000,1,'CDT'),(744,2,-21600,0,'CST'),(744,3,-18000,1,'CWT'),(744,4,-18000,1,'CPT'),(744,5,-18000,0,'EST'),(744,6,-14400,1,'EDT'),(745,0,-15865,0,'LMT'),(745,1,-14400,0,'AST'),(745,2,-10800,1,'APT'),(745,3,-10800,1,'AWT'),(746,0,-8572,0,'LMT'),(746,1,-7200,1,'-02'),(746,2,-10800,0,'-03'),(747,0,-20708,0,'LMT'),(747,1,-20712,0,'MMT'),(747,2,-21600,0,'CST'),(747,3,-18000,0,'EST'),(747,4,-18000,1,'CDT'),(747,5,-21600,0,'CST'),(748,0,-14404,0,'LMT'),(748,1,-10800,1,'-03'),(748,2,-14400,0,'-04'),(749,0,-15865,0,'LMT'),(749,1,-14400,0,'AST'),(749,2,-10800,1,'APT'),(749,3,-10800,1,'AWT'),(750,0,-14660,0,'LMT'),(750,1,-14660,0,'FFMT'),(750,2,-14400,0,'AST'),(750,3,-10800,1,'ADT'),(751,0,-24000,0,'LMT'),(751,1,-21600,0,'CST'),(751,2,-18000,1,'CDT'),(752,0,-25540,0,'LMT'),(752,1,-25200,0,'MST'),(752,2,-21600,0,'CST'),(752,3,-28800,0,'PST'),(752,4,-21600,1,'MDT'),(752,5,-25200,0,'MST'),(753,0,-16516,0,'LMT'),(753,1,-15408,0,'CMT'),(753,2,-14400,0,'-04'),(753,3,-10800,1,'-03'),(753,4,-7200,1,'-02'),(753,5,-10800,0,'-03'),(754,0,-21027,0,'LMT'),(754,1,-18000,1,'CDT'),(754,2,-21600,0,'CST'),(754,3,-18000,1,'CWT'),(754,4,-18000,1,'CPT'),(754,5,-18000,0,'EST'),(754,6,-21600,0,'CST'),(755,0,-21508,0,'LMT'),(755,1,-21600,0,'CST'),(755,2,-18000,0,'EST'),(755,3,-18000,1,'CDT'),(755,4,-21600,0,'CST'),(756,0,54822,0,'LMT'),(756,1,-28800,0,'PST'),(756,2,-25200,1,'PWT'),(756,3,-25200,1,'PPT'),(756,4,-25200,1,'PDT'),(756,5,-32400,0,'AKST'),(756,6,-28800,1,'AKDT'),(757,0,-23796,0,'LMT'),(757,1,-25200,0,'MST'),(757,2,-21600,0,'CST'),(757,3,-18000,1,'CDT'),(757,4,-18000,1,'CWT'),(758,0,-13480,0,'LMT'),(758,1,-14400,0,'AST'),(758,2,-10800,0,'-03'),(758,3,-7200,1,'-02'),(759,0,-15548,0,'LMT'),(759,1,-18000,0,'EST'),(759,2,-10800,1,'ADT'),(759,3,-14400,0,'AST'),(759,4,-10800,1,'AWT'),(759,5,-10800,1,'APT'),(760,0,-24076,0,'LMT'),(760,1,-21600,0,'CST'),(760,2,-18000,1,'CDT'),(761,0,-13491,0,'LMT'),(761,1,-13491,0,'MMT'),(761,2,-14400,0,'-04'),(761,3,-12600,0,'-0330'),(761,4,-10800,1,'-03'),(761,5,-10800,0,'-03'),(761,6,-9000,1,'-0230'),(761,7,-7200,1,'-02'),(761,8,-5400,1,'-0130'),(761,9,-7200,1,'-02'),(762,0,-19052,0,'LMT'),(762,1,-14400,1,'EDT'),(762,2,-18000,0,'EST'),(762,3,-14400,1,'EWT'),(762,4,-14400,1,'EPT'),(763,0,-15865,0,'LMT'),(763,1,-14400,0,'AST'),(763,2,-10800,1,'APT'),(763,3,-10800,1,'AWT'),(764,0,-19052,0,'LMT'),(764,1,-14400,1,'EDT'),(764,2,-18000,0,'EST'),(764,3,-14400,1,'EWT'),(764,4,-14400,1,'EPT'),(765,0,-17762,0,'LMT'),(765,1,-14400,1,'EDT'),(765,2,-18000,0,'EST'),(765,3,-18000,0,'EST'),(765,4,-14400,1,'EWT'),(765,5,-14400,1,'EPT'),(766,0,-21184,0,'LMT'),(766,1,-14400,1,'EDT'),(766,2,-18000,0,'EST'),(766,3,-14400,1,'EWT'),(766,4,-14400,1,'EPT'),(767,0,46702,0,'LMT'),(767,1,-39600,0,'NST'),(767,2,-36000,1,'NWT'),(767,3,-36000,1,'NPT'),(767,4,-39600,0,'BST'),(767,5,-36000,1,'BDT'),(767,6,-32400,0,'YST'),(767,7,-28800,1,'AKDT'),(767,8,-32400,0,'AKST'),(768,0,-7780,0,'LMT'),(768,1,-3600,1,'-01'),(768,2,-7200,0,'-02'),(769,0,-24427,0,'LMT'),(769,1,-21600,1,'MDT'),(769,2,-25200,0,'MST'),(769,3,-21600,1,'MWT'),(769,4,-21600,1,'MPT'),(769,5,-18000,1,'CDT'),(769,6,-21600,0,'CST'),(770,0,-24312,0,'LMT'),(770,1,-21600,1,'MDT'),(770,2,-25200,0,'MST'),(770,3,-21600,1,'MWT'),(770,4,-21600,1,'MPT'),(770,5,-18000,1,'CDT'),(770,6,-21600,0,'CST'),(771,0,-24339,0,'LMT'),(771,1,-21600,1,'MDT'),(771,2,-25200,0,'MST'),(771,3,-21600,1,'MWT'),(771,4,-21600,1,'MPT'),(771,5,-18000,1,'CDT'),(771,6,-21600,0,'CST'),(772,0,-12416,0,'LMT'),(772,1,-10800,0,'-03'),(772,2,-10800,0,'-03'),(772,3,-7200,1,'-02'),(772,4,-7200,1,'-02'),(773,0,-25060,0,'LMT'),(773,1,-25200,0,'MST'),(773,2,-21600,0,'CST'),(773,3,-18000,1,'CDT'),(773,4,-21600,1,'MDT'),(773,5,-25200,0,'MST'),(774,0,-19088,0,'LMT'),(774,1,-19176,0,'CMT'),(774,2,-18000,0,'EST'),(775,0,0,0,'-00'),(775,1,-10800,1,'AWT'),(775,2,-10800,1,'APT'),(775,3,-14400,0,'AST'),(775,4,-7200,1,'ADDT'),(775,5,-10800,1,'ADT'),(775,6,-14400,1,'EDT'),(775,7,-18000,0,'EST'),(775,8,-21600,0,'CST'),(775,9,-18000,1,'CDT'),(775,10,-14400,1,'EDT'),(775,11,-18000,0,'EST'),(776,0,-13240,0,'LMT'),(776,1,-13252,0,'PMT'),(776,2,-13236,0,'PMT'),(776,3,-12600,0,'-0330'),(776,4,-10800,0,'-03'),(777,0,-26898,0,'LMT'),(777,1,-21600,1,'MDT'),(777,2,-25200,0,'MST'),(777,3,-21600,1,'MWT'),(778,0,-17360,0,'LMT'),(778,1,-17340,0,'PPMT'),(778,2,-14400,1,'EDT'),(778,3,-18000,0,'EST'),(778,4,-14400,1,'EDT'),(778,5,-18000,0,'EST'),(779,0,-15865,0,'LMT'),(779,1,-14400,0,'AST'),(779,2,-10800,1,'APT'),(779,3,-10800,1,'AWT'),(780,0,-16272,0,'LMT'),(780,1,-14400,1,'-04'),(780,2,-18000,0,'-05'),(780,3,-14400,0,'-04'),(780,4,-18000,0,'-05'),(781,0,-15336,0,'LMT'),(781,1,-10800,1,'-03'),(781,2,-14400,0,'-04'),(782,0,-15865,0,'LMT'),(782,1,-14400,0,'AST'),(782,2,-10800,1,'APT'),(782,3,-10800,1,'AWT'),(783,0,-17020,0,'LMT'),(783,1,-16965,0,'SMT'),(783,2,-18000,0,'-05'),(783,3,-14400,0,'-04'),(783,4,-14400,1,'-04'),(783,5,-10800,1,'-03'),(783,6,-14400,0,'-04'),(783,7,-10800,0,'-03'),(784,0,-22696,0,'LMT'),(784,1,-18000,1,'CDT'),(784,2,-21600,0,'CST'),(784,3,-18000,1,'CWT'),(784,4,-18000,1,'CPT'),(785,0,0,0,'-00'),(785,1,-14400,1,'CDDT'),(785,2,-21600,0,'CST'),(785,3,-18000,1,'CDT'),(785,4,-18000,0,'EST'),(785,5,-21600,0,'CST'),(786,0,-8376,0,'LMT'),(786,1,-7200,1,'-02'),(786,2,-10800,0,'-03'),(787,0,-25116,0,'LMT'),(787,1,-21600,1,'MDT'),(787,2,-25200,0,'MST'),(787,3,-21600,1,'MWT'),(787,4,-21600,1,'MPT'),(787,5,-21600,0,'CST'),(788,0,0,0,'-00'),(788,1,-14400,1,'CDDT'),(788,2,-21600,0,'CST'),(788,3,-18000,1,'CDT'),(788,4,-18000,0,'EST'),(788,5,-21600,0,'CST'),(789,0,-16272,0,'LMT'),(789,1,-14400,1,'-04'),(789,2,-18000,0,'-05'),(789,3,-14400,0,'-04'),(789,4,-18000,0,'-05'),(790,0,-15408,0,'LMT'),(790,1,-15408,0,'CMT'),(790,2,-14400,0,'-04'),(790,3,-10800,1,'-03'),(790,4,-7200,1,'-02'),(790,5,-10800,0,'-03'),(791,0,-28084,0,'LMT'),(791,1,-25200,0,'MST'),(791,2,-28800,0,'PST'),(791,3,-25200,1,'PDT'),(791,4,-25200,1,'PWT'),(791,5,-25200,1,'PPT'),(792,0,-13128,0,'LMT'),(792,1,-10800,1,'-03'),(792,2,-14400,0,'-04'),(792,3,-10800,0,'-03'),(793,0,-16965,0,'LMT'),(793,1,-16965,0,'SMT'),(793,2,-18000,0,'-05'),(793,3,-14400,0,'-04'),(793,4,-14400,1,'-04'),(793,5,-10800,1,'-03'),(793,6,-10800,1,'-03'),(793,7,-14400,0,'-04'),(794,0,-16776,0,'LMT'),(794,1,-16800,0,'SDMT'),(794,2,-14400,1,'EDT'),(794,3,-18000,0,'EST'),(794,4,-16200,1,'-0430'),(794,5,-14400,0,'AST'),(795,0,-11188,0,'LMT'),(795,1,-7200,1,'-02'),(795,2,-10800,0,'-03'),(796,0,-5272,0,'LMT'),(796,1,-7200,0,'-02'),(796,2,-3600,1,'-01'),(796,3,-7200,0,'-02'),(796,4,-3600,0,'-01'),(796,5,0,1,'+00'),(796,6,0,1,'+00'),(797,0,-25196,0,'LMT'),(797,1,-21600,1,'MDT'),(797,2,-25200,0,'MST'),(797,3,-21600,1,'MWT'),(797,4,-21600,1,'MPT'),(798,0,53927,0,'LMT'),(798,1,-28800,0,'PST'),(798,2,-25200,1,'PWT'),(798,3,-25200,1,'PPT'),(798,4,-25200,1,'PDT'),(798,5,-32400,0,'YST'),(798,6,-28800,1,'AKDT'),(798,7,-32400,0,'AKST'),(799,0,-15865,0,'LMT'),(799,1,-14400,0,'AST'),(799,2,-10800,1,'APT'),(799,3,-10800,1,'AWT'),(800,0,-12652,0,'LMT'),(800,1,-9052,1,'NDT'),(800,2,-12652,0,'NST'),(800,3,-9000,1,'NDT'),(800,4,-12600,0,'NST'),(800,5,-9000,1,'NPT'),(800,6,-9000,1,'NWT'),(800,7,-5400,1,'NDDT'),(800,8,-9000,1,'NDT'),(801,0,-15865,0,'LMT'),(801,1,-14400,0,'AST'),(801,2,-10800,1,'APT'),(801,3,-10800,1,'AWT'),(802,0,-15865,0,'LMT'),(802,1,-14400,0,'AST'),(802,2,-10800,1,'APT'),(802,3,-10800,1,'AWT'),(803,0,-15865,0,'LMT'),(803,1,-14400,0,'AST'),(803,2,-10800,1,'APT'),(803,3,-10800,1,'AWT'),(804,0,-15865,0,'LMT'),(804,1,-14400,0,'AST'),(804,2,-10800,1,'APT'),(804,3,-10800,1,'AWT'),(805,0,-25880,0,'LMT'),(805,1,-21600,1,'MDT'),(805,2,-25200,0,'MST'),(805,3,-21600,1,'MWT'),(805,4,-21600,1,'MPT'),(805,5,-21600,0,'CST'),(806,0,-20932,0,'LMT'),(806,1,-18000,1,'CDT'),(806,2,-21600,0,'CST'),(807,0,-16508,0,'LMT'),(807,1,-10800,1,'ADT'),(807,2,-14400,0,'AST'),(808,0,-21420,0,'LMT'),(808,1,-21600,0,'CST'),(808,2,-18000,0,'EST'),(808,3,-14400,1,'EWT'),(808,4,-14400,1,'EPT'),(808,5,-14400,1,'EDT'),(809,0,-28084,0,'LMT'),(809,1,-25200,0,'MST'),(809,2,-28800,0,'PST'),(809,3,-25200,1,'PDT'),(809,4,-25200,1,'PWT'),(809,5,-25200,1,'PPT'),(810,0,-19052,0,'LMT'),(810,1,-14400,1,'EDT'),(810,2,-18000,0,'EST'),(810,3,-14400,1,'EWT'),(810,4,-14400,1,'EPT'),(811,0,-15865,0,'LMT'),(811,1,-14400,0,'AST'),(811,2,-10800,1,'APT'),(811,3,-10800,1,'AWT'),(812,0,-29548,0,'LMT'),(812,1,-25200,1,'PDT'),(812,2,-28800,0,'PST'),(812,3,-25200,1,'PWT'),(812,4,-25200,1,'PPT'),(813,0,-15865,0,'LMT'),(813,1,-14400,0,'AST'),(813,2,-10800,1,'APT'),(813,3,-10800,1,'AWT'),(814,0,-32412,0,'LMT'),(814,1,-28800,1,'YDT'),(814,2,-32400,0,'YST'),(814,3,-28800,1,'YWT'),(814,4,-28800,1,'YPT'),(814,5,-25200,1,'YDDT'),(814,6,-28800,0,'PST'),(814,7,-25200,1,'PDT'),(814,8,-25200,0,'MST'),(815,0,-23316,0,'LMT'),(815,1,-18000,1,'CDT'),(815,2,-21600,0,'CST'),(815,3,-18000,1,'CWT'),(815,4,-18000,1,'CPT'),(815,5,-18000,1,'CDT'),(815,6,-21600,0,'CST'),(816,0,52865,0,'LMT'),(816,1,-32400,0,'YST'),(816,2,-28800,1,'YWT'),(816,3,-28800,1,'YPT'),(816,4,-28800,1,'YDT'),(816,5,-28800,1,'AKDT'),(816,6,-32400,0,'AKST'),(817,0,0,0,'-00'),(817,1,-21600,1,'MWT'),(817,2,-21600,1,'MPT'),(817,3,-25200,0,'MST'),(817,4,-18000,1,'MDDT'),(817,5,-21600,1,'MDT'),(818,0,0,0,'-00'),(818,1,28800,0,'+08'),(818,2,39600,0,'+11'),(818,3,28800,0,'+08'),(818,4,39600,0,'+11'),(819,0,0,0,'-00'),(819,1,25200,0,'+07'),(819,2,18000,0,'+05'),(819,3,25200,0,'+07'),(820,0,35320,0,'LMT'),(820,1,36000,0,'+10'),(821,0,0,0,'-00'),(821,1,36000,0,'AEST'),(821,2,39600,1,'AEDT'),(821,3,36000,0,'AEST'),(821,4,0,0,'-00'),(821,5,39600,1,'AEDT'),(821,6,36000,0,'AEST'),(822,0,0,0,'-00'),(822,1,21600,0,'+06'),(822,2,18000,0,'+05'),(823,0,41944,0,'LMT'),(823,1,45000,1,'NZST'),(823,2,41400,0,'NZMT'),(823,3,43200,1,'NZST'),(823,4,46800,1,'NZDT'),(823,5,43200,0,'NZST'),(823,6,43200,0,'NZST'),(824,0,0,0,'-00'),(824,1,-14400,0,'-04'),(824,2,-10800,1,'-03'),(824,3,-7200,1,'-02'),(824,4,-10800,0,'-03'),(824,5,-10800,1,'-03'),(824,6,-14400,0,'-04'),(824,7,-10800,0,'-03'),(825,0,0,0,'-00'),(825,1,-10800,0,'-03'),(826,0,41944,0,'LMT'),(826,1,45000,1,'NZST'),(826,2,41400,0,'NZMT'),(826,3,43200,1,'NZST'),(826,4,46800,1,'NZDT'),(826,5,43200,0,'NZST'),(826,6,43200,0,'NZST'),(827,0,11212,0,'LMT'),(827,1,10800,0,'+03'),(828,0,0,0,'-00'),(828,1,7200,1,'+02'),(828,2,0,0,'+00'),(828,3,0,0,'+00'),(829,0,21020,0,'LMT'),(829,1,21600,0,'+06'),(830,0,3208,0,'LMT'),(830,1,7200,1,'CEST'),(830,2,3600,0,'CET'),(830,3,7200,1,'CEST'),(830,4,3600,0,'CET'),(830,5,10800,1,'CEMT'),(830,6,10800,1,'CEMT'),(830,7,7200,1,'CEST'),(830,8,3600,0,'CET'),(831,0,11212,0,'LMT'),(831,1,10800,0,'+03'),(832,0,18468,0,'LMT'),(832,1,18000,0,'+05'),(832,2,25200,1,'+07'),(832,3,21600,0,'+06'),(832,4,21600,0,'+06'),(832,5,25200,1,'+07'),(832,6,21600,1,'+06'),(832,7,18000,0,'+05'),(832,8,25200,1,'+07'),(832,9,21600,0,'+06'),(833,0,8624,0,'LMT'),(833,1,10800,1,'EEST'),(833,2,7200,0,'EET'),(833,3,7200,0,'EET'),(833,4,10800,1,'EEST'),(834,0,42596,0,'LMT'),(834,1,43200,0,'+12'),(834,2,50400,1,'+14'),(834,3,46800,0,'+13'),(834,4,46800,1,'+13'),(834,5,43200,0,'+12'),(834,6,46800,1,'+13'),(834,7,43200,1,'+12'),(834,8,39600,0,'+11'),(834,9,43200,0,'+12'),(835,0,12064,0,'LMT'),(835,1,14400,0,'+04'),(835,2,18000,0,'+05'),(835,3,21600,0,'+06'),(835,4,21600,1,'+06'),(835,5,18000,0,'+05'),(835,6,21600,1,'+06'),(835,7,18000,1,'+05'),(835,8,14400,0,'+04'),(835,9,18000,0,'+05'),(836,0,13720,0,'LMT'),(836,1,14400,0,'+04'),(836,2,18000,0,'+05'),(836,3,21600,1,'+06'),(836,4,21600,0,'+06'),(836,5,18000,0,'+05'),(836,6,21600,1,'+06'),(836,7,18000,1,'+05'),(836,8,14400,0,'+04'),(836,9,21600,1,'+06'),(836,10,18000,0,'+05'),(837,0,14012,0,'LMT'),(837,1,14400,0,'+04'),(837,2,21600,1,'+06'),(837,3,18000,0,'+05'),(837,4,18000,0,'+05'),(837,5,21600,1,'+06'),(837,6,18000,1,'+05'),(837,7,14400,0,'+04'),(837,8,18000,0,'+05'),(838,0,14012,0,'LMT'),(838,1,14400,0,'+04'),(838,2,21600,1,'+06'),(838,3,18000,0,'+05'),(838,4,18000,0,'+05'),(838,5,21600,1,'+06'),(838,6,18000,1,'+05'),(838,7,14400,0,'+04'),(838,8,18000,0,'+05'),(839,0,12464,0,'LMT'),(839,1,10800,0,'+03'),(839,2,18000,0,'+05'),(839,3,21600,0,'+06'),(839,4,21600,1,'+06'),(839,5,18000,0,'+05'),(839,6,21600,1,'+06'),(839,7,18000,1,'+05'),(839,8,14400,0,'+04'),(839,9,18000,0,'+05'),(840,0,10660,0,'LMT'),(840,1,10656,0,'BMT'),(840,2,10800,0,'+03'),(840,3,14400,1,'+04'),(840,4,10800,0,'+03'),(840,5,14400,1,'+04'),(841,0,12368,0,'LMT'),(841,1,14400,0,'+04'),(841,2,10800,0,'+03'),(842,0,11964,0,'LMT'),(842,1,10800,0,'+03'),(842,2,18000,1,'+05'),(842,3,14400,0,'+04'),(842,4,14400,0,'+04'),(842,5,18000,1,'+05'),(842,6,14400,1,'+04'),(842,7,10800,0,'+03'),(842,8,18000,1,'+05'),(842,9,14400,0,'+04'),(843,0,24124,0,'LMT'),(843,1,24124,0,'BMT'),(843,2,25200,0,'+07'),(844,0,20100,0,'LMT'),(844,1,21600,0,'+06'),(844,2,28800,1,'+08'),(844,3,25200,0,'+07'),(844,4,25200,0,'+07'),(844,5,28800,1,'+08'),(844,6,25200,1,'+07'),(844,7,21600,0,'+06'),(844,8,25200,1,'+07'),(844,9,25200,0,'+07'),(845,0,8520,0,'LMT'),(845,1,10800,1,'EEST'),(845,2,7200,0,'EET'),(846,0,17904,0,'LMT'),(846,1,18000,0,'+05'),(846,2,25200,1,'+07'),(846,3,21600,0,'+06'),(846,4,21600,0,'+06'),(846,5,25200,1,'+07'),(846,6,21600,1,'+06'),(846,7,21600,1,'+06'),(847,0,26480,0,'LMT'),(847,1,27000,0,'+0730'),(847,2,30000,1,'+0820'),(847,3,28800,0,'+08'),(847,4,32400,0,'+09'),(847,5,28800,0,'+08'),(848,0,21208,0,'LMT'),(848,1,19270,0,'MMT'),(848,2,19800,0,'IST'),(848,3,23400,1,'+0630'),(849,0,27232,0,'LMT'),(849,1,28800,0,'+08'),(849,2,36000,1,'+10'),(849,3,32400,0,'+09'),(849,4,32400,0,'+09'),(849,5,36000,1,'+10'),(849,6,32400,1,'+09'),(849,7,28800,0,'+08'),(849,8,36000,0,'+10'),(849,9,36000,1,'+10'),(849,10,32400,0,'+09'),(850,0,27480,0,'LMT'),(850,1,25200,0,'+07'),(850,2,28800,0,'+08'),(850,3,32400,0,'+09'),(850,4,36000,1,'+10'),(850,5,32400,1,'+09'),(850,6,28800,0,'+08'),(851,0,29143,0,'LMT'),(851,1,32400,1,'CDT'),(851,2,28800,0,'CST'),(852,0,29143,0,'LMT'),(852,1,32400,1,'CDT'),(852,2,28800,0,'CST'),(853,0,19164,0,'LMT'),(853,1,19172,0,'MMT'),(853,2,19800,0,'+0530'),(853,3,21600,1,'+06'),(853,4,23400,1,'+0630'),(853,5,23400,0,'+0630'),(853,6,21600,0,'+06'),(853,7,19800,0,'+0530'),(854,0,21700,0,'LMT'),(854,1,21200,0,'HMT'),(854,2,23400,0,'+0630'),(854,3,19800,0,'+0530'),(854,4,21600,0,'+06'),(854,5,25200,1,'+07'),(855,0,8712,0,'LMT'),(855,1,10800,1,'EEST'),(855,2,7200,0,'EET'),(856,0,21700,0,'LMT'),(856,1,21200,0,'HMT'),(856,2,23400,0,'+0630'),(856,3,19800,0,'+0530'),(856,4,21600,0,'+06'),(856,5,25200,1,'+07'),(857,0,30140,0,'LMT'),(857,1,28800,0,'+08'),(857,2,32400,0,'+09'),(858,0,13272,0,'LMT'),(858,1,14400,0,'+04'),(859,0,16512,0,'LMT'),(859,1,18000,0,'+05'),(859,2,25200,1,'+07'),(859,3,21600,0,'+06'),(859,4,21600,0,'+06'),(859,5,25200,1,'+07'),(859,6,21600,1,'+06'),(859,7,18000,0,'+05'),(860,0,8148,0,'LMT'),(860,1,10800,1,'EEST'),(860,2,7200,0,'EET'),(860,3,7200,0,'EET'),(860,4,10800,1,'EEST'),(860,5,10800,0,'+03'),(860,6,7200,0,'EET'),(861,0,8272,0,'LMT'),(861,1,10800,1,'EEST'),(861,2,7200,0,'EET'),(861,3,7200,0,'EET'),(861,4,10800,1,'EEST'),(861,5,10800,1,'IDT'),(861,6,7200,0,'IST'),(861,7,10800,1,'IDT'),(861,8,7200,0,'IST'),(861,9,7200,0,'EET'),(862,0,29143,0,'LMT'),(862,1,32400,1,'CDT'),(862,2,28800,0,'CST'),(863,0,8423,0,'LMT'),(863,1,10800,1,'EEST'),(863,2,7200,0,'EET'),(863,3,7200,0,'EET'),(863,4,10800,1,'EEST'),(863,5,10800,1,'IDT'),(863,6,7200,0,'IST'),(863,7,10800,1,'IDT'),(863,8,7200,0,'IST'),(863,9,7200,0,'EET'),(864,0,25590,0,'LMT'),(864,1,25590,0,'PLMT'),(864,2,25200,0,'+07'),(864,3,28800,0,'+08'),(864,4,32400,0,'+09'),(864,5,25200,0,'+07'),(865,0,27402,0,'LMT'),(865,1,28800,0,'HKT'),(865,2,32400,1,'HKST'),(865,3,30600,1,'HKWT'),(865,4,32400,0,'JST'),(865,5,28800,0,'HKT'),(865,6,32400,1,'HKST'),(865,7,28800,0,'HKT'),(866,0,21996,0,'LMT'),(866,1,21600,0,'+06'),(866,2,28800,1,'+08'),(866,3,25200,0,'+07'),(867,0,25025,0,'LMT'),(867,1,25025,0,'IMT'),(867,2,25200,0,'+07'),(867,3,32400,1,'+09'),(867,4,28800,0,'+08'),(867,5,28800,0,'+08'),(867,6,32400,1,'+09'),(867,7,28800,1,'+08'),(867,8,25200,0,'+07'),(867,9,32400,0,'+09'),(867,10,32400,1,'+09'),(867,11,28800,0,'+08'),(868,0,6952,0,'LMT'),(868,1,7016,0,'IMT'),(868,2,10800,1,'EEST'),(868,3,7200,0,'EET'),(868,4,10800,0,'+03'),(868,5,14400,1,'+04'),(868,6,10800,1,'EEST'),(868,7,7200,0,'EET'),(868,8,10800,1,'EEST'),(868,9,7200,0,'EET'),(868,10,10800,0,'+03'),(869,0,25632,0,'LMT'),(869,1,25632,0,'BMT'),(869,2,26400,0,'+0720'),(869,3,27000,0,'+0730'),(869,4,32400,0,'+09'),(869,5,28800,0,'+08'),(869,6,25200,0,'WIB'),(870,0,33768,0,'LMT'),(870,1,32400,0,'+09'),(870,2,34200,0,'+0930'),(870,3,32400,0,'WIT'),(871,0,8454,0,'LMT'),(871,1,8440,0,'JMT'),(871,2,10800,1,'IDT'),(871,3,7200,0,'IST'),(871,4,14400,1,'IDDT'),(871,5,10800,1,'IDT'),(871,6,7200,0,'IST'),(871,7,10800,1,'IDT'),(871,8,7200,0,'IST'),(872,0,16608,0,'LMT'),(872,1,14400,0,'+04'),(872,2,16200,0,'+0430'),(873,0,38076,0,'LMT'),(873,1,39600,0,'+11'),(873,2,46800,1,'+13'),(873,3,43200,0,'+12'),(873,4,43200,0,'+12'),(873,5,46800,1,'+13'),(873,6,43200,1,'+12'),(873,7,39600,0,'+11'),(873,8,43200,0,'+12'),(874,0,16092,0,'LMT'),(874,1,19800,0,'+0530'),(874,2,23400,1,'+0630'),(874,3,18000,0,'+05'),(874,4,21600,1,'PKST'),(874,5,18000,0,'PKT'),(875,0,21020,0,'LMT'),(875,1,21600,0,'+06'),(876,0,20476,0,'LMT'),(876,1,19800,0,'+0530'),(876,2,20700,0,'+0545'),(877,0,20476,0,'LMT'),(877,1,19800,0,'+0530'),(877,2,20700,0,'+0545'),(878,0,32533,0,'LMT'),(878,1,28800,0,'+08'),(878,2,36000,1,'+10'),(878,3,32400,0,'+09'),(878,4,32400,0,'+09'),(878,5,36000,1,'+10'),(878,6,32400,1,'+09'),(878,7,28800,0,'+08'),(878,8,39600,1,'+11'),(878,9,36000,0,'+10'),(878,10,36000,0,'+10'),(878,11,39600,0,'+11'),(878,12,32400,0,'+09'),(879,0,21208,0,'LMT'),(879,1,19270,0,'MMT'),(879,2,19800,0,'IST'),(879,3,23400,1,'+0630'),(880,0,22286,0,'LMT'),(880,1,21600,0,'+06'),(880,2,28800,1,'+08'),(880,3,25200,0,'+07'),(880,4,25200,0,'+07'),(880,5,28800,1,'+08'),(880,6,25200,1,'+07'),(880,7,21600,0,'+06'),(880,8,28800,0,'+08'),(880,9,28800,1,'+08'),(880,10,25200,0,'+07'),(881,0,24925,0,'LMT'),(881,1,24925,0,'SMT'),(881,2,25200,0,'+07'),(881,3,26400,1,'+0720'),(881,4,26400,0,'+0720'),(881,5,27000,0,'+0730'),(881,6,32400,0,'+09'),(881,7,28800,0,'+08'),(882,0,26480,0,'LMT'),(882,1,27000,0,'+0730'),(882,2,30000,1,'+0820'),(882,3,28800,0,'+08'),(882,4,32400,0,'+09'),(882,5,28800,0,'+08'),(883,0,11212,0,'LMT'),(883,1,10800,0,'+03'),(884,0,27250,0,'LMT'),(884,1,28800,0,'CST'),(884,2,36000,1,'+10'),(884,3,32400,0,'+09'),(884,4,32400,1,'CDT'),(884,5,28800,0,'CST'),(884,6,32400,1,'CDT'),(885,0,27250,0,'LMT'),(885,1,28800,0,'CST'),(885,2,36000,1,'+10'),(885,3,32400,0,'+09'),(885,4,32400,1,'CDT'),(885,5,28800,0,'CST'),(885,6,32400,1,'CDT'),(886,0,36192,0,'LMT'),(886,1,36000,0,'+10'),(886,2,43200,1,'+12'),(886,3,39600,0,'+11'),(886,4,39600,0,'+11'),(886,5,43200,1,'+12'),(886,6,39600,1,'+11'),(886,7,36000,0,'+10'),(886,8,43200,0,'+12'),(886,9,43200,1,'+12'),(886,10,39600,0,'+11'),(887,0,28656,0,'LMT'),(887,1,28656,0,'MMT'),(887,2,28800,0,'+08'),(887,3,32400,0,'+09'),(887,4,28800,0,'WITA'),(888,0,-57360,0,'LMT'),(888,1,32400,1,'PDT'),(888,2,28800,0,'PST'),(888,3,32400,0,'JST'),(888,4,28800,0,'PST'),(889,0,13272,0,'LMT'),(889,1,14400,0,'+04'),(890,0,8008,0,'LMT'),(890,1,10800,1,'EEST'),(890,2,7200,0,'EET'),(890,3,7200,0,'EET'),(890,4,10800,1,'EEST'),(891,0,20928,0,'LMT'),(891,1,21600,0,'+06'),(891,2,28800,1,'+08'),(891,3,25200,0,'+07'),(891,4,25200,0,'+07'),(891,5,28800,1,'+08'),(891,6,25200,1,'+07'),(891,7,21600,0,'+06'),(891,8,25200,0,'+07'),(892,0,19900,0,'LMT'),(892,1,21600,0,'+06'),(892,2,28800,1,'+08'),(892,3,25200,0,'+07'),(892,4,25200,0,'+07'),(892,5,28800,1,'+08'),(892,6,25200,1,'+07'),(892,7,21600,0,'+06'),(892,8,25200,1,'+07'),(892,9,25200,0,'+07'),(893,0,17610,0,'LMT'),(893,1,18000,0,'+05'),(893,2,25200,1,'+07'),(893,3,21600,0,'+06'),(893,4,21600,0,'+06'),(893,5,25200,1,'+07'),(893,6,21600,1,'+06'),(893,7,18000,0,'+05'),(893,8,25200,0,'+07'),(893,9,25200,1,'+07'),(893,10,21600,0,'+06'),(894,0,12324,0,'LMT'),(894,1,10800,0,'+03'),(894,2,18000,0,'+05'),(894,3,21600,1,'+06'),(894,4,21600,0,'+06'),(894,5,18000,0,'+05'),(894,6,21600,1,'+06'),(894,7,18000,1,'+05'),(894,8,14400,0,'+04'),(894,9,18000,0,'+05'),(895,0,24124,0,'LMT'),(895,1,24124,0,'BMT'),(895,2,25200,0,'+07'),(896,0,26240,0,'LMT'),(896,1,26240,0,'PMT'),(896,2,27000,0,'+0730'),(896,3,32400,0,'+09'),(896,4,28800,0,'+08'),(896,5,28800,0,'WITA'),(896,6,25200,0,'WIB'),(897,0,30180,0,'LMT'),(897,1,30600,0,'KST'),(897,2,32400,0,'JST'),(897,3,32400,0,'KST'),(898,0,12368,0,'LMT'),(898,1,14400,0,'+04'),(898,2,10800,0,'+03'),(899,0,15268,0,'LMT'),(899,1,14400,0,'+04'),(899,2,18000,0,'+05'),(899,3,21600,1,'+06'),(899,4,21600,0,'+06'),(899,5,18000,0,'+05'),(899,6,21600,1,'+06'),(899,7,18000,1,'+05'),(899,8,14400,0,'+04'),(899,9,21600,0,'+06'),(899,10,21600,1,'+06'),(900,0,15712,0,'LMT'),(900,1,14400,0,'+04'),(900,2,18000,0,'+05'),(900,3,21600,1,'+06'),(900,4,21600,0,'+06'),(900,5,18000,0,'+05'),(900,6,21600,1,'+06'),(900,7,18000,1,'+05'),(900,8,21600,0,'+06'),(900,9,21600,1,'+06'),(900,10,18000,0,'+05'),(901,0,23087,0,'LMT'),(901,1,23087,0,'RMT'),(901,2,23400,0,'+0630'),(901,3,32400,0,'+09'),(901,4,23400,0,'+0630'),(902,0,11212,0,'LMT'),(902,1,10800,0,'+03'),(903,0,25590,0,'LMT'),(903,1,25590,0,'PLMT'),(903,2,25200,0,'+07'),(903,3,28800,0,'+08'),(903,4,32400,0,'+09'),(903,5,25200,0,'+07'),(904,0,34248,0,'LMT'),(904,1,32400,0,'+09'),(904,2,43200,1,'+12'),(904,3,39600,0,'+11'),(904,4,39600,0,'+11'),(904,5,43200,1,'+12'),(904,6,39600,1,'+11'),(904,7,36000,0,'+10'),(904,8,39600,0,'+11'),(905,0,16073,0,'LMT'),(905,1,14400,0,'+04'),(905,2,18000,0,'+05'),(905,3,21600,1,'+06'),(905,4,21600,0,'+06'),(905,5,18000,0,'+05'),(905,6,21600,1,'+06'),(906,0,30472,0,'LMT'),(906,1,30600,0,'KST'),(906,2,32400,0,'JST'),(906,3,36000,1,'KDT'),(906,4,32400,0,'KST'),(906,5,34200,1,'KDT'),(906,6,36000,1,'KDT'),(907,0,29143,0,'LMT'),(907,1,32400,1,'CDT'),(907,2,28800,0,'CST'),(908,0,24925,0,'LMT'),(908,1,24925,0,'SMT'),(908,2,25200,0,'+07'),(908,3,26400,1,'+0720'),(908,4,26400,0,'+0720'),(908,5,27000,0,'+0730'),(908,6,32400,0,'+09'),(908,7,28800,0,'+08'),(909,0,36892,0,'LMT'),(909,1,36000,0,'+10'),(909,2,43200,1,'+12'),(909,3,39600,0,'+11'),(909,4,39600,0,'+11'),(909,5,43200,1,'+12'),(909,6,39600,1,'+11'),(909,7,36000,0,'+10'),(909,8,43200,0,'+12'),(909,9,43200,1,'+12'),(909,10,39600,0,'+11'),(910,0,29160,0,'LMT'),(910,1,28800,0,'CST'),(910,2,32400,0,'JST'),(910,3,32400,1,'CDT'),(910,4,28800,0,'CST'),(911,0,16631,0,'LMT'),(911,1,18000,0,'+05'),(911,2,25200,1,'+07'),(911,3,21600,0,'+06'),(911,4,21600,0,'+06'),(911,5,25200,1,'+07'),(911,6,21600,1,'+06'),(911,7,18000,0,'+05'),(912,0,10751,0,'LMT'),(912,1,10751,0,'TBMT'),(912,2,10800,0,'+03'),(912,3,18000,1,'+05'),(912,4,14400,0,'+04'),(912,5,14400,0,'+04'),(912,6,18000,1,'+05'),(912,7,14400,1,'+04'),(912,8,10800,0,'+03'),(912,9,14400,1,'+04'),(912,10,14400,0,'+04'),(913,0,12344,0,'LMT'),(913,1,12344,0,'TMT'),(913,2,16200,1,'+0430'),(913,3,12600,0,'+0330'),(913,4,18000,1,'+05'),(913,5,14400,0,'+04'),(913,6,16200,1,'+0430'),(913,7,12600,0,'+0330'),(914,0,8454,0,'LMT'),(914,1,8440,0,'JMT'),(914,2,10800,1,'IDT'),(914,3,7200,0,'IST'),(914,4,14400,1,'IDDT'),(914,5,10800,1,'IDT'),(914,6,7200,0,'IST'),(914,7,10800,1,'IDT'),(914,8,7200,0,'IST'),(915,0,21516,0,'LMT'),(915,1,19800,0,'+0530'),(915,2,21600,0,'+06'),(916,0,21516,0,'LMT'),(916,1,19800,0,'+0530'),(916,2,21600,0,'+06'),(917,0,33539,0,'LMT'),(917,1,36000,1,'JDT'),(917,2,32400,0,'JST'),(917,3,32400,0,'JST'),(918,0,20391,0,'LMT'),(918,1,21600,0,'+06'),(918,2,28800,1,'+08'),(918,3,25200,0,'+07'),(918,4,25200,0,'+07'),(918,5,28800,1,'+08'),(918,6,25200,1,'+07'),(918,7,21600,0,'+06'),(918,8,25200,1,'+07'),(918,9,25200,0,'+07'),(919,0,28656,0,'LMT'),(919,1,28656,0,'MMT'),(919,2,28800,0,'+08'),(919,3,32400,0,'+09'),(919,4,28800,0,'WITA'),(920,0,25652,0,'LMT'),(920,1,25200,0,'+07'),(920,2,32400,1,'+09'),(920,3,28800,0,'+08'),(921,0,25652,0,'LMT'),(921,1,25200,0,'+07'),(921,2,32400,1,'+09'),(921,3,28800,0,'+08'),(922,0,21020,0,'LMT'),(922,1,21600,0,'+06'),(923,0,34374,0,'LMT'),(923,1,28800,0,'+08'),(923,2,32400,0,'+09'),(923,3,39600,0,'+11'),(923,4,43200,1,'+12'),(923,5,39600,0,'+11'),(923,6,43200,1,'+12'),(923,7,39600,1,'+11'),(923,8,36000,0,'+10'),(923,9,43200,0,'+12'),(923,10,43200,1,'+12'),(923,11,36000,0,'+10'),(924,0,24124,0,'LMT'),(924,1,24124,0,'BMT'),(924,2,25200,0,'+07'),(925,0,31651,0,'LMT'),(925,1,32400,0,'+09'),(925,2,39600,1,'+11'),(925,3,36000,0,'+10'),(925,4,36000,0,'+10'),(925,5,39600,1,'+11'),(925,6,36000,1,'+10'),(925,7,32400,0,'+09'),(925,8,39600,0,'+11'),(925,9,39600,1,'+11'),(925,10,36000,0,'+10'),(926,0,31138,0,'LMT'),(926,1,28800,0,'+08'),(926,2,36000,1,'+10'),(926,3,32400,0,'+09'),(926,4,32400,0,'+09'),(926,5,36000,1,'+10'),(926,6,32400,1,'+09'),(926,7,28800,0,'+08'),(926,8,36000,0,'+10'),(926,9,36000,1,'+10'),(926,10,32400,0,'+09'),(927,0,23087,0,'LMT'),(927,1,23087,0,'RMT'),(927,2,23400,0,'+0630'),(927,3,32400,0,'+09'),(927,4,23400,0,'+0630'),(928,0,14553,0,'LMT'),(928,1,13505,0,'PMT'),(928,2,14400,0,'+04'),(928,3,21600,1,'+06'),(928,4,18000,0,'+05'),(928,5,18000,0,'+05'),(928,6,21600,1,'+06'),(928,7,18000,1,'+05'),(928,8,14400,0,'+04'),(928,9,21600,0,'+06'),(928,10,21600,1,'+06'),(928,11,18000,0,'+05'),(929,0,10680,0,'LMT'),(929,1,10800,0,'+03'),(929,2,18000,1,'+05'),(929,3,14400,0,'+04'),(929,4,14400,0,'+04'),(929,5,18000,1,'+05'),(929,6,14400,1,'+04'),(929,7,10800,0,'+03'),(929,8,18000,1,'+05'),(929,9,14400,0,'+04'),(930,0,-6160,0,'LMT'),(930,1,-6872,0,'HMT'),(930,2,-3600,1,'-01'),(930,3,-7200,0,'-02'),(930,4,-3600,1,'-01'),(930,5,-7200,0,'-02'),(930,6,-7200,0,'-02'),(930,7,0,1,'+00'),(930,8,-3600,0,'-01'),(930,9,-3600,0,'-01'),(930,10,0,0,'WET'),(930,11,0,1,'+00'),(930,12,-3600,0,'-01'),(931,0,-15558,0,'LMT'),(931,1,-11958,1,'BST'),(931,2,-15558,0,'BMT'),(931,3,-10800,1,'ADT'),(931,4,-14400,0,'AST'),(932,0,-3696,0,'LMT'),(932,1,-3600,0,'-01'),(932,2,0,0,'WET'),(932,3,3600,1,'WEST'),(932,4,0,0,'WET'),(932,5,3600,1,'WEST'),(933,0,-5644,0,'LMT'),(933,1,-7200,0,'-02'),(933,2,-3600,1,'-01'),(933,3,-7200,0,'-02'),(933,4,-3600,0,'-01'),(934,0,-1624,0,'LMT'),(934,1,0,0,'WET'),(934,2,3600,1,'WEST'),(934,3,0,0,'WET'),(935,0,-1624,0,'LMT'),(935,1,0,0,'WET'),(935,2,3600,1,'WEST'),(935,3,0,0,'WET'),(936,0,3208,0,'LMT'),(936,1,7200,1,'CEST'),(936,2,3600,0,'CET'),(936,3,7200,1,'CEST'),(936,4,3600,0,'CET'),(936,5,10800,1,'CEMT'),(936,6,10800,1,'CEMT'),(936,7,7200,1,'CEST'),(936,8,3600,0,'CET'),(937,0,-4056,0,'LMT'),(937,1,-4056,0,'FMT'),(937,2,0,1,'+00'),(937,3,-3600,0,'-01'),(937,4,0,1,'+00'),(937,5,-3600,0,'-01'),(937,6,-3600,0,'-01'),(937,7,3600,1,'+01'),(937,8,3600,1,'WEST'),(937,9,0,0,'WET'),(937,10,0,0,'WET'),(937,11,0,0,'WET'),(937,12,3600,1,'WEST'),(938,0,-968,0,'LMT'),(938,1,0,0,'GMT'),(939,0,-8768,0,'LMT'),(939,1,-7200,0,'-02'),(940,0,-968,0,'LMT'),(940,1,0,0,'GMT'),(941,0,-13884,0,'LMT'),(941,1,-13884,0,'SMT'),(941,2,-10800,1,'-03'),(941,3,-14400,0,'-04'),(941,4,-7200,1,'-02'),(941,5,-10800,0,'-03'),(941,6,-10800,1,'-03'),(942,0,36292,0,'LMT'),(942,1,39600,1,'AEDT'),(942,2,36000,0,'AEST'),(942,3,36000,0,'AEST'),(943,0,33260,0,'LMT'),(943,1,37800,1,'ACDT'),(943,2,34200,0,'ACST'),(943,3,34200,0,'ACST'),(944,0,36728,0,'LMT'),(944,1,39600,1,'AEDT'),(944,2,36000,0,'AEST'),(944,3,36000,0,'AEST'),(945,0,33948,0,'LMT'),(945,1,37800,1,'ACDT'),(945,2,34200,0,'ACST'),(945,3,34200,0,'ACST'),(946,0,36292,0,'LMT'),(946,1,39600,1,'AEDT'),(946,2,36000,0,'AEST'),(946,3,36000,0,'AEST'),(947,0,35356,0,'LMT'),(947,1,39600,1,'AEDT'),(947,2,36000,0,'AEST'),(947,3,36000,0,'AEST'),(948,0,31400,0,'LMT'),(948,1,37800,1,'ACDT'),(948,2,34200,0,'ACST'),(948,3,34200,0,'ACST'),(949,0,30928,0,'LMT'),(949,1,35100,1,'+0945'),(949,2,31500,0,'+0845'),(949,3,31500,0,'+0845'),(950,0,35356,0,'LMT'),(950,1,39600,1,'AEDT'),(950,2,36000,0,'AEST'),(950,3,36000,0,'AEST'),(951,0,38180,0,'LMT'),(951,1,36000,0,'AEST'),(951,2,41400,1,'+1130'),(951,3,37800,0,'+1030'),(951,4,39600,1,'+11'),(952,0,35756,0,'LMT'),(952,1,39600,1,'AEDT'),(952,2,36000,0,'AEST'),(952,3,36000,0,'AEST'),(953,0,38180,0,'LMT'),(953,1,36000,0,'AEST'),(953,2,41400,1,'+1130'),(953,3,37800,0,'+1030'),(953,4,39600,1,'+11'),(954,0,34792,0,'LMT'),(954,1,39600,1,'AEDT'),(954,2,36000,0,'AEST'),(954,3,36000,0,'AEST'),(955,0,36292,0,'LMT'),(955,1,39600,1,'AEDT'),(955,2,36000,0,'AEST'),(955,3,36000,0,'AEST'),(956,0,31400,0,'LMT'),(956,1,37800,1,'ACDT'),(956,2,34200,0,'ACST'),(956,3,34200,0,'ACST'),(957,0,27804,0,'LMT'),(957,1,32400,1,'AWDT'),(957,2,28800,0,'AWST'),(957,3,28800,0,'AWST'),(958,0,36728,0,'LMT'),(958,1,39600,1,'AEDT'),(958,2,36000,0,'AEST'),(958,3,36000,0,'AEST'),(959,0,33260,0,'LMT'),(959,1,37800,1,'ACDT'),(959,2,34200,0,'ACST'),(959,3,34200,0,'ACST'),(960,0,36292,0,'LMT'),(960,1,39600,1,'AEDT'),(960,2,36000,0,'AEST'),(960,3,36000,0,'AEST'),(961,0,35356,0,'LMT'),(961,1,39600,1,'AEDT'),(961,2,36000,0,'AEST'),(961,3,36000,0,'AEST'),(962,0,34792,0,'LMT'),(962,1,39600,1,'AEDT'),(962,2,36000,0,'AEST'),(962,3,36000,0,'AEST'),(963,0,27804,0,'LMT'),(963,1,32400,1,'AWDT'),(963,2,28800,0,'AWST'),(963,3,28800,0,'AWST'),(964,0,33948,0,'LMT'),(964,1,37800,1,'ACDT'),(964,2,34200,0,'ACST'),(964,3,34200,0,'ACST'),(965,0,-16272,0,'LMT'),(965,1,-14400,1,'-04'),(965,2,-18000,0,'-05'),(965,3,-14400,0,'-04'),(965,4,-18000,0,'-05'),(966,0,-7780,0,'LMT'),(966,1,-3600,1,'-01'),(966,2,-7200,0,'-02'),(967,0,-11188,0,'LMT'),(967,1,-7200,1,'-02'),(967,2,-10800,0,'-03'),(968,0,-14404,0,'LMT'),(968,1,-10800,1,'-03'),(968,2,-14400,0,'-04'),(969,0,3600,0,'CET'),(969,1,7200,1,'CEST'),(969,2,7200,1,'CEST'),(969,3,3600,0,'CET'),(970,0,-21600,0,'CST'),(970,1,-18000,1,'CDT'),(970,2,-18000,1,'CWT'),(970,3,-18000,1,'CPT'),(970,4,-21600,0,'CST'),(971,0,-15264,0,'LMT'),(971,1,-10800,1,'ADT'),(971,2,-14400,0,'AST'),(971,3,-10800,1,'AWT'),(971,4,-10800,1,'APT'),(972,0,-23316,0,'LMT'),(972,1,-18000,1,'CDT'),(972,2,-21600,0,'CST'),(972,3,-18000,1,'CWT'),(972,4,-18000,1,'CPT'),(972,5,-18000,1,'CDT'),(972,6,-21600,0,'CST'),(973,0,-19052,0,'LMT'),(973,1,-14400,1,'EDT'),(973,2,-18000,0,'EST'),(973,3,-14400,1,'EWT'),(973,4,-14400,1,'EPT'),(974,0,-27232,0,'LMT'),(974,1,-21600,1,'MDT'),(974,2,-25200,0,'MST'),(974,3,-21600,1,'MWT'),(974,4,-21600,1,'MPT'),(975,0,-12652,0,'LMT'),(975,1,-9052,1,'NDT'),(975,2,-12652,0,'NST'),(975,3,-9000,1,'NDT'),(975,4,-12600,0,'NST'),(975,5,-9000,1,'NPT'),(975,6,-9000,1,'NWT'),(975,7,-5400,1,'NDDT'),(975,8,-9000,1,'NDT'),(976,0,-29548,0,'LMT'),(976,1,-25200,1,'PDT'),(976,2,-28800,0,'PST'),(976,3,-25200,1,'PWT'),(976,4,-25200,1,'PPT'),(977,0,-25116,0,'LMT'),(977,1,-21600,1,'MDT'),(977,2,-25200,0,'MST'),(977,3,-21600,1,'MWT'),(977,4,-21600,1,'MPT'),(977,5,-21600,0,'CST'),(978,0,-32412,0,'LMT'),(978,1,-28800,1,'YDT'),(978,2,-32400,0,'YST'),(978,3,-28800,1,'YWT'),(978,4,-28800,1,'YPT'),(978,5,-25200,1,'YDDT'),(978,6,-28800,0,'PST'),(978,7,-25200,1,'PDT'),(978,8,-25200,0,'MST'),(979,0,-16965,0,'LMT'),(979,1,-16965,0,'SMT'),(979,2,-18000,0,'-05'),(979,3,-14400,0,'-04'),(979,4,-14400,1,'-04'),(979,5,-10800,1,'-03'),(979,6,-10800,1,'-03'),(979,7,-14400,0,'-04'),(980,0,-26248,0,'LMT'),(980,1,-26248,0,'EMT'),(980,2,-21600,1,'-06'),(980,3,-25200,0,'-07'),(980,4,-25200,0,'-07'),(980,5,-21600,0,'-06'),(980,6,-18000,1,'-05'),(981,0,-19768,0,'LMT'),(981,1,-19776,0,'HMT'),(981,2,-14400,1,'CDT'),(981,3,-18000,0,'CST'),(981,4,-18000,0,'CST'),(981,5,-14400,1,'CDT'),(982,0,7200,0,'EET'),(982,1,10800,1,'EEST'),(982,2,10800,1,'EEST'),(982,3,7200,0,'EET'),(983,0,-18000,0,'EST'),(984,0,-18000,0,'EST'),(984,1,-14400,1,'EDT'),(984,2,-14400,1,'EWT'),(984,3,-14400,1,'EPT'),(984,4,-18000,0,'EST'),(985,0,7509,0,'LMT'),(985,1,10800,1,'EEST'),(985,2,7200,0,'EET'),(985,3,10800,1,'EEST'),(986,0,-1521,0,'LMT'),(986,1,-1521,0,'DMT'),(986,2,2079,1,'IST'),(986,3,3600,1,'BST'),(986,4,0,0,'GMT'),(986,5,3600,1,'IST'),(986,6,0,1,'GMT'),(986,7,3600,0,'IST'),(986,8,3600,0,'IST'),(987,0,0,0,'GMT'),(988,0,0,0,'GMT'),(989,0,-3600,0,'-01'),(990,0,-36000,0,'-10'),(991,0,-39600,0,'-11'),(992,0,-43200,0,'-12'),(993,0,-7200,0,'-02'),(994,0,-10800,0,'-03'),(995,0,-14400,0,'-04'),(996,0,-18000,0,'-05'),(997,0,-21600,0,'-06'),(998,0,-25200,0,'-07'),(999,0,-28800,0,'-08'),(1000,0,-32400,0,'-09'),(1001,0,0,0,'GMT'),(1002,0,3600,0,'+01'),(1003,0,36000,0,'+10'),(1004,0,39600,0,'+11'),(1005,0,43200,0,'+12'),(1006,0,46800,0,'+13'),(1007,0,50400,0,'+14'),(1008,0,7200,0,'+02'),(1009,0,10800,0,'+03'),(1010,0,14400,0,'+04'),(1011,0,18000,0,'+05'),(1012,0,21600,0,'+06'),(1013,0,25200,0,'+07'),(1014,0,28800,0,'+08'),(1015,0,32400,0,'+09'),(1016,0,0,0,'GMT'),(1017,0,0,0,'GMT'),(1018,0,0,0,'UTC'),(1019,0,0,0,'UTC'),(1020,0,0,0,'UTC'),(1021,0,0,0,'UTC'),(1022,0,1050,0,'LMT'),(1022,1,0,0,'WET'),(1022,2,3600,0,'CET'),(1022,3,7200,1,'CEST'),(1022,4,3600,0,'CET'),(1022,5,7200,1,'CEST'),(1022,6,3600,1,'WEST'),(1022,7,0,0,'WET'),(1022,8,0,0,'WET'),(1022,9,7200,1,'CEST'),(1022,10,3600,0,'CET'),(1023,0,364,0,'LMT'),(1023,1,0,0,'WET'),(1023,2,3600,0,'CET'),(1023,3,7200,1,'CEST'),(1023,4,3600,0,'CET'),(1024,0,11532,0,'LMT'),(1024,1,10800,0,'+03'),(1024,2,18000,1,'+05'),(1024,3,14400,0,'+04'),(1024,4,14400,0,'+04'),(1024,5,18000,1,'+05'),(1024,6,14400,1,'+04'),(1024,7,10800,0,'+03'),(1024,8,14400,0,'+04'),(1025,0,5692,0,'LMT'),(1025,1,5692,0,'AMT'),(1025,2,10800,1,'EEST'),(1025,3,7200,0,'EET'),(1025,4,3600,0,'CET'),(1025,5,7200,1,'CEST'),(1025,6,10800,1,'EEST'),(1025,7,7200,0,'EET'),(1025,8,10800,1,'EEST'),(1025,9,7200,0,'EET'),(1026,0,-75,0,'LMT'),(1026,1,3600,1,'BST'),(1026,2,0,0,'GMT'),(1026,3,7200,1,'BDST'),(1026,4,0,0,'GMT'),(1026,5,3600,0,'BST'),(1026,6,3600,1,'BST'),(1026,7,0,0,'GMT'),(1027,0,4920,0,'LMT'),(1027,1,3600,0,'CET'),(1027,2,3600,0,'CET'),(1027,3,7200,1,'CEST'),(1027,4,7200,1,'CEST'),(1027,5,7200,1,'CEST'),(1027,6,3600,0,'CET'),(1028,0,3208,0,'LMT'),(1028,1,7200,1,'CEST'),(1028,2,3600,0,'CET'),(1028,3,7200,1,'CEST'),(1028,4,3600,0,'CET'),(1028,5,10800,1,'CEMT'),(1028,6,10800,1,'CEMT'),(1028,7,7200,1,'CEST'),(1028,8,3600,0,'CET'),(1029,0,3464,0,'LMT'),(1029,1,7200,1,'CEST'),(1029,2,3600,0,'CET'),(1029,3,7200,1,'CEST'),(1029,4,3600,0,'CET'),(1029,5,0,1,'GMT'),(1029,6,7200,1,'CEST'),(1029,7,3600,0,'CET'),(1030,0,1050,0,'LMT'),(1030,1,0,0,'WET'),(1030,2,3600,0,'CET'),(1030,3,7200,1,'CEST'),(1030,4,3600,0,'CET'),(1030,5,7200,1,'CEST'),(1030,6,3600,1,'WEST'),(1030,7,0,0,'WET'),(1030,8,0,0,'WET'),(1030,9,7200,1,'CEST'),(1030,10,3600,0,'CET'),(1031,0,6264,0,'LMT'),(1031,1,6264,0,'BMT'),(1031,2,10800,1,'EEST'),(1031,3,7200,0,'EET'),(1031,4,10800,1,'EEST'),(1031,5,7200,0,'EET'),(1031,6,10800,1,'EEST'),(1031,7,7200,0,'EET'),(1032,0,4580,0,'LMT'),(1032,1,7200,1,'CEST'),(1032,2,3600,0,'CET'),(1032,3,7200,1,'CEST'),(1032,4,3600,0,'CET'),(1032,5,7200,1,'CEST'),(1032,6,3600,0,'CET'),(1033,0,2048,0,'LMT'),(1033,1,7200,1,'CEST'),(1033,2,3600,0,'CET'),(1033,3,7200,1,'CEST'),(1033,4,3600,0,'CET'),(1034,0,6920,0,'LMT'),(1034,1,6900,0,'CMT'),(1034,2,6264,0,'BMT'),(1034,3,10800,1,'EEST'),(1034,4,7200,0,'EET'),(1034,5,7200,0,'EET'),(1034,6,10800,1,'EEST'),(1034,7,3600,0,'CET'),(1034,8,7200,1,'CEST'),(1034,9,7200,1,'CEST'),(1034,10,14400,1,'MSD'),(1034,11,10800,0,'MSK'),(1034,12,10800,0,'MSK'),(1034,13,14400,1,'MSD'),(1034,14,10800,1,'EEST'),(1034,15,7200,0,'EET'),(1035,0,3208,0,'LMT'),(1035,1,7200,1,'CEST'),(1035,2,3600,0,'CET'),(1035,3,7200,1,'CEST'),(1035,4,3600,0,'CET'),(1035,5,10800,1,'CEMT'),(1035,6,10800,1,'CEMT'),(1035,7,7200,1,'CEST'),(1035,8,3600,0,'CET'),(1036,0,-1521,0,'LMT'),(1036,1,-1521,0,'DMT'),(1036,2,2079,1,'IST'),(1036,3,3600,1,'BST'),(1036,4,0,0,'GMT'),(1036,5,3600,1,'IST'),(1036,6,0,1,'GMT'),(1036,7,3600,0,'IST'),(1036,8,3600,0,'IST'),(1037,0,-1284,0,'LMT'),(1037,1,3600,1,'BST'),(1037,2,0,0,'GMT'),(1037,3,7200,1,'BDST'),(1037,4,0,0,'GMT'),(1037,5,3600,0,'CET'),(1037,6,7200,1,'CEST'),(1037,7,3600,0,'CET'),(1038,0,-75,0,'LMT'),(1038,1,3600,1,'BST'),(1038,2,0,0,'GMT'),(1038,3,7200,1,'BDST'),(1038,4,0,0,'GMT'),(1038,5,3600,0,'BST'),(1038,6,3600,1,'BST'),(1038,7,0,0,'GMT'),(1039,0,5989,0,'LMT'),(1039,1,5989,0,'HMT'),(1039,2,10800,1,'EEST'),(1039,3,7200,0,'EET'),(1039,4,10800,1,'EEST'),(1039,5,7200,0,'EET'),(1040,0,-75,0,'LMT'),(1040,1,3600,1,'BST'),(1040,2,0,0,'GMT'),(1040,3,7200,1,'BDST'),(1040,4,0,0,'GMT'),(1040,5,3600,0,'BST'),(1040,6,3600,1,'BST'),(1040,7,0,0,'GMT'),(1041,0,6952,0,'LMT'),(1041,1,7016,0,'IMT'),(1041,2,10800,1,'EEST'),(1041,3,7200,0,'EET'),(1041,4,10800,0,'+03'),(1041,5,14400,1,'+04'),(1041,6,10800,1,'EEST'),(1041,7,7200,0,'EET'),(1041,8,10800,1,'EEST'),(1041,9,7200,0,'EET'),(1041,10,10800,0,'+03'),(1042,0,-75,0,'LMT'),(1042,1,3600,1,'BST'),(1042,2,0,0,'GMT'),(1042,3,7200,1,'BDST'),(1042,4,0,0,'GMT'),(1042,5,3600,0,'BST'),(1042,6,3600,1,'BST'),(1042,7,0,0,'GMT'),(1043,0,4920,0,'LMT'),(1043,1,7200,1,'CEST'),(1043,2,3600,0,'CET'),(1043,3,7200,1,'CEST'),(1043,4,3600,0,'CET'),(1043,5,10800,1,'EEST'),(1043,6,7200,0,'EET'),(1043,7,14400,1,'MSD'),(1043,8,10800,0,'MSK'),(1043,9,10800,0,'MSK'),(1043,10,14400,1,'MSD'),(1043,11,10800,1,'EEST'),(1043,12,7200,0,'EET'),(1043,13,10800,0,'+03'),(1043,14,7200,0,'EET'),(1044,0,7324,0,'LMT'),(1044,1,7324,0,'KMT'),(1044,2,7200,0,'EET'),(1044,3,10800,0,'MSK'),(1044,4,3600,0,'CET'),(1044,5,7200,1,'CEST'),(1044,6,7200,1,'CEST'),(1044,7,14400,1,'MSD'),(1044,8,10800,0,'MSK'),(1044,9,14400,1,'MSD'),(1044,10,10800,1,'EEST'),(1044,11,7200,0,'EET'),(1044,12,10800,1,'EEST'),(1044,13,7200,0,'EET'),(1044,14,10800,1,'EEST'),(1045,0,11928,0,'LMT'),(1045,1,10800,0,'+03'),(1045,2,18000,1,'+05'),(1045,3,14400,0,'+04'),(1045,4,14400,0,'+04'),(1045,5,18000,1,'+05'),(1045,6,14400,1,'+04'),(1045,7,10800,0,'+03'),(1046,0,7324,0,'LMT'),(1046,1,7324,0,'KMT'),(1046,2,7200,0,'EET'),(1046,3,10800,0,'MSK'),(1046,4,3600,0,'CET'),(1046,5,7200,1,'CEST'),(1046,6,7200,1,'CEST'),(1046,7,14400,1,'MSD'),(1046,8,10800,0,'MSK'),(1046,9,14400,1,'MSD'),(1046,10,10800,1,'EEST'),(1046,11,7200,0,'EET'),(1046,12,10800,1,'EEST'),(1046,13,7200,0,'EET'),(1046,14,10800,1,'EEST'),(1047,0,-2205,0,'LMT'),(1047,1,3600,1,'WEST'),(1047,2,0,0,'WET'),(1047,3,3600,1,'WEST'),(1047,4,0,0,'WET'),(1047,5,7200,1,'WEMT'),(1047,6,0,0,'WET'),(1047,7,3600,0,'CET'),(1047,8,3600,0,'CET'),(1047,9,7200,1,'CEST'),(1047,10,3600,1,'WEST'),(1047,11,0,0,'WET'),(1048,0,4920,0,'LMT'),(1048,1,3600,0,'CET'),(1048,2,3600,0,'CET'),(1048,3,7200,1,'CEST'),(1048,4,7200,1,'CEST'),(1048,5,7200,1,'CEST'),(1048,6,3600,0,'CET'),(1049,0,-75,0,'LMT'),(1049,1,3600,1,'BST'),(1049,2,0,0,'GMT'),(1049,3,7200,1,'BDST'),(1049,4,0,0,'GMT'),(1049,5,3600,0,'BST'),(1049,6,3600,1,'BST'),(1049,7,0,0,'GMT'),(1050,0,1050,0,'LMT'),(1050,1,0,0,'WET'),(1050,2,3600,0,'CET'),(1050,3,7200,1,'CEST'),(1050,4,3600,0,'CET'),(1050,5,7200,1,'CEST'),(1050,6,3600,1,'WEST'),(1050,7,0,0,'WET'),(1050,8,0,0,'WET'),(1050,9,7200,1,'CEST'),(1050,10,3600,0,'CET'),(1051,0,-884,0,'LMT'),(1051,1,3600,1,'WEST'),(1051,2,0,0,'WET'),(1051,3,7200,1,'WEMT'),(1051,4,0,0,'WET'),(1051,5,7200,1,'CEST'),(1051,6,3600,0,'CET'),(1051,7,7200,1,'CEST'),(1051,8,3600,0,'CET'),(1051,9,7200,1,'CEST'),(1051,10,3600,0,'CET'),(1052,0,3484,0,'LMT'),(1052,1,7200,1,'CEST'),(1052,2,3600,0,'CET'),(1052,3,3600,0,'CET'),(1052,4,7200,1,'CEST'),(1052,5,7200,1,'CEST'),(1052,6,3600,0,'CET'),(1053,0,5989,0,'LMT'),(1053,1,5989,0,'HMT'),(1053,2,10800,1,'EEST'),(1053,3,7200,0,'EET'),(1053,4,10800,1,'EEST'),(1053,5,7200,0,'EET'),(1054,0,6616,0,'LMT'),(1054,1,6600,0,'MMT'),(1054,2,7200,0,'EET'),(1054,3,10800,0,'MSK'),(1054,4,3600,0,'CET'),(1054,5,7200,1,'CEST'),(1054,6,7200,1,'CEST'),(1054,7,14400,1,'MSD'),(1054,8,10800,0,'MSK'),(1054,9,14400,1,'MSD'),(1054,10,10800,1,'EEST'),(1054,11,7200,0,'EET'),(1054,12,10800,0,'+03'),(1055,0,561,0,'LMT'),(1055,1,561,0,'PMT'),(1055,2,3600,1,'WEST'),(1055,3,0,0,'WET'),(1055,4,3600,1,'WEST'),(1055,5,0,0,'WET'),(1055,6,3600,0,'CET'),(1055,7,7200,1,'CEST'),(1055,8,7200,1,'CEST'),(1055,9,7200,1,'WEMT'),(1055,10,3600,0,'CET'),(1055,11,7200,1,'CEST'),(1055,12,3600,0,'CET'),(1056,0,9017,0,'LMT'),(1056,1,9017,0,'MMT'),(1056,2,12679,1,'MST'),(1056,3,9079,0,'MMT'),(1056,4,16279,1,'MDST'),(1056,5,14400,1,'MSD'),(1056,6,10800,0,'MSK'),(1056,7,14400,1,'MSD'),(1056,8,18000,1,'+05'),(1056,9,7200,0,'EET'),(1056,10,10800,0,'MSK'),(1056,11,14400,1,'MSD'),(1056,12,10800,1,'EEST'),(1056,13,7200,0,'EET'),(1056,14,14400,0,'MSK'),(1056,15,14400,1,'MSD'),(1056,16,10800,0,'MSK'),(1057,0,8008,0,'LMT'),(1057,1,10800,1,'EEST'),(1057,2,7200,0,'EET'),(1057,3,7200,0,'EET'),(1057,4,10800,1,'EEST'),(1058,0,3208,0,'LMT'),(1058,1,7200,1,'CEST'),(1058,2,3600,0,'CET'),(1058,3,7200,1,'CEST'),(1058,4,3600,0,'CET'),(1058,5,10800,1,'CEMT'),(1058,6,10800,1,'CEMT'),(1058,7,7200,1,'CEST'),(1058,8,3600,0,'CET'),(1059,0,561,0,'LMT'),(1059,1,561,0,'PMT'),(1059,2,3600,1,'WEST'),(1059,3,0,0,'WET'),(1059,4,3600,1,'WEST'),(1059,5,0,0,'WET'),(1059,6,3600,0,'CET'),(1059,7,7200,1,'CEST'),(1059,8,7200,1,'CEST'),(1059,9,7200,1,'WEMT'),(1059,10,3600,0,'CET'),(1059,11,7200,1,'CEST'),(1059,12,3600,0,'CET'),(1060,0,4920,0,'LMT'),(1060,1,3600,0,'CET'),(1060,2,3600,0,'CET'),(1060,3,7200,1,'CEST'),(1060,4,7200,1,'CEST'),(1060,5,7200,1,'CEST'),(1060,6,3600,0,'CET'),(1061,0,3464,0,'LMT'),(1061,1,7200,1,'CEST'),(1061,2,3600,0,'CET'),(1061,3,7200,1,'CEST'),(1061,4,3600,0,'CET'),(1061,5,0,1,'GMT'),(1061,6,7200,1,'CEST'),(1061,7,3600,0,'CET'),(1062,0,5794,0,'LMT'),(1062,1,5794,0,'RMT'),(1062,2,9394,1,'LST'),(1062,3,7200,0,'EET'),(1062,4,10800,0,'MSK'),(1062,5,3600,0,'CET'),(1062,6,7200,1,'CEST'),(1062,7,7200,1,'CEST'),(1062,8,14400,1,'MSD'),(1062,9,10800,0,'MSK'),(1062,10,14400,1,'MSD'),(1062,11,10800,1,'EEST'),(1062,12,7200,0,'EET'),(1062,13,10800,1,'EEST'),(1062,14,7200,0,'EET'),(1063,0,2996,0,'LMT'),(1063,1,7200,1,'CEST'),(1063,2,3600,0,'CET'),(1063,3,3600,0,'CET'),(1063,4,7200,1,'CEST'),(1063,5,3600,0,'CET'),(1063,6,7200,1,'CEST'),(1064,0,12020,0,'LMT'),(1064,1,10800,0,'+03'),(1064,2,14400,0,'+04'),(1064,3,18000,1,'+05'),(1064,4,14400,0,'+04'),(1064,5,18000,1,'+05'),(1064,6,14400,1,'+04'),(1064,7,10800,0,'+03'),(1064,8,10800,1,'+03'),(1064,9,14400,1,'+04'),(1064,10,14400,0,'+04'),(1065,0,2996,0,'LMT'),(1065,1,7200,1,'CEST'),(1065,2,3600,0,'CET'),(1065,3,3600,0,'CET'),(1065,4,7200,1,'CEST'),(1065,5,3600,0,'CET'),(1065,6,7200,1,'CEST'),(1066,0,4920,0,'LMT'),(1066,1,3600,0,'CET'),(1066,2,3600,0,'CET'),(1066,3,7200,1,'CEST'),(1066,4,7200,1,'CEST'),(1066,5,7200,1,'CEST'),(1066,6,3600,0,'CET'),(1067,0,11058,0,'LMT'),(1067,1,10800,0,'+03'),(1067,2,18000,1,'+05'),(1067,3,14400,0,'+04'),(1067,4,14400,0,'+04'),(1067,5,18000,1,'+05'),(1067,6,14400,1,'+04'),(1067,7,10800,0,'+03'),(1067,8,14400,0,'+04'),(1068,0,8184,0,'LMT'),(1068,1,8160,0,'SMT'),(1068,2,7200,0,'EET'),(1068,3,10800,0,'MSK'),(1068,4,3600,0,'CET'),(1068,5,7200,1,'CEST'),(1068,6,7200,1,'CEST'),(1068,7,14400,1,'MSD'),(1068,8,10800,0,'MSK'),(1068,9,14400,1,'MSD'),(1068,10,10800,1,'EEST'),(1068,11,7200,0,'EET'),(1068,12,10800,1,'EEST'),(1068,13,7200,0,'EET'),(1068,14,14400,0,'MSK'),(1068,15,10800,0,'MSK'),(1069,0,4920,0,'LMT'),(1069,1,3600,0,'CET'),(1069,2,3600,0,'CET'),(1069,3,7200,1,'CEST'),(1069,4,7200,1,'CEST'),(1069,5,7200,1,'CEST'),(1069,6,3600,0,'CET'),(1070,0,5596,0,'LMT'),(1070,1,7200,0,'EET'),(1070,2,3600,0,'CET'),(1070,3,7200,1,'CEST'),(1070,4,10800,1,'EEST'),(1070,5,7200,0,'EET'),(1070,6,10800,1,'EEST'),(1070,7,10800,1,'EEST'),(1070,8,7200,0,'EET'),(1071,0,3208,0,'LMT'),(1071,1,7200,1,'CEST'),(1071,2,3600,0,'CET'),(1071,3,7200,1,'CEST'),(1071,4,3600,0,'CET'),(1071,5,10800,1,'CEMT'),(1071,6,10800,1,'CEMT'),(1071,7,7200,1,'CEST'),(1071,8,3600,0,'CET'),(1072,0,5940,0,'LMT'),(1072,1,5940,0,'TMT'),(1072,2,7200,1,'CEST'),(1072,3,3600,0,'CET'),(1072,4,3600,0,'CET'),(1072,5,7200,0,'EET'),(1072,6,10800,0,'MSK'),(1072,7,7200,1,'CEST'),(1072,8,14400,1,'MSD'),(1072,9,10800,0,'MSK'),(1072,10,14400,1,'MSD'),(1072,11,10800,1,'EEST'),(1072,12,7200,0,'EET'),(1072,13,7200,0,'EET'),(1072,14,10800,1,'EEST'),(1073,0,4760,0,'LMT'),(1073,1,3600,0,'CET'),(1073,2,7200,1,'CEST'),(1073,3,3600,0,'CET'),(1073,4,7200,1,'CEST'),(1074,0,6920,0,'LMT'),(1074,1,6900,0,'CMT'),(1074,2,6264,0,'BMT'),(1074,3,10800,1,'EEST'),(1074,4,7200,0,'EET'),(1074,5,7200,0,'EET'),(1074,6,10800,1,'EEST'),(1074,7,3600,0,'CET'),(1074,8,7200,1,'CEST'),(1074,9,7200,1,'CEST'),(1074,10,14400,1,'MSD'),(1074,11,10800,0,'MSK'),(1074,12,10800,0,'MSK'),(1074,13,14400,1,'MSD'),(1074,14,10800,1,'EEST'),(1074,15,7200,0,'EET'),(1075,0,11616,0,'LMT'),(1075,1,10800,0,'+03'),(1075,2,18000,1,'+05'),(1075,3,14400,0,'+04'),(1075,4,14400,0,'+04'),(1075,5,18000,1,'+05'),(1075,6,14400,1,'+04'),(1075,7,10800,0,'+03'),(1075,8,10800,1,'+03'),(1075,9,7200,0,'+02'),(1075,10,14400,1,'+04'),(1075,11,14400,0,'+04'),(1076,0,5352,0,'LMT'),(1076,1,3600,0,'CET'),(1076,2,7200,1,'CEST'),(1076,3,3600,0,'CET'),(1076,4,14400,1,'MSD'),(1076,5,10800,0,'MSK'),(1076,6,10800,0,'MSK'),(1076,7,14400,1,'MSD'),(1076,8,7200,0,'EET'),(1076,9,10800,1,'EEST'),(1076,10,7200,0,'EET'),(1076,11,7200,0,'EET'),(1076,12,10800,1,'EEST'),(1077,0,2048,0,'LMT'),(1077,1,7200,1,'CEST'),(1077,2,3600,0,'CET'),(1077,3,7200,1,'CEST'),(1077,4,3600,0,'CET'),(1078,0,2996,0,'LMT'),(1078,1,7200,1,'CEST'),(1078,2,3600,0,'CET'),(1078,3,3600,0,'CET'),(1078,4,7200,1,'CEST'),(1078,5,3600,0,'CET'),(1078,6,7200,1,'CEST'),(1079,0,3921,0,'LMT'),(1079,1,7200,1,'CEST'),(1079,2,3600,0,'CET'),(1079,3,7200,1,'CEST'),(1079,4,3600,0,'CET'),(1079,5,7200,1,'CEST'),(1079,6,3600,0,'CET'),(1080,0,6076,0,'LMT'),(1080,1,5040,0,'WMT'),(1080,2,5736,0,'KMT'),(1080,3,3600,0,'CET'),(1080,4,7200,0,'EET'),(1080,5,10800,0,'MSK'),(1080,6,3600,0,'CET'),(1080,7,7200,1,'CEST'),(1080,8,7200,1,'CEST'),(1080,9,14400,1,'MSD'),(1080,10,10800,0,'MSK'),(1080,11,14400,1,'MSD'),(1080,12,10800,1,'EEST'),(1080,13,7200,0,'EET'),(1080,14,7200,1,'CEST'),(1080,15,3600,0,'CET'),(1080,16,7200,0,'EET'),(1080,17,10800,1,'EEST'),(1081,0,10660,0,'LMT'),(1081,1,10800,0,'+03'),(1081,2,14400,0,'+04'),(1081,3,18000,1,'+05'),(1081,4,14400,0,'+04'),(1081,5,18000,1,'+05'),(1081,6,14400,1,'+04'),(1081,7,10800,0,'+03'),(1082,0,5040,0,'LMT'),(1082,1,5040,0,'WMT'),(1082,2,7200,1,'CEST'),(1082,3,3600,0,'CET'),(1082,4,7200,1,'CEST'),(1082,5,3600,0,'CET'),(1082,6,10800,1,'EEST'),(1082,7,7200,0,'EET'),(1082,8,7200,0,'EET'),(1082,9,7200,1,'CEST'),(1082,10,3600,0,'CET'),(1083,0,4920,0,'LMT'),(1083,1,3600,0,'CET'),(1083,2,3600,0,'CET'),(1083,3,7200,1,'CEST'),(1083,4,7200,1,'CEST'),(1083,5,7200,1,'CEST'),(1083,6,3600,0,'CET'),(1084,0,8440,0,'LMT'),(1084,1,8400,0,'+0220'),(1084,2,7200,0,'EET'),(1084,3,10800,0,'MSK'),(1084,4,3600,0,'CET'),(1084,5,7200,1,'CEST'),(1084,6,7200,1,'CEST'),(1084,7,14400,1,'MSD'),(1084,8,10800,0,'MSK'),(1084,9,14400,1,'MSD'),(1084,10,10800,1,'EEST'),(1084,11,10800,1,'EEST'),(1084,12,7200,0,'EET'),(1084,13,7200,0,'EET'),(1084,14,10800,1,'EEST'),(1085,0,2048,0,'LMT'),(1085,1,7200,1,'CEST'),(1085,2,3600,0,'CET'),(1085,3,7200,1,'CEST'),(1085,4,3600,0,'CET'),(1086,0,-75,0,'LMT'),(1086,1,3600,1,'BST'),(1086,2,0,0,'GMT'),(1086,3,7200,1,'BDST'),(1086,4,0,0,'GMT'),(1086,5,3600,0,'BST'),(1086,6,3600,1,'BST'),(1086,7,0,0,'GMT'),(1087,0,-75,0,'LMT'),(1087,1,3600,1,'BST'),(1087,2,0,0,'GMT'),(1087,3,7200,1,'BDST'),(1087,4,0,0,'GMT'),(1087,5,3600,0,'BST'),(1087,6,3600,1,'BST'),(1087,7,0,0,'GMT'),(1088,0,0,0,'GMT'),(1089,0,0,0,'GMT'),(1090,0,0,0,'GMT'),(1091,0,0,0,'GMT'),(1092,0,0,0,'GMT'),(1093,0,-36000,0,'HST'),(1094,0,27402,0,'LMT'),(1094,1,28800,0,'HKT'),(1094,2,32400,1,'HKST'),(1094,3,30600,1,'HKWT'),(1094,4,32400,0,'JST'),(1094,5,28800,0,'HKT'),(1094,6,32400,1,'HKST'),(1094,7,28800,0,'HKT'),(1095,0,-968,0,'LMT'),(1095,1,0,0,'GMT'),(1096,0,8836,0,'LMT'),(1096,1,9000,0,'+0230'),(1096,2,10800,0,'EAT'),(1096,3,9900,0,'+0245'),(1096,4,10800,0,'EAT'),(1097,0,17380,0,'LMT'),(1097,1,18000,0,'+05'),(1097,2,21600,0,'+06'),(1098,0,24124,0,'LMT'),(1098,1,24124,0,'BMT'),(1098,2,25200,0,'+07'),(1099,0,23087,0,'LMT'),(1099,1,23087,0,'RMT'),(1099,2,23400,0,'+0630'),(1099,3,32400,0,'+09'),(1099,4,23400,0,'+0630'),(1100,0,8836,0,'LMT'),(1100,1,9000,0,'+0230'),(1100,2,10800,0,'EAT'),(1100,3,9900,0,'+0245'),(1100,4,10800,0,'EAT'),(1101,0,17640,0,'LMT'),(1101,1,17640,0,'MMT'),(1101,2,18000,0,'+05'),(1102,0,13272,0,'LMT'),(1102,1,14400,0,'+04'),(1103,0,17640,0,'LMT'),(1103,1,17640,0,'MMT'),(1103,2,18000,0,'+05'),(1104,0,13800,0,'LMT'),(1104,1,18000,1,'+05'),(1104,2,14400,0,'+04'),(1105,0,8836,0,'LMT'),(1105,1,9000,0,'+0230'),(1105,2,10800,0,'EAT'),(1105,3,9900,0,'+0245'),(1105,4,10800,0,'EAT'),(1106,0,13272,0,'LMT'),(1106,1,14400,0,'+04'),(1107,0,12344,0,'LMT'),(1107,1,12344,0,'TMT'),(1107,2,16200,1,'+0430'),(1107,3,12600,0,'+0330'),(1107,4,18000,1,'+05'),(1107,5,14400,0,'+04'),(1107,6,16200,1,'+0430'),(1107,7,12600,0,'+0330'),(1108,0,8454,0,'LMT'),(1108,1,8440,0,'JMT'),(1108,2,10800,1,'IDT'),(1108,3,7200,0,'IST'),(1108,4,14400,1,'IDDT'),(1108,5,10800,1,'IDT'),(1108,6,7200,0,'IST'),(1108,7,10800,1,'IDT'),(1108,8,7200,0,'IST'),(1109,0,-18430,0,'LMT'),(1109,1,-18430,0,'KMT'),(1109,2,-18000,0,'EST'),(1109,3,-14400,1,'EDT'),(1110,0,33539,0,'LMT'),(1110,1,36000,1,'JDT'),(1110,2,32400,0,'JST'),(1110,3,32400,0,'JST'),(1111,0,40160,0,'LMT'),(1111,1,39600,0,'+11'),(1111,2,36000,0,'+10'),(1111,3,32400,0,'+09'),(1111,4,-43200,0,'-12'),(1111,5,43200,0,'+12'),(1112,0,3164,0,'LMT'),(1112,1,7200,1,'CEST'),(1112,2,3600,0,'CET'),(1112,3,7200,0,'EET'),(1113,0,3600,0,'MET'),(1113,1,7200,1,'MEST'),(1113,2,7200,1,'MEST'),(1113,3,3600,0,'MET'),(1114,0,-25200,0,'MST'),(1115,0,-25200,0,'MST'),(1115,1,-21600,1,'MDT'),(1115,2,-21600,1,'MWT'),(1115,3,-21600,1,'MPT'),(1115,4,-25200,0,'MST'),(1116,0,-28084,0,'LMT'),(1116,1,-25200,0,'MST'),(1116,2,-28800,0,'PST'),(1116,3,-25200,1,'PDT'),(1116,4,-25200,1,'PWT'),(1116,5,-25200,1,'PPT'),(1117,0,-25540,0,'LMT'),(1117,1,-25200,0,'MST'),(1117,2,-21600,0,'CST'),(1117,3,-28800,0,'PST'),(1117,4,-21600,1,'MDT'),(1117,5,-25200,0,'MST'),(1118,0,-23796,0,'LMT'),(1118,1,-25200,0,'MST'),(1118,2,-21600,0,'CST'),(1118,3,-18000,1,'CDT'),(1118,4,-18000,1,'CWT'),(1119,0,41944,0,'LMT'),(1119,1,45000,1,'NZST'),(1119,2,41400,0,'NZMT'),(1119,3,43200,1,'NZST'),(1119,4,46800,1,'NZDT'),(1119,5,43200,0,'NZST'),(1119,6,43200,0,'NZST'),(1120,0,44028,0,'LMT'),(1120,1,44100,0,'+1215'),(1120,2,49500,1,'+1345'),(1120,3,45900,0,'+1245'),(1120,4,45900,0,'+1245'),(1121,0,-25196,0,'LMT'),(1121,1,-21600,1,'MDT'),(1121,2,-25200,0,'MST'),(1121,3,-21600,1,'MWT'),(1121,4,-21600,1,'MPT'),(1122,0,29143,0,'LMT'),(1122,1,32400,1,'CDT'),(1122,2,28800,0,'CST'),(1123,0,-28800,0,'PST'),(1123,1,-25200,1,'PDT'),(1123,2,-25200,1,'PWT'),(1123,3,-25200,1,'PPT'),(1123,4,-28800,0,'PST'),(1124,0,45184,0,'LMT'),(1124,1,-41216,0,'LMT'),(1124,2,-41400,0,'-1130'),(1124,3,-36000,1,'-10'),(1124,4,-39600,0,'-11'),(1124,5,46800,0,'+13'),(1124,6,50400,1,'+14'),(1125,0,41944,0,'LMT'),(1125,1,45000,1,'NZST'),(1125,2,41400,0,'NZMT'),(1125,3,43200,1,'NZST'),(1125,4,46800,1,'NZDT'),(1125,5,43200,0,'NZST'),(1125,6,43200,0,'NZST'),(1126,0,37336,0,'LMT'),(1126,1,36000,0,'+10'),(1126,2,32400,0,'+09'),(1126,3,39600,0,'+11'),(1127,0,44028,0,'LMT'),(1127,1,44100,0,'+1215'),(1127,2,49500,1,'+1345'),(1127,3,45900,0,'+1245'),(1127,4,45900,0,'+1245'),(1128,0,35320,0,'LMT'),(1128,1,36000,0,'+10'),(1129,0,-26248,0,'LMT'),(1129,1,-26248,0,'EMT'),(1129,2,-21600,1,'-06'),(1129,3,-25200,0,'-07'),(1129,4,-25200,0,'-07'),(1129,5,-21600,0,'-06'),(1129,6,-18000,1,'-05'),(1130,0,40396,0,'LMT'),(1130,1,43200,1,'+12'),(1130,2,39600,0,'+11'),(1130,3,43200,1,'+12'),(1130,4,39600,0,'+11'),(1131,0,0,0,'-00'),(1131,1,-43200,0,'-12'),(1131,2,-39600,0,'-11'),(1131,3,46800,0,'+13'),(1132,0,-41096,0,'LMT'),(1132,1,-39600,0,'-11'),(1132,2,46800,0,'+13'),(1133,0,42944,0,'LMT'),(1133,1,46800,1,'+13'),(1133,2,43200,0,'+12'),(1134,0,41524,0,'LMT'),(1134,1,43200,0,'+12'),(1135,0,-21504,0,'LMT'),(1135,1,-18000,0,'-05'),(1135,2,-18000,1,'-05'),(1135,3,-21600,0,'-06'),(1136,0,-32388,0,'LMT'),(1136,1,-32400,0,'-09'),(1137,0,38388,0,'LMT'),(1137,1,39600,0,'+11'),(1138,0,-51660,0,'LMT'),(1138,1,36000,0,'GST'),(1138,2,32400,0,'+09'),(1138,3,39600,1,'GDT'),(1138,4,36000,0,'ChST'),(1139,0,-37886,0,'LMT'),(1139,1,-37800,0,'HST'),(1139,2,-34200,1,'HDT'),(1139,3,-34200,1,'HWT'),(1139,4,-34200,1,'HPT'),(1139,5,-36000,0,'HST'),(1140,0,-37886,0,'LMT'),(1140,1,-37800,0,'HST'),(1140,2,-34200,1,'HDT'),(1140,3,-34200,1,'HWT'),(1140,4,-34200,1,'HPT'),(1140,5,-36000,0,'HST'),(1141,0,0,0,'-00'),(1141,1,-43200,0,'-12'),(1141,2,-39600,0,'-11'),(1141,3,46800,0,'+13'),(1142,0,-37760,0,'LMT'),(1142,1,-38400,0,'-1040'),(1142,2,-36000,0,'-10'),(1142,3,50400,0,'+14'),(1143,0,-47284,0,'LMT'),(1143,1,39600,0,'+11'),(1143,2,32400,0,'+09'),(1143,3,36000,0,'+10'),(1143,4,43200,0,'+12'),(1143,5,39600,0,'+11'),(1144,0,40160,0,'LMT'),(1144,1,39600,0,'+11'),(1144,2,36000,0,'+10'),(1144,3,32400,0,'+09'),(1144,4,-43200,0,'-12'),(1144,5,43200,0,'+12'),(1145,0,41524,0,'LMT'),(1145,1,43200,0,'+12'),(1146,0,-33480,0,'LMT'),(1146,1,-34200,0,'-0930'),(1147,0,45432,0,'LMT'),(1147,1,-40968,0,'LMT'),(1147,2,-39600,0,'SST'),(1148,0,40060,0,'LMT'),(1148,1,41400,0,'+1130'),(1148,2,32400,0,'+09'),(1148,3,43200,0,'+12'),(1149,0,-40780,0,'LMT'),(1149,1,-40800,0,'-1120'),(1149,2,-39600,0,'-11'),(1150,0,40312,0,'LMT'),(1150,1,40320,0,'+1112'),(1150,2,41400,0,'+1130'),(1150,3,45000,1,'+1230'),(1150,4,41400,0,'+1130'),(1150,5,39600,0,'+11'),(1150,6,43200,1,'+12'),(1151,0,39948,0,'LMT'),(1151,1,43200,1,'+12'),(1151,2,39600,0,'+11'),(1151,3,43200,1,'+12'),(1151,4,39600,0,'+11'),(1152,0,45432,0,'LMT'),(1152,1,-40968,0,'LMT'),(1152,2,-39600,0,'SST'),(1153,0,-54124,0,'LMT'),(1153,1,32400,0,'+09'),(1154,0,-31220,0,'LMT'),(1154,1,-30600,0,'-0830'),(1154,2,-28800,0,'-08'),(1155,0,38388,0,'LMT'),(1155,1,39600,0,'+11'),(1156,0,38388,0,'LMT'),(1156,1,39600,0,'+11'),(1157,0,35320,0,'LMT'),(1157,1,36000,0,'+10'),(1158,0,48056,0,'LMT'),(1158,1,-38344,0,'LMT'),(1158,2,-37800,0,'-1030'),(1158,3,-36000,0,'-10'),(1158,4,-34200,1,'-0930'),(1159,0,-51660,0,'LMT'),(1159,1,36000,0,'GST'),(1159,2,32400,0,'+09'),(1159,3,39600,1,'GDT'),(1159,4,36000,0,'ChST'),(1160,0,45432,0,'LMT'),(1160,1,-40968,0,'LMT'),(1160,2,-39600,0,'SST'),(1161,0,-35896,0,'LMT'),(1161,1,-36000,0,'-10'),(1162,0,41524,0,'LMT'),(1162,1,43200,0,'+12'),(1163,0,44352,0,'LMT'),(1163,1,44400,0,'+1220'),(1163,2,46800,0,'+13'),(1163,3,50400,1,'+14'),(1163,4,46800,0,'+13'),(1163,5,50400,1,'+14'),(1164,0,35320,0,'LMT'),(1164,1,36000,0,'+10'),(1165,0,41524,0,'LMT'),(1165,1,43200,0,'+12'),(1166,0,41524,0,'LMT'),(1166,1,43200,0,'+12'),(1167,0,35320,0,'LMT'),(1167,1,36000,0,'+10'),(1168,0,5040,0,'LMT'),(1168,1,5040,0,'WMT'),(1168,2,7200,1,'CEST'),(1168,3,3600,0,'CET'),(1168,4,7200,1,'CEST'),(1168,5,3600,0,'CET'),(1168,6,10800,1,'EEST'),(1168,7,7200,0,'EET'),(1168,8,7200,0,'EET'),(1168,9,7200,1,'CEST'),(1168,10,3600,0,'CET'),(1169,0,-2205,0,'LMT'),(1169,1,3600,1,'WEST'),(1169,2,0,0,'WET'),(1169,3,3600,1,'WEST'),(1169,4,0,0,'WET'),(1169,5,7200,1,'WEMT'),(1169,6,0,0,'WET'),(1169,7,3600,0,'CET'),(1169,8,3600,0,'CET'),(1169,9,7200,1,'CEST'),(1169,10,3600,1,'WEST'),(1169,11,0,0,'WET'),(1170,0,29160,0,'LMT'),(1170,1,28800,0,'CST'),(1170,2,32400,0,'JST'),(1170,3,32400,1,'CDT'),(1170,4,28800,0,'CST'),(1171,0,30472,0,'LMT'),(1171,1,30600,0,'KST'),(1171,2,32400,0,'JST'),(1171,3,36000,1,'KDT'),(1171,4,32400,0,'KST'),(1171,5,34200,1,'KDT'),(1171,6,36000,1,'KDT'),(1172,0,24925,0,'LMT'),(1172,1,24925,0,'SMT'),(1172,2,25200,0,'+07'),(1172,3,26400,1,'+0720'),(1172,4,26400,0,'+0720'),(1172,5,27000,0,'+0730'),(1172,6,32400,0,'+09'),(1172,7,28800,0,'+08'),(1173,0,6952,0,'LMT'),(1173,1,7016,0,'IMT'),(1173,2,10800,1,'EEST'),(1173,3,7200,0,'EET'),(1173,4,10800,0,'+03'),(1173,5,14400,1,'+04'),(1173,6,10800,1,'EEST'),(1173,7,7200,0,'EET'),(1173,8,10800,1,'EEST'),(1173,9,7200,0,'EET'),(1173,10,10800,0,'+03'),(1174,0,0,0,'UTC'),(1175,0,50424,0,'LMT'),(1175,1,-36000,0,'AST'),(1175,2,-32400,1,'AWT'),(1175,3,-32400,1,'APT'),(1175,4,-36000,0,'AHST'),(1175,5,-32400,1,'AHDT'),(1175,6,-32400,0,'YST'),(1175,7,-28800,1,'AKDT'),(1175,8,-32400,0,'AKST'),(1176,0,44002,0,'LMT'),(1176,1,-39600,0,'NST'),(1176,2,-36000,1,'NWT'),(1176,3,-36000,1,'NPT'),(1176,4,-39600,0,'BST'),(1176,5,-36000,1,'BDT'),(1176,6,-36000,0,'AHST'),(1176,7,-32400,1,'HDT'),(1176,8,-36000,0,'HST'),(1177,0,-26898,0,'LMT'),(1177,1,-21600,1,'MDT'),(1177,2,-25200,0,'MST'),(1177,3,-21600,1,'MWT'),(1178,0,-21036,0,'LMT'),(1178,1,-18000,1,'CDT'),(1178,2,-21600,0,'CST'),(1178,3,-18000,0,'EST'),(1178,4,-18000,1,'CWT'),(1178,5,-18000,1,'CPT'),(1178,6,-21600,0,'CST'),(1179,0,-20678,0,'LMT'),(1179,1,-18000,1,'CDT'),(1179,2,-21600,0,'CST'),(1179,3,-18000,1,'CWT'),(1179,4,-18000,1,'CPT'),(1179,5,-18000,0,'EST'),(1179,6,-14400,1,'EDT'),(1180,0,-17762,0,'LMT'),(1180,1,-14400,1,'EDT'),(1180,2,-18000,0,'EST'),(1180,3,-18000,0,'EST'),(1180,4,-14400,1,'EWT'),(1180,5,-14400,1,'EPT'),(1181,0,-37886,0,'LMT'),(1181,1,-37800,0,'HST'),(1181,2,-34200,1,'HDT'),(1181,3,-34200,1,'HWT'),(1181,4,-34200,1,'HPT'),(1181,5,-36000,0,'HST'),(1182,0,-20790,0,'LMT'),(1182,1,-18000,1,'CDT'),(1182,2,-21600,0,'CST'),(1182,3,-18000,1,'CWT'),(1182,4,-18000,1,'CPT'),(1182,5,-18000,0,'EST'),(1182,6,-21600,0,'CST'),(1183,0,-19931,0,'LMT'),(1183,1,-21600,0,'CST'),(1183,2,-18000,0,'EST'),(1183,3,-14400,1,'EWT'),(1183,4,-14400,1,'EPT'),(1183,5,-14400,1,'EDT'),(1184,0,-25196,0,'LMT'),(1184,1,-21600,1,'MDT'),(1184,2,-25200,0,'MST'),(1184,3,-21600,1,'MWT'),(1184,4,-21600,1,'MPT'),(1185,0,-28378,0,'LMT'),(1185,1,-25200,1,'PDT'),(1185,2,-28800,0,'PST'),(1185,3,-25200,1,'PWT'),(1185,4,-25200,1,'PPT'),(1186,0,45432,0,'LMT'),(1186,1,-40968,0,'LMT'),(1186,2,-39600,0,'SST'),(1187,0,0,0,'UTC'),(1188,0,0,0,'UTC'),(1189,0,9017,0,'LMT'),(1189,1,9017,0,'MMT'),(1189,2,12679,1,'MST'),(1189,3,9079,0,'MMT'),(1189,4,16279,1,'MDST'),(1189,5,14400,1,'MSD'),(1189,6,10800,0,'MSK'),(1189,7,14400,1,'MSD'),(1189,8,18000,1,'+05'),(1189,9,7200,0,'EET'),(1189,10,10800,0,'MSK'),(1189,11,14400,1,'MSD'),(1189,12,10800,1,'EEST'),(1189,13,7200,0,'EET'),(1189,14,14400,0,'MSK'),(1189,15,14400,1,'MSD'),(1189,16,10800,0,'MSK'),(1190,0,0,0,'WET'),(1190,1,3600,1,'WEST'),(1190,2,3600,1,'WEST'),(1190,3,0,0,'WET'),(1191,0,0,0,'UTC'),(1192,0,-17762,0,'LMT'),(1192,1,-14400,1,'EDT'),(1192,2,-18000,0,'EST'),(1192,3,-18000,0,'EST'),(1192,4,-14400,1,'EWT'),(1192,5,-14400,1,'EPT'),(1193,0,-968,0,'LMT'),(1193,1,0,0,'GMT'),(1194,0,-968,0,'LMT'),(1194,1,0,0,'GMT'),(1195,0,8836,0,'LMT'),(1195,1,9000,0,'+0230'),(1195,2,10800,0,'EAT'),(1195,3,9900,0,'+0245'),(1195,4,10800,0,'EAT'),(1196,0,732,0,'LMT'),(1196,1,561,0,'PMT'),(1196,2,3600,1,'WEST'),(1196,3,0,0,'WET'),(1196,4,0,0,'WET'),(1196,5,7200,1,'CEST'),(1196,6,3600,0,'CET'),(1196,7,3600,1,'WEST'),(1197,0,8836,0,'LMT'),(1197,1,9000,0,'+0230'),(1197,2,10800,0,'EAT'),(1197,3,9900,0,'+0245'),(1197,4,10800,0,'EAT'),(1198,0,8836,0,'LMT'),(1198,1,9000,0,'+0230'),(1198,2,10800,0,'EAT'),(1198,3,9900,0,'+0245'),(1198,4,10800,0,'EAT'),(1199,0,-968,0,'LMT'),(1199,1,0,0,'GMT'),(1200,0,815,0,'LMT'),(1200,1,0,0,'GMT'),(1200,2,1800,0,'+0030'),(1200,3,3600,0,'WAT'),(1201,0,-968,0,'LMT'),(1201,1,0,0,'GMT'),(1202,0,-3740,0,'LMT'),(1202,1,-3600,0,'-01'),(1202,2,0,0,'GMT'),(1203,0,7820,0,'LMT'),(1203,1,7200,0,'CAT'),(1204,0,815,0,'LMT'),(1204,1,0,0,'GMT'),(1204,2,1800,0,'+0030'),(1204,3,3600,0,'WAT'),(1205,0,7820,0,'LMT'),(1205,1,7200,0,'CAT'),(1206,0,7509,0,'LMT'),(1206,1,10800,1,'EEST'),(1206,2,7200,0,'EET'),(1206,3,10800,1,'EEST'),(1207,0,-1820,0,'LMT'),(1207,1,3600,1,'+01'),(1207,2,0,0,'+00'),(1207,3,3600,0,'+01'),(1207,4,0,1,'+00'),(1208,0,-1276,0,'LMT'),(1208,1,0,0,'WET'),(1208,2,3600,1,'WEST'),(1208,3,0,0,'WET'),(1208,4,3600,0,'CET'),(1208,5,7200,1,'CEST'),(1208,6,3600,0,'CET'),(1209,0,-968,0,'LMT'),(1209,1,0,0,'GMT'),(1210,0,-968,0,'LMT'),(1210,1,0,0,'GMT'),(1211,0,8836,0,'LMT'),(1211,1,9000,0,'+0230'),(1211,2,10800,0,'EAT'),(1211,3,9900,0,'+0245'),(1211,4,10800,0,'EAT'),(1212,0,8836,0,'LMT'),(1212,1,9000,0,'+0230'),(1212,2,10800,0,'EAT'),(1212,3,9900,0,'+0245'),(1212,4,10800,0,'EAT'),(1213,0,815,0,'LMT'),(1213,1,0,0,'GMT'),(1213,2,1800,0,'+0030'),(1213,3,3600,0,'WAT'),(1214,0,-3168,0,'LMT'),(1214,1,-3600,0,'-01'),(1214,2,3600,1,'+01'),(1214,3,0,0,'+00'),(1214,4,0,1,'+00'),(1214,5,3600,0,'+01'),(1215,0,-968,0,'LMT'),(1215,1,0,0,'GMT'),(1216,0,7820,0,'LMT'),(1216,1,7200,0,'CAT'),(1217,0,7820,0,'LMT'),(1217,1,7200,0,'CAT'),(1218,0,6720,0,'LMT'),(1218,1,5400,0,'SAST'),(1218,2,10800,1,'SAST'),(1218,3,7200,0,'SAST'),(1219,0,7588,0,'LMT'),(1219,1,10800,1,'CAST'),(1219,2,7200,0,'CAT'),(1219,3,10800,0,'EAT'),(1219,4,7200,0,'CAT'),(1220,0,8836,0,'LMT'),(1220,1,9000,0,'+0230'),(1220,2,10800,0,'EAT'),(1220,3,9900,0,'+0245'),(1220,4,10800,0,'EAT'),(1221,0,7808,0,'LMT'),(1221,1,10800,1,'CAST'),(1221,2,7200,0,'CAT'),(1221,3,10800,0,'EAT'),(1221,4,7200,0,'CAT'),(1222,0,7820,0,'LMT'),(1222,1,7200,0,'CAT'),(1223,0,815,0,'LMT'),(1223,1,0,0,'GMT'),(1223,2,1800,0,'+0030'),(1223,3,3600,0,'WAT'),(1224,0,815,0,'LMT'),(1224,1,0,0,'GMT'),(1224,2,1800,0,'+0030'),(1224,3,3600,0,'WAT'),(1225,0,815,0,'LMT'),(1225,1,0,0,'GMT'),(1225,2,1800,0,'+0030'),(1225,3,3600,0,'WAT'),(1226,0,-968,0,'LMT'),(1226,1,0,0,'GMT'),(1227,0,815,0,'LMT'),(1227,1,0,0,'GMT'),(1227,2,1800,0,'+0030'),(1227,3,3600,0,'WAT'),(1228,0,7820,0,'LMT'),(1228,1,7200,0,'CAT'),(1229,0,7820,0,'LMT'),(1229,1,7200,0,'CAT'),(1230,0,815,0,'LMT'),(1230,1,0,0,'GMT'),(1230,2,1800,0,'+0030'),(1230,3,3600,0,'WAT'),(1231,0,7820,0,'LMT'),(1231,1,7200,0,'CAT'),(1232,0,6720,0,'LMT'),(1232,1,5400,0,'SAST'),(1232,2,10800,1,'SAST'),(1232,3,7200,0,'SAST'),(1233,0,6720,0,'LMT'),(1233,1,5400,0,'SAST'),(1233,2,10800,1,'SAST'),(1233,3,7200,0,'SAST'),(1234,0,8836,0,'LMT'),(1234,1,9000,0,'+0230'),(1234,2,10800,0,'EAT'),(1234,3,9900,0,'+0245'),(1234,4,10800,0,'EAT'),(1235,0,-2588,0,'LMT'),(1235,1,-2588,0,'MMT'),(1235,2,-2670,0,'MMT'),(1235,3,0,0,'GMT'),(1236,0,8836,0,'LMT'),(1236,1,9000,0,'+0230'),(1236,2,10800,0,'EAT'),(1236,3,9900,0,'+0245'),(1236,4,10800,0,'EAT'),(1237,0,3612,0,'LMT'),(1237,1,3600,0,'WAT'),(1237,2,7200,1,'WAST'),(1238,0,815,0,'LMT'),(1238,1,0,0,'GMT'),(1238,2,1800,0,'+0030'),(1238,3,3600,0,'WAT'),(1239,0,-968,0,'LMT'),(1239,1,0,0,'GMT'),(1240,0,-968,0,'LMT'),(1240,1,0,0,'GMT'),(1241,0,815,0,'LMT'),(1241,1,0,0,'GMT'),(1241,2,1800,0,'+0030'),(1241,3,3600,0,'WAT'),(1242,0,1616,0,'LMT'),(1242,1,-2205,0,'LMT'),(1242,2,0,0,'GMT'),(1242,3,3600,0,'WAT'),(1242,4,0,0,'GMT'),(1243,0,-968,0,'LMT'),(1243,1,0,0,'GMT'),(1244,0,3164,0,'LMT'),(1244,1,7200,1,'CEST'),(1244,2,3600,0,'CET'),(1244,3,7200,0,'EET'),(1245,0,2444,0,'LMT'),(1245,1,561,0,'PMT'),(1245,2,7200,1,'CEST'),(1245,3,3600,0,'CET'),(1245,4,3600,0,'CET'),(1245,5,7200,1,'CEST'),(1246,0,4104,0,'LMT'),(1246,1,5400,0,'+0130'),(1246,2,7200,0,'SAST'),(1246,3,10800,1,'SAST'),(1246,4,3600,1,'WAT'),(1246,5,7200,0,'CAT'),(1247,0,44002,0,'LMT'),(1247,1,-39600,0,'NST'),(1247,2,-36000,1,'NWT'),(1247,3,-36000,1,'NPT'),(1247,4,-39600,0,'BST'),(1247,5,-36000,1,'BDT'),(1247,6,-36000,0,'AHST'),(1247,7,-32400,1,'HDT'),(1247,8,-36000,0,'HST'),(1248,0,50424,0,'LMT'),(1248,1,-36000,0,'AST'),(1248,2,-32400,1,'AWT'),(1248,3,-32400,1,'APT'),(1248,4,-36000,0,'AHST'),(1248,5,-32400,1,'AHDT'),(1248,6,-32400,0,'YST'),(1248,7,-28800,1,'AKDT'),(1248,8,-32400,0,'AKST'),(1249,0,-15865,0,'LMT'),(1249,1,-14400,0,'AST'),(1249,2,-10800,1,'APT'),(1249,3,-10800,1,'AWT'),(1250,0,-15865,0,'LMT'),(1250,1,-14400,0,'AST'),(1250,2,-10800,1,'APT'),(1250,3,-10800,1,'AWT'),(1251,0,-11568,0,'LMT'),(1251,1,-7200,1,'-02'),(1251,2,-10800,0,'-03'),(1252,0,-14028,0,'LMT'),(1252,1,-15408,0,'CMT'),(1252,2,-14400,0,'-04'),(1252,3,-10800,1,'-03'),(1252,4,-7200,1,'-02'),(1252,5,-10800,0,'-03'),(1253,0,-15788,0,'LMT'),(1253,1,-15408,0,'CMT'),(1253,2,-14400,0,'-04'),(1253,3,-10800,1,'-03'),(1253,4,-7200,1,'-02'),(1253,5,-10800,0,'-03'),(1254,0,-15788,0,'LMT'),(1254,1,-15408,0,'CMT'),(1254,2,-14400,0,'-04'),(1254,3,-10800,1,'-03'),(1254,4,-7200,1,'-02'),(1254,5,-10800,0,'-03'),(1255,0,-15408,0,'LMT'),(1255,1,-15408,0,'CMT'),(1255,2,-14400,0,'-04'),(1255,3,-10800,1,'-03'),(1255,4,-7200,1,'-02'),(1255,5,-10800,0,'-03'),(1256,0,-15672,0,'LMT'),(1256,1,-15408,0,'CMT'),(1256,2,-14400,0,'-04'),(1256,3,-10800,1,'-03'),(1256,4,-7200,1,'-02'),(1256,5,-10800,0,'-03'),(1257,0,-16044,0,'LMT'),(1257,1,-15408,0,'CMT'),(1257,2,-14400,0,'-04'),(1257,3,-10800,1,'-03'),(1257,4,-7200,1,'-02'),(1257,5,-10800,0,'-03'),(1258,0,-16516,0,'LMT'),(1258,1,-15408,0,'CMT'),(1258,2,-14400,0,'-04'),(1258,3,-10800,1,'-03'),(1258,4,-7200,1,'-02'),(1258,5,-10800,0,'-03'),(1259,0,-16612,0,'LMT'),(1259,1,-15408,0,'CMT'),(1259,2,-14400,0,'-04'),(1259,3,-10800,1,'-03'),(1259,4,-7200,1,'-02'),(1259,5,-10800,0,'-03'),(1260,0,-15700,0,'LMT'),(1260,1,-15408,0,'CMT'),(1260,2,-14400,0,'-04'),(1260,3,-10800,1,'-03'),(1260,4,-7200,1,'-02'),(1260,5,-10800,0,'-03'),(1261,0,-16444,0,'LMT'),(1261,1,-15408,0,'CMT'),(1261,2,-14400,0,'-04'),(1261,3,-10800,1,'-03'),(1261,4,-7200,1,'-02'),(1261,5,-10800,0,'-03'),(1262,0,-15924,0,'LMT'),(1262,1,-15408,0,'CMT'),(1262,2,-14400,0,'-04'),(1262,3,-10800,1,'-03'),(1262,4,-7200,1,'-02'),(1262,5,-10800,0,'-03'),(1262,6,-10800,1,'-03'),(1263,0,-15652,0,'LMT'),(1263,1,-15408,0,'CMT'),(1263,2,-14400,0,'-04'),(1263,3,-10800,1,'-03'),(1263,4,-7200,1,'-02'),(1263,5,-10800,0,'-03'),(1264,0,-16392,0,'LMT'),(1264,1,-15408,0,'CMT'),(1264,2,-14400,0,'-04'),(1264,3,-10800,1,'-03'),(1264,4,-7200,1,'-02'),(1264,5,-10800,0,'-03'),(1265,0,-15865,0,'LMT'),(1265,1,-14400,0,'AST'),(1265,2,-10800,1,'APT'),(1265,3,-10800,1,'AWT'),(1266,0,-13840,0,'LMT'),(1266,1,-13840,0,'AMT'),(1266,2,-14400,0,'-04'),(1266,3,-10800,0,'-03'),(1266,4,-10800,1,'-03'),(1266,5,-14400,0,'-04'),(1267,0,-19088,0,'LMT'),(1267,1,-19176,0,'CMT'),(1267,2,-18000,0,'EST'),(1268,0,44002,0,'LMT'),(1268,1,-39600,0,'NST'),(1268,2,-36000,1,'NWT'),(1268,3,-36000,1,'NPT'),(1268,4,-39600,0,'BST'),(1268,5,-36000,1,'BDT'),(1268,6,-36000,0,'AHST'),(1268,7,-32400,1,'HDT'),(1268,8,-36000,0,'HST'),(1269,0,-9244,0,'LMT'),(1269,1,-7200,1,'-02'),(1269,2,-10800,0,'-03'),(1270,0,-25260,0,'LMT'),(1270,1,-25200,0,'MST'),(1270,2,-21600,0,'CST'),(1270,3,-28800,0,'PST'),(1270,4,-21600,1,'MDT'),(1270,5,-18000,1,'CDT'),(1270,6,-21600,0,'CST'),(1271,0,-14309,0,'LMT'),(1271,1,-10800,1,'ADT'),(1271,2,-14400,0,'AST'),(1271,3,-14400,0,'AST'),(1271,4,-12600,1,'-0330'),(1271,5,-10800,1,'ADT'),(1272,0,-11636,0,'LMT'),(1272,1,-7200,1,'-02'),(1272,2,-10800,0,'-03'),(1273,0,-21168,0,'LMT'),(1273,1,-19800,1,'-0530'),(1273,2,-21600,0,'CST'),(1273,3,-18000,1,'CWT'),(1273,4,-18000,1,'CPT'),(1273,5,-18000,1,'CDT'),(1274,0,-15865,0,'LMT'),(1274,1,-14400,0,'AST'),(1274,2,-10800,1,'APT'),(1274,3,-10800,1,'AWT'),(1275,0,-14560,0,'LMT'),(1275,1,-10800,1,'-03'),(1275,2,-14400,0,'-04'),(1276,0,-17776,0,'LMT'),(1276,1,-17776,0,'BMT'),(1276,2,-14400,1,'-04'),(1276,3,-18000,0,'-05'),(1277,0,-27889,0,'LMT'),(1277,1,-25200,1,'PDT'),(1277,2,-28800,0,'PST'),(1277,3,-21600,1,'MWT'),(1277,4,-21600,1,'MPT'),(1277,5,-25200,0,'MST'),(1277,6,-21600,1,'MDT'),(1278,0,-14028,0,'LMT'),(1278,1,-15408,0,'CMT'),(1278,2,-14400,0,'-04'),(1278,3,-10800,1,'-03'),(1278,4,-7200,1,'-02'),(1278,5,-10800,0,'-03'),(1279,0,0,0,'-00'),(1279,1,-21600,1,'MWT'),(1279,2,-21600,1,'MPT'),(1279,3,-25200,0,'MST'),(1279,4,-18000,1,'MDDT'),(1279,5,-21600,1,'MDT'),(1279,6,-18000,1,'CDT'),(1279,7,-21600,0,'CST'),(1279,8,-18000,0,'EST'),(1279,9,-21600,1,'MDT'),(1279,10,-25200,0,'MST'),(1280,0,-13108,0,'LMT'),(1280,1,-10800,1,'-03'),(1280,2,-14400,0,'-04'),(1281,0,-20824,0,'LMT'),(1281,1,-21600,0,'CST'),(1281,2,-14400,1,'EDT'),(1281,3,-18000,0,'EST'),(1281,4,-18000,1,'CDT'),(1282,0,-16064,0,'LMT'),(1282,1,-16060,0,'CMT'),(1282,2,-16200,0,'-0430'),(1282,3,-14400,0,'-04'),(1283,0,-15788,0,'LMT'),(1283,1,-15408,0,'CMT'),(1283,2,-14400,0,'-04'),(1283,3,-10800,1,'-03'),(1283,4,-7200,1,'-02'),(1283,5,-10800,0,'-03'),(1284,0,-12560,0,'LMT'),(1284,1,-14400,0,'-04'),(1284,2,-10800,0,'-03'),(1285,0,-19088,0,'LMT'),(1285,1,-19176,0,'CMT'),(1285,2,-18000,0,'EST'),(1286,0,-21036,0,'LMT'),(1286,1,-18000,1,'CDT'),(1286,2,-21600,0,'CST'),(1286,3,-18000,0,'EST'),(1286,4,-18000,1,'CWT'),(1286,5,-18000,1,'CPT'),(1286,6,-21600,0,'CST'),(1287,0,-25460,0,'LMT'),(1287,1,-25200,0,'MST'),(1287,2,-21600,0,'CST'),(1287,3,-18000,1,'CDT'),(1287,4,-21600,1,'MDT'),(1287,5,-25200,0,'MST'),(1288,0,-19088,0,'LMT'),(1288,1,-19176,0,'CMT'),(1288,2,-18000,0,'EST'),(1289,0,-15408,0,'LMT'),(1289,1,-15408,0,'CMT'),(1289,2,-14400,0,'-04'),(1289,3,-10800,1,'-03'),(1289,4,-7200,1,'-02'),(1289,5,-10800,0,'-03'),(1290,0,-20173,0,'LMT'),(1290,1,-20173,0,'SJMT'),(1290,2,-18000,1,'CDT'),(1290,3,-21600,0,'CST'),(1291,0,-26898,0,'LMT'),(1291,1,-21600,1,'MDT'),(1291,2,-25200,0,'MST'),(1291,3,-21600,1,'MWT'),(1292,0,-13460,0,'LMT'),(1292,1,-10800,1,'-03'),(1292,2,-14400,0,'-04'),(1293,0,-15865,0,'LMT'),(1293,1,-14400,0,'AST'),(1293,2,-10800,1,'APT'),(1293,3,-10800,1,'AWT'),(1294,0,-4480,0,'LMT'),(1294,1,-10800,0,'-03'),(1294,2,-10800,0,'-03'),(1294,3,-7200,1,'-02'),(1294,4,-7200,1,'-02'),(1294,5,0,0,'GMT'),(1295,0,-33460,0,'LMT'),(1295,1,-28800,1,'YDT'),(1295,2,-32400,0,'YST'),(1295,3,-28800,1,'YWT'),(1295,4,-28800,1,'YPT'),(1295,5,-25200,1,'YDDT'),(1295,6,-28800,0,'PST'),(1295,7,-25200,1,'PDT'),(1295,8,-25200,0,'MST'),(1296,0,-28856,0,'LMT'),(1296,1,-25200,1,'PDT'),(1296,2,-28800,0,'PST'),(1296,3,-25200,1,'PWT'),(1296,4,-25200,1,'PPT'),(1296,5,-25200,0,'MST'),(1297,0,-25196,0,'LMT'),(1297,1,-21600,1,'MDT'),(1297,2,-25200,0,'MST'),(1297,3,-21600,1,'MWT'),(1297,4,-21600,1,'MPT'),(1298,0,-19931,0,'LMT'),(1298,1,-21600,0,'CST'),(1298,2,-18000,0,'EST'),(1298,3,-14400,1,'EWT'),(1298,4,-14400,1,'EPT'),(1298,5,-14400,1,'EDT'),(1299,0,-15865,0,'LMT'),(1299,1,-14400,0,'AST'),(1299,2,-10800,1,'APT'),(1299,3,-10800,1,'AWT'),(1300,0,-27232,0,'LMT'),(1300,1,-21600,1,'MDT'),(1300,2,-25200,0,'MST'),(1300,3,-21600,1,'MWT'),(1300,4,-21600,1,'MPT'),(1301,0,-16768,0,'LMT'),(1301,1,-14400,1,'-04'),(1301,2,-18000,0,'-05'),(1301,3,-14400,0,'-04'),(1301,4,-18000,0,'-05'),(1302,0,-21408,0,'LMT'),(1302,1,-18000,1,'CDT'),(1302,2,-21600,0,'CST'),(1303,0,-28084,0,'LMT'),(1303,1,-25200,0,'MST'),(1303,2,-28800,0,'PST'),(1303,3,-25200,1,'PDT'),(1303,4,-25200,1,'PWT'),(1303,5,-25200,1,'PPT'),(1304,0,-29447,0,'LMT'),(1304,1,-25200,1,'PDT'),(1304,2,-28800,0,'PST'),(1304,3,-25200,1,'PWT'),(1304,4,-25200,1,'PPT'),(1304,5,-25200,0,'MST'),(1305,0,-20678,0,'LMT'),(1305,1,-18000,1,'CDT'),(1305,2,-21600,0,'CST'),(1305,3,-18000,1,'CWT'),(1305,4,-18000,1,'CPT'),(1305,5,-18000,0,'EST'),(1305,6,-14400,1,'EDT'),(1306,0,-9240,0,'LMT'),(1306,1,-7200,1,'-02'),(1306,2,-10800,0,'-03'),(1307,0,-14388,0,'LMT'),(1307,1,-10800,1,'ADT'),(1307,2,-14400,0,'AST'),(1307,3,-10800,1,'AWT'),(1307,4,-10800,1,'APT'),(1308,0,-12416,0,'LMT'),(1308,1,-10800,0,'-03'),(1308,2,-10800,0,'-03'),(1308,3,-7200,1,'-02'),(1308,4,-7200,1,'-02'),(1309,0,-14500,0,'LMT'),(1309,1,-12652,0,'NST'),(1309,2,-9052,1,'NDT'),(1309,3,-12600,0,'NST'),(1309,4,-9000,1,'NDT'),(1309,5,-9000,1,'NPT'),(1309,6,-9000,1,'NWT'),(1309,7,-10800,1,'ADT'),(1309,8,-14400,0,'AST'),(1309,9,-7200,1,'ADDT'),(1309,10,-10800,1,'ADT'),(1310,0,-17072,0,'LMT'),(1310,1,-18430,0,'KMT'),(1310,2,-18000,0,'EST'),(1310,3,-14400,1,'EDT'),(1310,4,-14400,0,'AST'),(1310,5,-18000,0,'EST'),(1311,0,-15865,0,'LMT'),(1311,1,-14400,0,'AST'),(1311,2,-10800,1,'APT'),(1311,3,-10800,1,'AWT'),(1312,0,-15865,0,'LMT'),(1312,1,-14400,0,'AST'),(1312,2,-10800,1,'APT'),(1312,3,-10800,1,'AWT'),(1313,0,-21724,0,'LMT'),(1313,1,-18000,1,'CDT'),(1313,2,-21600,0,'CST'),(1314,0,-19160,0,'LMT'),(1314,1,-18840,0,'QMT'),(1314,2,-14400,1,'-04'),(1314,3,-18000,0,'-05'),(1315,0,-13959,0,'LMT'),(1315,1,-14400,0,'-04'),(1315,2,-13500,0,'-0345'),(1315,3,-10800,0,'-03'),(1315,4,-14400,0,'-04'),(1316,0,-15264,0,'LMT'),(1316,1,-10800,1,'ADT'),(1316,2,-14400,0,'AST'),(1316,3,-10800,1,'AWT'),(1316,4,-10800,1,'APT'),(1317,0,-19768,0,'LMT'),(1317,1,-19776,0,'HMT'),(1317,2,-14400,1,'CDT'),(1317,3,-18000,0,'CST'),(1317,4,-18000,0,'CST'),(1317,5,-14400,1,'CDT'),(1318,0,-26632,0,'LMT'),(1318,1,-25200,0,'MST'),(1318,2,-21600,0,'CST'),(1318,3,-28800,0,'PST'),(1318,4,-21600,1,'MDT'),(1318,5,-25200,0,'MST'),(1319,0,-20678,0,'LMT'),(1319,1,-18000,1,'CDT'),(1319,2,-21600,0,'CST'),(1319,3,-18000,1,'CWT'),(1319,4,-18000,1,'CPT'),(1319,5,-18000,0,'EST'),(1319,6,-14400,1,'EDT'),(1320,0,-20790,0,'LMT'),(1320,1,-18000,1,'CDT'),(1320,2,-21600,0,'CST'),(1320,3,-18000,1,'CWT'),(1320,4,-18000,1,'CPT'),(1320,5,-18000,0,'EST'),(1320,6,-21600,0,'CST'),(1321,0,-20723,0,'LMT'),(1321,1,-18000,1,'CDT'),(1321,2,-21600,0,'CST'),(1321,3,-18000,1,'CWT'),(1321,4,-18000,1,'CPT'),(1321,5,-18000,0,'EST'),(1321,6,-14400,1,'EDT'),(1322,0,-20947,0,'LMT'),(1322,1,-18000,1,'CDT'),(1322,2,-21600,0,'CST'),(1322,3,-18000,1,'CWT'),(1322,4,-18000,1,'CPT'),(1322,5,-18000,0,'EST'),(1322,6,-14400,1,'EDT'),(1323,0,-20823,0,'LMT'),(1323,1,-18000,1,'CDT'),(1323,2,-21600,0,'CST'),(1323,3,-18000,1,'CWT'),(1323,4,-18000,1,'CPT'),(1323,5,-18000,0,'EST'),(1323,6,-14400,1,'EDT'),(1323,7,-18000,1,'CDT'),(1323,8,-21600,0,'CST'),(1324,0,-20416,0,'LMT'),(1324,1,-18000,1,'CDT'),(1324,2,-21600,0,'CST'),(1324,3,-18000,1,'CWT'),(1324,4,-18000,1,'CPT'),(1324,5,-18000,0,'EST'),(1324,6,-14400,1,'EDT'),(1325,0,-21007,0,'LMT'),(1325,1,-18000,1,'CDT'),(1325,2,-21600,0,'CST'),(1325,3,-18000,1,'CWT'),(1325,4,-18000,1,'CPT'),(1325,5,-18000,0,'EST'),(1325,6,-14400,1,'EDT'),(1326,0,-20785,0,'LMT'),(1326,1,-18000,1,'CDT'),(1326,2,-21600,0,'CST'),(1326,3,-18000,1,'CWT'),(1326,4,-18000,1,'CPT'),(1326,5,-18000,0,'EST'),(1326,6,-14400,1,'EDT'),(1327,0,-20678,0,'LMT'),(1327,1,-18000,1,'CDT'),(1327,2,-21600,0,'CST'),(1327,3,-18000,1,'CWT'),(1327,4,-18000,1,'CPT'),(1327,5,-18000,0,'EST'),(1327,6,-14400,1,'EDT'),(1328,0,0,0,'-00'),(1328,1,-21600,1,'PDDT'),(1328,2,-28800,0,'PST'),(1328,3,-25200,0,'MST'),(1328,4,-21600,1,'MDT'),(1329,0,0,0,'-00'),(1329,1,-14400,1,'EPT'),(1329,2,-18000,0,'EST'),(1329,3,-10800,1,'EDDT'),(1329,4,-14400,1,'EDT'),(1329,5,-14400,1,'EWT'),(1329,6,-21600,0,'CST'),(1329,7,-18000,1,'CDT'),(1329,8,-14400,1,'EDT'),(1329,9,-18000,0,'EST'),(1330,0,-18430,0,'LMT'),(1330,1,-18430,0,'KMT'),(1330,2,-18000,0,'EST'),(1330,3,-14400,1,'EDT'),(1331,0,-15672,0,'LMT'),(1331,1,-15408,0,'CMT'),(1331,2,-14400,0,'-04'),(1331,3,-10800,1,'-03'),(1331,4,-7200,1,'-02'),(1331,5,-10800,0,'-03'),(1332,0,54139,0,'LMT'),(1332,1,-28800,0,'PST'),(1332,2,-25200,1,'PWT'),(1332,3,-25200,1,'PPT'),(1332,4,-25200,1,'PDT'),(1332,5,-28800,1,'YDT'),(1332,6,-32400,0,'YST'),(1332,7,-28800,1,'AKDT'),(1332,8,-32400,0,'AKST'),(1333,0,-20582,0,'LMT'),(1333,1,-18000,1,'CDT'),(1333,2,-21600,0,'CST'),(1333,3,-18000,1,'CWT'),(1333,4,-18000,1,'CPT'),(1333,5,-18000,0,'EST'),(1333,6,-14400,1,'EDT'),(1334,0,-20364,0,'LMT'),(1334,1,-18000,1,'CDT'),(1334,2,-21600,0,'CST'),(1334,3,-18000,1,'CWT'),(1334,4,-18000,1,'CPT'),(1334,5,-14400,1,'EDT'),(1334,6,-18000,0,'EST'),(1335,0,-20790,0,'LMT'),(1335,1,-18000,1,'CDT'),(1335,2,-21600,0,'CST'),(1335,3,-18000,1,'CWT'),(1335,4,-18000,1,'CPT'),(1335,5,-18000,0,'EST'),(1335,6,-21600,0,'CST'),(1336,0,-15865,0,'LMT'),(1336,1,-14400,0,'AST'),(1336,2,-10800,1,'APT'),(1336,3,-10800,1,'AWT'),(1337,0,-16356,0,'LMT'),(1337,1,-16356,0,'CMT'),(1337,2,-12756,1,'BST'),(1337,3,-14400,0,'-04'),(1338,0,-18492,0,'LMT'),(1338,1,-18516,0,'LMT'),(1338,2,-14400,1,'-04'),(1338,3,-18000,0,'-05'),(1339,0,-28378,0,'LMT'),(1339,1,-25200,1,'PDT'),(1339,2,-28800,0,'PST'),(1339,3,-25200,1,'PWT'),(1339,4,-25200,1,'PPT'),(1340,0,-20582,0,'LMT'),(1340,1,-18000,1,'CDT'),(1340,2,-21600,0,'CST'),(1340,3,-18000,1,'CWT'),(1340,4,-18000,1,'CPT'),(1340,5,-18000,0,'EST'),(1340,6,-14400,1,'EDT'),(1341,0,-15865,0,'LMT'),(1341,1,-14400,0,'AST'),(1341,2,-10800,1,'APT'),(1341,3,-10800,1,'AWT'),(1342,0,-8572,0,'LMT'),(1342,1,-7200,1,'-02'),(1342,2,-10800,0,'-03'),(1343,0,-20708,0,'LMT'),(1343,1,-20712,0,'MMT'),(1343,2,-21600,0,'CST'),(1343,3,-18000,0,'EST'),(1343,4,-18000,1,'CDT'),(1343,5,-21600,0,'CST'),(1344,0,-14404,0,'LMT'),(1344,1,-10800,1,'-03'),(1344,2,-14400,0,'-04'),(1345,0,-15865,0,'LMT'),(1345,1,-14400,0,'AST'),(1345,2,-10800,1,'APT'),(1345,3,-10800,1,'AWT'),(1346,0,-14660,0,'LMT'),(1346,1,-14660,0,'FFMT'),(1346,2,-14400,0,'AST'),(1346,3,-10800,1,'ADT'),(1347,0,-24000,0,'LMT'),(1347,1,-21600,0,'CST'),(1347,2,-18000,1,'CDT'),(1348,0,-25540,0,'LMT'),(1348,1,-25200,0,'MST'),(1348,2,-21600,0,'CST'),(1348,3,-28800,0,'PST'),(1348,4,-21600,1,'MDT'),(1348,5,-25200,0,'MST'),(1349,0,-16516,0,'LMT'),(1349,1,-15408,0,'CMT'),(1349,2,-14400,0,'-04'),(1349,3,-10800,1,'-03'),(1349,4,-7200,1,'-02'),(1349,5,-10800,0,'-03'),(1350,0,-21027,0,'LMT'),(1350,1,-18000,1,'CDT'),(1350,2,-21600,0,'CST'),(1350,3,-18000,1,'CWT'),(1350,4,-18000,1,'CPT'),(1350,5,-18000,0,'EST'),(1350,6,-21600,0,'CST'),(1351,0,-21508,0,'LMT'),(1351,1,-21600,0,'CST'),(1351,2,-18000,0,'EST'),(1351,3,-18000,1,'CDT'),(1351,4,-21600,0,'CST'),(1352,0,54822,0,'LMT'),(1352,1,-28800,0,'PST'),(1352,2,-25200,1,'PWT'),(1352,3,-25200,1,'PPT'),(1352,4,-25200,1,'PDT'),(1352,5,-32400,0,'AKST'),(1352,6,-28800,1,'AKDT'),(1353,0,-23796,0,'LMT'),(1353,1,-25200,0,'MST'),(1353,2,-21600,0,'CST'),(1353,3,-18000,1,'CDT'),(1353,4,-18000,1,'CWT'),(1354,0,-13480,0,'LMT'),(1354,1,-14400,0,'AST'),(1354,2,-10800,0,'-03'),(1354,3,-7200,1,'-02'),(1355,0,-15548,0,'LMT'),(1355,1,-18000,0,'EST'),(1355,2,-10800,1,'ADT'),(1355,3,-14400,0,'AST'),(1355,4,-10800,1,'AWT'),(1355,5,-10800,1,'APT'),(1356,0,-24076,0,'LMT'),(1356,1,-21600,0,'CST'),(1356,2,-18000,1,'CDT'),(1357,0,-13491,0,'LMT'),(1357,1,-13491,0,'MMT'),(1357,2,-14400,0,'-04'),(1357,3,-12600,0,'-0330'),(1357,4,-10800,1,'-03'),(1357,5,-10800,0,'-03'),(1357,6,-9000,1,'-0230'),(1357,7,-7200,1,'-02'),(1357,8,-5400,1,'-0130'),(1357,9,-7200,1,'-02'),(1358,0,-19052,0,'LMT'),(1358,1,-14400,1,'EDT'),(1358,2,-18000,0,'EST'),(1358,3,-14400,1,'EWT'),(1358,4,-14400,1,'EPT'),(1359,0,-15865,0,'LMT'),(1359,1,-14400,0,'AST'),(1359,2,-10800,1,'APT'),(1359,3,-10800,1,'AWT'),(1360,0,-19052,0,'LMT'),(1360,1,-14400,1,'EDT'),(1360,2,-18000,0,'EST'),(1360,3,-14400,1,'EWT'),(1360,4,-14400,1,'EPT'),(1361,0,-17762,0,'LMT'),(1361,1,-14400,1,'EDT'),(1361,2,-18000,0,'EST'),(1361,3,-18000,0,'EST'),(1361,4,-14400,1,'EWT'),(1361,5,-14400,1,'EPT'),(1362,0,-21184,0,'LMT'),(1362,1,-14400,1,'EDT'),(1362,2,-18000,0,'EST'),(1362,3,-14400,1,'EWT'),(1362,4,-14400,1,'EPT'),(1363,0,46702,0,'LMT'),(1363,1,-39600,0,'NST'),(1363,2,-36000,1,'NWT'),(1363,3,-36000,1,'NPT'),(1363,4,-39600,0,'BST'),(1363,5,-36000,1,'BDT'),(1363,6,-32400,0,'YST'),(1363,7,-28800,1,'AKDT'),(1363,8,-32400,0,'AKST'),(1364,0,-7780,0,'LMT'),(1364,1,-3600,1,'-01'),(1364,2,-7200,0,'-02'),(1365,0,-24427,0,'LMT'),(1365,1,-21600,1,'MDT'),(1365,2,-25200,0,'MST'),(1365,3,-21600,1,'MWT'),(1365,4,-21600,1,'MPT'),(1365,5,-18000,1,'CDT'),(1365,6,-21600,0,'CST'),(1366,0,-24312,0,'LMT'),(1366,1,-21600,1,'MDT'),(1366,2,-25200,0,'MST'),(1366,3,-21600,1,'MWT'),(1366,4,-21600,1,'MPT'),(1366,5,-18000,1,'CDT'),(1366,6,-21600,0,'CST'),(1367,0,-24339,0,'LMT'),(1367,1,-21600,1,'MDT'),(1367,2,-25200,0,'MST'),(1367,3,-21600,1,'MWT'),(1367,4,-21600,1,'MPT'),(1367,5,-18000,1,'CDT'),(1367,6,-21600,0,'CST'),(1368,0,-12416,0,'LMT'),(1368,1,-10800,0,'-03'),(1368,2,-10800,0,'-03'),(1368,3,-7200,1,'-02'),(1368,4,-7200,1,'-02'),(1369,0,-25060,0,'LMT'),(1369,1,-25200,0,'MST'),(1369,2,-21600,0,'CST'),(1369,3,-18000,1,'CDT'),(1369,4,-21600,1,'MDT'),(1369,5,-25200,0,'MST'),(1370,0,-19088,0,'LMT'),(1370,1,-19176,0,'CMT'),(1370,2,-18000,0,'EST'),(1371,0,0,0,'-00'),(1371,1,-10800,1,'AWT'),(1371,2,-10800,1,'APT'),(1371,3,-14400,0,'AST'),(1371,4,-7200,1,'ADDT'),(1371,5,-10800,1,'ADT'),(1371,6,-14400,1,'EDT'),(1371,7,-18000,0,'EST'),(1371,8,-21600,0,'CST'),(1371,9,-18000,1,'CDT'),(1371,10,-14400,1,'EDT'),(1371,11,-18000,0,'EST'),(1372,0,-13240,0,'LMT'),(1372,1,-13252,0,'PMT'),(1372,2,-13236,0,'PMT'),(1372,3,-12600,0,'-0330'),(1372,4,-10800,0,'-03'),(1373,0,-26898,0,'LMT'),(1373,1,-21600,1,'MDT'),(1373,2,-25200,0,'MST'),(1373,3,-21600,1,'MWT'),(1374,0,-17360,0,'LMT'),(1374,1,-17340,0,'PPMT'),(1374,2,-14400,1,'EDT'),(1374,3,-18000,0,'EST'),(1374,4,-14400,1,'EDT'),(1374,5,-18000,0,'EST'),(1375,0,-15865,0,'LMT'),(1375,1,-14400,0,'AST'),(1375,2,-10800,1,'APT'),(1375,3,-10800,1,'AWT'),(1376,0,-16272,0,'LMT'),(1376,1,-14400,1,'-04'),(1376,2,-18000,0,'-05'),(1376,3,-14400,0,'-04'),(1376,4,-18000,0,'-05'),(1377,0,-15336,0,'LMT'),(1377,1,-10800,1,'-03'),(1377,2,-14400,0,'-04'),(1378,0,-15865,0,'LMT'),(1378,1,-14400,0,'AST'),(1378,2,-10800,1,'APT'),(1378,3,-10800,1,'AWT'),(1379,0,-17020,0,'LMT'),(1379,1,-16965,0,'SMT'),(1379,2,-18000,0,'-05'),(1379,3,-14400,0,'-04'),(1379,4,-14400,1,'-04'),(1379,5,-10800,1,'-03'),(1379,6,-14400,0,'-04'),(1379,7,-10800,0,'-03'),(1380,0,-22696,0,'LMT'),(1380,1,-18000,1,'CDT'),(1380,2,-21600,0,'CST'),(1380,3,-18000,1,'CWT'),(1380,4,-18000,1,'CPT'),(1381,0,0,0,'-00'),(1381,1,-14400,1,'CDDT'),(1381,2,-21600,0,'CST'),(1381,3,-18000,1,'CDT'),(1381,4,-18000,0,'EST'),(1381,5,-21600,0,'CST'),(1382,0,-8376,0,'LMT'),(1382,1,-7200,1,'-02'),(1382,2,-10800,0,'-03'),(1383,0,-25116,0,'LMT'),(1383,1,-21600,1,'MDT'),(1383,2,-25200,0,'MST'),(1383,3,-21600,1,'MWT'),(1383,4,-21600,1,'MPT'),(1383,5,-21600,0,'CST'),(1384,0,0,0,'-00'),(1384,1,-14400,1,'CDDT'),(1384,2,-21600,0,'CST'),(1384,3,-18000,1,'CDT'),(1384,4,-18000,0,'EST'),(1384,5,-21600,0,'CST'),(1385,0,-16272,0,'LMT'),(1385,1,-14400,1,'-04'),(1385,2,-18000,0,'-05'),(1385,3,-14400,0,'-04'),(1385,4,-18000,0,'-05'),(1386,0,-15408,0,'LMT'),(1386,1,-15408,0,'CMT'),(1386,2,-14400,0,'-04'),(1386,3,-10800,1,'-03'),(1386,4,-7200,1,'-02'),(1386,5,-10800,0,'-03'),(1387,0,-28084,0,'LMT'),(1387,1,-25200,0,'MST'),(1387,2,-28800,0,'PST'),(1387,3,-25200,1,'PDT'),(1387,4,-25200,1,'PWT'),(1387,5,-25200,1,'PPT'),(1388,0,-13128,0,'LMT'),(1388,1,-10800,1,'-03'),(1388,2,-14400,0,'-04'),(1388,3,-10800,0,'-03'),(1389,0,-16965,0,'LMT'),(1389,1,-16965,0,'SMT'),(1389,2,-18000,0,'-05'),(1389,3,-14400,0,'-04'),(1389,4,-14400,1,'-04'),(1389,5,-10800,1,'-03'),(1389,6,-10800,1,'-03'),(1389,7,-14400,0,'-04'),(1390,0,-16776,0,'LMT'),(1390,1,-16800,0,'SDMT'),(1390,2,-14400,1,'EDT'),(1390,3,-18000,0,'EST'),(1390,4,-16200,1,'-0430'),(1390,5,-14400,0,'AST'),(1391,0,-11188,0,'LMT'),(1391,1,-7200,1,'-02'),(1391,2,-10800,0,'-03'),(1392,0,-5272,0,'LMT'),(1392,1,-7200,0,'-02'),(1392,2,-3600,1,'-01'),(1392,3,-7200,0,'-02'),(1392,4,-3600,0,'-01'),(1392,5,0,1,'+00'),(1392,6,0,1,'+00'),(1393,0,-25196,0,'LMT'),(1393,1,-21600,1,'MDT'),(1393,2,-25200,0,'MST'),(1393,3,-21600,1,'MWT'),(1393,4,-21600,1,'MPT'),(1394,0,53927,0,'LMT'),(1394,1,-28800,0,'PST'),(1394,2,-25200,1,'PWT'),(1394,3,-25200,1,'PPT'),(1394,4,-25200,1,'PDT'),(1394,5,-32400,0,'YST'),(1394,6,-28800,1,'AKDT'),(1394,7,-32400,0,'AKST'),(1395,0,-15865,0,'LMT'),(1395,1,-14400,0,'AST'),(1395,2,-10800,1,'APT'),(1395,3,-10800,1,'AWT'),(1396,0,-12652,0,'LMT'),(1396,1,-9052,1,'NDT'),(1396,2,-12652,0,'NST'),(1396,3,-9000,1,'NDT'),(1396,4,-12600,0,'NST'),(1396,5,-9000,1,'NPT'),(1396,6,-9000,1,'NWT'),(1396,7,-5400,1,'NDDT'),(1396,8,-9000,1,'NDT'),(1397,0,-15865,0,'LMT'),(1397,1,-14400,0,'AST'),(1397,2,-10800,1,'APT'),(1397,3,-10800,1,'AWT'),(1398,0,-15865,0,'LMT'),(1398,1,-14400,0,'AST'),(1398,2,-10800,1,'APT'),(1398,3,-10800,1,'AWT'),(1399,0,-15865,0,'LMT'),(1399,1,-14400,0,'AST'),(1399,2,-10800,1,'APT'),(1399,3,-10800,1,'AWT'),(1400,0,-15865,0,'LMT'),(1400,1,-14400,0,'AST'),(1400,2,-10800,1,'APT'),(1400,3,-10800,1,'AWT'),(1401,0,-25880,0,'LMT'),(1401,1,-21600,1,'MDT'),(1401,2,-25200,0,'MST'),(1401,3,-21600,1,'MWT'),(1401,4,-21600,1,'MPT'),(1401,5,-21600,0,'CST'),(1402,0,-20932,0,'LMT'),(1402,1,-18000,1,'CDT'),(1402,2,-21600,0,'CST'),(1403,0,-16508,0,'LMT'),(1403,1,-10800,1,'ADT'),(1403,2,-14400,0,'AST'),(1404,0,-21420,0,'LMT'),(1404,1,-21600,0,'CST'),(1404,2,-18000,0,'EST'),(1404,3,-14400,1,'EWT'),(1404,4,-14400,1,'EPT'),(1404,5,-14400,1,'EDT'),(1405,0,-28084,0,'LMT'),(1405,1,-25200,0,'MST'),(1405,2,-28800,0,'PST'),(1405,3,-25200,1,'PDT'),(1405,4,-25200,1,'PWT'),(1405,5,-25200,1,'PPT'),(1406,0,-19052,0,'LMT'),(1406,1,-14400,1,'EDT'),(1406,2,-18000,0,'EST'),(1406,3,-14400,1,'EWT'),(1406,4,-14400,1,'EPT'),(1407,0,-15865,0,'LMT'),(1407,1,-14400,0,'AST'),(1407,2,-10800,1,'APT'),(1407,3,-10800,1,'AWT'),(1408,0,-29548,0,'LMT'),(1408,1,-25200,1,'PDT'),(1408,2,-28800,0,'PST'),(1408,3,-25200,1,'PWT'),(1408,4,-25200,1,'PPT'),(1409,0,-15865,0,'LMT'),(1409,1,-14400,0,'AST'),(1409,2,-10800,1,'APT'),(1409,3,-10800,1,'AWT'),(1410,0,-32412,0,'LMT'),(1410,1,-28800,1,'YDT'),(1410,2,-32400,0,'YST'),(1410,3,-28800,1,'YWT'),(1410,4,-28800,1,'YPT'),(1410,5,-25200,1,'YDDT'),(1410,6,-28800,0,'PST'),(1410,7,-25200,1,'PDT'),(1410,8,-25200,0,'MST'),(1411,0,-23316,0,'LMT'),(1411,1,-18000,1,'CDT'),(1411,2,-21600,0,'CST'),(1411,3,-18000,1,'CWT'),(1411,4,-18000,1,'CPT'),(1411,5,-18000,1,'CDT'),(1411,6,-21600,0,'CST'),(1412,0,52865,0,'LMT'),(1412,1,-32400,0,'YST'),(1412,2,-28800,1,'YWT'),(1412,3,-28800,1,'YPT'),(1412,4,-28800,1,'YDT'),(1412,5,-28800,1,'AKDT'),(1412,6,-32400,0,'AKST'),(1413,0,0,0,'-00'),(1413,1,-21600,1,'MWT'),(1413,2,-21600,1,'MPT'),(1413,3,-25200,0,'MST'),(1413,4,-18000,1,'MDDT'),(1413,5,-21600,1,'MDT'),(1414,0,0,0,'-00'),(1414,1,28800,0,'+08'),(1414,2,39600,0,'+11'),(1414,3,28800,0,'+08'),(1414,4,39600,0,'+11'),(1415,0,0,0,'-00'),(1415,1,25200,0,'+07'),(1415,2,18000,0,'+05'),(1415,3,25200,0,'+07'),(1416,0,35320,0,'LMT'),(1416,1,36000,0,'+10'),(1417,0,0,0,'-00'),(1417,1,36000,0,'AEST'),(1417,2,39600,1,'AEDT'),(1417,3,36000,0,'AEST'),(1417,4,0,0,'-00'),(1417,5,39600,1,'AEDT'),(1417,6,36000,0,'AEST'),(1418,0,0,0,'-00'),(1418,1,21600,0,'+06'),(1418,2,18000,0,'+05'),(1419,0,41944,0,'LMT'),(1419,1,45000,1,'NZST'),(1419,2,41400,0,'NZMT'),(1419,3,43200,1,'NZST'),(1419,4,46800,1,'NZDT'),(1419,5,43200,0,'NZST'),(1419,6,43200,0,'NZST'),(1420,0,0,0,'-00'),(1420,1,-14400,0,'-04'),(1420,2,-10800,1,'-03'),(1420,3,-7200,1,'-02'),(1420,4,-10800,0,'-03'),(1420,5,-10800,1,'-03'),(1420,6,-14400,0,'-04'),(1420,7,-10800,0,'-03'),(1421,0,0,0,'-00'),(1421,1,-10800,0,'-03'),(1422,0,41944,0,'LMT'),(1422,1,45000,1,'NZST'),(1422,2,41400,0,'NZMT'),(1422,3,43200,1,'NZST'),(1422,4,46800,1,'NZDT'),(1422,5,43200,0,'NZST'),(1422,6,43200,0,'NZST'),(1423,0,11212,0,'LMT'),(1423,1,10800,0,'+03'),(1424,0,0,0,'-00'),(1424,1,7200,1,'+02'),(1424,2,0,0,'+00'),(1424,3,0,0,'+00'),(1425,0,21020,0,'LMT'),(1425,1,21600,0,'+06'),(1426,0,3208,0,'LMT'),(1426,1,7200,1,'CEST'),(1426,2,3600,0,'CET'),(1426,3,7200,1,'CEST'),(1426,4,3600,0,'CET'),(1426,5,10800,1,'CEMT'),(1426,6,10800,1,'CEMT'),(1426,7,7200,1,'CEST'),(1426,8,3600,0,'CET'),(1427,0,11212,0,'LMT'),(1427,1,10800,0,'+03'),(1428,0,18468,0,'LMT'),(1428,1,18000,0,'+05'),(1428,2,25200,1,'+07'),(1428,3,21600,0,'+06'),(1428,4,21600,0,'+06'),(1428,5,25200,1,'+07'),(1428,6,21600,1,'+06'),(1428,7,18000,0,'+05'),(1428,8,25200,1,'+07'),(1428,9,21600,0,'+06'),(1429,0,8624,0,'LMT'),(1429,1,10800,1,'EEST'),(1429,2,7200,0,'EET'),(1429,3,7200,0,'EET'),(1429,4,10800,1,'EEST'),(1430,0,42596,0,'LMT'),(1430,1,43200,0,'+12'),(1430,2,50400,1,'+14'),(1430,3,46800,0,'+13'),(1430,4,46800,1,'+13'),(1430,5,43200,0,'+12'),(1430,6,46800,1,'+13'),(1430,7,43200,1,'+12'),(1430,8,39600,0,'+11'),(1430,9,43200,0,'+12'),(1431,0,12064,0,'LMT'),(1431,1,14400,0,'+04'),(1431,2,18000,0,'+05'),(1431,3,21600,0,'+06'),(1431,4,21600,1,'+06'),(1431,5,18000,0,'+05'),(1431,6,21600,1,'+06'),(1431,7,18000,1,'+05'),(1431,8,14400,0,'+04'),(1431,9,18000,0,'+05'),(1432,0,13720,0,'LMT'),(1432,1,14400,0,'+04'),(1432,2,18000,0,'+05'),(1432,3,21600,1,'+06'),(1432,4,21600,0,'+06'),(1432,5,18000,0,'+05'),(1432,6,21600,1,'+06'),(1432,7,18000,1,'+05'),(1432,8,14400,0,'+04'),(1432,9,21600,1,'+06'),(1432,10,18000,0,'+05'),(1433,0,14012,0,'LMT'),(1433,1,14400,0,'+04'),(1433,2,21600,1,'+06'),(1433,3,18000,0,'+05'),(1433,4,18000,0,'+05'),(1433,5,21600,1,'+06'),(1433,6,18000,1,'+05'),(1433,7,14400,0,'+04'),(1433,8,18000,0,'+05'),(1434,0,14012,0,'LMT'),(1434,1,14400,0,'+04'),(1434,2,21600,1,'+06'),(1434,3,18000,0,'+05'),(1434,4,18000,0,'+05'),(1434,5,21600,1,'+06'),(1434,6,18000,1,'+05'),(1434,7,14400,0,'+04'),(1434,8,18000,0,'+05'),(1435,0,12464,0,'LMT'),(1435,1,10800,0,'+03'),(1435,2,18000,0,'+05'),(1435,3,21600,0,'+06'),(1435,4,21600,1,'+06'),(1435,5,18000,0,'+05'),(1435,6,21600,1,'+06'),(1435,7,18000,1,'+05'),(1435,8,14400,0,'+04'),(1435,9,18000,0,'+05'),(1436,0,10660,0,'LMT'),(1436,1,10656,0,'BMT'),(1436,2,10800,0,'+03'),(1436,3,14400,1,'+04'),(1436,4,10800,0,'+03'),(1436,5,14400,1,'+04'),(1437,0,12368,0,'LMT'),(1437,1,14400,0,'+04'),(1437,2,10800,0,'+03'),(1438,0,11964,0,'LMT'),(1438,1,10800,0,'+03'),(1438,2,18000,1,'+05'),(1438,3,14400,0,'+04'),(1438,4,14400,0,'+04'),(1438,5,18000,1,'+05'),(1438,6,14400,1,'+04'),(1438,7,10800,0,'+03'),(1438,8,18000,1,'+05'),(1438,9,14400,0,'+04'),(1439,0,24124,0,'LMT'),(1439,1,24124,0,'BMT'),(1439,2,25200,0,'+07'),(1440,0,20100,0,'LMT'),(1440,1,21600,0,'+06'),(1440,2,28800,1,'+08'),(1440,3,25200,0,'+07'),(1440,4,25200,0,'+07'),(1440,5,28800,1,'+08'),(1440,6,25200,1,'+07'),(1440,7,21600,0,'+06'),(1440,8,25200,1,'+07'),(1440,9,25200,0,'+07'),(1441,0,8520,0,'LMT'),(1441,1,10800,1,'EEST'),(1441,2,7200,0,'EET'),(1442,0,17904,0,'LMT'),(1442,1,18000,0,'+05'),(1442,2,25200,1,'+07'),(1442,3,21600,0,'+06'),(1442,4,21600,0,'+06'),(1442,5,25200,1,'+07'),(1442,6,21600,1,'+06'),(1442,7,21600,1,'+06'),(1443,0,26480,0,'LMT'),(1443,1,27000,0,'+0730'),(1443,2,30000,1,'+0820'),(1443,3,28800,0,'+08'),(1443,4,32400,0,'+09'),(1443,5,28800,0,'+08'),(1444,0,21208,0,'LMT'),(1444,1,19270,0,'MMT'),(1444,2,19800,0,'IST'),(1444,3,23400,1,'+0630'),(1445,0,27232,0,'LMT'),(1445,1,28800,0,'+08'),(1445,2,36000,1,'+10'),(1445,3,32400,0,'+09'),(1445,4,32400,0,'+09'),(1445,5,36000,1,'+10'),(1445,6,32400,1,'+09'),(1445,7,28800,0,'+08'),(1445,8,36000,0,'+10'),(1445,9,36000,1,'+10'),(1445,10,32400,0,'+09'),(1446,0,27480,0,'LMT'),(1446,1,25200,0,'+07'),(1446,2,28800,0,'+08'),(1446,3,32400,0,'+09'),(1446,4,36000,1,'+10'),(1446,5,32400,1,'+09'),(1446,6,28800,0,'+08'),(1447,0,29143,0,'LMT'),(1447,1,32400,1,'CDT'),(1447,2,28800,0,'CST'),(1448,0,29143,0,'LMT'),(1448,1,32400,1,'CDT'),(1448,2,28800,0,'CST'),(1449,0,19164,0,'LMT'),(1449,1,19172,0,'MMT'),(1449,2,19800,0,'+0530'),(1449,3,21600,1,'+06'),(1449,4,23400,1,'+0630'),(1449,5,23400,0,'+0630'),(1449,6,21600,0,'+06'),(1449,7,19800,0,'+0530'),(1450,0,21700,0,'LMT'),(1450,1,21200,0,'HMT'),(1450,2,23400,0,'+0630'),(1450,3,19800,0,'+0530'),(1450,4,21600,0,'+06'),(1450,5,25200,1,'+07'),(1451,0,8712,0,'LMT'),(1451,1,10800,1,'EEST'),(1451,2,7200,0,'EET'),(1452,0,21700,0,'LMT'),(1452,1,21200,0,'HMT'),(1452,2,23400,0,'+0630'),(1452,3,19800,0,'+0530'),(1452,4,21600,0,'+06'),(1452,5,25200,1,'+07'),(1453,0,30140,0,'LMT'),(1453,1,28800,0,'+08'),(1453,2,32400,0,'+09'),(1454,0,13272,0,'LMT'),(1454,1,14400,0,'+04'),(1455,0,16512,0,'LMT'),(1455,1,18000,0,'+05'),(1455,2,25200,1,'+07'),(1455,3,21600,0,'+06'),(1455,4,21600,0,'+06'),(1455,5,25200,1,'+07'),(1455,6,21600,1,'+06'),(1455,7,18000,0,'+05'),(1456,0,8148,0,'LMT'),(1456,1,10800,1,'EEST'),(1456,2,7200,0,'EET'),(1456,3,7200,0,'EET'),(1456,4,10800,1,'EEST'),(1456,5,10800,0,'+03'),(1456,6,7200,0,'EET'),(1457,0,8272,0,'LMT'),(1457,1,10800,1,'EEST'),(1457,2,7200,0,'EET'),(1457,3,7200,0,'EET'),(1457,4,10800,1,'EEST'),(1457,5,10800,1,'IDT'),(1457,6,7200,0,'IST'),(1457,7,10800,1,'IDT'),(1457,8,7200,0,'IST'),(1457,9,7200,0,'EET'),(1458,0,29143,0,'LMT'),(1458,1,32400,1,'CDT'),(1458,2,28800,0,'CST'),(1459,0,8423,0,'LMT'),(1459,1,10800,1,'EEST'),(1459,2,7200,0,'EET'),(1459,3,7200,0,'EET'),(1459,4,10800,1,'EEST'),(1459,5,10800,1,'IDT'),(1459,6,7200,0,'IST'),(1459,7,10800,1,'IDT'),(1459,8,7200,0,'IST'),(1459,9,7200,0,'EET'),(1460,0,25590,0,'LMT'),(1460,1,25590,0,'PLMT'),(1460,2,25200,0,'+07'),(1460,3,28800,0,'+08'),(1460,4,32400,0,'+09'),(1460,5,25200,0,'+07'),(1461,0,27402,0,'LMT'),(1461,1,28800,0,'HKT'),(1461,2,32400,1,'HKST'),(1461,3,30600,1,'HKWT'),(1461,4,32400,0,'JST'),(1461,5,28800,0,'HKT'),(1461,6,32400,1,'HKST'),(1461,7,28800,0,'HKT'),(1462,0,21996,0,'LMT'),(1462,1,21600,0,'+06'),(1462,2,28800,1,'+08'),(1462,3,25200,0,'+07'),(1463,0,25025,0,'LMT'),(1463,1,25025,0,'IMT'),(1463,2,25200,0,'+07'),(1463,3,32400,1,'+09'),(1463,4,28800,0,'+08'),(1463,5,28800,0,'+08'),(1463,6,32400,1,'+09'),(1463,7,28800,1,'+08'),(1463,8,25200,0,'+07'),(1463,9,32400,0,'+09'),(1463,10,32400,1,'+09'),(1463,11,28800,0,'+08'),(1464,0,6952,0,'LMT'),(1464,1,7016,0,'IMT'),(1464,2,10800,1,'EEST'),(1464,3,7200,0,'EET'),(1464,4,10800,0,'+03'),(1464,5,14400,1,'+04'),(1464,6,10800,1,'EEST'),(1464,7,7200,0,'EET'),(1464,8,10800,1,'EEST'),(1464,9,7200,0,'EET'),(1464,10,10800,0,'+03'),(1465,0,25632,0,'LMT'),(1465,1,25632,0,'BMT'),(1465,2,26400,0,'+0720'),(1465,3,27000,0,'+0730'),(1465,4,32400,0,'+09'),(1465,5,28800,0,'+08'),(1465,6,25200,0,'WIB'),(1466,0,33768,0,'LMT'),(1466,1,32400,0,'+09'),(1466,2,34200,0,'+0930'),(1466,3,32400,0,'WIT'),(1467,0,8454,0,'LMT'),(1467,1,8440,0,'JMT'),(1467,2,10800,1,'IDT'),(1467,3,7200,0,'IST'),(1467,4,14400,1,'IDDT'),(1467,5,10800,1,'IDT'),(1467,6,7200,0,'IST'),(1467,7,10800,1,'IDT'),(1467,8,7200,0,'IST'),(1468,0,16608,0,'LMT'),(1468,1,14400,0,'+04'),(1468,2,16200,0,'+0430'),(1469,0,38076,0,'LMT'),(1469,1,39600,0,'+11'),(1469,2,46800,1,'+13'),(1469,3,43200,0,'+12'),(1469,4,43200,0,'+12'),(1469,5,46800,1,'+13'),(1469,6,43200,1,'+12'),(1469,7,39600,0,'+11'),(1469,8,43200,0,'+12'),(1470,0,16092,0,'LMT'),(1470,1,19800,0,'+0530'),(1470,2,23400,1,'+0630'),(1470,3,18000,0,'+05'),(1470,4,21600,1,'PKST'),(1470,5,18000,0,'PKT'),(1471,0,21020,0,'LMT'),(1471,1,21600,0,'+06'),(1472,0,20476,0,'LMT'),(1472,1,19800,0,'+0530'),(1472,2,20700,0,'+0545'),(1473,0,20476,0,'LMT'),(1473,1,19800,0,'+0530'),(1473,2,20700,0,'+0545'),(1474,0,32533,0,'LMT'),(1474,1,28800,0,'+08'),(1474,2,36000,1,'+10'),(1474,3,32400,0,'+09'),(1474,4,32400,0,'+09'),(1474,5,36000,1,'+10'),(1474,6,32400,1,'+09'),(1474,7,28800,0,'+08'),(1474,8,39600,1,'+11'),(1474,9,36000,0,'+10'),(1474,10,36000,0,'+10'),(1474,11,39600,0,'+11'),(1474,12,32400,0,'+09'),(1475,0,21208,0,'LMT'),(1475,1,19270,0,'MMT'),(1475,2,19800,0,'IST'),(1475,3,23400,1,'+0630'),(1476,0,22286,0,'LMT'),(1476,1,21600,0,'+06'),(1476,2,28800,1,'+08'),(1476,3,25200,0,'+07'),(1476,4,25200,0,'+07'),(1476,5,28800,1,'+08'),(1476,6,25200,1,'+07'),(1476,7,21600,0,'+06'),(1476,8,28800,0,'+08'),(1476,9,28800,1,'+08'),(1476,10,25200,0,'+07'),(1477,0,24925,0,'LMT'),(1477,1,24925,0,'SMT'),(1477,2,25200,0,'+07'),(1477,3,26400,1,'+0720'),(1477,4,26400,0,'+0720'),(1477,5,27000,0,'+0730'),(1477,6,32400,0,'+09'),(1477,7,28800,0,'+08'),(1478,0,26480,0,'LMT'),(1478,1,27000,0,'+0730'),(1478,2,30000,1,'+0820'),(1478,3,28800,0,'+08'),(1478,4,32400,0,'+09'),(1478,5,28800,0,'+08'),(1479,0,11212,0,'LMT'),(1479,1,10800,0,'+03'),(1480,0,27250,0,'LMT'),(1480,1,28800,0,'CST'),(1480,2,36000,1,'+10'),(1480,3,32400,0,'+09'),(1480,4,32400,1,'CDT'),(1480,5,28800,0,'CST'),(1480,6,32400,1,'CDT'),(1481,0,27250,0,'LMT'),(1481,1,28800,0,'CST'),(1481,2,36000,1,'+10'),(1481,3,32400,0,'+09'),(1481,4,32400,1,'CDT'),(1481,5,28800,0,'CST'),(1481,6,32400,1,'CDT'),(1482,0,36192,0,'LMT'),(1482,1,36000,0,'+10'),(1482,2,43200,1,'+12'),(1482,3,39600,0,'+11'),(1482,4,39600,0,'+11'),(1482,5,43200,1,'+12'),(1482,6,39600,1,'+11'),(1482,7,36000,0,'+10'),(1482,8,43200,0,'+12'),(1482,9,43200,1,'+12'),(1482,10,39600,0,'+11'),(1483,0,28656,0,'LMT'),(1483,1,28656,0,'MMT'),(1483,2,28800,0,'+08'),(1483,3,32400,0,'+09'),(1483,4,28800,0,'WITA'),(1484,0,-57360,0,'LMT'),(1484,1,32400,1,'PDT'),(1484,2,28800,0,'PST'),(1484,3,32400,0,'JST'),(1484,4,28800,0,'PST'),(1485,0,13272,0,'LMT'),(1485,1,14400,0,'+04'),(1486,0,8008,0,'LMT'),(1486,1,10800,1,'EEST'),(1486,2,7200,0,'EET'),(1486,3,7200,0,'EET'),(1486,4,10800,1,'EEST'),(1487,0,20928,0,'LMT'),(1487,1,21600,0,'+06'),(1487,2,28800,1,'+08'),(1487,3,25200,0,'+07'),(1487,4,25200,0,'+07'),(1487,5,28800,1,'+08'),(1487,6,25200,1,'+07'),(1487,7,21600,0,'+06'),(1487,8,25200,0,'+07'),(1488,0,19900,0,'LMT'),(1488,1,21600,0,'+06'),(1488,2,28800,1,'+08'),(1488,3,25200,0,'+07'),(1488,4,25200,0,'+07'),(1488,5,28800,1,'+08'),(1488,6,25200,1,'+07'),(1488,7,21600,0,'+06'),(1488,8,25200,1,'+07'),(1488,9,25200,0,'+07'),(1489,0,17610,0,'LMT'),(1489,1,18000,0,'+05'),(1489,2,25200,1,'+07'),(1489,3,21600,0,'+06'),(1489,4,21600,0,'+06'),(1489,5,25200,1,'+07'),(1489,6,21600,1,'+06'),(1489,7,18000,0,'+05'),(1489,8,25200,0,'+07'),(1489,9,25200,1,'+07'),(1489,10,21600,0,'+06'),(1490,0,12324,0,'LMT'),(1490,1,10800,0,'+03'),(1490,2,18000,0,'+05'),(1490,3,21600,1,'+06'),(1490,4,21600,0,'+06'),(1490,5,18000,0,'+05'),(1490,6,21600,1,'+06'),(1490,7,18000,1,'+05'),(1490,8,14400,0,'+04'),(1490,9,18000,0,'+05'),(1491,0,24124,0,'LMT'),(1491,1,24124,0,'BMT'),(1491,2,25200,0,'+07'),(1492,0,26240,0,'LMT'),(1492,1,26240,0,'PMT'),(1492,2,27000,0,'+0730'),(1492,3,32400,0,'+09'),(1492,4,28800,0,'+08'),(1492,5,28800,0,'WITA'),(1492,6,25200,0,'WIB'),(1493,0,30180,0,'LMT'),(1493,1,30600,0,'KST'),(1493,2,32400,0,'JST'),(1493,3,32400,0,'KST'),(1494,0,12368,0,'LMT'),(1494,1,14400,0,'+04'),(1494,2,10800,0,'+03'),(1495,0,15268,0,'LMT'),(1495,1,14400,0,'+04'),(1495,2,18000,0,'+05'),(1495,3,21600,1,'+06'),(1495,4,21600,0,'+06'),(1495,5,18000,0,'+05'),(1495,6,21600,1,'+06'),(1495,7,18000,1,'+05'),(1495,8,14400,0,'+04'),(1495,9,21600,0,'+06'),(1495,10,21600,1,'+06'),(1496,0,15712,0,'LMT'),(1496,1,14400,0,'+04'),(1496,2,18000,0,'+05'),(1496,3,21600,1,'+06'),(1496,4,21600,0,'+06'),(1496,5,18000,0,'+05'),(1496,6,21600,1,'+06'),(1496,7,18000,1,'+05'),(1496,8,21600,0,'+06'),(1496,9,21600,1,'+06'),(1496,10,18000,0,'+05'),(1497,0,23087,0,'LMT'),(1497,1,23087,0,'RMT'),(1497,2,23400,0,'+0630'),(1497,3,32400,0,'+09'),(1497,4,23400,0,'+0630'),(1498,0,11212,0,'LMT'),(1498,1,10800,0,'+03'),(1499,0,25590,0,'LMT'),(1499,1,25590,0,'PLMT'),(1499,2,25200,0,'+07'),(1499,3,28800,0,'+08'),(1499,4,32400,0,'+09'),(1499,5,25200,0,'+07'),(1500,0,34248,0,'LMT'),(1500,1,32400,0,'+09'),(1500,2,43200,1,'+12'),(1500,3,39600,0,'+11'),(1500,4,39600,0,'+11'),(1500,5,43200,1,'+12'),(1500,6,39600,1,'+11'),(1500,7,36000,0,'+10'),(1500,8,39600,0,'+11'),(1501,0,16073,0,'LMT'),(1501,1,14400,0,'+04'),(1501,2,18000,0,'+05'),(1501,3,21600,1,'+06'),(1501,4,21600,0,'+06'),(1501,5,18000,0,'+05'),(1501,6,21600,1,'+06'),(1502,0,30472,0,'LMT'),(1502,1,30600,0,'KST'),(1502,2,32400,0,'JST'),(1502,3,36000,1,'KDT'),(1502,4,32400,0,'KST'),(1502,5,34200,1,'KDT'),(1502,6,36000,1,'KDT'),(1503,0,29143,0,'LMT'),(1503,1,32400,1,'CDT'),(1503,2,28800,0,'CST'),(1504,0,24925,0,'LMT'),(1504,1,24925,0,'SMT'),(1504,2,25200,0,'+07'),(1504,3,26400,1,'+0720'),(1504,4,26400,0,'+0720'),(1504,5,27000,0,'+0730'),(1504,6,32400,0,'+09'),(1504,7,28800,0,'+08'),(1505,0,36892,0,'LMT'),(1505,1,36000,0,'+10'),(1505,2,43200,1,'+12'),(1505,3,39600,0,'+11'),(1505,4,39600,0,'+11'),(1505,5,43200,1,'+12'),(1505,6,39600,1,'+11'),(1505,7,36000,0,'+10'),(1505,8,43200,0,'+12'),(1505,9,43200,1,'+12'),(1505,10,39600,0,'+11'),(1506,0,29160,0,'LMT'),(1506,1,28800,0,'CST'),(1506,2,32400,0,'JST'),(1506,3,32400,1,'CDT'),(1506,4,28800,0,'CST'),(1507,0,16631,0,'LMT'),(1507,1,18000,0,'+05'),(1507,2,25200,1,'+07'),(1507,3,21600,0,'+06'),(1507,4,21600,0,'+06'),(1507,5,25200,1,'+07'),(1507,6,21600,1,'+06'),(1507,7,18000,0,'+05'),(1508,0,10751,0,'LMT'),(1508,1,10751,0,'TBMT'),(1508,2,10800,0,'+03'),(1508,3,18000,1,'+05'),(1508,4,14400,0,'+04'),(1508,5,14400,0,'+04'),(1508,6,18000,1,'+05'),(1508,7,14400,1,'+04'),(1508,8,10800,0,'+03'),(1508,9,14400,1,'+04'),(1508,10,14400,0,'+04'),(1509,0,12344,0,'LMT'),(1509,1,12344,0,'TMT'),(1509,2,16200,1,'+0430'),(1509,3,12600,0,'+0330'),(1509,4,18000,1,'+05'),(1509,5,14400,0,'+04'),(1509,6,16200,1,'+0430'),(1509,7,12600,0,'+0330'),(1510,0,8454,0,'LMT'),(1510,1,8440,0,'JMT'),(1510,2,10800,1,'IDT'),(1510,3,7200,0,'IST'),(1510,4,14400,1,'IDDT'),(1510,5,10800,1,'IDT'),(1510,6,7200,0,'IST'),(1510,7,10800,1,'IDT'),(1510,8,7200,0,'IST'),(1511,0,21516,0,'LMT'),(1511,1,19800,0,'+0530'),(1511,2,21600,0,'+06'),(1512,0,21516,0,'LMT'),(1512,1,19800,0,'+0530'),(1512,2,21600,0,'+06'),(1513,0,33539,0,'LMT'),(1513,1,36000,1,'JDT'),(1513,2,32400,0,'JST'),(1513,3,32400,0,'JST'),(1514,0,20391,0,'LMT'),(1514,1,21600,0,'+06'),(1514,2,28800,1,'+08'),(1514,3,25200,0,'+07'),(1514,4,25200,0,'+07'),(1514,5,28800,1,'+08'),(1514,6,25200,1,'+07'),(1514,7,21600,0,'+06'),(1514,8,25200,1,'+07'),(1514,9,25200,0,'+07'),(1515,0,28656,0,'LMT'),(1515,1,28656,0,'MMT'),(1515,2,28800,0,'+08'),(1515,3,32400,0,'+09'),(1515,4,28800,0,'WITA'),(1516,0,25652,0,'LMT'),(1516,1,25200,0,'+07'),(1516,2,32400,1,'+09'),(1516,3,28800,0,'+08'),(1517,0,25652,0,'LMT'),(1517,1,25200,0,'+07'),(1517,2,32400,1,'+09'),(1517,3,28800,0,'+08'),(1518,0,21020,0,'LMT'),(1518,1,21600,0,'+06'),(1519,0,34374,0,'LMT'),(1519,1,28800,0,'+08'),(1519,2,32400,0,'+09'),(1519,3,39600,0,'+11'),(1519,4,43200,1,'+12'),(1519,5,39600,0,'+11'),(1519,6,43200,1,'+12'),(1519,7,39600,1,'+11'),(1519,8,36000,0,'+10'),(1519,9,43200,0,'+12'),(1519,10,43200,1,'+12'),(1519,11,36000,0,'+10'),(1520,0,24124,0,'LMT'),(1520,1,24124,0,'BMT'),(1520,2,25200,0,'+07'),(1521,0,31651,0,'LMT'),(1521,1,32400,0,'+09'),(1521,2,39600,1,'+11'),(1521,3,36000,0,'+10'),(1521,4,36000,0,'+10'),(1521,5,39600,1,'+11'),(1521,6,36000,1,'+10'),(1521,7,32400,0,'+09'),(1521,8,39600,0,'+11'),(1521,9,39600,1,'+11'),(1521,10,36000,0,'+10'),(1522,0,31138,0,'LMT'),(1522,1,28800,0,'+08'),(1522,2,36000,1,'+10'),(1522,3,32400,0,'+09'),(1522,4,32400,0,'+09'),(1522,5,36000,1,'+10'),(1522,6,32400,1,'+09'),(1522,7,28800,0,'+08'),(1522,8,36000,0,'+10'),(1522,9,36000,1,'+10'),(1522,10,32400,0,'+09'),(1523,0,23087,0,'LMT'),(1523,1,23087,0,'RMT'),(1523,2,23400,0,'+0630'),(1523,3,32400,0,'+09'),(1523,4,23400,0,'+0630'),(1524,0,14553,0,'LMT'),(1524,1,13505,0,'PMT'),(1524,2,14400,0,'+04'),(1524,3,21600,1,'+06'),(1524,4,18000,0,'+05'),(1524,5,18000,0,'+05'),(1524,6,21600,1,'+06'),(1524,7,18000,1,'+05'),(1524,8,14400,0,'+04'),(1524,9,21600,0,'+06'),(1524,10,21600,1,'+06'),(1524,11,18000,0,'+05'),(1525,0,10680,0,'LMT'),(1525,1,10800,0,'+03'),(1525,2,18000,1,'+05'),(1525,3,14400,0,'+04'),(1525,4,14400,0,'+04'),(1525,5,18000,1,'+05'),(1525,6,14400,1,'+04'),(1525,7,10800,0,'+03'),(1525,8,18000,1,'+05'),(1525,9,14400,0,'+04'),(1526,0,-6160,0,'LMT'),(1526,1,-6872,0,'HMT'),(1526,2,-3600,1,'-01'),(1526,3,-7200,0,'-02'),(1526,4,-3600,1,'-01'),(1526,5,-7200,0,'-02'),(1526,6,-7200,0,'-02'),(1526,7,0,1,'+00'),(1526,8,-3600,0,'-01'),(1526,9,-3600,0,'-01'),(1526,10,0,0,'WET'),(1526,11,0,1,'+00'),(1526,12,-3600,0,'-01'),(1527,0,-15558,0,'LMT'),(1527,1,-11958,1,'BST'),(1527,2,-15558,0,'BMT'),(1527,3,-10800,1,'ADT'),(1527,4,-14400,0,'AST'),(1528,0,-3696,0,'LMT'),(1528,1,-3600,0,'-01'),(1528,2,0,0,'WET'),(1528,3,3600,1,'WEST'),(1528,4,0,0,'WET'),(1528,5,3600,1,'WEST'),(1529,0,-5644,0,'LMT'),(1529,1,-7200,0,'-02'),(1529,2,-3600,1,'-01'),(1529,3,-7200,0,'-02'),(1529,4,-3600,0,'-01'),(1530,0,-1624,0,'LMT'),(1530,1,0,0,'WET'),(1530,2,3600,1,'WEST'),(1530,3,0,0,'WET'),(1531,0,-1624,0,'LMT'),(1531,1,0,0,'WET'),(1531,2,3600,1,'WEST'),(1531,3,0,0,'WET'),(1532,0,3208,0,'LMT'),(1532,1,7200,1,'CEST'),(1532,2,3600,0,'CET'),(1532,3,7200,1,'CEST'),(1532,4,3600,0,'CET'),(1532,5,10800,1,'CEMT'),(1532,6,10800,1,'CEMT'),(1532,7,7200,1,'CEST'),(1532,8,3600,0,'CET'),(1533,0,-4056,0,'LMT'),(1533,1,-4056,0,'FMT'),(1533,2,0,1,'+00'),(1533,3,-3600,0,'-01'),(1533,4,0,1,'+00'),(1533,5,-3600,0,'-01'),(1533,6,-3600,0,'-01'),(1533,7,3600,1,'+01'),(1533,8,3600,1,'WEST'),(1533,9,0,0,'WET'),(1533,10,0,0,'WET'),(1533,11,0,0,'WET'),(1533,12,3600,1,'WEST'),(1534,0,-968,0,'LMT'),(1534,1,0,0,'GMT'),(1535,0,-8768,0,'LMT'),(1535,1,-7200,0,'-02'),(1536,0,-968,0,'LMT'),(1536,1,0,0,'GMT'),(1537,0,-13884,0,'LMT'),(1537,1,-13884,0,'SMT'),(1537,2,-10800,1,'-03'),(1537,3,-14400,0,'-04'),(1537,4,-7200,1,'-02'),(1537,5,-10800,0,'-03'),(1537,6,-10800,1,'-03'),(1538,0,36292,0,'LMT'),(1538,1,39600,1,'AEDT'),(1538,2,36000,0,'AEST'),(1538,3,36000,0,'AEST'),(1539,0,33260,0,'LMT'),(1539,1,37800,1,'ACDT'),(1539,2,34200,0,'ACST'),(1539,3,34200,0,'ACST'),(1540,0,36728,0,'LMT'),(1540,1,39600,1,'AEDT'),(1540,2,36000,0,'AEST'),(1540,3,36000,0,'AEST'),(1541,0,33948,0,'LMT'),(1541,1,37800,1,'ACDT'),(1541,2,34200,0,'ACST'),(1541,3,34200,0,'ACST'),(1542,0,36292,0,'LMT'),(1542,1,39600,1,'AEDT'),(1542,2,36000,0,'AEST'),(1542,3,36000,0,'AEST'),(1543,0,35356,0,'LMT'),(1543,1,39600,1,'AEDT'),(1543,2,36000,0,'AEST'),(1543,3,36000,0,'AEST'),(1544,0,31400,0,'LMT'),(1544,1,37800,1,'ACDT'),(1544,2,34200,0,'ACST'),(1544,3,34200,0,'ACST'),(1545,0,30928,0,'LMT'),(1545,1,35100,1,'+0945'),(1545,2,31500,0,'+0845'),(1545,3,31500,0,'+0845'),(1546,0,35356,0,'LMT'),(1546,1,39600,1,'AEDT'),(1546,2,36000,0,'AEST'),(1546,3,36000,0,'AEST'),(1547,0,38180,0,'LMT'),(1547,1,36000,0,'AEST'),(1547,2,41400,1,'+1130'),(1547,3,37800,0,'+1030'),(1547,4,39600,1,'+11'),(1548,0,35756,0,'LMT'),(1548,1,39600,1,'AEDT'),(1548,2,36000,0,'AEST'),(1548,3,36000,0,'AEST'),(1549,0,38180,0,'LMT'),(1549,1,36000,0,'AEST'),(1549,2,41400,1,'+1130'),(1549,3,37800,0,'+1030'),(1549,4,39600,1,'+11'),(1550,0,34792,0,'LMT'),(1550,1,39600,1,'AEDT'),(1550,2,36000,0,'AEST'),(1550,3,36000,0,'AEST'),(1551,0,36292,0,'LMT'),(1551,1,39600,1,'AEDT'),(1551,2,36000,0,'AEST'),(1551,3,36000,0,'AEST'),(1552,0,31400,0,'LMT'),(1552,1,37800,1,'ACDT'),(1552,2,34200,0,'ACST'),(1552,3,34200,0,'ACST'),(1553,0,27804,0,'LMT'),(1553,1,32400,1,'AWDT'),(1553,2,28800,0,'AWST'),(1553,3,28800,0,'AWST'),(1554,0,36728,0,'LMT'),(1554,1,39600,1,'AEDT'),(1554,2,36000,0,'AEST'),(1554,3,36000,0,'AEST'),(1555,0,33260,0,'LMT'),(1555,1,37800,1,'ACDT'),(1555,2,34200,0,'ACST'),(1555,3,34200,0,'ACST'),(1556,0,36292,0,'LMT'),(1556,1,39600,1,'AEDT'),(1556,2,36000,0,'AEST'),(1556,3,36000,0,'AEST'),(1557,0,35356,0,'LMT'),(1557,1,39600,1,'AEDT'),(1557,2,36000,0,'AEST'),(1557,3,36000,0,'AEST'),(1558,0,34792,0,'LMT'),(1558,1,39600,1,'AEDT'),(1558,2,36000,0,'AEST'),(1558,3,36000,0,'AEST'),(1559,0,27804,0,'LMT'),(1559,1,32400,1,'AWDT'),(1559,2,28800,0,'AWST'),(1559,3,28800,0,'AWST'),(1560,0,33948,0,'LMT'),(1560,1,37800,1,'ACDT'),(1560,2,34200,0,'ACST'),(1560,3,34200,0,'ACST'),(1561,0,-16272,0,'LMT'),(1561,1,-14400,1,'-04'),(1561,2,-18000,0,'-05'),(1561,3,-14400,0,'-04'),(1561,4,-18000,0,'-05'),(1562,0,-7780,0,'LMT'),(1562,1,-3600,1,'-01'),(1562,2,-7200,0,'-02'),(1563,0,-11188,0,'LMT'),(1563,1,-7200,1,'-02'),(1563,2,-10800,0,'-03'),(1564,0,-14404,0,'LMT'),(1564,1,-10800,1,'-03'),(1564,2,-14400,0,'-04'),(1565,0,3600,0,'CET'),(1565,1,7200,1,'CEST'),(1565,2,7200,1,'CEST'),(1565,3,3600,0,'CET'),(1566,0,-21600,0,'CST'),(1566,1,-18000,1,'CDT'),(1566,2,-18000,1,'CWT'),(1566,3,-18000,1,'CPT'),(1566,4,-21600,0,'CST'),(1567,0,-15264,0,'LMT'),(1567,1,-10800,1,'ADT'),(1567,2,-14400,0,'AST'),(1567,3,-10800,1,'AWT'),(1567,4,-10800,1,'APT'),(1568,0,-23316,0,'LMT'),(1568,1,-18000,1,'CDT'),(1568,2,-21600,0,'CST'),(1568,3,-18000,1,'CWT'),(1568,4,-18000,1,'CPT'),(1568,5,-18000,1,'CDT'),(1568,6,-21600,0,'CST'),(1569,0,-19052,0,'LMT'),(1569,1,-14400,1,'EDT'),(1569,2,-18000,0,'EST'),(1569,3,-14400,1,'EWT'),(1569,4,-14400,1,'EPT'),(1570,0,-27232,0,'LMT'),(1570,1,-21600,1,'MDT'),(1570,2,-25200,0,'MST'),(1570,3,-21600,1,'MWT'),(1570,4,-21600,1,'MPT'),(1571,0,-12652,0,'LMT'),(1571,1,-9052,1,'NDT'),(1571,2,-12652,0,'NST'),(1571,3,-9000,1,'NDT'),(1571,4,-12600,0,'NST'),(1571,5,-9000,1,'NPT'),(1571,6,-9000,1,'NWT'),(1571,7,-5400,1,'NDDT'),(1571,8,-9000,1,'NDT'),(1572,0,-29548,0,'LMT'),(1572,1,-25200,1,'PDT'),(1572,2,-28800,0,'PST'),(1572,3,-25200,1,'PWT'),(1572,4,-25200,1,'PPT'),(1573,0,-25116,0,'LMT'),(1573,1,-21600,1,'MDT'),(1573,2,-25200,0,'MST'),(1573,3,-21600,1,'MWT'),(1573,4,-21600,1,'MPT'),(1573,5,-21600,0,'CST'),(1574,0,-32412,0,'LMT'),(1574,1,-28800,1,'YDT'),(1574,2,-32400,0,'YST'),(1574,3,-28800,1,'YWT'),(1574,4,-28800,1,'YPT'),(1574,5,-25200,1,'YDDT'),(1574,6,-28800,0,'PST'),(1574,7,-25200,1,'PDT'),(1574,8,-25200,0,'MST'),(1575,0,-16965,0,'LMT'),(1575,1,-16965,0,'SMT'),(1575,2,-18000,0,'-05'),(1575,3,-14400,0,'-04'),(1575,4,-14400,1,'-04'),(1575,5,-10800,1,'-03'),(1575,6,-10800,1,'-03'),(1575,7,-14400,0,'-04'),(1576,0,-26248,0,'LMT'),(1576,1,-26248,0,'EMT'),(1576,2,-21600,1,'-06'),(1576,3,-25200,0,'-07'),(1576,4,-25200,0,'-07'),(1576,5,-21600,0,'-06'),(1576,6,-18000,1,'-05'),(1577,0,-19768,0,'LMT'),(1577,1,-19776,0,'HMT'),(1577,2,-14400,1,'CDT'),(1577,3,-18000,0,'CST'),(1577,4,-18000,0,'CST'),(1577,5,-14400,1,'CDT'),(1578,0,7200,0,'EET'),(1578,1,10800,1,'EEST'),(1578,2,10800,1,'EEST'),(1578,3,7200,0,'EET'),(1579,0,-18000,0,'EST'),(1580,0,-18000,0,'EST'),(1580,1,-14400,1,'EDT'),(1580,2,-14400,1,'EWT'),(1580,3,-14400,1,'EPT'),(1580,4,-18000,0,'EST'),(1581,0,7509,0,'LMT'),(1581,1,10800,1,'EEST'),(1581,2,7200,0,'EET'),(1581,3,10800,1,'EEST'),(1582,0,-1521,0,'LMT'),(1582,1,-1521,0,'DMT'),(1582,2,2079,1,'IST'),(1582,3,3600,1,'BST'),(1582,4,0,0,'GMT'),(1582,5,3600,1,'IST'),(1582,6,0,1,'GMT'),(1582,7,3600,0,'IST'),(1582,8,3600,0,'IST'),(1583,0,0,0,'GMT'),(1584,0,0,0,'GMT'),(1585,0,-3600,0,'-01'),(1586,0,-36000,0,'-10'),(1587,0,-39600,0,'-11'),(1588,0,-43200,0,'-12'),(1589,0,-7200,0,'-02'),(1590,0,-10800,0,'-03'),(1591,0,-14400,0,'-04'),(1592,0,-18000,0,'-05'),(1593,0,-21600,0,'-06'),(1594,0,-25200,0,'-07'),(1595,0,-28800,0,'-08'),(1596,0,-32400,0,'-09'),(1597,0,0,0,'GMT'),(1598,0,3600,0,'+01'),(1599,0,36000,0,'+10'),(1600,0,39600,0,'+11'),(1601,0,43200,0,'+12'),(1602,0,46800,0,'+13'),(1603,0,50400,0,'+14'),(1604,0,7200,0,'+02'),(1605,0,10800,0,'+03'),(1606,0,14400,0,'+04'),(1607,0,18000,0,'+05'),(1608,0,21600,0,'+06'),(1609,0,25200,0,'+07'),(1610,0,28800,0,'+08'),(1611,0,32400,0,'+09'),(1612,0,0,0,'GMT'),(1613,0,0,0,'GMT'),(1614,0,0,0,'UTC'),(1615,0,0,0,'UTC'),(1616,0,0,0,'UTC'),(1617,0,0,0,'UTC'),(1618,0,1050,0,'LMT'),(1618,1,0,0,'WET'),(1618,2,3600,0,'CET'),(1618,3,7200,1,'CEST'),(1618,4,3600,0,'CET'),(1618,5,7200,1,'CEST'),(1618,6,3600,1,'WEST'),(1618,7,0,0,'WET'),(1618,8,0,0,'WET'),(1618,9,7200,1,'CEST'),(1618,10,3600,0,'CET'),(1619,0,364,0,'LMT'),(1619,1,0,0,'WET'),(1619,2,3600,0,'CET'),(1619,3,7200,1,'CEST'),(1619,4,3600,0,'CET'),(1620,0,11532,0,'LMT'),(1620,1,10800,0,'+03'),(1620,2,18000,1,'+05'),(1620,3,14400,0,'+04'),(1620,4,14400,0,'+04'),(1620,5,18000,1,'+05'),(1620,6,14400,1,'+04'),(1620,7,10800,0,'+03'),(1620,8,14400,0,'+04'),(1621,0,5692,0,'LMT'),(1621,1,5692,0,'AMT'),(1621,2,10800,1,'EEST'),(1621,3,7200,0,'EET'),(1621,4,3600,0,'CET'),(1621,5,7200,1,'CEST'),(1621,6,10800,1,'EEST'),(1621,7,7200,0,'EET'),(1621,8,10800,1,'EEST'),(1621,9,7200,0,'EET'),(1622,0,-75,0,'LMT'),(1622,1,3600,1,'BST'),(1622,2,0,0,'GMT'),(1622,3,7200,1,'BDST'),(1622,4,0,0,'GMT'),(1622,5,3600,0,'BST'),(1622,6,3600,1,'BST'),(1622,7,0,0,'GMT'),(1623,0,4920,0,'LMT'),(1623,1,3600,0,'CET'),(1623,2,3600,0,'CET'),(1623,3,7200,1,'CEST'),(1623,4,7200,1,'CEST'),(1623,5,7200,1,'CEST'),(1623,6,3600,0,'CET'),(1624,0,3208,0,'LMT'),(1624,1,7200,1,'CEST'),(1624,2,3600,0,'CET'),(1624,3,7200,1,'CEST'),(1624,4,3600,0,'CET'),(1624,5,10800,1,'CEMT'),(1624,6,10800,1,'CEMT'),(1624,7,7200,1,'CEST'),(1624,8,3600,0,'CET'),(1625,0,3464,0,'LMT'),(1625,1,7200,1,'CEST'),(1625,2,3600,0,'CET'),(1625,3,7200,1,'CEST'),(1625,4,3600,0,'CET'),(1625,5,0,1,'GMT'),(1625,6,7200,1,'CEST'),(1625,7,3600,0,'CET'),(1626,0,1050,0,'LMT'),(1626,1,0,0,'WET'),(1626,2,3600,0,'CET'),(1626,3,7200,1,'CEST'),(1626,4,3600,0,'CET'),(1626,5,7200,1,'CEST'),(1626,6,3600,1,'WEST'),(1626,7,0,0,'WET'),(1626,8,0,0,'WET'),(1626,9,7200,1,'CEST'),(1626,10,3600,0,'CET'),(1627,0,6264,0,'LMT'),(1627,1,6264,0,'BMT'),(1627,2,10800,1,'EEST'),(1627,3,7200,0,'EET'),(1627,4,10800,1,'EEST'),(1627,5,7200,0,'EET'),(1627,6,10800,1,'EEST'),(1627,7,7200,0,'EET'),(1628,0,4580,0,'LMT'),(1628,1,7200,1,'CEST'),(1628,2,3600,0,'CET'),(1628,3,7200,1,'CEST'),(1628,4,3600,0,'CET'),(1628,5,7200,1,'CEST'),(1628,6,3600,0,'CET'),(1629,0,2048,0,'LMT'),(1629,1,7200,1,'CEST'),(1629,2,3600,0,'CET'),(1629,3,7200,1,'CEST'),(1629,4,3600,0,'CET'),(1630,0,6920,0,'LMT'),(1630,1,6900,0,'CMT'),(1630,2,6264,0,'BMT'),(1630,3,10800,1,'EEST'),(1630,4,7200,0,'EET'),(1630,5,7200,0,'EET'),(1630,6,10800,1,'EEST'),(1630,7,3600,0,'CET'),(1630,8,7200,1,'CEST'),(1630,9,7200,1,'CEST'),(1630,10,14400,1,'MSD'),(1630,11,10800,0,'MSK'),(1630,12,10800,0,'MSK'),(1630,13,14400,1,'MSD'),(1630,14,10800,1,'EEST'),(1630,15,7200,0,'EET'),(1631,0,3208,0,'LMT'),(1631,1,7200,1,'CEST'),(1631,2,3600,0,'CET'),(1631,3,7200,1,'CEST'),(1631,4,3600,0,'CET'),(1631,5,10800,1,'CEMT'),(1631,6,10800,1,'CEMT'),(1631,7,7200,1,'CEST'),(1631,8,3600,0,'CET'),(1632,0,-1521,0,'LMT'),(1632,1,-1521,0,'DMT'),(1632,2,2079,1,'IST'),(1632,3,3600,1,'BST'),(1632,4,0,0,'GMT'),(1632,5,3600,1,'IST'),(1632,6,0,1,'GMT'),(1632,7,3600,0,'IST'),(1632,8,3600,0,'IST'),(1633,0,-1284,0,'LMT'),(1633,1,3600,1,'BST'),(1633,2,0,0,'GMT'),(1633,3,7200,1,'BDST'),(1633,4,0,0,'GMT'),(1633,5,3600,0,'CET'),(1633,6,7200,1,'CEST'),(1633,7,3600,0,'CET'),(1634,0,-75,0,'LMT'),(1634,1,3600,1,'BST'),(1634,2,0,0,'GMT'),(1634,3,7200,1,'BDST'),(1634,4,0,0,'GMT'),(1634,5,3600,0,'BST'),(1634,6,3600,1,'BST'),(1634,7,0,0,'GMT'),(1635,0,5989,0,'LMT'),(1635,1,5989,0,'HMT'),(1635,2,10800,1,'EEST'),(1635,3,7200,0,'EET'),(1635,4,10800,1,'EEST'),(1635,5,7200,0,'EET'),(1636,0,-75,0,'LMT'),(1636,1,3600,1,'BST'),(1636,2,0,0,'GMT'),(1636,3,7200,1,'BDST'),(1636,4,0,0,'GMT'),(1636,5,3600,0,'BST'),(1636,6,3600,1,'BST'),(1636,7,0,0,'GMT'),(1637,0,6952,0,'LMT'),(1637,1,7016,0,'IMT'),(1637,2,10800,1,'EEST'),(1637,3,7200,0,'EET'),(1637,4,10800,0,'+03'),(1637,5,14400,1,'+04'),(1637,6,10800,1,'EEST'),(1637,7,7200,0,'EET'),(1637,8,10800,1,'EEST'),(1637,9,7200,0,'EET'),(1637,10,10800,0,'+03'),(1638,0,-75,0,'LMT'),(1638,1,3600,1,'BST'),(1638,2,0,0,'GMT'),(1638,3,7200,1,'BDST'),(1638,4,0,0,'GMT'),(1638,5,3600,0,'BST'),(1638,6,3600,1,'BST'),(1638,7,0,0,'GMT'),(1639,0,4920,0,'LMT'),(1639,1,7200,1,'CEST'),(1639,2,3600,0,'CET'),(1639,3,7200,1,'CEST'),(1639,4,3600,0,'CET'),(1639,5,10800,1,'EEST'),(1639,6,7200,0,'EET'),(1639,7,14400,1,'MSD'),(1639,8,10800,0,'MSK'),(1639,9,10800,0,'MSK'),(1639,10,14400,1,'MSD'),(1639,11,10800,1,'EEST'),(1639,12,7200,0,'EET'),(1639,13,10800,0,'+03'),(1639,14,7200,0,'EET'),(1640,0,7324,0,'LMT'),(1640,1,7324,0,'KMT'),(1640,2,7200,0,'EET'),(1640,3,10800,0,'MSK'),(1640,4,3600,0,'CET'),(1640,5,7200,1,'CEST'),(1640,6,7200,1,'CEST'),(1640,7,14400,1,'MSD'),(1640,8,10800,0,'MSK'),(1640,9,14400,1,'MSD'),(1640,10,10800,1,'EEST'),(1640,11,7200,0,'EET'),(1640,12,10800,1,'EEST'),(1640,13,7200,0,'EET'),(1640,14,10800,1,'EEST'),(1641,0,11928,0,'LMT'),(1641,1,10800,0,'+03'),(1641,2,18000,1,'+05'),(1641,3,14400,0,'+04'),(1641,4,14400,0,'+04'),(1641,5,18000,1,'+05'),(1641,6,14400,1,'+04'),(1641,7,10800,0,'+03'),(1642,0,7324,0,'LMT'),(1642,1,7324,0,'KMT'),(1642,2,7200,0,'EET'),(1642,3,10800,0,'MSK'),(1642,4,3600,0,'CET'),(1642,5,7200,1,'CEST'),(1642,6,7200,1,'CEST'),(1642,7,14400,1,'MSD'),(1642,8,10800,0,'MSK'),(1642,9,14400,1,'MSD'),(1642,10,10800,1,'EEST'),(1642,11,7200,0,'EET'),(1642,12,10800,1,'EEST'),(1642,13,7200,0,'EET'),(1642,14,10800,1,'EEST'),(1643,0,-2205,0,'LMT'),(1643,1,3600,1,'WEST'),(1643,2,0,0,'WET'),(1643,3,3600,1,'WEST'),(1643,4,0,0,'WET'),(1643,5,7200,1,'WEMT'),(1643,6,0,0,'WET'),(1643,7,3600,0,'CET'),(1643,8,3600,0,'CET'),(1643,9,7200,1,'CEST'),(1643,10,3600,1,'WEST'),(1643,11,0,0,'WET'),(1644,0,4920,0,'LMT'),(1644,1,3600,0,'CET'),(1644,2,3600,0,'CET'),(1644,3,7200,1,'CEST'),(1644,4,7200,1,'CEST'),(1644,5,7200,1,'CEST'),(1644,6,3600,0,'CET'),(1645,0,-75,0,'LMT'),(1645,1,3600,1,'BST'),(1645,2,0,0,'GMT'),(1645,3,7200,1,'BDST'),(1645,4,0,0,'GMT'),(1645,5,3600,0,'BST'),(1645,6,3600,1,'BST'),(1645,7,0,0,'GMT'),(1646,0,1050,0,'LMT'),(1646,1,0,0,'WET'),(1646,2,3600,0,'CET'),(1646,3,7200,1,'CEST'),(1646,4,3600,0,'CET'),(1646,5,7200,1,'CEST'),(1646,6,3600,1,'WEST'),(1646,7,0,0,'WET'),(1646,8,0,0,'WET'),(1646,9,7200,1,'CEST'),(1646,10,3600,0,'CET'),(1647,0,-884,0,'LMT'),(1647,1,3600,1,'WEST'),(1647,2,0,0,'WET'),(1647,3,7200,1,'WEMT'),(1647,4,0,0,'WET'),(1647,5,7200,1,'CEST'),(1647,6,3600,0,'CET'),(1647,7,7200,1,'CEST'),(1647,8,3600,0,'CET'),(1647,9,7200,1,'CEST'),(1647,10,3600,0,'CET'),(1648,0,3484,0,'LMT'),(1648,1,7200,1,'CEST'),(1648,2,3600,0,'CET'),(1648,3,3600,0,'CET'),(1648,4,7200,1,'CEST'),(1648,5,7200,1,'CEST'),(1648,6,3600,0,'CET'),(1649,0,5989,0,'LMT'),(1649,1,5989,0,'HMT'),(1649,2,10800,1,'EEST'),(1649,3,7200,0,'EET'),(1649,4,10800,1,'EEST'),(1649,5,7200,0,'EET'),(1650,0,6616,0,'LMT'),(1650,1,6600,0,'MMT'),(1650,2,7200,0,'EET'),(1650,3,10800,0,'MSK'),(1650,4,3600,0,'CET'),(1650,5,7200,1,'CEST'),(1650,6,7200,1,'CEST'),(1650,7,14400,1,'MSD'),(1650,8,10800,0,'MSK'),(1650,9,14400,1,'MSD'),(1650,10,10800,1,'EEST'),(1650,11,7200,0,'EET'),(1650,12,10800,0,'+03'),(1651,0,561,0,'LMT'),(1651,1,561,0,'PMT'),(1651,2,3600,1,'WEST'),(1651,3,0,0,'WET'),(1651,4,3600,1,'WEST'),(1651,5,0,0,'WET'),(1651,6,3600,0,'CET'),(1651,7,7200,1,'CEST'),(1651,8,7200,1,'CEST'),(1651,9,7200,1,'WEMT'),(1651,10,3600,0,'CET'),(1651,11,7200,1,'CEST'),(1651,12,3600,0,'CET'),(1652,0,9017,0,'LMT'),(1652,1,9017,0,'MMT'),(1652,2,12679,1,'MST'),(1652,3,9079,0,'MMT'),(1652,4,16279,1,'MDST'),(1652,5,14400,1,'MSD'),(1652,6,10800,0,'MSK'),(1652,7,14400,1,'MSD'),(1652,8,18000,1,'+05'),(1652,9,7200,0,'EET'),(1652,10,10800,0,'MSK'),(1652,11,14400,1,'MSD'),(1652,12,10800,1,'EEST'),(1652,13,7200,0,'EET'),(1652,14,14400,0,'MSK'),(1652,15,14400,1,'MSD'),(1652,16,10800,0,'MSK'),(1653,0,8008,0,'LMT'),(1653,1,10800,1,'EEST'),(1653,2,7200,0,'EET'),(1653,3,7200,0,'EET'),(1653,4,10800,1,'EEST'),(1654,0,3208,0,'LMT'),(1654,1,7200,1,'CEST'),(1654,2,3600,0,'CET'),(1654,3,7200,1,'CEST'),(1654,4,3600,0,'CET'),(1654,5,10800,1,'CEMT'),(1654,6,10800,1,'CEMT'),(1654,7,7200,1,'CEST'),(1654,8,3600,0,'CET'),(1655,0,561,0,'LMT'),(1655,1,561,0,'PMT'),(1655,2,3600,1,'WEST'),(1655,3,0,0,'WET'),(1655,4,3600,1,'WEST'),(1655,5,0,0,'WET'),(1655,6,3600,0,'CET'),(1655,7,7200,1,'CEST'),(1655,8,7200,1,'CEST'),(1655,9,7200,1,'WEMT'),(1655,10,3600,0,'CET'),(1655,11,7200,1,'CEST'),(1655,12,3600,0,'CET'),(1656,0,4920,0,'LMT'),(1656,1,3600,0,'CET'),(1656,2,3600,0,'CET'),(1656,3,7200,1,'CEST'),(1656,4,7200,1,'CEST'),(1656,5,7200,1,'CEST'),(1656,6,3600,0,'CET'),(1657,0,3464,0,'LMT'),(1657,1,7200,1,'CEST'),(1657,2,3600,0,'CET'),(1657,3,7200,1,'CEST'),(1657,4,3600,0,'CET'),(1657,5,0,1,'GMT'),(1657,6,7200,1,'CEST'),(1657,7,3600,0,'CET'),(1658,0,5794,0,'LMT'),(1658,1,5794,0,'RMT'),(1658,2,9394,1,'LST'),(1658,3,7200,0,'EET'),(1658,4,10800,0,'MSK'),(1658,5,3600,0,'CET'),(1658,6,7200,1,'CEST'),(1658,7,7200,1,'CEST'),(1658,8,14400,1,'MSD'),(1658,9,10800,0,'MSK'),(1658,10,14400,1,'MSD'),(1658,11,10800,1,'EEST'),(1658,12,7200,0,'EET'),(1658,13,10800,1,'EEST'),(1658,14,7200,0,'EET'),(1659,0,2996,0,'LMT'),(1659,1,7200,1,'CEST'),(1659,2,3600,0,'CET'),(1659,3,3600,0,'CET'),(1659,4,7200,1,'CEST'),(1659,5,3600,0,'CET'),(1659,6,7200,1,'CEST'),(1660,0,12020,0,'LMT'),(1660,1,10800,0,'+03'),(1660,2,14400,0,'+04'),(1660,3,18000,1,'+05'),(1660,4,14400,0,'+04'),(1660,5,18000,1,'+05'),(1660,6,14400,1,'+04'),(1660,7,10800,0,'+03'),(1660,8,10800,1,'+03'),(1660,9,14400,1,'+04'),(1660,10,14400,0,'+04'),(1661,0,2996,0,'LMT'),(1661,1,7200,1,'CEST'),(1661,2,3600,0,'CET'),(1661,3,3600,0,'CET'),(1661,4,7200,1,'CEST'),(1661,5,3600,0,'CET'),(1661,6,7200,1,'CEST'),(1662,0,4920,0,'LMT'),(1662,1,3600,0,'CET'),(1662,2,3600,0,'CET'),(1662,3,7200,1,'CEST'),(1662,4,7200,1,'CEST'),(1662,5,7200,1,'CEST'),(1662,6,3600,0,'CET'),(1663,0,11058,0,'LMT'),(1663,1,10800,0,'+03'),(1663,2,18000,1,'+05'),(1663,3,14400,0,'+04'),(1663,4,14400,0,'+04'),(1663,5,18000,1,'+05'),(1663,6,14400,1,'+04'),(1663,7,10800,0,'+03'),(1663,8,14400,0,'+04'),(1664,0,8184,0,'LMT'),(1664,1,8160,0,'SMT'),(1664,2,7200,0,'EET'),(1664,3,10800,0,'MSK'),(1664,4,3600,0,'CET'),(1664,5,7200,1,'CEST'),(1664,6,7200,1,'CEST'),(1664,7,14400,1,'MSD'),(1664,8,10800,0,'MSK'),(1664,9,14400,1,'MSD'),(1664,10,10800,1,'EEST'),(1664,11,7200,0,'EET'),(1664,12,10800,1,'EEST'),(1664,13,7200,0,'EET'),(1664,14,14400,0,'MSK'),(1664,15,10800,0,'MSK'),(1665,0,4920,0,'LMT'),(1665,1,3600,0,'CET'),(1665,2,3600,0,'CET'),(1665,3,7200,1,'CEST'),(1665,4,7200,1,'CEST'),(1665,5,7200,1,'CEST'),(1665,6,3600,0,'CET'),(1666,0,5596,0,'LMT'),(1666,1,7200,0,'EET'),(1666,2,3600,0,'CET'),(1666,3,7200,1,'CEST'),(1666,4,10800,1,'EEST'),(1666,5,7200,0,'EET'),(1666,6,10800,1,'EEST'),(1666,7,10800,1,'EEST'),(1666,8,7200,0,'EET'),(1667,0,3208,0,'LMT'),(1667,1,7200,1,'CEST'),(1667,2,3600,0,'CET'),(1667,3,7200,1,'CEST'),(1667,4,3600,0,'CET'),(1667,5,10800,1,'CEMT'),(1667,6,10800,1,'CEMT'),(1667,7,7200,1,'CEST'),(1667,8,3600,0,'CET'),(1668,0,5940,0,'LMT'),(1668,1,5940,0,'TMT'),(1668,2,7200,1,'CEST'),(1668,3,3600,0,'CET'),(1668,4,3600,0,'CET'),(1668,5,7200,0,'EET'),(1668,6,10800,0,'MSK'),(1668,7,7200,1,'CEST'),(1668,8,14400,1,'MSD'),(1668,9,10800,0,'MSK'),(1668,10,14400,1,'MSD'),(1668,11,10800,1,'EEST'),(1668,12,7200,0,'EET'),(1668,13,7200,0,'EET'),(1668,14,10800,1,'EEST'),(1669,0,4760,0,'LMT'),(1669,1,3600,0,'CET'),(1669,2,7200,1,'CEST'),(1669,3,3600,0,'CET'),(1669,4,7200,1,'CEST'),(1670,0,6920,0,'LMT'),(1670,1,6900,0,'CMT'),(1670,2,6264,0,'BMT'),(1670,3,10800,1,'EEST'),(1670,4,7200,0,'EET'),(1670,5,7200,0,'EET'),(1670,6,10800,1,'EEST'),(1670,7,3600,0,'CET'),(1670,8,7200,1,'CEST'),(1670,9,7200,1,'CEST'),(1670,10,14400,1,'MSD'),(1670,11,10800,0,'MSK'),(1670,12,10800,0,'MSK'),(1670,13,14400,1,'MSD'),(1670,14,10800,1,'EEST'),(1670,15,7200,0,'EET'),(1671,0,11616,0,'LMT'),(1671,1,10800,0,'+03'),(1671,2,18000,1,'+05'),(1671,3,14400,0,'+04'),(1671,4,14400,0,'+04'),(1671,5,18000,1,'+05'),(1671,6,14400,1,'+04'),(1671,7,10800,0,'+03'),(1671,8,10800,1,'+03'),(1671,9,7200,0,'+02'),(1671,10,14400,1,'+04'),(1671,11,14400,0,'+04'),(1672,0,5352,0,'LMT'),(1672,1,3600,0,'CET'),(1672,2,7200,1,'CEST'),(1672,3,3600,0,'CET'),(1672,4,14400,1,'MSD'),(1672,5,10800,0,'MSK'),(1672,6,10800,0,'MSK'),(1672,7,14400,1,'MSD'),(1672,8,7200,0,'EET'),(1672,9,10800,1,'EEST'),(1672,10,7200,0,'EET'),(1672,11,7200,0,'EET'),(1672,12,10800,1,'EEST'),(1673,0,2048,0,'LMT'),(1673,1,7200,1,'CEST'),(1673,2,3600,0,'CET'),(1673,3,7200,1,'CEST'),(1673,4,3600,0,'CET'),(1674,0,2996,0,'LMT'),(1674,1,7200,1,'CEST'),(1674,2,3600,0,'CET'),(1674,3,3600,0,'CET'),(1674,4,7200,1,'CEST'),(1674,5,3600,0,'CET'),(1674,6,7200,1,'CEST'),(1675,0,3921,0,'LMT'),(1675,1,7200,1,'CEST'),(1675,2,3600,0,'CET'),(1675,3,7200,1,'CEST'),(1675,4,3600,0,'CET'),(1675,5,7200,1,'CEST'),(1675,6,3600,0,'CET'),(1676,0,6076,0,'LMT'),(1676,1,5040,0,'WMT'),(1676,2,5736,0,'KMT'),(1676,3,3600,0,'CET'),(1676,4,7200,0,'EET'),(1676,5,10800,0,'MSK'),(1676,6,3600,0,'CET'),(1676,7,7200,1,'CEST'),(1676,8,7200,1,'CEST'),(1676,9,14400,1,'MSD'),(1676,10,10800,0,'MSK'),(1676,11,14400,1,'MSD'),(1676,12,10800,1,'EEST'),(1676,13,7200,0,'EET'),(1676,14,7200,1,'CEST'),(1676,15,3600,0,'CET'),(1676,16,7200,0,'EET'),(1676,17,10800,1,'EEST'),(1677,0,10660,0,'LMT'),(1677,1,10800,0,'+03'),(1677,2,14400,0,'+04'),(1677,3,18000,1,'+05'),(1677,4,14400,0,'+04'),(1677,5,18000,1,'+05'),(1677,6,14400,1,'+04'),(1677,7,10800,0,'+03'),(1678,0,5040,0,'LMT'),(1678,1,5040,0,'WMT'),(1678,2,7200,1,'CEST'),(1678,3,3600,0,'CET'),(1678,4,7200,1,'CEST'),(1678,5,3600,0,'CET'),(1678,6,10800,1,'EEST'),(1678,7,7200,0,'EET'),(1678,8,7200,0,'EET'),(1678,9,7200,1,'CEST'),(1678,10,3600,0,'CET'),(1679,0,4920,0,'LMT'),(1679,1,3600,0,'CET'),(1679,2,3600,0,'CET'),(1679,3,7200,1,'CEST'),(1679,4,7200,1,'CEST'),(1679,5,7200,1,'CEST'),(1679,6,3600,0,'CET'),(1680,0,8440,0,'LMT'),(1680,1,8400,0,'+0220'),(1680,2,7200,0,'EET'),(1680,3,10800,0,'MSK'),(1680,4,3600,0,'CET'),(1680,5,7200,1,'CEST'),(1680,6,7200,1,'CEST'),(1680,7,14400,1,'MSD'),(1680,8,10800,0,'MSK'),(1680,9,14400,1,'MSD'),(1680,10,10800,1,'EEST'),(1680,11,10800,1,'EEST'),(1680,12,7200,0,'EET'),(1680,13,7200,0,'EET'),(1680,14,10800,1,'EEST'),(1681,0,2048,0,'LMT'),(1681,1,7200,1,'CEST'),(1681,2,3600,0,'CET'),(1681,3,7200,1,'CEST'),(1681,4,3600,0,'CET'),(1682,0,-75,0,'LMT'),(1682,1,3600,1,'BST'),(1682,2,0,0,'GMT'),(1682,3,7200,1,'BDST'),(1682,4,0,0,'GMT'),(1682,5,3600,0,'BST'),(1682,6,3600,1,'BST'),(1682,7,0,0,'GMT'),(1683,0,-75,0,'LMT'),(1683,1,3600,1,'BST'),(1683,2,0,0,'GMT'),(1683,3,7200,1,'BDST'),(1683,4,0,0,'GMT'),(1683,5,3600,0,'BST'),(1683,6,3600,1,'BST'),(1683,7,0,0,'GMT'),(1684,0,0,0,'GMT'),(1685,0,0,0,'GMT'),(1686,0,0,0,'GMT'),(1687,0,0,0,'GMT'),(1688,0,0,0,'GMT'),(1689,0,-36000,0,'HST'),(1690,0,27402,0,'LMT'),(1690,1,28800,0,'HKT'),(1690,2,32400,1,'HKST'),(1690,3,30600,1,'HKWT'),(1690,4,32400,0,'JST'),(1690,5,28800,0,'HKT'),(1690,6,32400,1,'HKST'),(1690,7,28800,0,'HKT'),(1691,0,-968,0,'LMT'),(1691,1,0,0,'GMT'),(1692,0,8836,0,'LMT'),(1692,1,9000,0,'+0230'),(1692,2,10800,0,'EAT'),(1692,3,9900,0,'+0245'),(1692,4,10800,0,'EAT'),(1693,0,17380,0,'LMT'),(1693,1,18000,0,'+05'),(1693,2,21600,0,'+06'),(1694,0,24124,0,'LMT'),(1694,1,24124,0,'BMT'),(1694,2,25200,0,'+07'),(1695,0,23087,0,'LMT'),(1695,1,23087,0,'RMT'),(1695,2,23400,0,'+0630'),(1695,3,32400,0,'+09'),(1695,4,23400,0,'+0630'),(1696,0,8836,0,'LMT'),(1696,1,9000,0,'+0230'),(1696,2,10800,0,'EAT'),(1696,3,9900,0,'+0245'),(1696,4,10800,0,'EAT'),(1697,0,17640,0,'LMT'),(1697,1,17640,0,'MMT'),(1697,2,18000,0,'+05'),(1698,0,13272,0,'LMT'),(1698,1,14400,0,'+04'),(1699,0,17640,0,'LMT'),(1699,1,17640,0,'MMT'),(1699,2,18000,0,'+05'),(1700,0,13800,0,'LMT'),(1700,1,18000,1,'+05'),(1700,2,14400,0,'+04'),(1701,0,8836,0,'LMT'),(1701,1,9000,0,'+0230'),(1701,2,10800,0,'EAT'),(1701,3,9900,0,'+0245'),(1701,4,10800,0,'EAT'),(1702,0,13272,0,'LMT'),(1702,1,14400,0,'+04'),(1703,0,12344,0,'LMT'),(1703,1,12344,0,'TMT'),(1703,2,16200,1,'+0430'),(1703,3,12600,0,'+0330'),(1703,4,18000,1,'+05'),(1703,5,14400,0,'+04'),(1703,6,16200,1,'+0430'),(1703,7,12600,0,'+0330'),(1704,0,8454,0,'LMT'),(1704,1,8440,0,'JMT'),(1704,2,10800,1,'IDT'),(1704,3,7200,0,'IST'),(1704,4,14400,1,'IDDT'),(1704,5,10800,1,'IDT'),(1704,6,7200,0,'IST'),(1704,7,10800,1,'IDT'),(1704,8,7200,0,'IST'),(1705,0,-18430,0,'LMT'),(1705,1,-18430,0,'KMT'),(1705,2,-18000,0,'EST'),(1705,3,-14400,1,'EDT'),(1706,0,33539,0,'LMT'),(1706,1,36000,1,'JDT'),(1706,2,32400,0,'JST'),(1706,3,32400,0,'JST'),(1707,0,40160,0,'LMT'),(1707,1,39600,0,'+11'),(1707,2,36000,0,'+10'),(1707,3,32400,0,'+09'),(1707,4,-43200,0,'-12'),(1707,5,43200,0,'+12'),(1708,0,3164,0,'LMT'),(1708,1,7200,1,'CEST'),(1708,2,3600,0,'CET'),(1708,3,7200,0,'EET'),(1709,0,3600,0,'MET'),(1709,1,7200,1,'MEST'),(1709,2,7200,1,'MEST'),(1709,3,3600,0,'MET'),(1710,0,-25200,0,'MST'),(1711,0,-25200,0,'MST'),(1711,1,-21600,1,'MDT'),(1711,2,-21600,1,'MWT'),(1711,3,-21600,1,'MPT'),(1711,4,-25200,0,'MST'),(1712,0,-28084,0,'LMT'),(1712,1,-25200,0,'MST'),(1712,2,-28800,0,'PST'),(1712,3,-25200,1,'PDT'),(1712,4,-25200,1,'PWT'),(1712,5,-25200,1,'PPT'),(1713,0,-25540,0,'LMT'),(1713,1,-25200,0,'MST'),(1713,2,-21600,0,'CST'),(1713,3,-28800,0,'PST'),(1713,4,-21600,1,'MDT'),(1713,5,-25200,0,'MST'),(1714,0,-23796,0,'LMT'),(1714,1,-25200,0,'MST'),(1714,2,-21600,0,'CST'),(1714,3,-18000,1,'CDT'),(1714,4,-18000,1,'CWT'),(1715,0,41944,0,'LMT'),(1715,1,45000,1,'NZST'),(1715,2,41400,0,'NZMT'),(1715,3,43200,1,'NZST'),(1715,4,46800,1,'NZDT'),(1715,5,43200,0,'NZST'),(1715,6,43200,0,'NZST'),(1716,0,44028,0,'LMT'),(1716,1,44100,0,'+1215'),(1716,2,49500,1,'+1345'),(1716,3,45900,0,'+1245'),(1716,4,45900,0,'+1245'),(1717,0,-25196,0,'LMT'),(1717,1,-21600,1,'MDT'),(1717,2,-25200,0,'MST'),(1717,3,-21600,1,'MWT'),(1717,4,-21600,1,'MPT'),(1718,0,29143,0,'LMT'),(1718,1,32400,1,'CDT'),(1718,2,28800,0,'CST'),(1719,0,-28800,0,'PST'),(1719,1,-25200,1,'PDT'),(1719,2,-25200,1,'PWT'),(1719,3,-25200,1,'PPT'),(1719,4,-28800,0,'PST'),(1720,0,45184,0,'LMT'),(1720,1,-41216,0,'LMT'),(1720,2,-41400,0,'-1130'),(1720,3,-36000,1,'-10'),(1720,4,-39600,0,'-11'),(1720,5,46800,0,'+13'),(1720,6,50400,1,'+14'),(1721,0,41944,0,'LMT'),(1721,1,45000,1,'NZST'),(1721,2,41400,0,'NZMT'),(1721,3,43200,1,'NZST'),(1721,4,46800,1,'NZDT'),(1721,5,43200,0,'NZST'),(1721,6,43200,0,'NZST'),(1722,0,37336,0,'LMT'),(1722,1,36000,0,'+10'),(1722,2,32400,0,'+09'),(1722,3,39600,0,'+11'),(1723,0,44028,0,'LMT'),(1723,1,44100,0,'+1215'),(1723,2,49500,1,'+1345'),(1723,3,45900,0,'+1245'),(1723,4,45900,0,'+1245'),(1724,0,35320,0,'LMT'),(1724,1,36000,0,'+10'),(1725,0,-26248,0,'LMT'),(1725,1,-26248,0,'EMT'),(1725,2,-21600,1,'-06'),(1725,3,-25200,0,'-07'),(1725,4,-25200,0,'-07'),(1725,5,-21600,0,'-06'),(1725,6,-18000,1,'-05'),(1726,0,40396,0,'LMT'),(1726,1,43200,1,'+12'),(1726,2,39600,0,'+11'),(1726,3,43200,1,'+12'),(1726,4,39600,0,'+11'),(1727,0,0,0,'-00'),(1727,1,-43200,0,'-12'),(1727,2,-39600,0,'-11'),(1727,3,46800,0,'+13'),(1728,0,-41096,0,'LMT'),(1728,1,-39600,0,'-11'),(1728,2,46800,0,'+13'),(1729,0,42944,0,'LMT'),(1729,1,46800,1,'+13'),(1729,2,43200,0,'+12'),(1730,0,41524,0,'LMT'),(1730,1,43200,0,'+12'),(1731,0,-21504,0,'LMT'),(1731,1,-18000,0,'-05'),(1731,2,-18000,1,'-05'),(1731,3,-21600,0,'-06'),(1732,0,-32388,0,'LMT'),(1732,1,-32400,0,'-09'),(1733,0,38388,0,'LMT'),(1733,1,39600,0,'+11'),(1734,0,-51660,0,'LMT'),(1734,1,36000,0,'GST'),(1734,2,32400,0,'+09'),(1734,3,39600,1,'GDT'),(1734,4,36000,0,'ChST'),(1735,0,-37886,0,'LMT'),(1735,1,-37800,0,'HST'),(1735,2,-34200,1,'HDT'),(1735,3,-34200,1,'HWT'),(1735,4,-34200,1,'HPT'),(1735,5,-36000,0,'HST'),(1736,0,-37886,0,'LMT'),(1736,1,-37800,0,'HST'),(1736,2,-34200,1,'HDT'),(1736,3,-34200,1,'HWT'),(1736,4,-34200,1,'HPT'),(1736,5,-36000,0,'HST'),(1737,0,0,0,'-00'),(1737,1,-43200,0,'-12'),(1737,2,-39600,0,'-11'),(1737,3,46800,0,'+13'),(1738,0,-37760,0,'LMT'),(1738,1,-38400,0,'-1040'),(1738,2,-36000,0,'-10'),(1738,3,50400,0,'+14'),(1739,0,-47284,0,'LMT'),(1739,1,39600,0,'+11'),(1739,2,32400,0,'+09'),(1739,3,36000,0,'+10'),(1739,4,43200,0,'+12'),(1739,5,39600,0,'+11'),(1740,0,40160,0,'LMT'),(1740,1,39600,0,'+11'),(1740,2,36000,0,'+10'),(1740,3,32400,0,'+09'),(1740,4,-43200,0,'-12'),(1740,5,43200,0,'+12'),(1741,0,41524,0,'LMT'),(1741,1,43200,0,'+12'),(1742,0,-33480,0,'LMT'),(1742,1,-34200,0,'-0930'),(1743,0,45432,0,'LMT'),(1743,1,-40968,0,'LMT'),(1743,2,-39600,0,'SST'),(1744,0,40060,0,'LMT'),(1744,1,41400,0,'+1130'),(1744,2,32400,0,'+09'),(1744,3,43200,0,'+12'),(1745,0,-40780,0,'LMT'),(1745,1,-40800,0,'-1120'),(1745,2,-39600,0,'-11'),(1746,0,40312,0,'LMT'),(1746,1,40320,0,'+1112'),(1746,2,41400,0,'+1130'),(1746,3,45000,1,'+1230'),(1746,4,41400,0,'+1130'),(1746,5,39600,0,'+11'),(1746,6,43200,1,'+12'),(1747,0,39948,0,'LMT'),(1747,1,43200,1,'+12'),(1747,2,39600,0,'+11'),(1747,3,43200,1,'+12'),(1747,4,39600,0,'+11'),(1748,0,45432,0,'LMT'),(1748,1,-40968,0,'LMT'),(1748,2,-39600,0,'SST'),(1749,0,-54124,0,'LMT'),(1749,1,32400,0,'+09'),(1750,0,-31220,0,'LMT'),(1750,1,-30600,0,'-0830'),(1750,2,-28800,0,'-08'),(1751,0,38388,0,'LMT'),(1751,1,39600,0,'+11'),(1752,0,38388,0,'LMT'),(1752,1,39600,0,'+11'),(1753,0,35320,0,'LMT'),(1753,1,36000,0,'+10'),(1754,0,48056,0,'LMT'),(1754,1,-38344,0,'LMT'),(1754,2,-37800,0,'-1030'),(1754,3,-36000,0,'-10'),(1754,4,-34200,1,'-0930'),(1755,0,-51660,0,'LMT'),(1755,1,36000,0,'GST'),(1755,2,32400,0,'+09'),(1755,3,39600,1,'GDT'),(1755,4,36000,0,'ChST'),(1756,0,45432,0,'LMT'),(1756,1,-40968,0,'LMT'),(1756,2,-39600,0,'SST'),(1757,0,-35896,0,'LMT'),(1757,1,-36000,0,'-10'),(1758,0,41524,0,'LMT'),(1758,1,43200,0,'+12'),(1759,0,44352,0,'LMT'),(1759,1,44400,0,'+1220'),(1759,2,46800,0,'+13'),(1759,3,50400,1,'+14'),(1759,4,46800,0,'+13'),(1759,5,50400,1,'+14'),(1760,0,35320,0,'LMT'),(1760,1,36000,0,'+10'),(1761,0,41524,0,'LMT'),(1761,1,43200,0,'+12'),(1762,0,41524,0,'LMT'),(1762,1,43200,0,'+12'),(1763,0,35320,0,'LMT'),(1763,1,36000,0,'+10'),(1764,0,5040,0,'LMT'),(1764,1,5040,0,'WMT'),(1764,2,7200,1,'CEST'),(1764,3,3600,0,'CET'),(1764,4,7200,1,'CEST'),(1764,5,3600,0,'CET'),(1764,6,10800,1,'EEST'),(1764,7,7200,0,'EET'),(1764,8,7200,0,'EET'),(1764,9,7200,1,'CEST'),(1764,10,3600,0,'CET'),(1765,0,-2205,0,'LMT'),(1765,1,3600,1,'WEST'),(1765,2,0,0,'WET'),(1765,3,3600,1,'WEST'),(1765,4,0,0,'WET'),(1765,5,7200,1,'WEMT'),(1765,6,0,0,'WET'),(1765,7,3600,0,'CET'),(1765,8,3600,0,'CET'),(1765,9,7200,1,'CEST'),(1765,10,3600,1,'WEST'),(1765,11,0,0,'WET'),(1766,0,29160,0,'LMT'),(1766,1,28800,0,'CST'),(1766,2,32400,0,'JST'),(1766,3,32400,1,'CDT'),(1766,4,28800,0,'CST'),(1767,0,30472,0,'LMT'),(1767,1,30600,0,'KST'),(1767,2,32400,0,'JST'),(1767,3,36000,1,'KDT'),(1767,4,32400,0,'KST'),(1767,5,34200,1,'KDT'),(1767,6,36000,1,'KDT'),(1768,0,24925,0,'LMT'),(1768,1,24925,0,'SMT'),(1768,2,25200,0,'+07'),(1768,3,26400,1,'+0720'),(1768,4,26400,0,'+0720'),(1768,5,27000,0,'+0730'),(1768,6,32400,0,'+09'),(1768,7,28800,0,'+08'),(1769,0,6952,0,'LMT'),(1769,1,7016,0,'IMT'),(1769,2,10800,1,'EEST'),(1769,3,7200,0,'EET'),(1769,4,10800,0,'+03'),(1769,5,14400,1,'+04'),(1769,6,10800,1,'EEST'),(1769,7,7200,0,'EET'),(1769,8,10800,1,'EEST'),(1769,9,7200,0,'EET'),(1769,10,10800,0,'+03'),(1770,0,0,0,'UTC'),(1771,0,50424,0,'LMT'),(1771,1,-36000,0,'AST'),(1771,2,-32400,1,'AWT'),(1771,3,-32400,1,'APT'),(1771,4,-36000,0,'AHST'),(1771,5,-32400,1,'AHDT'),(1771,6,-32400,0,'YST'),(1771,7,-28800,1,'AKDT'),(1771,8,-32400,0,'AKST'),(1772,0,44002,0,'LMT'),(1772,1,-39600,0,'NST'),(1772,2,-36000,1,'NWT'),(1772,3,-36000,1,'NPT'),(1772,4,-39600,0,'BST'),(1772,5,-36000,1,'BDT'),(1772,6,-36000,0,'AHST'),(1772,7,-32400,1,'HDT'),(1772,8,-36000,0,'HST'),(1773,0,-26898,0,'LMT'),(1773,1,-21600,1,'MDT'),(1773,2,-25200,0,'MST'),(1773,3,-21600,1,'MWT'),(1774,0,-21036,0,'LMT'),(1774,1,-18000,1,'CDT'),(1774,2,-21600,0,'CST'),(1774,3,-18000,0,'EST'),(1774,4,-18000,1,'CWT'),(1774,5,-18000,1,'CPT'),(1774,6,-21600,0,'CST'),(1775,0,-20678,0,'LMT'),(1775,1,-18000,1,'CDT'),(1775,2,-21600,0,'CST'),(1775,3,-18000,1,'CWT'),(1775,4,-18000,1,'CPT'),(1775,5,-18000,0,'EST'),(1775,6,-14400,1,'EDT'),(1776,0,-17762,0,'LMT'),(1776,1,-14400,1,'EDT'),(1776,2,-18000,0,'EST'),(1776,3,-18000,0,'EST'),(1776,4,-14400,1,'EWT'),(1776,5,-14400,1,'EPT'),(1777,0,-37886,0,'LMT'),(1777,1,-37800,0,'HST'),(1777,2,-34200,1,'HDT'),(1777,3,-34200,1,'HWT'),(1777,4,-34200,1,'HPT'),(1777,5,-36000,0,'HST'),(1778,0,-20790,0,'LMT'),(1778,1,-18000,1,'CDT'),(1778,2,-21600,0,'CST'),(1778,3,-18000,1,'CWT'),(1778,4,-18000,1,'CPT'),(1778,5,-18000,0,'EST'),(1778,6,-21600,0,'CST'),(1779,0,-19931,0,'LMT'),(1779,1,-21600,0,'CST'),(1779,2,-18000,0,'EST'),(1779,3,-14400,1,'EWT'),(1779,4,-14400,1,'EPT'),(1779,5,-14400,1,'EDT'),(1780,0,-25196,0,'LMT'),(1780,1,-21600,1,'MDT'),(1780,2,-25200,0,'MST'),(1780,3,-21600,1,'MWT'),(1780,4,-21600,1,'MPT'),(1781,0,-28378,0,'LMT'),(1781,1,-25200,1,'PDT'),(1781,2,-28800,0,'PST'),(1781,3,-25200,1,'PWT'),(1781,4,-25200,1,'PPT'),(1782,0,45432,0,'LMT'),(1782,1,-40968,0,'LMT'),(1782,2,-39600,0,'SST'),(1783,0,0,0,'UTC'),(1784,0,0,0,'UTC'),(1785,0,9017,0,'LMT'),(1785,1,9017,0,'MMT'),(1785,2,12679,1,'MST'),(1785,3,9079,0,'MMT'),(1785,4,16279,1,'MDST'),(1785,5,14400,1,'MSD'),(1785,6,10800,0,'MSK'),(1785,7,14400,1,'MSD'),(1785,8,18000,1,'+05'),(1785,9,7200,0,'EET'),(1785,10,10800,0,'MSK'),(1785,11,14400,1,'MSD'),(1785,12,10800,1,'EEST'),(1785,13,7200,0,'EET'),(1785,14,14400,0,'MSK'),(1785,15,14400,1,'MSD'),(1785,16,10800,0,'MSK'),(1786,0,0,0,'WET'),(1786,1,3600,1,'WEST'),(1786,2,3600,1,'WEST'),(1786,3,0,0,'WET'),(1787,0,0,0,'UTC');
/*!40000 ALTER TABLE `time_zone_transition_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `Host` tinyint(4) NOT NULL,
  `User` tinyint(4) NOT NULL,
  `Password` tinyint(4) NOT NULL,
  `Select_priv` tinyint(4) NOT NULL,
  `Insert_priv` tinyint(4) NOT NULL,
  `Update_priv` tinyint(4) NOT NULL,
  `Delete_priv` tinyint(4) NOT NULL,
  `Create_priv` tinyint(4) NOT NULL,
  `Drop_priv` tinyint(4) NOT NULL,
  `Reload_priv` tinyint(4) NOT NULL,
  `Shutdown_priv` tinyint(4) NOT NULL,
  `Process_priv` tinyint(4) NOT NULL,
  `File_priv` tinyint(4) NOT NULL,
  `Grant_priv` tinyint(4) NOT NULL,
  `References_priv` tinyint(4) NOT NULL,
  `Index_priv` tinyint(4) NOT NULL,
  `Alter_priv` tinyint(4) NOT NULL,
  `Show_db_priv` tinyint(4) NOT NULL,
  `Super_priv` tinyint(4) NOT NULL,
  `Create_tmp_table_priv` tinyint(4) NOT NULL,
  `Lock_tables_priv` tinyint(4) NOT NULL,
  `Execute_priv` tinyint(4) NOT NULL,
  `Repl_slave_priv` tinyint(4) NOT NULL,
  `Repl_client_priv` tinyint(4) NOT NULL,
  `Create_view_priv` tinyint(4) NOT NULL,
  `Show_view_priv` tinyint(4) NOT NULL,
  `Create_routine_priv` tinyint(4) NOT NULL,
  `Alter_routine_priv` tinyint(4) NOT NULL,
  `Create_user_priv` tinyint(4) NOT NULL,
  `Event_priv` tinyint(4) NOT NULL,
  `Trigger_priv` tinyint(4) NOT NULL,
  `Create_tablespace_priv` tinyint(4) NOT NULL,
  `Delete_history_priv` tinyint(4) NOT NULL,
  `ssl_type` tinyint(4) NOT NULL,
  `ssl_cipher` tinyint(4) NOT NULL,
  `x509_issuer` tinyint(4) NOT NULL,
  `x509_subject` tinyint(4) NOT NULL,
  `max_questions` tinyint(4) NOT NULL,
  `max_updates` tinyint(4) NOT NULL,
  `max_connections` tinyint(4) NOT NULL,
  `max_user_connections` tinyint(4) NOT NULL,
  `plugin` tinyint(4) NOT NULL,
  `authentication_string` tinyint(4) NOT NULL,
  `password_expired` tinyint(4) NOT NULL,
  `is_role` tinyint(4) NOT NULL,
  `default_role` tinyint(4) NOT NULL,
  `max_statement_time` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `general_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `user_host` mediumtext NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumtext NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8mb3 COMMENT='General log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slow_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int(11) NOT NULL,
  `rows_examined` int(11) NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int(11) NOT NULL,
  `insert_id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `sql_text` mediumtext NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL,
  `rows_affected` int(11) NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8mb3 COMMENT='Slow log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `transaction_registry`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `transaction_registry` (
  `transaction_id` bigint(20) unsigned NOT NULL,
  `commit_id` bigint(20) unsigned NOT NULL,
  `begin_timestamp` timestamp(6) NOT NULL DEFAULT '0000-00-00 00:00:00.000000',
  `commit_timestamp` timestamp(6) NOT NULL DEFAULT '0000-00-00 00:00:00.000000',
  `isolation_level` enum('READ-UNCOMMITTED','READ-COMMITTED','REPEATABLE-READ','SERIALIZABLE') COLLATE utf8mb3_bin NOT NULL,
  PRIMARY KEY (`transaction_id`),
  UNIQUE KEY `commit_id` (`commit_id`),
  KEY `begin_timestamp` (`begin_timestamp`),
  KEY `commit_timestamp` (`commit_timestamp`,`transaction_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Current Database: `sys`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `sys` /*!40100 DEFAULT CHARACTER SET utf8mb3 */;

USE `sys`;

--
-- Table structure for table `host_summary`
--

DROP TABLE IF EXISTS `host_summary`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary` (
  `host` tinyint(4) NOT NULL,
  `statements` tinyint(4) NOT NULL,
  `statement_latency` tinyint(4) NOT NULL,
  `statement_avg_latency` tinyint(4) NOT NULL,
  `table_scans` tinyint(4) NOT NULL,
  `file_ios` tinyint(4) NOT NULL,
  `file_io_latency` tinyint(4) NOT NULL,
  `current_connections` tinyint(4) NOT NULL,
  `total_connections` tinyint(4) NOT NULL,
  `unique_users` tinyint(4) NOT NULL,
  `current_memory` tinyint(4) NOT NULL,
  `total_memory_allocated` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary`
--

LOCK TABLES `host_summary` WRITE;
/*!40000 ALTER TABLE `host_summary` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `host_summary_by_file_io`
--

DROP TABLE IF EXISTS `host_summary_by_file_io`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary_by_file_io` (
  `host` tinyint(4) NOT NULL,
  `ios` tinyint(4) NOT NULL,
  `io_latency` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary_by_file_io`
--

LOCK TABLES `host_summary_by_file_io` WRITE;
/*!40000 ALTER TABLE `host_summary_by_file_io` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary_by_file_io` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `host_summary_by_file_io_type`
--

DROP TABLE IF EXISTS `host_summary_by_file_io_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary_by_file_io_type` (
  `host` tinyint(4) NOT NULL,
  `event_name` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary_by_file_io_type`
--

LOCK TABLES `host_summary_by_file_io_type` WRITE;
/*!40000 ALTER TABLE `host_summary_by_file_io_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary_by_file_io_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `host_summary_by_stages`
--

DROP TABLE IF EXISTS `host_summary_by_stages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary_by_stages` (
  `host` tinyint(4) NOT NULL,
  `event_name` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `avg_latency` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary_by_stages`
--

LOCK TABLES `host_summary_by_stages` WRITE;
/*!40000 ALTER TABLE `host_summary_by_stages` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary_by_stages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `host_summary_by_statement_latency`
--

DROP TABLE IF EXISTS `host_summary_by_statement_latency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary_by_statement_latency` (
  `host` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL,
  `lock_latency` tinyint(4) NOT NULL,
  `rows_sent` tinyint(4) NOT NULL,
  `rows_examined` tinyint(4) NOT NULL,
  `rows_affected` tinyint(4) NOT NULL,
  `full_scans` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary_by_statement_latency`
--

LOCK TABLES `host_summary_by_statement_latency` WRITE;
/*!40000 ALTER TABLE `host_summary_by_statement_latency` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary_by_statement_latency` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `host_summary_by_statement_type`
--

DROP TABLE IF EXISTS `host_summary_by_statement_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `host_summary_by_statement_type` (
  `host` tinyint(4) NOT NULL,
  `statement` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL,
  `lock_latency` tinyint(4) NOT NULL,
  `rows_sent` tinyint(4) NOT NULL,
  `rows_examined` tinyint(4) NOT NULL,
  `rows_affected` tinyint(4) NOT NULL,
  `full_scans` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `host_summary_by_statement_type`
--

LOCK TABLES `host_summary_by_statement_type` WRITE;
/*!40000 ALTER TABLE `host_summary_by_statement_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `host_summary_by_statement_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_buffer_stats_by_schema`
--

DROP TABLE IF EXISTS `innodb_buffer_stats_by_schema`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_buffer_stats_by_schema` (
  `object_schema` tinyint(4) NOT NULL,
  `allocated` tinyint(4) NOT NULL,
  `data` tinyint(4) NOT NULL,
  `pages` tinyint(4) NOT NULL,
  `pages_hashed` tinyint(4) NOT NULL,
  `pages_old` tinyint(4) NOT NULL,
  `rows_cached` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_buffer_stats_by_schema`
--

LOCK TABLES `innodb_buffer_stats_by_schema` WRITE;
/*!40000 ALTER TABLE `innodb_buffer_stats_by_schema` DISABLE KEYS */;
/*!40000 ALTER TABLE `innodb_buffer_stats_by_schema` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_buffer_stats_by_table`
--

DROP TABLE IF EXISTS `innodb_buffer_stats_by_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_buffer_stats_by_table` (
  `object_schema` tinyint(4) NOT NULL,
  `object_name` tinyint(4) NOT NULL,
  `allocated` tinyint(4) NOT NULL,
  `data` tinyint(4) NOT NULL,
  `pages` tinyint(4) NOT NULL,
  `pages_hashed` tinyint(4) NOT NULL,
  `pages_old` tinyint(4) NOT NULL,
  `rows_cached` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_buffer_stats_by_table`
--

LOCK TABLES `innodb_buffer_stats_by_table` WRITE;
/*!40000 ALTER TABLE `innodb_buffer_stats_by_table` DISABLE KEYS */;
/*!40000 ALTER TABLE `innodb_buffer_stats_by_table` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_lock_waits`
--

DROP TABLE IF EXISTS `innodb_lock_waits`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_lock_waits` (
  `wait_started` tinyint(4) NOT NULL,
  `wait_age` tinyint(4) NOT NULL,
  `wait_age_secs` tinyint(4) NOT NULL,
  `locked_table` tinyint(4) NOT NULL,
  `locked_index` tinyint(4) NOT NULL,
  `locked_type` tinyint(4) NOT NULL,
  `waiting_trx_id` tinyint(4) NOT NULL,
  `waiting_trx_started` tinyint(4) NOT NULL,
  `waiting_trx_age` tinyint(4) NOT NULL,
  `waiting_trx_rows_locked` tinyint(4) NOT NULL,
  `waiting_trx_rows_modified` tinyint(4) NOT NULL,
  `waiting_pid` tinyint(4) NOT NULL,
  `waiting_query` tinyint(4) NOT NULL,
  `waiting_lock_id` tinyint(4) NOT NULL,
  `waiting_lock_mode` tinyint(4) NOT NULL,
  `blocking_trx_id` tinyint(4) NOT NULL,
  `blocking_pid` tinyint(4) NOT NULL,
  `blocking_query` tinyint(4) NOT NULL,
  `blocking_lock_id` tinyint(4) NOT NULL,
  `blocking_lock_mode` tinyint(4) NOT NULL,
  `blocking_trx_started` tinyint(4) NOT NULL,
  `blocking_trx_age` tinyint(4) NOT NULL,
  `blocking_trx_rows_locked` tinyint(4) NOT NULL,
  `blocking_trx_rows_modified` tinyint(4) NOT NULL,
  `sql_kill_blocking_query` tinyint(4) NOT NULL,
  `sql_kill_blocking_connection` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_lock_waits`
--

LOCK TABLES `innodb_lock_waits` WRITE;
/*!40000 ALTER TABLE `innodb_lock_waits` DISABLE KEYS */;
/*!40000 ALTER TABLE `innodb_lock_waits` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `io_by_thread_by_latency`
--

DROP TABLE IF EXISTS `io_by_thread_by_latency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `io_by_thread_by_latency` (
  `user` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `min_latency` tinyint(4) NOT NULL,
  `avg_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL,
  `thread_id` tinyint(4) NOT NULL,
  `processlist_id` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `io_by_thread_by_latency`
--

LOCK TABLES `io_by_thread_by_latency` WRITE;
/*!40000 ALTER TABLE `io_by_thread_by_latency` DISABLE KEYS */;
/*!40000 ALTER TABLE `io_by_thread_by_latency` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `io_global_by_file_by_bytes`
--

DROP TABLE IF EXISTS `io_global_by_file_by_bytes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `io_global_by_file_by_bytes` (
  `file` tinyint(4) NOT NULL,
  `count_read` tinyint(4) NOT NULL,
  `total_read` tinyint(4) NOT NULL,
  `avg_read` tinyint(4) NOT NULL,
  `count_write` tinyint(4) NOT NULL,
  `total_written` tinyint(4) NOT NULL,
  `avg_write` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `write_pct` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `io_global_by_file_by_bytes`
--

LOCK TABLES `io_global_by_file_by_bytes` WRITE;
/*!40000 ALTER TABLE `io_global_by_file_by_bytes` DISABLE KEYS */;
/*!40000 ALTER TABLE `io_global_by_file_by_bytes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `io_global_by_file_by_latency`
--

DROP TABLE IF EXISTS `io_global_by_file_by_latency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `io_global_by_file_by_latency` (
  `file` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `count_read` tinyint(4) NOT NULL,
  `read_latency` tinyint(4) NOT NULL,
  `count_write` tinyint(4) NOT NULL,
  `write_latency` tinyint(4) NOT NULL,
  `count_misc` tinyint(4) NOT NULL,
  `misc_latency` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `io_global_by_file_by_latency`
--

LOCK TABLES `io_global_by_file_by_latency` WRITE;
/*!40000 ALTER TABLE `io_global_by_file_by_latency` DISABLE KEYS */;
/*!40000 ALTER TABLE `io_global_by_file_by_latency` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `io_global_by_wait_by_bytes`
--

DROP TABLE IF EXISTS `io_global_by_wait_by_bytes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `io_global_by_wait_by_bytes` (
  `event_name` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `min_latency` tinyint(4) NOT NULL,
  `avg_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL,
  `count_read` tinyint(4) NOT NULL,
  `total_read` tinyint(4) NOT NULL,
  `avg_read` tinyint(4) NOT NULL,
  `count_write` tinyint(4) NOT NULL,
  `total_written` tinyint(4) NOT NULL,
  `avg_written` tinyint(4) NOT NULL,
  `total_requested` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `io_global_by_wait_by_bytes`
--

LOCK TABLES `io_global_by_wait_by_bytes` WRITE;
/*!40000 ALTER TABLE `io_global_by_wait_by_bytes` DISABLE KEYS */;
/*!40000 ALTER TABLE `io_global_by_wait_by_bytes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `io_global_by_wait_by_latency`
--

DROP TABLE IF EXISTS `io_global_by_wait_by_latency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `io_global_by_wait_by_latency` (
  `event_name` tinyint(4) NOT NULL,
  `total` tinyint(4) NOT NULL,
  `total_latency` tinyint(4) NOT NULL,
  `avg_latency` tinyint(4) NOT NULL,
  `max_latency` tinyint(4) NOT NULL,
  `read_latency` tinyint(4) NOT NULL,
  `write_latency` tinyint(4) NOT NULL,
  `misc_latency` tinyint(4) NOT NULL,
  `count_read` tinyint(4) NOT NULL,
  `total_read` tinyint(4) NOT NULL,
  `avg_read` tinyint(4) NOT NULL,
  `count_write` tinyint(4) NOT NULL,
  `total_written` tinyint(4) NOT NULL,
  `avg_written` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `io_global_by_wait_by_latency`
--

LOCK TABLES `io_global_by_wait_by_latency` WRITE;
/*!40000 ALTER TABLE `io_global_by_wait_by_latency` DISABLE KEYS */;
/*!40000 ALTER TABLE `io_global_by_wait_by_latency` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `latest_file_io`
--

DROP TABLE IF EXISTS `latest_file_io`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `latest_file_io` (
  `thread` tinyint(4) NOT NULL,
  `file` tinyint(4) NOT NULL,
  `latency` tinyint(4) NOT NULL,
  `operation` tinyint(4) NOT NULL,
  `requested` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `latest_file_io`
--

LOCK TABLES `latest_file_io` WRITE;
/*!40000 ALTER TABLE `latest_file_io` DISABLE KEYS */;
/*!40000 ALTER TABLE `latest_file_io` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `memory_by_host_by_current_bytes`
--

DROP TABLE IF EXISTS `memory_by_host_by_current_bytes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `memory_by_host_by_current_bytes` (
  `host` tinyint(4) NOT NULL,
  `current_count_used` tinyint(4) NOT NULL,
  `current_allocated` tinyint(4) NOT NULL,
  `current_avg_alloc` tinyint(4) NOT NULL,
  `current_max_alloc` tinyint(4) NOT NULL,
  `total_allocated` tinyint(4) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `memory_by_host_by_current_bytes`
--

LOCK TABLES `memory_by_host_by_current_bytes` WRITE;
/*!40000 ALTER TABLE `memory_by_host_by_current_bytes` DISABLE KEYS */;
